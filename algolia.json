[{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"home","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/","section":"","summary":"","tags":null,"title":"111qqz的小窝","type":"","url":"/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/categories/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/","section":"categories","summary":"","tags":null,"title":"Categories","type":"categories","url":"/categories/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/tags/csapp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/csapp/","section":"tags","summary":"","tags":null,"title":"csapp","type":"tags","url":"/tags/csapp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/post/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/post/","section":"post","summary":"","tags":null,"title":"Posts","type":"post","url":"/post/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomyTerm","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/tags/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/","section":"tags","summary":"","tags":null,"title":"Tags","type":"tags","url":"/tags/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1581780263,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1581780263,"objectID":"561a8be460cb555cea6d7cb1822c5cac","permalink":"https://111qqz.github.io/2020/02/csapp-attacklab/","publishdate":"2020-02-15T23:24:23+08:00","readingtime":6,"relpermalink":"/2020/02/csapp-attacklab/","section":"post","summary":"背景 CSAPP 处理器那章快看完了，猛然发现竟然还有个attacklab.. 之前以为每一章只有一个lab 这个lab是教大家如何找到程序的漏洞并实施攻击","tags":["csapp"],"title":"【施工完成】CSAPP attacklab","type":"post","url":"/2020/02/csapp-attacklab/","weight":0,"wordcount":2940},{"author":null,"categories":null,"content":null,"date":1581780263,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1581780263,"objectID":"","permalink":"https://111qqz.github.io/categories/%E5%85%B6%E4%BB%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E5%85%B6%E4%BB%96/","section":"categories","summary":"","tags":null,"title":"其他","type":"categories","url":"/categories/%E5%85%B6%E4%BB%96/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1580556983,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1580556983,"objectID":"653c79b4d4976997bd35c442987bba11","permalink":"https://111qqz.github.io/2020/02/csapp-bomblab/","publishdate":"2020-02-01T19:36:23+08:00","readingtime":12,"relpermalink":"/2020/02/csapp-bomblab/","section":"post","summary":"背景 疫情肆虐,在家百无聊赖,于是开始拆炸弹. 炸弹分为6个阶段,每个阶段必须输入一个特定的字符串,否则炸弹就会爆炸. 提供给我们的是一个.c文件","tags":["csapp"],"title":"【施工完成】CSAPP bomb lab","type":"post","url":"/2020/02/csapp-bomblab/","weight":0,"wordcount":5577},{"author":null,"categories":null,"content":null,"date":1578827895,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1578827895,"objectID":"","permalink":"https://111qqz.github.io/tags/caffe/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/caffe/","section":"tags","summary":"","tags":null,"title":"caffe","type":"tags","url":"/tags/caffe/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1578827895,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1578827895,"objectID":"1f9fc654e6bdd3f072edf2305258f268","permalink":"https://111qqz.github.io/2020/01/caffe-source-code-analysis-part3/","publishdate":"2020-01-12T19:18:15+08:00","readingtime":4,"relpermalink":"/2020/01/caffe-source-code-analysis-part3/","section":"post","summary":"Net 基本介绍 网络通过组成和自微分共同定义一个函数及其梯度。 网络是一些Layer组成的DAG,也就是有向无环图，在caffe中通常由protot","tags":["caffe"],"title":"caffe 源码学习笔记(3) Net","type":"post","url":"/2020/01/caffe-source-code-analysis-part3","weight":0,"wordcount":1742},{"author":null,"categories":null,"content":null,"date":1578827895,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1578827895,"objectID":"","permalink":"https://111qqz.github.io/categories/deep-learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/deep-learning/","section":"categories","summary":"","tags":null,"title":"deep-learning","type":"categories","url":"/categories/deep-learning/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1578736025,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1578736025,"objectID":"decbe5d1b90fc2111e678841e5cded4b","permalink":"https://111qqz.github.io/2020/01/caffe-source-code-analysis-part2/","publishdate":"2020-01-11T17:47:05+08:00","readingtime":5,"relpermalink":"/2020/01/caffe-source-code-analysis-part2/","section":"post","summary":"layer 整体介绍 layer是模型计算的基本单元 类似于pytorch或者其他深度学习框架的op layer中的数据流向为,输入若干个blob，称之为\u0026","tags":["caffe"],"title":"caffe 源码学习笔记(2) Layer","type":"post","url":"/2020/01/caffe-source-code-analysis-part2","weight":0,"wordcount":2064},{"author":null,"categories":["deep-learning"],"content":null,"date":1578626663,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1578626663,"objectID":"10a92ff422e11c930ffe258fd36e46e0","permalink":"https://111qqz.github.io/2020/01/caffe-source-code-analysis-part1/","publishdate":"2020-01-10T11:24:23+08:00","readingtime":3,"relpermalink":"/2020/01/caffe-source-code-analysis-part1/","section":"post","summary":"迫于生计，开始看caffe代码。 会侧重于分析inference部分。 blob 整体介绍 blob的含义及目的 blob在逻辑上表示的就是所谓的tenso","tags":["caffe"],"title":"caffe 源码学习笔记(1) Blob","type":"post","url":"/2020/01/caffe-source-code-analysis-part1","weight":0,"wordcount":1280},{"author":null,"categories":null,"content":null,"date":1576225934,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1576225934,"objectID":"","permalink":"https://111qqz.github.io/tags/faster-rcnn/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/faster-rcnn/","section":"tags","summary":"","tags":null,"title":"faster-rcnn","type":"tags","url":"/tags/faster-rcnn/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1576225934,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1576225934,"objectID":"8b5c2fa63ad54bc6d6b66438ee33bbe8","permalink":"https://111qqz.github.io/2019/12/debug-faster-rcnn-once-again/","publishdate":"2019-12-13T16:32:14+08:00","readingtime":3,"relpermalink":"/2019/12/debug-faster-rcnn-once-again/","section":"post","summary":"问题描述 一年debug 三次faster rcnn,每次都有新感觉（不 接到一个bug report,现象为某人脸模型，转换成trt模型，当batc","tags":["faster-rcnn"],"title":"记一次faster-rcnn debug记录","type":"post","url":"/2019/12/debug-faster-rcnn-once-again","weight":0,"wordcount":1456},{"author":null,"categories":null,"content":null,"date":1575797450,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575797450,"objectID":"","permalink":"https://111qqz.github.io/tags/feature-pyramid-networks/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/feature-pyramid-networks/","section":"tags","summary":"","tags":null,"title":"feature-pyramid-networks","type":"tags","url":"/tags/feature-pyramid-networks/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575797450,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575797450,"objectID":"","permalink":"https://111qqz.github.io/tags/fpn/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fpn/","section":"tags","summary":"","tags":null,"title":"FPN","type":"tags","url":"/tags/fpn/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1575797450,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1575797450,"objectID":"14ec707d424ea3f16b787d52df5b051d","permalink":"https://111qqz.github.io/2019/12/feature-pyramid-networks/","publishdate":"2019-12-08T17:30:50+08:00","readingtime":2,"relpermalink":"/2019/12/feature-pyramid-networks/","section":"post","summary":"检测不同尺度的物体一直是计算机视觉领域中比较有挑战性的事情．我们先从之前的工作出发，并对比FPN比起之前的工作有哪些改进． 之前的工作 Featurized image pyramid 思","tags":["feature-pyramid-networks","FPN"],"title":"FPN:Feature Pyramid Networks 学习笔记","type":"post","url":"/2019/12/feature-pyramid-networks","weight":0,"wordcount":669},{"author":null,"categories":null,"content":null,"date":1575788415,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575788415,"objectID":"","permalink":"https://111qqz.github.io/tags/single-state-detector/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/single-state-detector/","section":"tags","summary":"","tags":null,"title":"single state detector","type":"tags","url":"/tags/single-state-detector/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1575788415,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1575788415,"objectID":"","permalink":"https://111qqz.github.io/tags/ssd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ssd/","section":"tags","summary":"","tags":null,"title":"SSD","type":"tags","url":"/tags/ssd/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1575788415,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1575788415,"objectID":"b6a35dc1ad20a02827a19d3844f1c35e","permalink":"https://111qqz.github.io/2019/12/single-short-detector/","publishdate":"2019-12-08T15:00:15+08:00","readingtime":4,"relpermalink":"/2019/12/single-short-detector/","section":"post","summary":"概述 SSD是一种单阶段目标检测算法．所谓单阶段，是指只使用了一个deep neural network,而不是像faster-rcnn这种两阶段网络． 为什","tags":["SSD","single state detector"],"title":"SSD: Single Shot MultiBox Detector　学习笔记","type":"post","url":"/2019/12/single-short-detector","weight":0,"wordcount":1734},{"author":null,"categories":null,"content":null,"date":1574773144,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1574773144,"objectID":"","permalink":"https://111qqz.github.io/tags/boosting/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/boosting/","section":"tags","summary":"","tags":null,"title":"boosting","type":"tags","url":"/tags/boosting/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1574773144,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1574773144,"objectID":"6c5d22817240ff06a1bcbf235004528e","permalink":"https://111qqz.github.io/2019/11/rankboost-algorithm/","publishdate":"2019-11-26T20:59:04+08:00","readingtime":3,"relpermalink":"/2019/11/rankboost-algorithm/","section":"post","summary":"boosting 算法是什么． 机缘使然，接触到了 Boosting 算法．Boosting是一种通过组合弱学习器来产生强学习器的通用且有效的方法. 动机是基于如下观察:尽管委员","tags":["boosting"],"title":"rankboost 算法学习笔记","type":"post","url":"/2019/11/rankboost-Algorithm","weight":0,"wordcount":1376},{"author":null,"categories":["deep-learning"],"content":null,"date":1574392459,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1574392459,"objectID":"aa83a34010318525b375a9e62abfdd61","permalink":"https://111qqz.github.io/2019/11/k8s-for-model-conversion/","publishdate":"2019-11-22T11:14:19+08:00","readingtime":4,"relpermalink":"/2019/11/k8s-for-model-conversion/","section":"post","summary":"年中的时候接了离职的同事模型转换的锅，在不断地更新迭代的过程中，发现了一些痛点。 发现k8s能够解决一部分痛点，因此来分享一下在这方面的探索。","tags":["model-convertor"],"title":"Kubernetes(k8s)在深度学习模型转换方面的探索","type":"post","url":"/2019/11/K8s-for-Model-Conversion","weight":0,"wordcount":1885},{"author":null,"categories":null,"content":null,"date":1574392459,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1574392459,"objectID":"","permalink":"https://111qqz.github.io/tags/model-convertor/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/model-convertor/","section":"tags","summary":"","tags":null,"title":"model-convertor","type":"tags","url":"/tags/model-convertor/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1573141239,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1573141239,"objectID":"b4e9758dfa4264e00f6b72949f3f1722","permalink":"https://111qqz.github.io/2019/11/debug-frcnn-model-when-upgrading-from-tensorrt4-to-tensorrt5/","publishdate":"2019-11-07T23:40:39+08:00","readingtime":2,"relpermalink":"/2019/11/debug-frcnn-model-when-upgrading-from-tensorrt4-to-tensorrt5/","section":"post","summary":"最近有同事report给我们,用同一个模型转换工具,转同一个faster rcnn 模型, 同样的sdk代码,在有些显卡上结果正常,但是再比较新的显卡上","tags":["faster-rcnn"],"title":"faster rcnn 模型 tensorrt4与tensorrt5 结果不一致 踩坑记录","type":"post","url":"/2019/11/debug-Frcnn-Model-When-Upgrading-From-Tensorrt4-to-Tensorrt5/","weight":0,"wordcount":699},{"author":null,"categories":null,"content":null,"date":1571483041,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1571483041,"objectID":"","permalink":"https://111qqz.github.io/tags/cs341/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cs341/","section":"tags","summary":"","tags":null,"title":"CS341","type":"tags","url":"/tags/cs341/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1571483041,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1571483041,"objectID":"8964d60dd915b4e2b9bbf8e47b6bd7fb","permalink":"https://111qqz.github.io/2019/10/the-programming-language-course/","publishdate":"2019-10-19T19:04:01+08:00","readingtime":2,"relpermalink":"/2019/10/the-programming-language-course/","section":"post","summary":"花了三个月的时间,终于跟完了这门编程语言课. 课程内容非常赞,而且也充分发挥了coursera平台的作用. 非要说缺点的话,就是这门课时间有点短","tags":["CS341"],"title":"The Programming Language Course","type":"post","url":"/2019/10/The-Programming-Language-Course","weight":0,"wordcount":719},{"author":null,"categories":null,"content":null,"date":1562157071,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1562157071,"objectID":"","permalink":"https://111qqz.github.io/tags/image-processing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/image-processing/","section":"tags","summary":"","tags":null,"title":"image processing","type":"tags","url":"/tags/image-processing/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1562157071,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1562157071,"objectID":"","permalink":"https://111qqz.github.io/tags/yuv-image-format/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/yuv-image-format/","section":"tags","summary":"","tags":null,"title":"yuv image format","type":"tags","url":"/tags/yuv-image-format/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1562157071,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1562157071,"objectID":"cc5f2afe43b2c5fd458db7cb051cbb2a","permalink":"https://111qqz.github.io/2019/07/yuv-image-format/","publishdate":"2019-07-03T20:31:11+08:00","readingtime":3,"relpermalink":"/2019/07/yuv-image-format/","section":"post","summary":"概述 YUV是一种图像编码方式,或者称为色彩空间,与RGB是同级的概念. YUV是三个分量,Y,U和V,其中: Y 表示明亮度(Luminance或","tags":["image processing","yuv image format"],"title":"yuv 图像格式初探","type":"post","url":"/2019/07/Yuv-Image-Format","weight":0,"wordcount":1470},{"author":null,"categories":null,"content":null,"date":1561982004,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1561982004,"objectID":"","permalink":"https://111qqz.github.io/tags/anchor-box/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/anchor-box/","section":"tags","summary":"","tags":null,"title":"Anchor box","type":"tags","url":"/tags/anchor-box/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1561982004,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1561982004,"objectID":"8f1fda8b0d47ef9fb31a6b1f8559f618","permalink":"https://111qqz.github.io/2019/07/anchor-box-algorithm/","publishdate":"2019-07-01T19:53:24+08:00","readingtime":2,"relpermalink":"/2019/07/anchor-box-algorithm/","section":"post","summary":"动机 将一张图分成多个grid cell进行检测之后,每个cell只能检测到一个object. 如果这个grid cell中不止有一个物体要怎么办呢","tags":["Object Detection","Anchor box"],"title":"Anchor Box Algorithm","type":"post","url":"/2019/07/Anchor-Box-Algorithm/","weight":0,"wordcount":690},{"author":null,"categories":null,"content":null,"date":1561982004,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1561982004,"objectID":"","permalink":"https://111qqz.github.io/tags/object-detection/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/object-detection/","section":"tags","summary":"","tags":null,"title":"Object Detection","type":"tags","url":"/tags/object-detection/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1561884940,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1561884940,"objectID":"","permalink":"https://111qqz.github.io/tags/sliding-windows/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sliding-windows/","section":"tags","summary":"","tags":null,"title":"sliding Windows","type":"tags","url":"/tags/sliding-windows/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1561884940,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1561884940,"objectID":"d19f855cceeec7d936f27d5701cd3429","permalink":"https://111qqz.github.io/2019/06/sliding-windows/","publishdate":"2019-06-30T16:55:40+08:00","readingtime":1,"relpermalink":"/2019/06/sliding-windows/","section":"post","summary":"对象检测（Object Detection）的目的是”识别对象并给出其在图中的确切位置”，其内容可解构为三部分： 识别某个对象（Classifi","tags":["sliding Windows","Object Detection"],"title":"目标检测领域的滑动窗口算法","type":"post","url":"/2019/06/sliding-windows/","weight":0,"wordcount":434},{"author":null,"categories":["其他"],"content":null,"date":1561741449,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1561741449,"objectID":"e96b5198ee6e170e6c5a1caaf7d980fb","permalink":"https://111qqz.github.io/2019/06/one-yeaf-after-graduation/","publishdate":"2019-06-29T01:04:09+08:00","readingtime":3,"relpermalink":"/2019/06/one-yeaf-after-graduation/","section":"post","summary":"转眼毕业一整年了，是时候做一个复盘了。 依稀记得刚入职的时候leader提醒我要有职业规划时的场景。总体来说，这一年虽然没有完全走在最正确的路","tags":null,"title":"写在毕业一年之后","type":"post","url":"/2019/06/one-yeaf-after-graduation/","weight":0,"wordcount":1043},{"author":null,"categories":null,"content":null,"date":1559347200,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1559347200,"objectID":"","permalink":"https://111qqz.github.io/tags/hugo/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hugo/","section":"tags","summary":"","tags":null,"title":"hugo","type":"tags","url":"/tags/hugo/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1559347200,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1559347200,"objectID":"91cd3ef04002688970efe2c08ee7ff42","permalink":"https://111qqz.github.io/2019/05/hello-hugo/","publishdate":"2019-06-01T00:00:00Z","readingtime":1,"relpermalink":"/2019/05/hello-hugo/","section":"post","summary":"发现工作之后更新博客的频率低了很多，以及迫于不想在自己维护服务器了，因此决定把博客迁移到hugo上。 由于原本的博客内容实在是太多了，因此目前","tags":["hugo"],"title":"迁移博客到hugo","type":"post","url":"/2019/05/hello-hugo/","weight":0,"wordcount":127},{"author":null,"categories":["其他"],"content":null,"date":1556712558,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1556712558,"objectID":"bc1bce5636d3778c64ec8158f2100223","permalink":"https://111qqz.github.io/2019/05/battleblock-theater-linux-start-failed/","publishdate":"2019-05-01T12:09:18Z","readingtime":1,"relpermalink":"/2019/05/battleblock-theater-linux-start-failed/","section":"post","summary":"在steam上买了 BattleBlock Theater， 官方说支持linux，但是却无法启动。 在steam里启动看不到log,于是找到游戏的安装目录。 /home/coder/.steam/steam/steamapps/common/BattleBlock Theater 在终端","tags":["steam"],"title":"BattleBlock Theater linux下无法启动的解决办法　（　void* MemoryBlock::Alloc(unsigned int): Assertion failed ）","type":"post","url":"/2019/05/battleblock-theater-linux-start-failed/","weight":0,"wordcount":213},{"author":null,"categories":null,"content":null,"date":1556712558,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1556712558,"objectID":"","permalink":"https://111qqz.github.io/tags/steam/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/steam/","section":"tags","summary":"","tags":null,"title":"steam","type":"tags","url":"/tags/steam/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1551617125,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1551617125,"objectID":"","permalink":"https://111qqz.github.io/tags/6.828/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/6.828/","section":"tags","summary":"","tags":null,"title":"6.828","type":"tags","url":"/tags/6.828/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1551617125,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1551617125,"objectID":"63377c69dd30c6f1009eaf830d0aa78d","permalink":"https://111qqz.github.io/2019/03/mit-6-828-lab-3-user-environments/","publishdate":"2019-03-03T12:45:25Z","readingtime":9,"relpermalink":"/2019/03/mit-6-828-lab-3-user-environments/","section":"post","summary":"JOS的environments基本可以理解成\u0026quot;process\u0026quot;进程的同义词，但是由于\u0026quot;process\u0026quo","tags":["6.828"],"title":"【施工中】MIT 6.828 lab 3: User Environments","type":"post","url":"/2019/03/mit-6-828-lab-3-user-environments/","weight":0,"wordcount":4351},{"author":null,"categories":["其他"],"content":null,"date":1551362802,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1551362802,"objectID":"36f5069c7f5d4683dcf0aff29214b2db","permalink":"https://111qqz.github.io/2019/02/csapp-data-lab/","publishdate":"2019-02-28T14:06:42Z","readingtime":5,"relpermalink":"/2019/02/csapp-data-lab/","section":"post","summary":"CSAPP第二章的内容以前组成原理基本都学过\u0026hellip;所以就简单翻了翻。 对应的lab是用位运算实现各种有的没的\u0026hellip; 题目基本","tags":["csapp"],"title":"【施工完成】CSAPP data lab","type":"post","url":"/2019/02/csapp-data-lab/","weight":0,"wordcount":2376},{"author":null,"categories":["其他"],"content":null,"date":1550932081,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550932081,"objectID":"65597567e1d25be52b4a402fd9dc009d","permalink":"https://111qqz.github.io/2019/02/manjaro-archlinux-civilization/","publishdate":"2019-02-23T14:28:01Z","readingtime":1,"relpermalink":"/2019/02/manjaro-archlinux-civilization/","section":"post","summary":"系统版本为Manjaro 18.0.3 Illyria 运行文明5比较容易，只需要设置启动选项为: LD_PRELOAD=/usr/lib32/libopenal.so.1 %command% 文明6运行会报错 undefined symbol: FT_Done_MM_Var 解决办法是 在终端中用如下办法运行steam:","tags":["steam","文明"],"title":"manjaro /archlinux 下 steam 文明5/6(civilization V/VI)的运行方法","type":"post","url":"/2019/02/manjaro-archlinux-civilization/","weight":0,"wordcount":76},{"author":null,"categories":null,"content":null,"date":1550932081,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550932081,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%96%87%E6%98%8E/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%96%87%E6%98%8E/","section":"tags","summary":"","tags":null,"title":"文明","type":"tags","url":"/tags/%E6%96%87%E6%98%8E/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1550469651,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550469651,"objectID":"","permalink":"https://111qqz.github.io/tags/halide/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/halide/","section":"tags","summary":"","tags":null,"title":"halide","type":"tags","url":"/tags/halide/","weight":0,"wordcount":0},{"author":null,"categories":["优化"],"content":null,"date":1550469651,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550469651,"objectID":"c13658c79a17ab0ecd295afe255a3b6d","permalink":"https://111qqz.github.io/2019/02/halide-notes/","publishdate":"2019-02-18T06:00:51Z","readingtime":2,"relpermalink":"/2019/02/halide-notes/","section":"post","summary":"**Halide is a programming language designed to make it easier to write high-performance image and array processing code on modern machines. ** halide有两个特性比较吸引人。一个是对于各种平台架构的支持。 * CPU architectures: X86, ARM, MIPS, Hexagon, PowerPC * Operating systems: Linux, Windows, macOS, Android, iOS,","tags":["halide"],"title":"【试工中】 halide学习笔记","type":"post","url":"/2019/02/halide-notes/","weight":0,"wordcount":758},{"author":null,"categories":null,"content":null,"date":1550469651,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1550469651,"objectID":"","permalink":"https://111qqz.github.io/categories/%E4%BC%98%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E4%BC%98%E5%8C%96/","section":"categories","summary":"","tags":null,"title":"优化","type":"categories","url":"/categories/%E4%BC%98%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1550152906,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":7400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1550152906,"objectID":"c7ee3c8dda66f6288d1b04107a799e8e","permalink":"https://111qqz.github.io/2019/02/mit-6-828-lab-2/","publishdate":"2019-02-14T14:01:46Z","readingtime":15,"relpermalink":"/2019/02/mit-6-828-lab-2/","section":"post","summary":"2019年2月24:完成了除了\u0026quot;Challenge\u0026quot;以外的全部练习和问题. 总共花费15个小时. 2019年2月26:完成\u0026","tags":["6.828"],"title":"【施工完毕】MIT 6.828 lab 2: Memory Management","type":"post","url":"/2019/02/mit-6-828-lab-2/","weight":0,"wordcount":7300},{"author":null,"categories":null,"content":null,"date":1549019969,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1549019969,"objectID":"","permalink":"https://111qqz.github.io/categories/c++/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/c++/","section":"categories","summary":"","tags":null,"title":"c++","type":"categories","url":"/categories/c++/","weight":0,"wordcount":0},{"author":null,"categories":["c++"],"content":null,"date":1549019969,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1549019969,"objectID":"ec7e2c253c324f1d4fe77f40fb5812c0","permalink":"https://111qqz.github.io/2019/02/variadic-function-of-c/","publishdate":"2019-02-01T11:19:29Z","readingtime":2,"relpermalink":"/2019/02/variadic-function-of-c/","section":"post","summary":"说起C语言的变长参数，可能听起来比较陌生，因为很少会需要自己实现。不过想一下scanf和printf，参数个数的确是不固定的。 stdarg.h 中提供以一套","tags":["variadic function"],"title":"C语言变长参数","type":"post","url":"/2019/02/variadic-function-of-c/","weight":0,"wordcount":719},{"author":null,"categories":null,"content":null,"date":1549019969,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1549019969,"objectID":"","permalink":"https://111qqz.github.io/tags/variadic-function/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/variadic-function/","section":"tags","summary":"","tags":null,"title":"variadic function","type":"tags","url":"/tags/variadic-function/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548936742,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548936742,"objectID":"","permalink":"https://111qqz.github.io/tags/call-stack/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/call-stack/","section":"tags","summary":"","tags":null,"title":"call stack","type":"tags","url":"/tags/call-stack/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1548936742,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548936742,"objectID":"","permalink":"https://111qqz.github.io/tags/gcc/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gcc/","section":"tags","summary":"","tags":null,"title":"gcc","type":"tags","url":"/tags/gcc/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1548936742,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548936742,"objectID":"d61d94b774401ce4c8864a214772afcd","permalink":"https://111qqz.github.io/2019/01/x86-calling-conventions/","publishdate":"2019-01-31T12:12:22Z","readingtime":3,"relpermalink":"/2019/01/x86-calling-conventions/","section":"post","summary":"x86的调用约定主要说的是这几件事: * The order in which atomic (scalar) parameters, or individual parts of a complex parameter, are allocated * How parameters are passed (pushed on the stack, placed in registers, or a mix of both) * Which registers the called function must preserve for the caller (also known as: callee-saved registers or non-volatile","tags":["call stack","gcc"],"title":"x86 calling conventions","type":"post","url":"/2019/01/x86-calling-conventions/","weight":0,"wordcount":1173},{"author":null,"categories":["其他"],"content":null,"date":1548332878,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":17500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548332878,"objectID":"0c668cc594e8e371b5c3b4bf74156557","permalink":"https://111qqz.github.io/2019/01/mit-6-828-lab-1/","publishdate":"2019-01-24T12:27:58Z","readingtime":35,"relpermalink":"/2019/01/mit-6-828-lab-1/","section":"post","summary":"花费了30+小时，终于搞定了orz Part 1: PC Bootstrap The PC\u0026rsquo;s Physical Address Space 8086/8088时代 +------------------+ \u0026lt;- 0x00100000 (1MB) | BIOS ROM | +------------------+ \u0026lt;- 0x000F0000 (960KB) | 16-bit devices, | | expansion ROMs | +------------------+ \u0026lt;- 0x000C0000 (768KB) | VGA Display | +------------------+ \u0026lt;- 0x000A0000 (640KB) |","tags":["6.828"],"title":"【施工完成】MIT 6.828 lab 1: C, Assembly, Tools and Bootstrapping","type":"post","url":"/2019/01/mit-6-828-lab-1/","weight":0,"wordcount":17483},{"author":null,"categories":["优化"],"content":null,"date":1548244306,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1548244306,"objectID":"959748f2f61d1ccdf51f78ff1d1d9719","permalink":"https://111qqz.github.io/2019/01/loop-unrolling/","publishdate":"2019-01-23T11:51:46Z","readingtime":2,"relpermalink":"/2019/01/loop-unrolling/","section":"post","summary":"迫于生计，最近要学习halide 先去学习/复习一下常见的编译优化技巧。 loop unrolling，也就是循环展开，顾名思义，就是把循环展开来写。 normal","tags":["halide","编译原理"],"title":"优化学习笔记(1):Loop unrolling","type":"post","url":"/2019/01/loop-unrolling/","weight":0,"wordcount":742},{"author":null,"categories":null,"content":null,"date":1548244306,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1548244306,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"编译原理","type":"tags","url":"/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1547570358,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1547570358,"objectID":"36c88e9b8804196c58f93002a973cbb1","permalink":"https://111qqz.github.io/2019/01/mit-6-828-overview/","publishdate":"2019-01-15T16:39:18Z","readingtime":1,"relpermalink":"/2019/01/mit-6-828-overview/","section":"post","summary":"课程主页 这课稍微有点硬核\u0026hellip;感觉基础稍微有些不扎实就做不下去orz. 网上似乎是有博客写了6.828的学习笔记，不过我更希望自己能","tags":["6.828"],"title":"【施工中】MIT 6.828 Operating System Engineering 学习笔记","type":"post","url":"/2019/01/mit-6-828-overview/","weight":0,"wordcount":298},{"author":null,"categories":null,"content":null,"date":1546756992,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1546756992,"objectID":"","permalink":"https://111qqz.github.io/categories/acm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/acm/","section":"categories","summary":"","tags":null,"title":"ACM","type":"categories","url":"/categories/acm/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1546756992,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546756992,"objectID":"61332b33089c68d2bd54729a6de57360","permalink":"https://111qqz.github.io/2019/01/codeforces-round-530-div2/","publishdate":"2019-01-06T06:43:12Z","readingtime":2,"relpermalink":"/2019/01/codeforces-round-530-div2/","section":"post","summary":"A,B,C:都很简单，不说了。 D:一棵树，给出树的结构，以及从树根到某个深度为偶数的节点的路径和，问能否构造一种所有节点点权和最小的树，输出","tags":null,"title":"codeforces round 530 div2","type":"post","url":"/2019/01/codeforces-round-530-div2/","weight":0,"wordcount":563},{"author":null,"categories":["ACM"],"content":null,"date":1546669789,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546669789,"objectID":"03afacce34495a5ffb499ae956faf561","permalink":"https://111qqz.github.io/2019/01/codeforces-hello-2019/","publishdate":"2019-01-05T06:29:49Z","readingtime":4,"relpermalink":"/2019/01/codeforces-hello-2019/","section":"post","summary":"好久没玩cf了，竟然还能涨分（虽然我用的小号Orz) 三题，D应该是数学+DP\u0026hellip;数学实在是忘干净了。。。 前面三题大体还好，都是1","tags":null,"title":"codeforces hello 2019","type":"post","url":"/2019/01/codeforces-hello-2019/","weight":0,"wordcount":1851},{"author":null,"categories":["其他"],"content":null,"date":1546348384,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1546348384,"objectID":"d7d8ea0d1a31146259ca01c8719de9b1","permalink":"https://111qqz.github.io/2019/01/2019-to-do-list/","publishdate":"2019-01-01T13:13:04Z","readingtime":1,"relpermalink":"/2019/01/2019-to-do-list/","section":"post","summary":"* \u0026lt;del\u0026gt;Operating Systems: Three Easy Pieces\u0026lt;/del\u0026gt; * fluent python * \u0026lt;del\u0026gt;《计算机网络:自顶向下方法》\u0026lt;/del\u0026gt; * 《mysql必知必会》 * PC Assembly Language ( for mit 6.828 )","tags":null,"title":"2019 to do list","type":"post","url":"/2019/01/2019-to-do-list/","weight":0,"wordcount":68},{"author":null,"categories":null,"content":null,"date":1543048279,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1543048279,"objectID":"","permalink":"https://111qqz.github.io/tags/docker/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/docker/","section":"tags","summary":"","tags":null,"title":"docker","type":"tags","url":"/tags/docker/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1543048279,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1543048279,"objectID":"6a5219fc392693b62f5834c76da86bc7","permalink":"https://111qqz.github.io/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/","publishdate":"2018-11-24T08:31:19Z","readingtime":2,"relpermalink":"/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/","section":"post","summary":"TL;DR * 依靠人的小心谨慎是不靠谱的，人总有失误的时候 * 看了下docker volume的权限机制，貌似是从docker image中继承。 * 写了两个","tags":["docker"],"title":"我在公司的服务器上执行了sudo rm -rf /*","type":"post","url":"/2018/11/when-I-execute-sudo-rm-rf-on-the-company-server/","weight":0,"wordcount":784},{"author":null,"categories":["其他"],"content":null,"date":1542702800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1542702800,"objectID":"1820b2b0cdb49ef4fbff70273532d373","permalink":"https://111qqz.github.io/2018/11/docker-network-conflict-with-local-subnetwork/","publishdate":"2018-11-20T08:33:20Z","readingtime":2,"relpermalink":"/2018/11/docker-network-conflict-with-local-subnetwork/","section":"post","summary":"起因: 公司部署在hk的爬虫服务器突然挂掉了。后来发现只是在深圳办公区无法访问。排查后发现原因是docker的网络(包括docker netwo","tags":["docker","network"],"title":"docker network 与 本地 network 网段冲突","type":"post","url":"/2018/11/docker-network-conflict-with-local-subnetwork/","weight":0,"wordcount":560},{"author":null,"categories":null,"content":null,"date":1542702800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1542702800,"objectID":"","permalink":"https://111qqz.github.io/tags/network/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/network/","section":"tags","summary":"","tags":null,"title":"network","type":"tags","url":"/tags/network/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1542182817,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1542182817,"objectID":"1489ebec63d2eb0394c10a204d9a741a","permalink":"https://111qqz.github.io/2018/11/docker-compose-default-volume-name-makes-me-confused/","publishdate":"2018-11-14T08:06:57Z","readingtime":2,"relpermalink":"/2018/11/docker-compose-default-volume-name-makes-me-confused/","section":"post","summary":"现象: 使用docker compose 挂载 named volume 无效（且没有错误提示) 排查过程: 一开始是没有使用docker-compose命令，直接使用docker run -v 命","tags":["docker"],"title":"记一次在 docker compose 中使用volume的踩坑记录","type":"post","url":"/2018/11/docker-compose-default-volume-name-makes-me-confused/","weight":0,"wordcount":706},{"author":null,"categories":["其他"],"content":null,"date":1541511180,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1541511180,"objectID":"f3de50ce7e67d39b365a1b729eecbe5e","permalink":"https://111qqz.github.io/2018/11/how-to-use-scrapy-with-django-application/","publishdate":"2018-11-06T13:33:00Z","readingtime":5,"relpermalink":"/2018/11/how-to-use-scrapy-with-django-application/","section":"post","summary":"在meidum上看到一篇很赞的文章\u0026hellip;无奈关键部分一律无法加载出来\u0026hellip;挂了梯子也不行，很心塞\u0026hellip;刚刚突然","tags":["react","爬虫"],"title":"How to use Scrapy with Django Application（转自medium）","type":"post","url":"/2018/11/how-to-use-scrapy-with-django-application/","weight":0,"wordcount":2296},{"author":null,"categories":null,"content":null,"date":1541511180,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1541511180,"objectID":"","permalink":"https://111qqz.github.io/tags/react/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/react/","section":"tags","summary":"","tags":null,"title":"react","type":"tags","url":"/tags/react/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1541511180,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1541511180,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%88%AC%E8%99%AB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%88%AC%E8%99%AB/","section":"tags","summary":"","tags":null,"title":"爬虫","type":"tags","url":"/tags/%E7%88%AC%E8%99%AB/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1540522079,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1540522079,"objectID":"","permalink":"https://111qqz.github.io/tags/lua/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lua/","section":"tags","summary":"","tags":null,"title":"lua","type":"tags","url":"/tags/lua/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1540522079,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540522079,"objectID":"e2979c46ad532ca609bf61cab004e241","permalink":"https://111qqz.github.io/2018/10/lua-notes/","publishdate":"2018-10-26T02:47:59Z","readingtime":5,"relpermalink":"/2018/10/lua-notes/","section":"post","summary":"lua是一门轻量级的脚本语言\u0026hellip;好像比较适合写游戏？在 太阳神三国杀 中见过很多lua脚本。 由于splash 的渲染脚本需要用lua来","tags":["lua"],"title":"lua学习笔记","type":"post","url":"/2018/10/lua-notes/","weight":0,"wordcount":2099},{"author":null,"categories":null,"content":null,"date":1540033616,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1540033616,"objectID":"","permalink":"https://111qqz.github.io/tags/golang/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/golang/","section":"tags","summary":"","tags":null,"title":"golang","type":"tags","url":"/tags/golang/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1540033616,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1540033616,"objectID":"2f10b9f771ff4b63162ead4722f6b13c","permalink":"https://111qqz.github.io/2018/10/golang-notes/","publishdate":"2018-10-20T11:06:56Z","readingtime":1,"relpermalink":"/2018/10/golang-notes/","section":"post","summary":"先放资料,可能比较侧重于go在系统调用方面的内容. 这里不会记录详细的go的语法,只会记录学习的过程,踩到的坑,以及其他我认为值得记录的内容.","tags":["golang","系统调用"],"title":"golang 学习笔记","type":"post","url":"/2018/10/golang-notes/","weight":0,"wordcount":358},{"author":null,"categories":null,"content":null,"date":1540033616,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1540033616,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/","section":"tags","summary":"","tags":null,"title":"系统调用","type":"tags","url":"/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539937133,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539937133,"objectID":"","permalink":"https://111qqz.github.io/tags/python/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/python/","section":"tags","summary":"","tags":null,"title":"python","type":"tags","url":"/tags/python/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1539937133,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539937133,"objectID":"a919f33cd9e34f7151a65f74ec59c5c5","permalink":"https://111qqz.github.io/2018/10/web-crawler-notes/","publishdate":"2018-10-19T08:18:53Z","readingtime":3,"relpermalink":"/2018/10/web-crawler-notes/","section":"post","summary":"再次迫于生计。。。 参考了面向新人的 Python 爬虫学习资料 大致的学习路线为: 二： 大型框架式爬虫（ Scrapy 框架为主） 三：浏览器模拟爬虫 （ Mechanize 模拟 和 Selenium 模拟）有Py","tags":["python","爬虫"],"title":"爬虫学习笔记","type":"post","url":"/2018/10/web-crawler-notes/","weight":0,"wordcount":1079},{"author":null,"categories":null,"content":null,"date":1539746943,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539746943,"objectID":"","permalink":"https://111qqz.github.io/tags/grpc/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/grpc/","section":"tags","summary":"","tags":null,"title":"gRPC","type":"tags","url":"/tags/grpc/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1539746943,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539746943,"objectID":"","permalink":"https://111qqz.github.io/tags/java/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/java/","section":"tags","summary":"","tags":null,"title":"java","type":"tags","url":"/tags/java/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1539746943,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539746943,"objectID":"5015b380bd0f9fb1f24f52329b458e5e","permalink":"https://111qqz.github.io/2018/10/java-grpc-notes/","publishdate":"2018-10-17T03:29:03Z","readingtime":4,"relpermalink":"/2018/10/java-grpc-notes/","section":"post","summary":"最近的项目需要java和python之间的进程通信，想到了之前使用过的的grpc. 参考官方quickstart * JDK: version 7 or higher 看起来只依赖jdk","tags":["gRPC","java"],"title":"java-grpc 踩坑记录","type":"post","url":"/2018/10/java-grpc-notes/","weight":0,"wordcount":1786},{"author":null,"categories":["其他"],"content":null,"date":1539531052,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539531052,"objectID":"f084892c767e3959f9a673a4b7118490","permalink":"https://111qqz.github.io/2018/10/2018-to-do-list/","publishdate":"2018-10-14T15:30:52Z","readingtime":1,"relpermalink":"/2018/10/2018-to-do-list/","section":"post","summary":"迫于最近的事情有点多，还是记录一下。 果然to do list什么的，还是要按照年份记录啊。 * \u0026lt;del\u0026gt;了解linux strace命令\u0026","tags":null,"title":"2018 to do list","type":"post","url":"/2018/10/2018-to-do-list/","weight":0,"wordcount":265},{"author":null,"categories":null,"content":null,"date":1539165406,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539165406,"objectID":"","permalink":"https://111qqz.github.io/tags/spring/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/spring/","section":"tags","summary":"","tags":null,"title":"spring","type":"tags","url":"/tags/spring/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1539165406,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539165406,"objectID":"bc69bae04a748c90ce830f752cd729e6","permalink":"https://111qqz.github.io/2018/10/spring-notes/","publishdate":"2018-10-10T09:56:46Z","readingtime":1,"relpermalink":"/2018/10/spring-notes/","section":"post","summary":"迫于生计，又要从零开始学习spring. 在这篇文章之前，对java的基础是2015年写过一个java大作业，对spring是一无所知。 为了学","tags":["spring","java"],"title":"spring 学习笔记","type":"post","url":"/2018/10/spring-notes/","weight":0,"wordcount":496},{"author":null,"categories":["其他"],"content":null,"date":1539071117,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1539071117,"objectID":"c9b12b9f3c08a0e2e68e76ae774e2535","permalink":"https://111qqz.github.io/2018/10/spring-dependency-injection/","publishdate":"2018-10-09T07:45:17Z","readingtime":2,"relpermalink":"/2018/10/spring-dependency-injection/","section":"post","summary":"真是个不明觉厉的术语\u0026hellip;其实是个特别简单的概念orz 用白话讲，如果一个class A中用到了class B的实例，那么class B的","tags":["依赖注入","java","spring"],"title":"spring 依赖注入","type":"post","url":"/2018/10/spring-dependency-injection/","weight":0,"wordcount":609},{"author":null,"categories":null,"content":null,"date":1539071117,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1539071117,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/","section":"tags","summary":"","tags":null,"title":"依赖注入","type":"tags","url":"/tags/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1538561731,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538561731,"objectID":"78a15ecddbbc5a26160ef999982adb66","permalink":"https://111qqz.github.io/2018/10/codeforces-501-b-obtaining-the-string/","publishdate":"2018-10-03T10:15:31Z","readingtime":1,"relpermalink":"/2018/10/codeforces-501-b-obtaining-the-string/","section":"post","summary":"题目链接:http://codeforces.com/contest/1015/problem/B 题意: 给出字符串s和字符串t，问一个将s变","tags":null,"title":"codeforces 501 B. Obtaining the String","type":"post","url":"/2018/10/codeforces-501-b-obtaining-the-string/","weight":0,"wordcount":429},{"author":null,"categories":["ACM"],"content":null,"date":1538477369,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538477369,"objectID":"5c7dc00404b616a815d0c03fa84e2318","permalink":"https://111qqz.github.io/2018/10/codeforces-edu-51-c/","publishdate":"2018-10-02T10:49:29Z","readingtime":2,"relpermalink":"/2018/10/codeforces-edu-51-c/","section":"post","summary":"题目链接 题意:有n个数，现在要分成2个集合，使得2个集合中，仅出现1次的数的个数相同，问是否有解，以及具体的分法。 思路: 一开始考虑出现多个的","tags":["思维题"],"title":"codeforces edu #51 C. Vasya and Multisets (思维题)","type":"post","url":"/2018/10/codeforces-edu-51-c/","weight":0,"wordcount":586},{"author":null,"categories":null,"content":null,"date":1538477369,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538477369,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"思维题","type":"tags","url":"/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538297971,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538297971,"objectID":"","permalink":"https://111qqz.github.io/tags/linux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux/","section":"tags","summary":"","tags":null,"title":"linux","type":"tags","url":"/tags/linux/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538297971,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538297971,"objectID":"","permalink":"https://111qqz.github.io/tags/variety/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/variety/","section":"tags","summary":"","tags":null,"title":"variety","type":"tags","url":"/tags/variety/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1538297971,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538297971,"objectID":"2f991b1b9c32e5a6e3f590b6d8e19fb2","permalink":"https://111qqz.github.io/2018/09/the-way-to-fix-variety-crash-on-ubuntu-14-04/","publishdate":"2018-09-30T08:59:31Z","readingtime":1,"relpermalink":"/2018/09/the-way-to-fix-variety-crash-on-ubuntu-14-04/","section":"post","summary":"系统为ubuntu 14.04 迫于特别想定时换壁纸，查了下解决方案。 发现只要删除掉/usr目录下所有的\u0026rsquo;.pyc'文件就可以 命令为:sud","tags":["linux","variety"],"title":"解决ubuntu 14.04 下 壁纸软件 variety 崩溃 ValueError: bad marshal data (unknown type code) 的问题","type":"post","url":"/2018/09/the-way-to-fix-variety-crash-on-ubuntu-14-04/","weight":0,"wordcount":76},{"author":null,"categories":["其他"],"content":null,"date":1538290167,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1538290167,"objectID":"dde353d5903e8ae891c6307fc183761f","permalink":"https://111qqz.github.io/2018/09/c11-async-packaged-ask-promise-future-notes/","publishdate":"2018-09-30T06:49:27Z","readingtime":4,"relpermalink":"/2018/09/c11-async-packaged-ask-promise-future-notes/","section":"post","summary":"把std::async,std::packaged_task,std::promise三个放在一起来说,是因为他们都可以返回一个std::f","tags":["async","c++11","future","packaged_task","promise"],"title":"[c++11] std::async std::packaged_task std::promise and std::future notes","type":"post","url":"/2018/09/c11-async-packaged-ask-promise-future-notes/","weight":0,"wordcount":1626},{"author":null,"categories":null,"content":null,"date":1538290167,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538290167,"objectID":"","permalink":"https://111qqz.github.io/tags/async/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/async/","section":"tags","summary":"","tags":null,"title":"async","type":"tags","url":"/tags/async/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538290167,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538290167,"objectID":"","permalink":"https://111qqz.github.io/tags/c++11/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/c++11/","section":"tags","summary":"","tags":null,"title":"c++11","type":"tags","url":"/tags/c++11/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538290167,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538290167,"objectID":"","permalink":"https://111qqz.github.io/tags/future/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/future/","section":"tags","summary":"","tags":null,"title":"future","type":"tags","url":"/tags/future/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538290167,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538290167,"objectID":"","permalink":"https://111qqz.github.io/tags/packaged_task/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/packaged_task/","section":"tags","summary":"","tags":null,"title":"packaged_task","type":"tags","url":"/tags/packaged_task/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1538290167,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1538290167,"objectID":"","permalink":"https://111qqz.github.io/tags/promise/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/promise/","section":"tags","summary":"","tags":null,"title":"promise","type":"tags","url":"/tags/promise/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1537692153,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1537692153,"objectID":"b719fdafa9cc0acf090acdea67b0c2fc","permalink":"https://111qqz.github.io/2018/09/condition_variable-notes/","publishdate":"2018-09-23T08:42:33Z","readingtime":2,"relpermalink":"/2018/09/condition_variable-notes/","section":"post","summary":"用人话来说,condition_variable，也就是条件变量，是线程间通信的一种方式。 线程之间在很多时候需要通信，比如经典的生产者消费者","tags":["c++11","condition_variable"],"title":"[C++11]std::condition_variable  notes","type":"post","url":"/2018/09/condition_variable-notes/","weight":0,"wordcount":672},{"author":null,"categories":null,"content":null,"date":1537692153,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1537692153,"objectID":"","permalink":"https://111qqz.github.io/tags/condition_variable/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/condition_variable/","section":"tags","summary":"","tags":null,"title":"condition_variable","type":"tags","url":"/tags/condition_variable/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1537447666,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1537447666,"objectID":"","permalink":"https://111qqz.github.io/tags/call_once/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/call_once/","section":"tags","summary":"","tags":null,"title":"call_once","type":"tags","url":"/tags/call_once/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1537447666,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1537447666,"objectID":"","permalink":"https://111qqz.github.io/tags/once_flag/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/once_flag/","section":"tags","summary":"","tags":null,"title":"once_flag","type":"tags","url":"/tags/once_flag/","weight":0,"wordcount":0},{"author":null,"categories":["c++"],"content":null,"date":1537447666,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1537447666,"objectID":"a29dc81c128d3070147fb8fd594c7cfe","permalink":"https://111qqz.github.io/2018/09/stdcall_once-stdonce_flag-notes/","publishdate":"2018-09-20T12:47:46Z","readingtime":1,"relpermalink":"/2018/09/stdcall_once-stdonce_flag-notes/","section":"post","summary":"多线程保护数据时，一种较为特殊的情况是只需要保护资源的初始化。 资源初始化一般遵循\u0026quot;lazy initialization\u0026quot;","tags":["c++11","call_once","once_flag"],"title":"std::call_once \u0026\u0026 std::once_flag  notes","type":"post","url":"/2018/09/stdcall_once-stdonce_flag-notes/","weight":0,"wordcount":429},{"author":null,"categories":["其他"],"content":null,"date":1537277466,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1537277466,"objectID":"fafc6ba194fb6a9cc48d2c5413677d9f","permalink":"https://111qqz.github.io/2018/09/react-setstate-update-strategy/","publishdate":"2018-09-18T13:31:06Z","readingtime":1,"relpermalink":"/2018/09/react-setstate-update-strategy/","section":"post","summary":"起因是想更新一个array类型的state,结果setState更新之后用console.log() debug 结果，发现结果特别玄学。。。 查了下发现","tags":["react"],"title":"react 中setState的更新策略","type":"post","url":"/2018/09/react-setstate-Update-strategy/","weight":0,"wordcount":138},{"author":null,"categories":["其他"],"content":null,"date":1536580411,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536580411,"objectID":"8ec0ff36b4805de163b77a9bd54fdaeb","permalink":"https://111qqz.github.io/2018/09/learn-java-in-21-minutes-for-c-programmers/","publishdate":"2018-09-10T11:53:31Z","readingtime":2,"relpermalink":"/2018/09/learn-java-in-21-minutes-for-c-programmers/","section":"post","summary":"先放资料: Learning a New Programming Language: Java for C++ Programmers java package 先说几条重要的人话: * 一个java文件第一行可以声明该文件所属于的package，package的名字必须与","tags":["java"],"title":"learn java in 21 minutes for C++ Programmers","type":"post","url":"/2018/09/learn-java-in-21-minutes-for-c-programmers/","weight":0,"wordcount":806},{"author":null,"categories":["其他"],"content":null,"date":1536498105,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536498105,"objectID":"98f9389bf0e5e6f0a9e38c0a7c05c792","permalink":"https://111qqz.github.io/2018/09/c11-stdmove-notes/","publishdate":"2018-09-09T13:01:45Z","readingtime":3,"relpermalink":"/2018/09/c11-stdmove-notes/","section":"post","summary":"起因是在看\u0026lt;CplusplusConcurrencyInAction_PracticalMultithreading\u0026gt;，里面讲到","tags":["c++11","move","右值引用","完美转发","转移语义"],"title":"[c++11 ]std::move  右值引用  转移语义  完美转发 notes","type":"post","url":"/2018/09/c11-stdmove-notes/","weight":0,"wordcount":1359},{"author":null,"categories":null,"content":null,"date":1536498105,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536498105,"objectID":"","permalink":"https://111qqz.github.io/tags/move/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/move/","section":"tags","summary":"","tags":null,"title":"move","type":"tags","url":"/tags/move/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1536498105,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536498105,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/","section":"tags","summary":"","tags":null,"title":"右值引用","type":"tags","url":"/tags/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1536498105,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536498105,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91/","section":"tags","summary":"","tags":null,"title":"完美转发","type":"tags","url":"/tags/%E5%AE%8C%E7%BE%8E%E8%BD%AC%E5%8F%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1536498105,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536498105,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%BD%AC%E7%A7%BB%E8%AF%AD%E4%B9%89/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%BD%AC%E7%A7%BB%E8%AF%AD%E4%B9%89/","section":"tags","summary":"","tags":null,"title":"转移语义","type":"tags","url":"/tags/%E8%BD%AC%E7%A7%BB%E8%AF%AD%E4%B9%89/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1536492533,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536492533,"objectID":"2a683655c96c1de10737306f9c712b8d","permalink":"https://111qqz.github.io/2018/09/reference_wrapper-notes/","publishdate":"2018-09-09T11:28:53Z","readingtime":2,"relpermalink":"/2018/09/reference_wrapper-notes/","section":"post","summary":"起因是在看《CplusplusConcurrencyInAction_PracticalMultithreading》的时候，里面讲到初始化","tags":["c++11"],"title":"[C++11 ] std::ref\u0026\u0026std::reference_wrapper  notes","type":"post","url":"/2018/09/reference_wrapper-notes/","weight":0,"wordcount":986},{"author":null,"categories":null,"content":null,"date":1536227817,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536227817,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%89%8D%E7%AB%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%89%8D%E7%AB%AF/","section":"tags","summary":"","tags":null,"title":"前端","type":"tags","url":"/tags/%E5%89%8D%E7%AB%AF/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1536227817,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536227817,"objectID":"0cb00d2bff3f926e2826791b3baa2e67","permalink":"https://111qqz.github.io/2018/09/front-end-to-do-list/","publishdate":"2018-09-06T09:56:57Z","readingtime":1,"relpermalink":"/2018/09/front-end-to-do-list/","section":"post","summary":"20181014update: 可以不写了，开心 迫于生计，要从零开始学习前端。 由于之前的to do list 年代久远+ 前端的技术栈可之前几乎没有关系，因此新开一篇记录。 * css盒子模","tags":["前端"],"title":"前端To do list","type":"post","url":"/2018/09/front-end-to-do-list/","weight":0,"wordcount":199},{"author":null,"categories":null,"content":null,"date":1536134562,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1536134562,"objectID":"","permalink":"https://111qqz.github.io/tags/typescript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/typescript/","section":"tags","summary":"","tags":null,"title":"typescript","type":"tags","url":"/tags/typescript/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1536134562,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1536134562,"objectID":"711ddf4f589f24bbf735eaed7d1fcaac","permalink":"https://111qqz.github.io/2018/09/typescript-notes/","publishdate":"2018-09-05T08:02:42Z","readingtime":2,"relpermalink":"/2018/09/typescript-notes/","section":"post","summary":"先放参考资料: TypeScript 入门教程 React \u0026amp; Webpack react-typescript-cheatsheet (强推一波，讲了很多react+ts的实践） typescript是javascript的语法扩展。。。好处是","tags":["typescript","前端"],"title":"typescript学习笔记","type":"post","url":"/2018/09/typescript-notes/","weight":0,"wordcount":743},{"author":null,"categories":["其他"],"content":null,"date":1535794060,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535794060,"objectID":"b1e09f649e101500ffb1e2f2e4ac80cf","permalink":"https://111qqz.github.io/2018/09/observer-pattern-notes/","publishdate":"2018-09-01T09:27:40Z","readingtime":1,"relpermalink":"/2018/09/observer-pattern-notes/","section":"post","summary":"最近在学习node.js，里面讲到node.js的事件机制使用了观察者模式，因此来学习一下。 观察者模式的目的是定义对象间的一种一对多的依赖关","tags":["观察者模式","设计模式"],"title":"[设计模式] 观察者( Observer )模式学习笔记","type":"post","url":"/2018/09/observer-pattern-notes/","weight":0,"wordcount":479},{"author":null,"categories":null,"content":null,"date":1535794060,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535794060,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"观察者模式","type":"tags","url":"/tags/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1535794060,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535794060,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"设计模式","type":"tags","url":"/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1535630735,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535630735,"objectID":"","permalink":"https://111qqz.github.io/tags/redux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/redux/","section":"tags","summary":"","tags":null,"title":"Redux","type":"tags","url":"/tags/redux/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1535630735,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535630735,"objectID":"041161c7fc922a96988522f4d194decb","permalink":"https://111qqz.github.io/2018/08/redux-notes/","publishdate":"2018-08-30T12:05:35Z","readingtime":1,"relpermalink":"/2018/08/redux-notes/","section":"post","summary":"Redux是Flux架构的一种实现。 至于Flux架构是什么，可以参考Flux 架构入门教程 粗略得讲，和MVC架构是同一类东西，最大的区别是单向","tags":["Redux","前端"],"title":"Redux 学习笔记","type":"post","url":"/2018/08/redux-notes/","weight":0,"wordcount":96},{"author":null,"categories":null,"content":null,"date":1535600539,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535600539,"objectID":"","permalink":"https://111qqz.github.io/tags/javascript/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/javascript/","section":"tags","summary":"","tags":null,"title":"JavaScript","type":"tags","url":"/tags/javascript/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1535600539,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535600539,"objectID":"7c2b24200ae60b346fa654a9c64eb544","permalink":"https://111qqz.github.io/2018/08/javascript-notes/","publishdate":"2018-08-30T03:42:19Z","readingtime":2,"relpermalink":"/2018/08/javascript-notes/","section":"post","summary":"暂时没空从头开始搞\u0026hellip;用到哪里先记录一下好了orz我觉得不行，还是要先大致了解一下。 参考资料: A re-introduction to JavaScript (JS tutorial) 继承与原型链 // 让我们假","tags":["JavaScript","前端"],"title":"JavaScript 学习笔记","type":"post","url":"/2018/08/javascript-notes/","weight":0,"wordcount":939},{"author":null,"categories":["其他"],"content":null,"date":1535451376,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535451376,"objectID":"3bf2878aa72468dbe3af9978d6a296ae","permalink":"https://111qqz.github.io/2018/08/react-notes/","publishdate":"2018-08-28T10:16:16Z","readingtime":2,"relpermalink":"/2018/08/react-notes/","section":"post","summary":"首先介绍一个fb家的快速开发react的工具 create-react-app 这个东西依赖node6.0或者更高版本。 关于在ubuntu 14.04上安装node ，可以参考这","tags":["react","前端"],"title":"react学习笔记","type":"post","url":"/2018/08/react-notes/","weight":0,"wordcount":657},{"author":null,"categories":["其他"],"content":null,"date":1535437859,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1535437859,"objectID":"94cbbfc92edb9bc30411cb803e4dbbca","permalink":"https://111qqz.github.io/2018/08/composite-pattern-notes/","publishdate":"2018-08-28T06:30:59Z","readingtime":1,"relpermalink":"/2018/08/composite-pattern-notes/","section":"post","summary":"目的是忽略单一对象和组合对象的不同。 有点像以前写过的用链表定义一个树结构，每个节点是一个val + 多个tree 。如果某个节点是叶子节点了，那么","tags":["组合模式","设计模式","c++"],"title":"[设计模式] 组合模式（composite） 学习笔记","type":"post","url":"/2018/08/Composite-Pattern-notes/","weight":0,"wordcount":501},{"author":null,"categories":null,"content":null,"date":1535437859,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535437859,"objectID":"","permalink":"https://111qqz.github.io/tags/c++/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/c++/","section":"tags","summary":"","tags":null,"title":"c++","type":"tags","url":"/tags/c++/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1535437859,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1535437859,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"组合模式","type":"tags","url":"/tags/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1534992353,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1534992353,"objectID":"cfac344a10fa46fb7fac3b4edadbe25b","permalink":"https://111qqz.github.io/2018/08/promise-future-notes/","publishdate":"2018-08-23T02:45:53Z","readingtime":1,"relpermalink":"/2018/08/promise-future-notes/","section":"post","summary":"用人话就是，主线程传给附属线程一个promise Object,然后主线程想要获取附属线程set给promise Object的值（也就是该线程","tags":["c++11","future","promise"],"title":"[C++11] promise \u0026\u0026 future leanrning notes","type":"post","url":"/2018/08/promise-future-notes/","weight":0,"wordcount":295},{"author":null,"categories":["其他"],"content":null,"date":1534831736,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1534831736,"objectID":"c896d09dc3835fe2af78b36feee0a5db","permalink":"https://111qqz.github.io/2018/08/how-to-read-binary-data-into-cpp-vector/","publishdate":"2018-08-21T06:08:56Z","readingtime":1,"relpermalink":"/2018/08/how-to-read-binary-data-into-cpp-vector/","section":"post","summary":"std::vector\u0026lt;unsigned char\u0026gt; readFromFile1(const char* filePath) { FILE* file = fopen(filePath, \u0026quot;rb\u0026quot;); std::vector\u0026lt;unsigned char\u0026gt; result; if (file == nullptr) { return result; } // 获取文件大小，尽量一次读完 size_t fileSize = getFileSize(file); if (fileSize != 0) { result.resize(fileSize); size_t n = fread(\u0026amp;result[0], 1, fileSize, file); assert(n \u0026lt;= fileSize); if (n != fileSize) { result.resize(n); } } // 在读取过程","tags":["c++"],"title":"把二进制文件按字节读到vector中","type":"post","url":"/2018/08/how-to-read-binary-data-into-cpp-vector/","weight":0,"wordcount":159},{"author":null,"categories":null,"content":null,"date":1534752616,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1534752616,"objectID":"","permalink":"https://111qqz.github.io/tags/boost/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/boost/","section":"tags","summary":"","tags":null,"title":"boost","type":"tags","url":"/tags/boost/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1534752616,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1534752616,"objectID":"3254aa689c1bc7bd85038d14a94e560d","permalink":"https://111qqz.github.io/2018/08/boost_property_tree-notes/","publishdate":"2018-08-20T08:10:16Z","readingtime":1,"relpermalink":"/2018/08/boost_property_tree-notes/","section":"post","summary":"先放资料: How to use boost::property_tree to load and write JSON How to iterate a boost property tree? 不出现key的方法遍历一个json文件: /* *********************************************** Author :111qqz mail: renkuanze@sensetime.com Created Time :2018年08月17日 星期五 15时29分","tags":["boost","json","property_tree"],"title":"boost:property_tree 学习笔记","type":"post","url":"/2018/08/boost_property_tree-notes/","weight":0,"wordcount":195},{"author":null,"categories":null,"content":null,"date":1534752616,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1534752616,"objectID":"","permalink":"https://111qqz.github.io/tags/json/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/json/","section":"tags","summary":"","tags":null,"title":"json","type":"tags","url":"/tags/json/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1534752616,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1534752616,"objectID":"","permalink":"https://111qqz.github.io/tags/property_tree/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/property_tree/","section":"tags","summary":"","tags":null,"title":"property_tree","type":"tags","url":"/tags/property_tree/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1534338737,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1534338737,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%AC%A6%E5%8F%B7%E8%A1%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AC%A6%E5%8F%B7%E8%A1%A8/","section":"tags","summary":"","tags":null,"title":"符号表","type":"tags","url":"/tags/%E7%AC%A6%E5%8F%B7%E8%A1%A8/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1534338737,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1534338737,"objectID":"549970ceb50f043665d727473bb5d1a7","permalink":"https://111qqz.github.io/2018/08/undefined-references-caused-by-dynamic-library-symbol-table-visibility/","publishdate":"2018-08-15T13:12:17Z","readingtime":2,"relpermalink":"/2018/08/undefined-references-caused-by-dynamic-library-symbol-table-visibility/","section":"post","summary":"编译某代码，发现报错某函数未定义的引用。该函数的是先前编译得到的动态库中。 先去check了该函数的实现，还有接口与头文件中的声明是否统一。发","tags":["符号表","c++"],"title":"记录一次因动态库符号表可见性导致的未定义的引用(undefined reference)","type":"post","url":"/2018/08/Undefined-references-caused-by-dynamic-library-symbol-table-visibility/","weight":0,"wordcount":525},{"author":null,"categories":["其他"],"content":null,"date":1533556475,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1533556475,"objectID":"b2b37993b68458e019ce6baaf9dd5370","permalink":"https://111qqz.github.io/2018/08/calculate-error-with-python/","publishdate":"2018-08-06T11:54:35Z","readingtime":1,"relpermalink":"/2018/08/calculate-error-with-python/","section":"post","summary":"import os import math ave_err=0.0 max_err=0.0 max_err_rate=0.0 length=0 with open(\u0026ldquo;cpu_result.txt\u0026rdquo;,\u0026ldquo;r\u0026rdquo;) as fp1, open(\u0026ldquo;cuda_ppl_result.txt\u0026rdquo;,\u0026ldquo;r\u0026rdquo;) as fp2: for l1 in fp1: l2 = fp2.readline() l1=l1[:-2] l2=l2[:-2] lst = l1.split(\u0026rsquo; \u0026lsquo;) lst2 = l2.split(\u0026rsquo; \u0026lsquo;) #print lst lst = [float(x) for x in lst ] length = length + len(lst) lst2 = [float(x) for x in lst2] #print (lst) #print (lst2) for index,x in enumerate(lst): y = lst2[index] ave_err = ave_err + abs(x-y)","tags":["python"],"title":"使用python计算误差代码","type":"post","url":"/2018/08/calculate-error-with-python/","weight":0,"wordcount":103},{"author":null,"categories":["其他"],"content":null,"date":1531997186,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1531997186,"objectID":"224be482bf8946680a154d65c37617c4","permalink":"https://111qqz.github.io/2018/07/cpp11-function-bind-notes/","publishdate":"2018-07-19T10:46:26Z","readingtime":1,"relpermalink":"/2018/07/cpp11-function-bind-notes/","section":"post","summary":"C++11 std::function 是一种通用、多态的函数封装,它的实例可以对任何可 以调用的目标实体进行存储、复制和调用操作 见下面的例子 /* *********************************************** Author :111qqz mail: renkuanze@sensetime.com Created Time :2018年07月1","tags":["c++11"],"title":"c++11 function 与bind  学习笔记","type":"post","url":"/2018/07/cpp11-function-bind-notes/","weight":0,"wordcount":276},{"author":null,"categories":["其他"],"content":null,"date":1531897058,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1531897058,"objectID":"efb5516b1db195ffcad704984cbfe313","permalink":"https://111qqz.github.io/2018/07/intel-tbb-notes/","publishdate":"2018-07-18T06:57:38Z","readingtime":1,"relpermalink":"/2018/07/intel-tbb-notes/","section":"post","summary":"tbb是**Threading Building Blocks library的缩写,**是一个为开发者提供并行解决方案的库. 先放个文档https://www.threa","tags":["Threading Building Blocks"],"title":"intel tbb 学习笔记","type":"post","url":"/2018/07/intel-tbb-notes/","weight":0,"wordcount":334},{"author":null,"categories":null,"content":null,"date":1531897058,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1531897058,"objectID":"","permalink":"https://111qqz.github.io/tags/threading-building-blocks/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/threading-building-blocks/","section":"tags","summary":"","tags":null,"title":"Threading Building Blocks","type":"tags","url":"/tags/threading-building-blocks/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1531189610,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1531189610,"objectID":"d5571263c7a2625e4d2e2bac0e98fd9a","permalink":"https://111qqz.github.io/2018/07/record-code-run-time-with-cpp/","publishdate":"2018-07-10T02:26:50Z","readingtime":1,"relpermalink":"/2018/07/record-code-run-time-with-cpp/","section":"post","summary":"以前用的办法太老土啦 看到一个since C++11的方法，我觉得比较优雅 #include \u0026lt;iostream\u0026gt; #include \u0026lt;chrono\u0026gt; //#include \u0026lt;ratio\u0026gt; #include \u0026lt;thread\u0026gt; void f() { std::this_thread::sleep_for(std::chrono::seconds(1)); } int main() { auto t1 = std::chrono::high_resolution_clock::now(); f(); auto t2 = std::chrono::high_resolution_clock::now(); // floating-point duration: no duration_cast needed std::chrono::duration\u0026lt;double, std::milli\u0026gt; fp_ms =","tags":["c++11"],"title":"C++ 记录代码运行时间","type":"post","url":"/2018/07/Record-code-run-time-with-cpp/","weight":0,"wordcount":139},{"author":null,"categories":null,"content":null,"date":1530863078,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1530863078,"objectID":"","permalink":"https://111qqz.github.io/tags/gdb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gdb/","section":"tags","summary":"","tags":null,"title":"gdb","type":"tags","url":"/tags/gdb/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1530863078,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1530863078,"objectID":"9bbebd0b5a4b4b2d8490d11fa8ce0ae6","permalink":"https://111qqz.github.io/2018/07/gdb-notes/","publishdate":"2018-07-06T07:44:38Z","readingtime":1,"relpermalink":"/2018/07/gdb-notes/","section":"post","summary":"用gdb调试c++的时候，需要添加-g编译选项add_compile_options(-g)，并且关掉各种编译优化 如果是多线程程序，可以用i","tags":["gdb"],"title":"gdb学习笔记","type":"post","url":"/2018/07/gdb-notes/","weight":0,"wordcount":235},{"author":null,"categories":null,"content":null,"date":1530521812,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1530521812,"objectID":"","permalink":"https://111qqz.github.io/tags/kafka/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kafka/","section":"tags","summary":"","tags":null,"title":"kafka","type":"tags","url":"/tags/kafka/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1530521812,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1530521812,"objectID":"c03b88115b628557e70ecd4b300bbae7","permalink":"https://111qqz.github.io/2018/07/kafka-notes/","publishdate":"2018-07-02T08:56:52Z","readingtime":1,"relpermalink":"/2018/07/kafka-notes/","section":"post","summary":"先放资料． kafka简明教程","tags":["kafka","分布式消息系统"],"title":"Kafka 学习笔记","type":"post","url":"/2018/07/kafka-notes/","weight":0,"wordcount":14},{"author":null,"categories":null,"content":null,"date":1530521812,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1530521812,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E7%B3%BB%E7%BB%9F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E7%B3%BB%E7%BB%9F/","section":"tags","summary":"","tags":null,"title":"分布式消息系统","type":"tags","url":"/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1530514948,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1530514948,"objectID":"","permalink":"https://111qqz.github.io/tags/cpp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cpp/","section":"tags","summary":"","tags":null,"title":"cpp","type":"tags","url":"/tags/cpp/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1530514948,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1530514948,"objectID":"88afeb3ed137be60cb5084ca771417eb","permalink":"https://111qqz.github.io/2018/07/connect-mysql-with-cpp-under-linux/","publishdate":"2018-07-02T07:02:28Z","readingtime":1,"relpermalink":"/2018/07/connect-mysql-with-cpp-under-linux/","section":"post","summary":"资料推荐这个:MySQL C API programming tutorial 环境为ubuntu 14.04 lts 需要安装mysql 和mysql 开发包 sudo apt-get install libmysqlclient15-dev mysql-server mysql-client 先在mysql 中建立test数据库和t","tags":["cpp","mysql","linux"],"title":"linux 下C++ 连接mysql 数据库","type":"post","url":"/2018/07/connect-mysql-with-cpp-under-linux/","weight":0,"wordcount":230},{"author":null,"categories":null,"content":null,"date":1530514948,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1530514948,"objectID":"","permalink":"https://111qqz.github.io/tags/mysql/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mysql/","section":"tags","summary":"","tags":null,"title":"mysql","type":"tags","url":"/tags/mysql/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1526365655,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1526365655,"objectID":"","permalink":"https://111qqz.github.io/tags/haproxy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/haproxy/","section":"tags","summary":"","tags":null,"title":"haproxy","type":"tags","url":"/tags/haproxy/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1526365655,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1526365655,"objectID":"","permalink":"https://111qqz.github.io/tags/shadowsocks/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/shadowsocks/","section":"tags","summary":"","tags":null,"title":"shadowsocks","type":"tags","url":"/tags/shadowsocks/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1526365655,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1526365655,"objectID":"87d6cf19fc44b619abde74f136c259e5","permalink":"https://111qqz.github.io/2018/05/shadowsocks-with-haproxy/","publishdate":"2018-05-15T06:27:35Z","readingtime":1,"relpermalink":"/2018/05/shadowsocks-with-haproxy/","section":"post","summary":"一个国内vps，一个国外vps. 前提是国外vps已经配置好。 接下来，我们在国内vps上安装haproxy yum -y install haproxy 或者 apt-get install haproxy 然后修改配置文件,","tags":["haproxy","shadowsocks"],"title":"使用haproxy中转酸酸流量","type":"post","url":"/2018/05/shadowsocks-with-haproxy/","weight":0,"wordcount":200},{"author":null,"categories":null,"content":null,"date":1526303310,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1526303310,"objectID":"","permalink":"https://111qqz.github.io/tags/blog/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/blog/","section":"tags","summary":"","tags":null,"title":"blog","type":"tags","url":"/tags/blog/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1526303310,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1526303310,"objectID":"","permalink":"https://111qqz.github.io/tags/wordpress/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/wordpress/","section":"tags","summary":"","tags":null,"title":"wordpress","type":"tags","url":"/tags/wordpress/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1526303310,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1526303310,"objectID":"aeeea51bd372647fe380e837ad83dd28","permalink":"https://111qqz.github.io/2018/05/enable-https-for-wordpress/","publishdate":"2018-05-14T13:08:30Z","readingtime":4,"relpermalink":"/2018/05/enable-https-for-wordpress/","section":"post","summary":"20190511更新: 证书到期了,写一下更换证书的流程. 重新申请好证书之后,直接把Apache里面对应的123放到/data/cert文件夹","tags":["wordpress","blog"],"title":"wordpress 开启全站https","type":"post","url":"/2018/05/enable-https-for-wordpress/","weight":0,"wordcount":1646},{"author":null,"categories":["其他"],"content":null,"date":1525599950,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525599950,"objectID":"4a393dbb9201367eedb69eac12a18c90","permalink":"https://111qqz.github.io/2018/05/c-stl-algotithms-notes/","publishdate":"2018-05-06T09:45:50Z","readingtime":3,"relpermalink":"/2018/05/c-stl-algotithms-notes/","section":"post","summary":"迫于拙劣的cpp水平，这次来记录一些关于STL算法部分的内容。 参考内容是CS106L的course reader Iterator Categories Iterators分为以下五种: * Output","tags":["c++","stl"],"title":"C++ STL Algotithms 学习笔记","type":"post","url":"/2018/05/c-stl-algotithms-notes/","weight":0,"wordcount":1474},{"author":null,"categories":null,"content":null,"date":1525599950,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1525599950,"objectID":"","permalink":"https://111qqz.github.io/tags/stl/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/stl/","section":"tags","summary":"","tags":null,"title":"stl","type":"tags","url":"/tags/stl/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1525405717,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525405717,"objectID":"4af00ebb8ad5e61dfc24a917f382e789","permalink":"https://111qqz.github.io/2018/05/cpp-io-streams-notes/","publishdate":"2018-05-04T03:48:37Z","readingtime":4,"relpermalink":"/2018/05/cpp-io-streams-notes/","section":"post","summary":"迫于拙劣的cpp水平，来补补以前忽略掉的cpp细节。 老规矩，先放资料。 参考资料: A Gentle Introduction to C++ IO Streams Stream的基本认识 说说我的理解。strea","tags":["c++"],"title":"C++ IO Streams 学习笔记","type":"post","url":"/2018/05/cpp-io-streams-notes/","weight":0,"wordcount":1535},{"author":null,"categories":null,"content":null,"date":1525067673,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1525067673,"objectID":"","permalink":"https://111qqz.github.io/tags/nerdtree/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nerdtree/","section":"tags","summary":"","tags":null,"title":"NERDTree","type":"tags","url":"/tags/nerdtree/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1525067673,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1525067673,"objectID":"","permalink":"https://111qqz.github.io/tags/vim/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vim/","section":"tags","summary":"","tags":null,"title":"vim","type":"tags","url":"/tags/vim/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1525067673,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525067673,"objectID":"f5b9ad1368bd2f6b23ad58ec2e5aeb76","permalink":"https://111qqz.github.io/2018/04/vim-nerdtree-plugin/","publishdate":"2018-04-30T05:54:33Z","readingtime":1,"relpermalink":"/2018/04/vim-nerdtree-plugin/","section":"post","summary":"迫于要在服务器上写cpp代码，又由于各种原因，没办法把同步到本地。因此要在服务器上配置一个cpp的环境orz. 我是用vim-plug来管理插","tags":["NERDTree","vim"],"title":"vim  插件 NERDTree 学习笔记","type":"post","url":"/2018/04/vim-NERDTree-plugin/","weight":0,"wordcount":206},{"author":null,"categories":["其他"],"content":null,"date":1525018727,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1525018727,"objectID":"845ecc1a8b46f9ee0ef866eea1ab99f2","permalink":"https://111qqz.github.io/2018/04/grpc-notes/","publishdate":"2018-04-29T16:18:47Z","readingtime":2,"relpermalink":"/2018/04/grpc-notes/","section":"post","summary":"gRPC 是 google 最新发布的开源 RPC 框架, 声称是\u0026quot;一个高性能，开源，将移动和HTTP/2放在首位的通用的RPC框架.\u0026quot;. 技术栈非常的新","tags":["gRPC"],"title":"gRPC学习笔记","type":"post","url":"/2018/04/grpc-notes/","weight":0,"wordcount":618},{"author":null,"categories":["其他"],"content":null,"date":1524674811,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524674811,"objectID":"b1799e3ac77c4474a682a9bde8c49919","permalink":"https://111qqz.github.io/2018/04/vim-config-in-2018/","publishdate":"2018-04-25T16:46:51Z","readingtime":2,"relpermalink":"/2018/04/vim-config-in-2018/","section":"post","summary":"现在用的vim配置还是2015年7月的时候写的。 三年过去了，vim到了8.0,很多功能也有了更多选择。因此打算来更新一波vim配置。目前还在","tags":["vim"],"title":"8102年了，来更新一波vim配置","type":"post","url":"/2018/04/vim-config-in-2018/","weight":0,"wordcount":964},{"author":null,"categories":null,"content":null,"date":1524539109,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1524539109,"objectID":"","permalink":"https://111qqz.github.io/tags/protobuf/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/protobuf/","section":"tags","summary":"","tags":null,"title":"protobuf","type":"tags","url":"/tags/protobuf/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1524539109,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524539109,"objectID":"6228dd21c361dcd352a5c5a49d59ef5a","permalink":"https://111qqz.github.io/2018/04/protobuf-notes/","publishdate":"2018-04-24T03:05:09Z","readingtime":4,"relpermalink":"/2018/04/protobuf-notes/","section":"post","summary":"Protobuff 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关","tags":["protobuf"],"title":"protobuf学习笔记","type":"post","url":"/2018/04/protobuf-notes/","weight":0,"wordcount":1710},{"author":null,"categories":null,"content":null,"date":1524153520,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1524153520,"objectID":"","permalink":"https://111qqz.github.io/tags/leveldb/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/leveldb/","section":"tags","summary":"","tags":null,"title":"levelDB","type":"tags","url":"/tags/leveldb/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1524153520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1524153520,"objectID":"0b7d5e83637b9e0e876d59261c444d5b","permalink":"https://111qqz.github.io/2018/04/leveldb-notes/","publishdate":"2018-04-19T15:58:40Z","readingtime":5,"relpermalink":"/2018/04/leveldb-notes/","section":"post","summary":"大三的时候看过一点levelDB的源码，不过没有怎么用过。 最近有个需求是存人脸的feature到硬盘，似乎使用levelDB比较合适，因此来","tags":["levelDB"],"title":"levelDB 学习笔记","type":"post","url":"/2018/04/leveldb-notes/","weight":0,"wordcount":2446},{"author":null,"categories":null,"content":null,"date":1523588899,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1523588899,"objectID":"","permalink":"https://111qqz.github.io/tags/caffe2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/caffe2/","section":"tags","summary":"","tags":null,"title":"caffe2","type":"tags","url":"/tags/caffe2/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1523588899,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1523588899,"objectID":"9ab7e939b948963b23e5f171d1e7a70a","permalink":"https://111qqz.github.io/2018/04/add-custom-operation-in-caffe2/","publishdate":"2018-04-13T03:08:19Z","readingtime":3,"relpermalink":"/2018/04/add-custom-operation-in-caffe2/","section":"post","summary":"记录一些一个没有之前没有接触过caffe/caffe2的人为了添加自定义的op 到caffe2需要做的工作. 首先参考caffe2 tutoria","tags":["caffe2"],"title":"caffe2 添加自定义operater","type":"post","url":"/2018/04/add-custom-operation-in-caffe2/","weight":0,"wordcount":1413},{"author":null,"categories":null,"content":null,"date":1522912494,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1522912494,"objectID":"","permalink":"https://111qqz.github.io/tags/eigen/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/eigen/","section":"tags","summary":"","tags":null,"title":"Eigen","type":"tags","url":"/tags/eigen/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1522912494,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1522912494,"objectID":"161ca9f9dbf4bc23846fa6ced8059606","permalink":"https://111qqz.github.io/2018/04/eigen-notes/","publishdate":"2018-04-05T07:14:54Z","readingtime":2,"relpermalink":"/2018/04/eigen-notes/","section":"post","summary":"接触Eigen的原因是最近在看caffe/caffe2源码,caffe2中使用了Eigen库. Eigen 是一个基于C++模板的线性代数库，直接将库下","tags":["caffe","Eigen","c++"],"title":"Eigen: C++开源矩阵学习笔记","type":"post","url":"/2018/04/eigen-notes/","weight":0,"wordcount":779},{"author":null,"categories":null,"content":null,"date":1522564110,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1522564110,"objectID":"","permalink":"https://111qqz.github.io/tags/grub/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/grub/","section":"tags","summary":"","tags":null,"title":"grub","type":"tags","url":"/tags/grub/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1522564110,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1522564110,"objectID":"b2d72964dcc98155bdec3eec4c76ec43","permalink":"https://111qqz.github.io/2018/04/the-way-to-fix-unkown-filesystem-error-in-grub/","publishdate":"2018-04-01T06:28:30Z","readingtime":1,"relpermalink":"/2018/04/the-way-to-fix-unkown-filesystem-error-in-grub/","section":"post","summary":"windows自己更新把grub更新挂了\u0026hellip;. 更新的时候要重启几次,重启一次挂一次\u0026hellip; 讲真,windows(或者说w","tags":["grub","linux"],"title":"linux/win双系统 更新win后 grub 出现 Error: unknown filesystem 的解决办法","type":"post","url":"/2018/04/the-way-to-fix-unkown-filesystem-error-in-grub/","weight":0,"wordcount":269},{"author":null,"categories":null,"content":null,"date":1521368846,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1521368846,"objectID":"","permalink":"https://111qqz.github.io/tags/cmake/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cmake/","section":"tags","summary":"","tags":null,"title":"cmake","type":"tags","url":"/tags/cmake/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1521368846,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1521368846,"objectID":"8fccadce05708a173c2065fa554a04f0","permalink":"https://111qqz.github.io/2018/03/cmake-notes/","publishdate":"2018-03-18T10:27:26Z","readingtime":2,"relpermalink":"/2018/03/cmake-notes/","section":"post","summary":"前置技能点： gnu make linux下.so,.a,.o文件 cmake是一个工具，也可以看成一门语言。 学习cmake最大的障碍在于看不懂全是大写的英文","tags":["cmake","c++"],"title":"cmake 学习笔记","type":"post","url":"/2018/03/cmake-notes/","weight":0,"wordcount":994},{"author":null,"categories":null,"content":null,"date":1521168974,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1521168974,"objectID":"","permalink":"https://111qqz.github.io/tags/nms/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nms/","section":"tags","summary":"","tags":null,"title":"nms","type":"tags","url":"/tags/nms/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1521168974,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1521168974,"objectID":"5059f306005640100479eb4d4e125127","permalink":"https://111qqz.github.io/2018/03/non-maximum-suppression/","publishdate":"2018-03-16T02:56:14Z","readingtime":2,"relpermalink":"/2018/03/non-maximum-suppression/","section":"post","summary":"NMS是为了在诸多CV任务如边缘检测，目标检测等，找到局部最大值 其主要思想是先设定一个阈值，然后计算检测框的IOU(所谓IOU，也就是int","tags":["nms"],"title":"非极大值抑制（Non-Maximum Suppression，NMS）","type":"post","url":"/2018/03/non-maximum-suppression/","weight":0,"wordcount":793},{"author":null,"categories":["其他"],"content":null,"date":1521089818,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1521089818,"objectID":"c5f5dc959403536780e96f4410a363a9","permalink":"https://111qqz.github.io/2018/03/the-way-to-fix-mysql-innodb-cannot-allocate-memory/","publishdate":"2018-03-15T04:56:58Z","readingtime":1,"relpermalink":"/2018/03/the-way-to-fix-mysql-innodb-cannot-allocate-memory/","section":"post","summary":"emmm,博客的数据库又挂了。 看了下log，发现innoDB: Cannot allocate memory for the buffer pool 的error 查了下，貌似是内存不够了？ orz 用free 命令看了下，阿","tags":["linux","mysql"],"title":"mysql 出现　innoDB: Cannot allocate memory for the buffer pool　的解决办法","type":"post","url":"/2018/03/the-way-to-fix-mysql-innodb-cannot-allocate-memory/","weight":0,"wordcount":127},{"author":null,"categories":null,"content":null,"date":1519446842,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519446842,"objectID":"","permalink":"https://111qqz.github.io/tags/reid/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/reid/","section":"tags","summary":"","tags":null,"title":"reid","type":"tags","url":"/tags/reid/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519446842,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519446842,"objectID":"13f43a30991f0dd9dbee3457b7af16f6","permalink":"https://111qqz.github.io/2018/02/reid-task-notes/","publishdate":"2018-02-24T04:34:02Z","readingtime":2,"relpermalink":"/2018/02/reid-task-notes/","section":"post","summary":"被师兄（同事？）普及了一番实验规范orz\u0026hellip; 我还是太年轻了 所谓的一个fc的版本是右边的．一个放着不动，另一个在sequence_","tags":["reid"],"title":"reid 相关任务记录","type":"post","url":"/2018/02/reid-task-notes/","weight":0,"wordcount":541},{"author":null,"categories":null,"content":null,"date":1519374055,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519374055,"objectID":"","permalink":"https://111qqz.github.io/tags/cumulative-match-characteristi/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cumulative-match-characteristi/","section":"tags","summary":"","tags":null,"title":"Cumulative Match Characteristi","type":"tags","url":"/tags/cumulative-match-characteristi/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519374055,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519374055,"objectID":"14bb0e2017bf83a5c7503b8ea3610fee","permalink":"https://111qqz.github.io/2018/02/cumulative-match-characteristi/","publishdate":"2018-02-23T08:20:55Z","readingtime":2,"relpermalink":"/2018/02/cumulative-match-characteristi/","section":"post","summary":"CMC曲线全称是Cumulative Match Characteristic (CMC) curve，也就是累积匹配曲线，同ROC曲线Receiver Operating Characteristic (ROC) curve一样，是模式识别系统，","tags":["Cumulative Match Characteristi"],"title":"分类评价指标之Cumulative Match Characteristi (CMC)曲线","type":"post","url":"/2018/02/cumulative-Match-characteristi/","weight":0,"wordcount":892},{"author":null,"categories":null,"content":null,"date":1519354525,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519354525,"objectID":"","permalink":"https://111qqz.github.io/tags/pytorch/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pytorch/","section":"tags","summary":"","tags":null,"title":"pytorch","type":"tags","url":"/tags/pytorch/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519354525,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519354525,"objectID":"cede743bd8148f9aeb5b7b38a7cebe3a","permalink":"https://111qqz.github.io/2018/02/pytorch-function-notes/","publishdate":"2018-02-23T02:55:25Z","readingtime":2,"relpermalink":"/2018/02/pytorch-function-notes/","section":"post","summary":"记录一些常用的\u0026hellip;总去查文档也是有点麻烦 * tensor.view 的作用是reshape 比如 a = torch.range(1, 16) 得到一个tensor that has 16 elements from 1 to 16. 在a=a.vi","tags":["python","pytorch"],"title":"pytorch 函数笔记","type":"post","url":"/2018/02/pytorch-function-notes/","weight":0,"wordcount":687},{"author":null,"categories":null,"content":null,"date":1519290228,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519290228,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%85%89%E6%B5%81%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%85%89%E6%B5%81%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"光流法","type":"tags","url":"/tags/%E5%85%89%E6%B5%81%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519290228,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519290228,"objectID":"7f09513f56b9250474db0aca266c0f77","permalink":"https://111qqz.github.io/2018/02/optical-flow-notes/","publishdate":"2018-02-22T09:03:48Z","readingtime":1,"relpermalink":"/2018/02/optical-flow-notes/","section":"post","summary":"算是CV领域的传统算法了 只写两句话就够了。 **研究光流场的目的就是为了从图片序列中近似得到不能直接得到的运动场。运动场，其实就是物体在三维真","tags":["光流法"],"title":"光流法初探","type":"post","url":"/2018/02/Optical-flow-notes/","weight":0,"wordcount":140},{"author":null,"categories":null,"content":null,"date":1519267981,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519267981,"objectID":"","permalink":"https://111qqz.github.io/tags/end-to-end/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/end-to-end/","section":"tags","summary":"","tags":null,"title":"end-to-end","type":"tags","url":"/tags/end-to-end/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519267981,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519267981,"objectID":"36525ab4d2fb5d4ad7cf246d88651bf6","permalink":"https://111qqz.github.io/2018/02/end-to-end-neural-network/","publishdate":"2018-02-22T02:53:01Z","readingtime":2,"relpermalink":"/2018/02/end-to-end-neural-network/","section":"post","summary":"所谓end-to-end 神经网络，更多是一种思想。 这种思想的核心是，比如对于图像处理，输入原始图像数据，输出的是直接有用的结果（有用取决于具","tags":["end-to-end"],"title":"end-to-end 神经网络","type":"post","url":"/2018/02/end-to-end-neural-network/","weight":0,"wordcount":561},{"author":null,"categories":null,"content":null,"date":1519266300,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1519266300,"objectID":"","permalink":"https://111qqz.github.io/tags/pose-driven/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pose-driven/","section":"tags","summary":"","tags":null,"title":"Pose-driven","type":"tags","url":"/tags/pose-driven/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1519266300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1519266300,"objectID":"7122b40f98e372f7c220c2de418cdb0b","permalink":"https://111qqz.github.io/2018/02/pose-driven-deep-convolutional-model-for-person-re-identification/","publishdate":"2018-02-22T02:25:00Z","readingtime":2,"relpermalink":"/2018/02/pose-driven-deep-convolutional-model-for-person-re-identification/","section":"post","summary":"1709.08325 Reid问题指的是判断一个probe person 是否在被不同的camera捕获的gallery person 中出现。 通常是如下情景：给出一个特定camera下某","tags":["Pose-driven","reid"],"title":"Pose-driven Deep Convolutional Model for Person Re-identification 阅读笔记","type":"post","url":"/2018/02/pose-driven-deep-convolutional-model-for-person-re-identification/","weight":0,"wordcount":863},{"author":null,"categories":["deep-learning"],"content":null,"date":1518950795,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518950795,"objectID":"de8758a08f9fe7f3e72e2f65502bce4f","permalink":"https://111qqz.github.io/2018/02/deep-mutual-learning-notes/","publishdate":"2018-02-18T10:46:35Z","readingtime":2,"relpermalink":"/2018/02/deep-mutual-learning-notes/","section":"post","summary":"原始论文 DNN在很多问题上效果很不错，但是由于深度和宽度过大，导致需要的执行时间和内存过大。我们需要讨论一些能快速执行并且对内存的需要不大的","tags":["Model distillation","Mutual Learning"],"title":"Deep Mutual Learning（相互学习） 阅读笔记","type":"post","url":"/2018/02/deep-mutual-learning-notes/","weight":0,"wordcount":766},{"author":null,"categories":null,"content":null,"date":1518950795,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518950795,"objectID":"","permalink":"https://111qqz.github.io/tags/model-distillation/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/model-distillation/","section":"tags","summary":"","tags":null,"title":"Model distillation","type":"tags","url":"/tags/model-distillation/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518950795,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518950795,"objectID":"","permalink":"https://111qqz.github.io/tags/mutual-learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mutual-learning/","section":"tags","summary":"","tags":null,"title":"Mutual Learning","type":"tags","url":"/tags/mutual-learning/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518941650,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518941650,"objectID":"","permalink":"https://111qqz.github.io/tags/metric-learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/metric-learning/","section":"tags","summary":"","tags":null,"title":"Metric learning","type":"tags","url":"/tags/metric-learning/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518941650,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518941650,"objectID":"","permalink":"https://111qqz.github.io/tags/similarity-learning/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/similarity-learning/","section":"tags","summary":"","tags":null,"title":"Similarity learning","type":"tags","url":"/tags/similarity-learning/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1518941650,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518941650,"objectID":"fd541325e7b880f0dfb462878720f612","permalink":"https://111qqz.github.io/2018/02/similarity-learning-metric-learning/","publishdate":"2018-02-18T08:14:10Z","readingtime":2,"relpermalink":"/2018/02/similarity-learning-metric-learning/","section":"post","summary":"Similarity_learning 相似性学习（Similarity learning ）有监督机器学习，它与回归和分类密切相关，但目标是从实例中学习一个相似函数，以衡量两个对象的相似程度或相","tags":["Metric learning","Similarity learning","triplet loss"],"title":"Similarity learning 和Metric learning","type":"post","url":"/2018/02/similarity-learning-metric-learning/","weight":0,"wordcount":758},{"author":null,"categories":null,"content":null,"date":1518941650,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518941650,"objectID":"","permalink":"https://111qqz.github.io/tags/triplet-loss/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/triplet-loss/","section":"tags","summary":"","tags":null,"title":"triplet loss","type":"tags","url":"/tags/triplet-loss/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1518851869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518851869,"objectID":"5eb7fdabd747c5d066b7fbeaa7d135e2","permalink":"https://111qqz.github.io/2018/02/persion-reid-paper-list/","publishdate":"2018-02-17T07:17:49Z","readingtime":1,"relpermalink":"/2018/02/persion-reid-paper-list/","section":"post","summary":"Key: (1). Pose-driven, body part alignment, combine whole feature and body part feature, focus on alignment of part model, (2). Combine image label and human attributes classes, do classification with attributes and identity learning (3). Based on triplet loss, improve metric learning for an end to end learning (4). Post-process, re-ranking AlignedReID: Surpassing Human-Level Performance in Person Re-Identification Hydraplus-net: Attentive deep features for pedestrian analysis. Darkrank: Accelerating deep metric learning","tags":["reid"],"title":"persion reid 论文列表","type":"post","url":"/2018/02/persion-reid-paper-list/","weight":0,"wordcount":332},{"author":null,"categories":null,"content":null,"date":1518503918,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518503918,"objectID":"","permalink":"https://111qqz.github.io/tags/cuda/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cuda/","section":"tags","summary":"","tags":null,"title":"cuda","type":"tags","url":"/tags/cuda/","weight":0,"wordcount":0},{"author":null,"categories":["优化"],"content":null,"date":1518503918,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518503918,"objectID":"3d23382b401981ce8add7f56d56d64a0","permalink":"https://111qqz.github.io/2018/02/cuda-c-best-practices-guide-heterogeneous-computing/","publishdate":"2018-02-13T06:38:38Z","readingtime":2,"relpermalink":"/2018/02/cuda-c-best-practices-guide-heterogeneous-computing/","section":"post","summary":"CUDA 编程涉及到在不同的平台上同时运行代码:包含CPU的host 和包含GPU的device. 所以了解host和device的对性能优化是非常重要","tags":["cuda","c++"],"title":"CUDA C Best Practices Guide 阅读笔记（二） Heterogeneous Computing","type":"post","url":"/2018/02/cuda-c-best-practices-guide-heterogeneous-computing/","weight":0,"wordcount":972},{"author":null,"categories":["优化"],"content":null,"date":1518411511,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518411511,"objectID":"1b9f1b0dbd749ae26451f7e62af21533","permalink":"https://111qqz.github.io/2018/02/cuda-c-best-practices-parallel-computing-methodology/","publishdate":"2018-02-12T04:58:31Z","readingtime":2,"relpermalink":"/2018/02/cuda-c-best-practices-parallel-computing-methodology/","section":"post","summary":"APOD指的是Assess, Parallelize, Optimize, Deploy 如图所示，APOD过程是一个循环的过程，每次只进行一部分，从A到P到O到D,然后再进行下一轮的APOD Assess 对","tags":["cuda","并行计算"],"title":"CUDA C Best Practices Guide 阅读笔记（1） 并行计算方法论(APOD)","type":"post","url":"/2018/02/cuda-c-best-practices-parallel-computing-methodology/","weight":0,"wordcount":753},{"author":null,"categories":null,"content":null,"date":1518411511,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518411511,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/","section":"tags","summary":"","tags":null,"title":"并行计算","type":"tags","url":"/tags/%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/","weight":0,"wordcount":0},{"author":null,"categories":["优化"],"content":null,"date":1518336374,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518336374,"objectID":"14aaa3c225743b904ff6cf0a9860849a","permalink":"https://111qqz.github.io/2018/02/cuda-7-5-pinpoint-performance-problems-instruction-level-profiling/","publishdate":"2018-02-11T08:06:14Z","readingtime":2,"relpermalink":"/2018/02/cuda-7-5-pinpoint-performance-problems-instruction-level-profiling/","section":"post","summary":"原文： CUDA 7.5: Pinpoint Performance Problems with Instruction-Level Profiling 主要是介绍了CUDA 7.5 以上的版本的 NVIDIA Visual Profiler 加入的新特性 可以细粒度到指令级，分析出性能的瓶颈（在这之前，只能分析到kern","tags":["cuda"],"title":"CUDA 7.5: 用指令级性能分析精确找到性能问题","type":"post","url":"/2018/02/cuda-7-5-pinpoint-performance-problems-instruction-level-profiling/","weight":0,"wordcount":581},{"author":null,"categories":["优化"],"content":null,"date":1518252234,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518252234,"objectID":"51c0772835b9cbe35f61746bb59bf26c","permalink":"https://111qqz.github.io/2018/02/cuda-thrust-notes/","publishdate":"2018-02-10T08:43:54Z","readingtime":1,"relpermalink":"/2018/02/cuda-thrust-notes/","section":"post","summary":"可以了解成并行版的STL(? 过了一遍nvidia的官方网文档 发现如果熟悉STL的话,thrust没什么太多好说的,看起来很简单\u0026hellip","tags":["cuda","stl","thrust"],"title":"cuda c++  基础算法库 thrust 学习笔记","type":"post","url":"/2018/02/cuda-thrust-notes/","weight":0,"wordcount":117},{"author":null,"categories":null,"content":null,"date":1518252234,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518252234,"objectID":"","permalink":"https://111qqz.github.io/tags/thrust/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/thrust/","section":"tags","summary":"","tags":null,"title":"thrust","type":"tags","url":"/tags/thrust/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518181326,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518181326,"objectID":"","permalink":"https://111qqz.github.io/tags/latent-factor-model/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/latent-factor-model/","section":"tags","summary":"","tags":null,"title":"Latent Factor Model","type":"tags","url":"/tags/latent-factor-model/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1518181326,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518181326,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/","section":"tags","summary":"","tags":null,"title":"推荐系统","type":"tags","url":"/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1518181326,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518181326,"objectID":"6e861e0ebd0f9f0181987253f59b1b91","permalink":"https://111qqz.github.io/2018/02/latent-factor-model-notes/","publishdate":"2018-02-09T13:02:06Z","readingtime":3,"relpermalink":"/2018/02/latent-factor-model-notes/","section":"post","summary":"起因是被assgin了一个新的任务\u0026hellip;..要死. 参考资料: 推荐系统学习笔记之三 LFM (Latent Factor Model) 隐因子模型 + SVD (singular value decomposition) 奇异值分解 基于矩阵分解","tags":["Latent Factor Model","推荐系统"],"title":"推荐系统之 LFM (Latent Factor Model) 隐因子模型  学习笔记","type":"post","url":"/2018/02/Latent-Factor-Model-notes/","weight":0,"wordcount":1355},{"author":null,"categories":["优化"],"content":null,"date":1518159300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518159300,"objectID":"2c57a730b378cc2e18264909aa60e632","permalink":"https://111qqz.github.io/2018/02/cuda-error-checking-notes/","publishdate":"2018-02-09T06:55:00Z","readingtime":1,"relpermalink":"/2018/02/cuda-error-checking-notes/","section":"post","summary":"由于发现cuda c++ 的 debug方式和c++ 差别很大,因此打算再开一篇,专门记录一些和error checking 以及debug有关的内容. Error checks in CUDA code can help catch CUDA","tags":["cuda"],"title":"cuda error checking 学习笔记","type":"post","url":"/2018/02/cuda-error-checking-notes/","weight":0,"wordcount":267},{"author":null,"categories":null,"content":null,"date":1518148389,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1518148389,"objectID":"","permalink":"https://111qqz.github.io/tags/mean-average-precision/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mean-average-precision/","section":"tags","summary":"","tags":null,"title":"mean average precision","type":"tags","url":"/tags/mean-average-precision/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1518148389,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1518148389,"objectID":"2a6692e6e524cb4c9bad1cc69dba1af6","permalink":"https://111qqz.github.io/2018/02/mean-average-precision-for-multi-label-classification-task/","publishdate":"2018-02-09T03:53:09Z","readingtime":4,"relpermalink":"/2018/02/mean-average-precision-for-multi-label-classification-task/","section":"post","summary":"参考资料: 多标签图像分类任务的评价方法-mAP wiki_Sensitivity and specificity False Positives和False Negative等含义 mean average precision（MAP）在","tags":["mean average precision"],"title":"多标签图像分类任务的评价方法-mean average precision(mAP) 以及top x的评价方法","type":"post","url":"/2018/02/mean-average-precision-for-multi-label-classification-task/","weight":0,"wordcount":1862},{"author":null,"categories":null,"content":null,"date":1517797474,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1517797474,"objectID":"","permalink":"https://111qqz.github.io/tags/non-local-neural-networks/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/non-local-neural-networks/","section":"tags","summary":"","tags":null,"title":"Non-local Neural Networks","type":"tags","url":"/tags/non-local-neural-networks/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1517797474,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1517797474,"objectID":"5a83d820378374e4d43d4f86a514bf4a","permalink":"https://111qqz.github.io/2018/02/non-local-neural-networks-notes/","publishdate":"2018-02-05T02:24:34Z","readingtime":1,"relpermalink":"/2018/02/non-local-neural-networks-notes/","section":"post","summary":"先粗略读了2遍orz.可能不够严谨，先写一些high-level的理解。 对于序列或者图片数据，如果想获得一个long-range的依赖，通常","tags":["Non-local Neural Networks"],"title":"Non-local Neural Networks 阅读笔记","type":"post","url":"/2018/02/non-local-neural-networks-notes/","weight":0,"wordcount":493},{"author":null,"categories":["优化"],"content":null,"date":1517469604,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1517469604,"objectID":"6428fe9b653859f8908de88683200910","permalink":"https://111qqz.github.io/2018/02/cuda-notes/","publishdate":"2018-02-01T07:20:04Z","readingtime":6,"relpermalink":"/2018/02/cuda-notes/","section":"post","summary":"uodate:有毒吧。kernel中出问题原来是不会报错的。。。。 请教了组里的hust学长orz..、 学到了cuda-memcheck命令和","tags":["cuda"],"title":"cuda 学习笔记","type":"post","url":"/2018/02/cuda-notes/","weight":0,"wordcount":2657},{"author":null,"categories":null,"content":null,"date":1516848832,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1516848832,"objectID":"","permalink":"https://111qqz.github.io/tags/image-denoising/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/image-denoising/","section":"tags","summary":"","tags":null,"title":"image denoising","type":"tags","url":"/tags/image-denoising/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1516848832,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1516848832,"objectID":"","permalink":"https://111qqz.github.io/tags/non-local-means/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/non-local-means/","section":"tags","summary":"","tags":null,"title":"non-local means","type":"tags","url":"/tags/non-local-means/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1516848832,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1516848832,"objectID":"0a057fd49e62aec206b1c9f8f6ab00a0","permalink":"https://111qqz.github.io/2018/01/non-local-means-algorithm-notes/","publishdate":"2018-01-25T02:53:52Z","readingtime":1,"relpermalink":"/2018/01/non-local-means-algorithm-notes/","section":"post","summary":"终于忙完学校的事情可以干正事了orz 这里会记录一些第一遍看paper的过程中遇到的一些影响理解的概念，不过大多不会深究，只算做粗浅的理解。 1","tags":["image denoising","non-local means"],"title":"non-local means algorithm 学习笔记","type":"post","url":"/2018/01/non-local-means-algorithm-notes/","weight":0,"wordcount":436},{"author":null,"categories":["其他"],"content":null,"date":1513254693,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1513254693,"objectID":"d3d256432087428f466d0eec0b8128d2","permalink":"https://111qqz.github.io/2017/12/20171214/","publishdate":"2017-12-14T12:31:33Z","readingtime":1,"relpermalink":"/2017/12/20171214/","section":"post","summary":"记得之前被人在群里刷“宽神是我们的红太阳”还不理解\u0026hellip; 为什么我这种菜鸡要被如此对待 现在想想，大概是觉得，“111qqz那么菜的人","tags":null,"title":"20171214","type":"post","url":"/2017/12/20171214/","weight":0,"wordcount":480},{"author":null,"categories":null,"content":null,"date":1512441886,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1512441886,"objectID":"","permalink":"https://111qqz.github.io/tags/nlp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nlp/","section":"tags","summary":"","tags":null,"title":"NLP","type":"tags","url":"/tags/nlp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1512441886,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1512441886,"objectID":"","permalink":"https://111qqz.github.io/tags/unicode/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/unicode/","section":"tags","summary":"","tags":null,"title":"unicode","type":"tags","url":"/tags/unicode/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1512441886,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1512441886,"objectID":"209686d17448c0ebbef031fe8542d6ac","permalink":"https://111qqz.github.io/2017/12/unicode-char-not-unique/","publishdate":"2017-12-05T02:44:46Z","readingtime":1,"relpermalink":"/2017/12/unicode-char-not-unique/","section":"post","summary":"update: 遇到的汉字： 丹：63838 李：63969 昨天写的正则发现死活识别不了 \u0026ldquo;年\u0026quot;字\u0026hellip; 放到unicode编码转","tags":["NLP","unicode"],"title":"unicode 汉字表示不唯一的问题 (cjk字符集)","type":"post","url":"/2017/12/unicode-char-not-unique/","weight":0,"wordcount":181},{"author":null,"categories":["其他"],"content":null,"date":1512387246,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1512387246,"objectID":"213ba7d6cdc2503b2e19bec2112ea804","permalink":"https://111qqz.github.io/2017/12/common-regular-expression/","publishdate":"2017-12-04T11:34:06Z","readingtime":3,"relpermalink":"/2017/12/common-regular-expression/","section":"post","summary":"先放一个同事安利给我的网站:regex101 查询匹配的中文字符unicode编码 正则表达式用于字符串处理、表单验证、日志数据分析等场合，实用","tags":["python","正则表达式"],"title":"正则匹配中文及常用正则表达式 (转载)","type":"post","url":"/2017/12/Common-regular-expression/","weight":0,"wordcount":1045},{"author":null,"categories":null,"content":null,"date":1512387246,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1512387246,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"正则表达式","type":"tags","url":"/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1511694350,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1511694350,"objectID":"","permalink":"https://111qqz.github.io/tags/k-means/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/k-means/","section":"tags","summary":"","tags":null,"title":"k-means","type":"tags","url":"/tags/k-means/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1511694350,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1511694350,"objectID":"","permalink":"https://111qqz.github.io/tags/pca/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pca/","section":"tags","summary":"","tags":null,"title":"PCA","type":"tags","url":"/tags/pca/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1511694350,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511694350,"objectID":"e3dbadba661c3f6c078751d87e63a4fe","permalink":"https://111qqz.github.io/2017/11/pca-kmeans/","publishdate":"2017-11-26T11:05:50Z","readingtime":2,"relpermalink":"/2017/11/pca-kmeans/","section":"post","summary":"先记录一下PCA实战需要用到的安装包(arch下,python2环境) python2-scikit-learn python2-numpy python2-pandas python2-matplotlib python2-seaborn pandas.DataFrame pandas 数据结构介绍 几个和科学计算数据分析有关的重要的pytho","tags":["k-means","PCA"],"title":"PCA + kmeans","type":"post","url":"/2017/11/pca-kmeans/","weight":0,"wordcount":551},{"author":null,"categories":null,"content":null,"date":1511493481,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1511493481,"objectID":"","permalink":"https://111qqz.github.io/tags/haskell/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/haskell/","section":"tags","summary":"","tags":null,"title":"Haskell","type":"tags","url":"/tags/haskell/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1511493481,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511493481,"objectID":"23a27faf54b4160f673d18c7b7af12fa","permalink":"https://111qqz.github.io/2017/11/haskell-notes/","publishdate":"2017-11-24T03:18:01Z","readingtime":4,"relpermalink":"/2017/11/haskell-notes/","section":"post","summary":"出于对函数式编程语言这一技能点的缺失\u0026hellip;以及退役之后闲得蛋疼打算浅尝辄止地学一下haskell 这篇笔记不会写成文档那样的详尽..","tags":["Haskell"],"title":"基础 Haskell 学习笔记","type":"post","url":"/2017/11/haskell-notes/","weight":0,"wordcount":1596},{"author":null,"categories":["ACM"],"content":null,"date":1511242078,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1511242078,"objectID":"ab1cad717a409887cdead8bf5ce025a8","permalink":"https://111qqz.github.io/2017/11/2017-acm-icpc-beijing-regional/","publishdate":"2017-11-21T05:27:58Z","readingtime":3,"relpermalink":"/2017/11/2017-acm-icpc-beijing-regional/","section":"post","summary":"emmm 最后一场，果然还是写点什么记录一下吧。 DAY 0 到宾馆已经晚上八点了，惊讶得发现宾馆和15年来参加regional的是同一个，于是戳了下当时和我","tags":null,"title":"2017 ACM-ICPC Beijing Regional 总结","type":"post","url":"/2017/11/2017-acm-icpc-beijing-regional/","weight":0,"wordcount":1364},{"author":null,"categories":["ACM"],"content":null,"date":1510663508,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510663508,"objectID":"8098a8a0a8b724cc3eaefd0401b31169","permalink":"https://111qqz.github.io/2017/11/2014-xian-acm-icpc-regional-contest-problem-g/","publishdate":"2017-11-14T12:45:08Z","readingtime":1,"relpermalink":"/2017/11/2014-xian-acm-icpc-regional-contest-problem-g/","section":"post","summary":"http://codeforces.com/gym/100548 题意： 切换面板：标签 标签 添加新标签 ￼ 回文自动机、 给2个字符串，问2个字符串中，相等并且都是回文串的对数。 思路： 构建2个PAM.然后奇偶起点","tags":["回文自动机"],"title":"2014 Xi'An ACM-ICPC Regional Contest Problem G. The Problem to Slow Down You (回文自动机(模块化写法))","type":"post","url":"/2017/11/2014-xian-acm-icpc-regional-contest-problem-g/","weight":0,"wordcount":388},{"author":null,"categories":null,"content":null,"date":1510663508,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510663508,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/","section":"tags","summary":"","tags":null,"title":"回文自动机","type":"tags","url":"/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510660239,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510660239,"objectID":"1e9cd56ea19f6a9b39e9a3b3cf78b151","permalink":"https://111qqz.github.io/2017/11/bzoj-2160/","publishdate":"2017-11-14T11:50:39Z","readingtime":3,"relpermalink":"/2017/11/bzoj-2160/","section":"post","summary":"2160: 拉拉队排练 Time Limit: 10 Sec Memory Limit: 259 MB Submit: 1938 Solved: 743 [Submit][Status][Discuss] Description 艾利斯顿商学院篮球队要参加一年一度的市篮球比赛了。拉拉队是篮球比赛的一个看点，好的拉拉队往往能帮助球","tags":["回文自动机","快速幂"],"title":"bzoj 2160: 拉拉队排练 (回文自动机+快速幂)","type":"post","url":"/2017/11/bzoj-2160/","weight":0,"wordcount":1252},{"author":null,"categories":null,"content":null,"date":1510660239,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510660239,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/","section":"tags","summary":"","tags":null,"title":"快速幂","type":"tags","url":"/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510596863,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510596863,"objectID":"15859335cbc352fc770f36a9a66cd80a","permalink":"https://111qqz.github.io/2017/11/ural-1960/","publishdate":"2017-11-13T18:14:23Z","readingtime":1,"relpermalink":"/2017/11/ural-1960/","section":"post","summary":"http://acm.timus.ru/problem.aspx?space=1\u0026amp;num=1960 题意： 给一个字符串S,依次输出字符串S的所有前缀中，本质不同的回文串个数。 思路： 考虑构建PAM是一个增量算法\u0026hellip;所以一边构建一","tags":["回文自动机"],"title":"ural 1960. Palindromes and Super Abilities (回文自动机，统计本质不同的回文串个数)","type":"post","url":"/2017/11/ural-1960/","weight":0,"wordcount":335},{"author":null,"categories":["ACM"],"content":null,"date":1510596169,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510596169,"objectID":"b190bf2c2901ee69884d1d794d05577d","permalink":"https://111qqz.github.io/2017/11/bzoj-2565/","publishdate":"2017-11-13T18:02:49Z","readingtime":2,"relpermalink":"/2017/11/bzoj-2565/","section":"post","summary":"Description 顺序和逆序读起来完全一样的串叫做回文串。比如acbca是回文串，而abc不是（abc的顺序为“abc”，逆序为“cba”，不相同）。 输入长","tags":["回文自动机"],"title":"BZOJ 2565: 最长双回文串 (回文自动机)","type":"post","url":"/2017/11/bzoj-2565/","weight":0,"wordcount":709},{"author":null,"categories":["ACM"],"content":null,"date":1510588590,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510588590,"objectID":"44df7b1127caf389057c68e87a44dff1","permalink":"https://111qqz.github.io/2017/11/hdu-3948/","publishdate":"2017-11-13T15:56:30Z","readingtime":1,"relpermalink":"/2017/11/hdu-3948/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=3948 题意： 给一个字符串，问本质不同的回文子串的个数。 思路： 考虑回文自动机。 我们知道，对于PAM上的一个节点，表示的就是一个本质不同的回文串。 UPDATE:","tags":["回文自动机"],"title":"hdu 3948  |   2011 Multi-University Training Contest 11  The Number of Palindromes (回文自动机模板题)","type":"post","url":"/2017/11/hdu-3948/","weight":0,"wordcount":494},{"author":null,"categories":["ACM"],"content":null,"date":1510586757,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510586757,"objectID":"8f9d35bb4df79030f7094bfe65e83804","permalink":"https://111qqz.github.io/2017/11/uoj-103/","publishdate":"2017-11-13T15:25:57Z","readingtime":2,"relpermalink":"/2017/11/uoj-103/","section":"post","summary":"http://uoj.ac/problem/103 题意： 给你一个由小写拉丁字母组成的字符串 s。我们定义 s 的一个子串的存在值为这个子串在 s 中出现的次数乘以这个子串的长度。 对于给你的这个字符串","tags":["回文自动机"],"title":"UOJ #103. 【APIO2014】Palindromes (回文自动机模板题)","type":"post","url":"/2017/11/uoj-103/","weight":0,"wordcount":557},{"author":null,"categories":["ACM"],"content":null,"date":1510571004,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510571004,"objectID":"c7fcf6919fe219b8b3c8184e293f6ca9","permalink":"https://111qqz.github.io/2017/11/codeforces-123d/","publishdate":"2017-11-13T11:03:24Z","readingtime":3,"relpermalink":"/2017/11/codeforces-123d/","section":"post","summary":"题目链接：http://codeforces.com/problemset/problem/123/D 题意： 如果字符串y在字符串x中出现n次","tags":["后缀自动机"],"title":"codeforces 123D. String(后缀自动机)","type":"post","url":"/2017/11/codeforces-123d/","weight":0,"wordcount":1300},{"author":null,"categories":null,"content":null,"date":1510571004,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510571004,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA/","section":"tags","summary":"","tags":null,"title":"后缀自动机","type":"tags","url":"/tags/%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1510490424,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510490424,"objectID":"","permalink":"https://111qqz.github.io/tags/lazy%E6%A0%87%E8%AE%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lazy%E6%A0%87%E8%AE%B0/","section":"tags","summary":"","tags":null,"title":"lazy标记","type":"tags","url":"/tags/lazy%E6%A0%87%E8%AE%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510490424,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510490424,"objectID":"236ec783f2839642cdaa5b9139972623","permalink":"https://111qqz.github.io/2017/11/poj-3415/","publishdate":"2017-11-12T12:40:24Z","readingtime":3,"relpermalink":"/2017/11/poj-3415/","section":"post","summary":"http://poj.org/problem?id=3415 题意： 给出两个字符串，问公共长度大于等于k的子串个数（只要两个串的位置不同就认为是不同） 思路： 考虑SAM的性质。 SAM上的一个节点所能接受","tags":["lazy标记","后缀自动机"],"title":"poj 3415  Common Substrings  (后缀自动机+parent树上的lazy标记)","type":"post","url":"/2017/11/poj-3415/","weight":0,"wordcount":1195},{"author":null,"categories":["ACM"],"content":null,"date":1510440243,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510440243,"objectID":"bbb8db8696c78843d85e18a3404f0452","permalink":"https://111qqz.github.io/2017/11/hdu-4416/","publishdate":"2017-11-11T22:44:03Z","readingtime":2,"relpermalink":"/2017/11/hdu-4416/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4416 题意： 给出一个字符串A和n个字符串B,问A的子串中，不在任何一个B中出现的本质不同的子串有多少。 思路： 还是根据len搞事情 我们知道，如果不","tags":["后缀自动机"],"title":"hdu 4416 Good Article Good sentence (后缀自动机)","type":"post","url":"/2017/11/hdu-4416/","weight":0,"wordcount":823},{"author":null,"categories":["ACM"],"content":null,"date":1510434840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510434840,"objectID":"da2c7a855f24a8fba8931223239d4c0b","permalink":"https://111qqz.github.io/2017/11/hdu-3518/","publishdate":"2017-11-11T21:14:00Z","readingtime":4,"relpermalink":"/2017/11/hdu-3518/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=3518 题意： 给一个字符串，问字符串中，至少出现2次且不相交的本质不同的子串有多少个。本质不同给的子串是说存在至少一位的字母不同。 思路： 考虑SAM","tags":["后缀自动机"],"title":"hdu 3518 Boring counting (后缀自动机)","type":"post","url":"/2017/11/hdu-3518/","weight":0,"wordcount":1605},{"author":null,"categories":["ACM"],"content":null,"date":1510423474,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510423474,"objectID":"09646107f2a5ac0affb3d3421db117ed","permalink":"https://111qqz.github.io/2017/11/hdu-6059/","publishdate":"2017-11-11T18:04:34Z","readingtime":2,"relpermalink":"/2017/11/hdu-6059/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6059 题意： 含 N 个数字的 A 数组，求有多少个三元组 (i,j,k) 满足 i\u0026lt;j\u0026lt;k 且a[i]^a[j] \u0026lt; a[j]^a[k] 思路: 考虑a[i]和a[k]二进制不同位中的最高位，此时满足题意","tags":["trie"],"title":"hdu 6059   | 2017 Multi-University Training Contest - Team 3 Kanade's trio (trie)","type":"post","url":"/2017/11/hdu-6059/","weight":0,"wordcount":945},{"author":null,"categories":null,"content":null,"date":1510423474,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510423474,"objectID":"","permalink":"https://111qqz.github.io/tags/trie/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/trie/","section":"tags","summary":"","tags":null,"title":"trie","type":"tags","url":"/tags/trie/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510410846,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510410846,"objectID":"396ce40d400d86ce91874df55109f197","permalink":"https://111qqz.github.io/2017/11/hdu-5558/","publishdate":"2017-11-11T14:34:06Z","readingtime":2,"relpermalink":"/2017/11/hdu-5558/","section":"post","summary":"题目链接： http://acm.hdu.edu.cn/showproblem.php?pid=5558 题意： 说了一大堆。。其实就是询问位置i开始的后缀和以位置[0\u0026hellip;i - 1]开始的所有后缀中最大匹配的公共前缀长度 思路：","tags":["后缀自动机"],"title":"hdu 5558 |  2015ACM/ICPC亚洲区合肥站 G Alice's Classified Message (后缀自动机)","type":"post","url":"/2017/11/hdu-5558/","weight":0,"wordcount":577},{"author":null,"categories":null,"content":null,"date":1510384285,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510384285,"objectID":"","permalink":"https://111qqz.github.io/tags/dp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dp/","section":"tags","summary":"","tags":null,"title":"dp","type":"tags","url":"/tags/dp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510384285,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510384285,"objectID":"5977ed825b0d4c1bfd072bdb8dfff718","permalink":"https://111qqz.github.io/2017/11/spoj-lcs2/","publishdate":"2017-11-11T07:11:25Z","readingtime":2,"relpermalink":"/2017/11/spoj-lcs2/","section":"post","summary":"题意： 求n个串的最长公共子串，n\u0026lt;=10 思路： 不会啊orz 先放一波参考资料\u0026amp;题解好了。 codeforces_Understanding Suffix Automaton in depth code风景区_spoj_lc","tags":["dp","后缀自动机"],"title":"SPOJ  LCS2 Longest Common Substring 2[后缀自动机+dp]","type":"post","url":"/2017/11/spoj-lcs2/","weight":0,"wordcount":820},{"author":null,"categories":["ACM"],"content":null,"date":1510232376,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510232376,"objectID":"e503aebe22317ce42f38dee8192b0b2d","permalink":"https://111qqz.github.io/2017/11/hdu-4819/","publishdate":"2017-11-09T12:59:36Z","readingtime":3,"relpermalink":"/2017/11/hdu-4819/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4819 题意： 给你一个n*n的矩阵， 每个点是一个数字， Q个操作，每次选择一个子矩阵， 把中心元素替换成子矩阵中最大值和最小值之和的二分之一。 思路: 显","tags":["二维线段树","四叉树"],"title":"hdu 4819  2013 Asia Regional Changchun  G  (四叉树|| 二维线段树单点更新 模板题)","type":"post","url":"/2017/11/hdu-4819/","weight":0,"wordcount":1338},{"author":null,"categories":null,"content":null,"date":1510232376,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510232376,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"二维线段树","type":"tags","url":"/tags/%E4%BA%8C%E7%BB%B4%E7%BA%BF%E6%AE%B5%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1510232376,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510232376,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9B%9B%E5%8F%89%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%9B%E5%8F%89%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"四叉树","type":"tags","url":"/tags/%E5%9B%9B%E5%8F%89%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510206924,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510206924,"objectID":"19968cb3a3356a1a925ee5d971bfbcac","permalink":"https://111qqz.github.io/2017/11/hdu-4436/","publishdate":"2017-11-09T05:55:24Z","readingtime":2,"relpermalink":"/2017/11/hdu-4436/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4436 题意： 给出n个仅由数字组成的字符串，问n个字符串的所有不同子串的和。 思路： SAM水题 从初始状态开始，走过所有路径，就是该SAM表示的所有的","tags":["后缀自动机"],"title":"hdu 4436 | 2012 Asia Tianjin Regional Contest  str2int  (dp+后缀自动机，多串建立)","type":"post","url":"/2017/11/hdu-4436/","weight":0,"wordcount":931},{"author":null,"categories":["ACM"],"content":null,"date":1510146920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510146920,"objectID":"340966cb64a96291c7482bb6b2ccbe1a","permalink":"https://111qqz.github.io/2017/11/spoj-sublex/","publishdate":"2017-11-08T13:15:20Z","readingtime":2,"relpermalink":"/2017/11/spoj-sublex/","section":"post","summary":"http://www.spoj.com/problems/SUBLEX/en/ 题意： 给一个字符串，每次询问字典序第k大的不重复子串。 思路： 先做个拓扑dp，求出SAM上，一个状态到种态的路径数。 拓扑dp其实就是按照拓扑","tags":["后缀自动机"],"title":"SPOJ  SUBLEX   Lexicographical Substring Search （ 后缀自动机）","type":"post","url":"/2017/11/spoj-sublex/","weight":0,"wordcount":840},{"author":null,"categories":["ACM"],"content":null,"date":1510143365,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510143365,"objectID":"c29e5bee3a0f34d462e7ed01e9d396ef","permalink":"https://111qqz.github.io/2017/11/spoj-nsubstr/","publishdate":"2017-11-08T12:16:05Z","readingtime":4,"relpermalink":"/2017/11/spoj-nsubstr/","section":"post","summary":"http://www.spoj.com/problems/NSUBSTR/en/ 题意： f[i]指长度为i的串出现次数的最大值。这里的不同出现指，可以有重复串，只要起始位置不同就视为不同的出现。 求f[1]..f[lent","tags":["后缀自动机"],"title":"spoj nsubstr Substrings (后缀自动机 模板题)","type":"post","url":"/2017/11/spoj-nsubstr/","weight":0,"wordcount":1676},{"author":null,"categories":["ACM"],"content":null,"date":1510128151,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510128151,"objectID":"18bddd54477b346d0c4908061c41edae","permalink":"https://111qqz.github.io/2017/11/poj-1949/","publishdate":"2017-11-08T08:02:31Z","readingtime":1,"relpermalink":"/2017/11/poj-1949/","section":"post","summary":"http://poj.org/problem?id=1949 题意： 有n个任务，第i个任务需要时间xi来完成，并且第i个任务必须在它 “前面的” 某些任务完成之后才能开始。 给你任务信息，问你最短需要多少时","tags":null,"title":"poj 1949 Chores (拓扑排序+dp)","type":"post","url":"/2017/11/poj-1949/","weight":0,"wordcount":438},{"author":null,"categories":["ACM"],"content":null,"date":1510124729,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510124729,"objectID":"b5e82bf5af3abb1005a9c9c348be6046","permalink":"https://111qqz.github.io/2017/11/hdu-4777/","publishdate":"2017-11-08T07:05:29Z","readingtime":2,"relpermalink":"/2017/11/hdu-4777/","section":"post","summary":"https://vjudge.net/problem/47450/origin 题意： 有一个含有n个数的序列，m个询问。问 [l, r] 区间内与所有数都互质的数有几个？ 思路： 想到了预处理每个数最左最右的，最远的互质的数的范围。。","tags":["树状数组"],"title":"hdu 4777  Rabbit Kingdom (树状数组+预处理)","type":"post","url":"/2017/11/hdu-4777/","weight":0,"wordcount":565},{"author":null,"categories":null,"content":null,"date":1510124729,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510124729,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","section":"tags","summary":"","tags":null,"title":"树状数组","type":"tags","url":"/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1510035202,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1510035202,"objectID":"213f37df95fdecd5a5c34ebc596e8e61","permalink":"https://111qqz.github.io/2017/11/poj-3249/","publishdate":"2017-11-07T06:13:22Z","readingtime":1,"relpermalink":"/2017/11/poj-3249/","section":"post","summary":"http://poj.org/problem?id=3249 题意： 给一个DAG,现要从一条入度为0的点到一个出度为0的点，问最大点权和。 思路： 其实比较容易想到搜\u0026hellip;不过复杂度会炸？ 由于到","tags":["dp","拓扑排序"],"title":"poj 3249 Test for Job (拓扑排序+dp)","type":"post","url":"/2017/11/poj-3249/","weight":0,"wordcount":469},{"author":null,"categories":null,"content":null,"date":1510035202,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1510035202,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","section":"tags","summary":"","tags":null,"title":"拓扑排序","type":"tags","url":"/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509966550,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509966550,"objectID":"56020196a62be93d5aa8c516e533b306","permalink":"https://111qqz.github.io/2017/11/hdu-6048/","publishdate":"2017-11-06T11:09:10Z","readingtime":2,"relpermalink":"/2017/11/hdu-6048/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6048 题意： 有 n * m - 1 个数，每次选择第 1,p + 1,p * 2 + 1….. 的顺序选择数，先按左到右，再按从上到下的顺序填入n * m 的格子，空格子可以和相邻的数字","tags":["结论题"],"title":"hdu 6048  | 2017 Multi-University Training Contest - Team 2  D Puzzle (结论题)","type":"post","url":"/2017/11/hdu-6048/","weight":0,"wordcount":568},{"author":null,"categories":null,"content":null,"date":1509966550,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509966550,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BB%93%E8%AE%BA%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BB%93%E8%AE%BA%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"结论题","type":"tags","url":"/tags/%E7%BB%93%E8%AE%BA%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509961358,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509961358,"objectID":"c88b676ab7e8982c44246cc6cc826aa8","permalink":"https://111qqz.github.io/2017/11/hdu-4782/","publishdate":"2017-11-06T09:42:38Z","readingtime":2,"relpermalink":"/2017/11/hdu-4782/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4782 题意： 将格式混乱的html代码输出成标准格式。 思路： 模拟。 说下细节： * 遇到open tag,先打印，后dep++ * 遇到close tag,先d","tags":["模拟"],"title":"hdu 4782 | 2013 Asia Chengdu Regional Contest  B (模拟)","type":"post","url":"/2017/11/hdu-4782/","weight":0,"wordcount":534},{"author":null,"categories":null,"content":null,"date":1509961358,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509961358,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A8%A1%E6%8B%9F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A8%A1%E6%8B%9F/","section":"tags","summary":"","tags":null,"title":"模拟","type":"tags","url":"/tags/%E6%A8%A1%E6%8B%9F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509779246,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509779246,"objectID":"c4ebcb21db6d86d7c3ca1578c42392c2","permalink":"https://111qqz.github.io/2017/11/suffix-automaton-notes/","publishdate":"2017-11-04T07:07:26Z","readingtime":6,"relpermalink":"/2017/11/suffix-automaton-notes/","section":"post","summary":"怕是老年人的最后一篇算法学习笔记了心情不好，此文无限期tj概述 主要讲解在我学习的过程中比较难理解的地方..并不保证全面 首先，后缀自动机是一个","tags":["后缀自动机"],"title":"【施工中】SAM学习笔记","type":"post","url":"/2017/11/suffix-automaton-notes/","weight":0,"wordcount":2909},{"author":null,"categories":["ACM"],"content":null,"date":1509778729,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509778729,"objectID":"42ee6c7dc5c8205e1e5919c8a10d887b","permalink":"https://111qqz.github.io/2017/11/poj-1509/","publishdate":"2017-11-04T06:58:49Z","readingtime":2,"relpermalink":"/2017/11/poj-1509/","section":"post","summary":"题意： 给定一个循环字符串，问字典序最小的串的开始位置。 思路： 之前用poj 1509 解题报告-字符串的最小表示法 A过 字符串的最小表示法的复杂度是O(n","tags":["后缀自动机","最小表示法"],"title":"poj 1509 Glass Beads  (后缀自动机求最小循环表示)","type":"post","url":"/2017/11/poj-1509/","weight":0,"wordcount":539},{"author":null,"categories":null,"content":null,"date":1509778729,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509778729,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"最小表示法","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509769898,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509769898,"objectID":"b537d2ffbf98948d9fd4ed0858ab7ce0","permalink":"https://111qqz.github.io/2017/11/hdu-4622/","publishdate":"2017-11-04T04:31:38Z","readingtime":2,"relpermalink":"/2017/11/hdu-4622/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4622 题意： 给一个字符串，给出若干询问，每组询问给一个区间[l,r]，问区间中本质不同的字符串的个数。 思路： 观察发现，有10000组查询，字符串","tags":["后缀自动机"],"title":"hdu 4622 | 2013 Multi-University Training Contest 3 Reincarnation (后缀自动机)","type":"post","url":"/2017/11/hdu-4622/","weight":0,"wordcount":790},{"author":null,"categories":["ACM"],"content":null,"date":1509709475,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509709475,"objectID":"1f5fe55b29969a43fd9d9a0554390fd8","permalink":"https://111qqz.github.io/2017/11/spoj-lcs/","publishdate":"2017-11-03T11:44:35Z","readingtime":5,"relpermalink":"/2017/11/spoj-lcs/","section":"post","summary":"题意： 给出2个字符串(2.5E5)，问最长公共子串的长度。 思路： 拿一个串建SAM 由于SAM上的任何一个状态，都对应一个或者若干个子串，然后拿","tags":["后缀自动机"],"title":"SPOJ LCS Longest Common Substring  （后缀自动机模板题）","type":"post","url":"/2017/11/spoj-lcs/","weight":0,"wordcount":2191},{"author":null,"categories":["ACM"],"content":null,"date":1509590034,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509590034,"objectID":"e41606b1c24c1accfdf75cce09691ce1","permalink":"https://111qqz.github.io/2017/11/hdu5970/","publishdate":"2017-11-02T02:33:54Z","readingtime":2,"relpermalink":"/2017/11/hdu5970/","section":"post","summary":"题意： 有这样一个有关最大公约数的函数: 函数 f(x, y): { c=0 当 y\u0026gt;0: { c +=1 t = x % y x = y y = t } 返回 c * x * x } 给出三个正整数n,m,p，你需要计算: $$","tags":["打表"],"title":"HDU 5970 | 2016 CCPC HeFei onsite  J   最大公约数  (打表找规律)","type":"post","url":"/2017/11/hdu5970/","weight":0,"wordcount":835},{"author":null,"categories":null,"content":null,"date":1509590034,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509590034,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%89%93%E8%A1%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%89%93%E8%A1%A8/","section":"tags","summary":"","tags":null,"title":"打表","type":"tags","url":"/tags/%E6%89%93%E8%A1%A8/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509518831,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509518831,"objectID":"133cc9ec9696ba2f0859c83648a53d64","permalink":"https://111qqz.github.io/2017/11/hdu-6038/","publishdate":"2017-11-01T06:47:11Z","readingtime":2,"relpermalink":"/2017/11/hdu-6038/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6038 题意： 给出两个序列 a 和 b ，求满足 f[i]= b_{f[a[i]]} 的函数个数。 思路： 分别找两个序列的循环节，这一点是比较容易想到的。 由于点都在0..n-1 或者0..m-","tags":["循环节","置换群"],"title":"hdu 6038 | 2017 Multi-University Training Contest - Team 1 E Function  (置换群找循环节)","type":"post","url":"/2017/11/hdu-6038/","weight":0,"wordcount":750},{"author":null,"categories":null,"content":null,"date":1509518831,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509518831,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/","section":"tags","summary":"","tags":null,"title":"循环节","type":"tags","url":"/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1509518831,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509518831,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BD%AE%E6%8D%A2%E7%BE%A4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BD%AE%E6%8D%A2%E7%BE%A4/","section":"tags","summary":"","tags":null,"title":"置换群","type":"tags","url":"/tags/%E7%BD%AE%E6%8D%A2%E7%BE%A4/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509508801,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509508801,"objectID":"5987eca760562081a48a9d341b5e63d3","permalink":"https://111qqz.github.io/2017/11/hdu-6034/","publishdate":"2017-11-01T04:00:01Z","readingtime":2,"relpermalink":"/2017/11/hdu-6034/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6034 题意： 有一个仅由小写字母组成的字符串，要求将a..z的字母，对应到0..25，每个数字只能被一个字母对应，得到一个26进制的数，现在问这个","tags":["贪心"],"title":"hdu 6034 2017 Multi-University Training Contest - Team 1 B Balala Power! (贪心)","type":"post","url":"/2017/11/hdu-6034/","weight":0,"wordcount":916},{"author":null,"categories":null,"content":null,"date":1509508801,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509508801,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B4%AA%E5%BF%83/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B4%AA%E5%BF%83/","section":"tags","summary":"","tags":null,"title":"贪心","type":"tags","url":"/tags/%E8%B4%AA%E5%BF%83/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509502740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509502740,"objectID":"e6a7f445276dd11aac52674610dfe2ce","permalink":"https://111qqz.github.io/2017/11/bzoj-1230/","publishdate":"2017-11-01T02:19:00Z","readingtime":2,"relpermalink":"/2017/11/bzoj-1230/","section":"post","summary":"1230: [Usaco2008 Nov]lites 开关灯 Time Limit: 10 Sec Memory Limit: 162 MB Submit: 1676 Solved: 874 [Submit][Status][Discuss] Description Farmer John尝试通过和奶牛们玩益智玩具来保持他的奶牛们思维敏捷. 其中一个大型玩具是牛栏中的灯. N (2 \u0026lt;= N","tags":["lazy标记","线段树"],"title":"BZOJ 1230: [Usaco2008 Nov]lites 开关灯 (线段树区间修改，区间查询)","type":"post","url":"/2017/11/bzoj-1230/","weight":0,"wordcount":949},{"author":null,"categories":null,"content":null,"date":1509502740,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509502740,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"线段树","type":"tags","url":"/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509467470,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509467470,"objectID":"1089fd21562d3779252246b466c1363d","permalink":"https://111qqz.github.io/2017/11/hdu-6043/","publishdate":"2017-10-31T16:31:10Z","readingtime":1,"relpermalink":"/2017/11/hdu-6043/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6043 题意： n双袜子标号1到n，初始在抽屉里，每天早晨穿一双标号最小的袜子，晚上把脏袜子放到盆里，如果放完之后喷子里已经有了n-1双脏袜子，那么","tags":["循环节"],"title":"hdu 6043 | 2017 Multi-University Training Contest - Team 1 K KazaQ's Socks  （循环节）","type":"post","url":"/2017/11/hdu-6043/","weight":0,"wordcount":303},{"author":null,"categories":["ACM"],"content":null,"date":1509465103,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509465103,"objectID":"10dc4826a284c7c9eaf43310e5b7d620","permalink":"https://111qqz.github.io/2017/10/hdu6033/","publishdate":"2017-10-31T15:51:43Z","readingtime":1,"relpermalink":"/2017/10/hdu6033/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=6033 题意： 问最大的x,满足 $$ 10^{x} \\geq 2^{m}-1 $$ 思路： 看到指数的比较大小，直觉就是取下对数啦 其实直接可以把1忽略，因为2的幂次显然不会出现末尾是0，所以不","tags":null,"title":"hdu 6033 | 2017 Multi-University Training Contest - Team 1 A   Add More Zero","type":"post","url":"/2017/10/hdu6033/","weight":0,"wordcount":230},{"author":null,"categories":null,"content":null,"date":1509463585,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509463585,"objectID":"","permalink":"https://111qqz.github.io/tags/latex/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/latex/","section":"tags","summary":"","tags":null,"title":"latex","type":"tags","url":"/tags/latex/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1509463585,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509463585,"objectID":"c972ffa3de2b310f00cede58b1e978d7","permalink":"https://111qqz.github.io/2017/10/input-formula-on-wordpress/","publishdate":"2017-10-31T15:26:25Z","readingtime":1,"relpermalink":"/2017/10/input-formula-on-wordpress/","section":"post","summary":"查了一些资料。。发现不是要装各种插件（还不一定能用，比如和crayon冲突。。就是讲得很不清楚orz。。 又下一个win下的公式编辑器之类的软","tags":["latex"],"title":"在wordpress 中输入数学公式","type":"post","url":"/2017/10/input-formula-on-wordpress/","weight":0,"wordcount":290},{"author":null,"categories":["ACM"],"content":null,"date":1509461352,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509461352,"objectID":"bb018d05b41607246818f9ebe783e0a2","permalink":"https://111qqz.github.io/2017/10/bzoj-1059/","publishdate":"2017-10-31T14:49:12Z","readingtime":3,"relpermalink":"/2017/10/bzoj-1059/","section":"post","summary":"1059: [ZJOI2007]矩阵游戏 Time Limit: 10 Sec Memory Limit: 162 MB Submit: 5251 Solved: 2512 [Submit][Status][Discuss] Description 小Q是一个非常聪明的孩子，除了国际象棋，他还很喜欢玩一个电脑益智游戏——矩阵游戏。","tags":["匈牙利算法"],"title":"bzoj 1059: [ZJOI2007]矩阵游戏 (匈牙利算法)","type":"post","url":"/2017/10/bzoj-1059/","weight":0,"wordcount":1100},{"author":null,"categories":null,"content":null,"date":1509461352,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509461352,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"匈牙利算法","type":"tags","url":"/tags/%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509457203,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509457203,"objectID":"5d486f3ba2c4910a0fa7842912a0486b","permalink":"https://111qqz.github.io/2017/10/bzoj-1191/","publishdate":"2017-10-31T13:40:03Z","readingtime":2,"relpermalink":"/2017/10/bzoj-1191/","section":"post","summary":"1191: [HNOI2006]超级英雄Hero Time Limit: 10 Sec Memory Limit: 162 MB Submit: 5221 Solved: 2356 [Submit][Status][Discuss] Description 现在电视台有一种节目叫做超级英雄,大概的流程就是每位选手到台上回答主持人的","tags":["匈牙利算法"],"title":"BZOJ 1191: [HNOI2006]超级英雄Hero (匈牙利)","type":"post","url":"/2017/10/bzoj-1191/","weight":0,"wordcount":661},{"author":null,"categories":["ACM"],"content":null,"date":1509276282,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509276282,"objectID":"1cd1a1e136e6f98cb825501f73739298","permalink":"https://111qqz.github.io/2017/10/codeforces-div1-443a/","publishdate":"2017-10-29T11:24:42Z","readingtime":1,"relpermalink":"/2017/10/codeforces-div1-443a/","section":"post","summary":"题目链接： 题目链接 题意： 一段程序，最多5E5个操作，每个操作的格式为 \u0026lt;opt,x\u0026gt; ，opt表示位或，位异或，位与 三种位运算的一种，x表示范围0..102","tags":["位运算","思维题"],"title":"codeforces div 1 443  A. Short Program （位运算的理解）","type":"post","url":"/2017/10/codeforces-div1-443a/","weight":0,"wordcount":495},{"author":null,"categories":null,"content":null,"date":1509276282,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509276282,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/","section":"tags","summary":"","tags":null,"title":"位运算","type":"tags","url":"/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1509009375,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1509009375,"objectID":"ec1aef8277876f37e8185ef0ba52bf50","permalink":"https://111qqz.github.io/2017/10/2016-icpc-dalian-regional-a/","publishdate":"2017-10-26T09:16:15Z","readingtime":2,"relpermalink":"/2017/10/2016-icpc-dalian-regional-a/","section":"post","summary":"题意： 给出n个点m条边，以及已知的好点和坏点。一个边连接的2个点一定是一好一坏，问是否有合法方案，使得每个点被确定好坏。 思路： 判断二分图。 先","tags":["二分图","交叉染色法"],"title":"2016 ICPC 大连 区域赛  A Wrestling Match  （交叉染色法判断二分图）","type":"post","url":"/2017/10/2016-icpc-dalian-regional-A/","weight":0,"wordcount":530},{"author":null,"categories":null,"content":null,"date":1509009375,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509009375,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/","section":"tags","summary":"","tags":null,"title":"二分图","type":"tags","url":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1509009375,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1509009375,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%A4%E5%8F%89%E6%9F%93%E8%89%B2%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%A4%E5%8F%89%E6%9F%93%E8%89%B2%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"交叉染色法","type":"tags","url":"/tags/%E4%BA%A4%E5%8F%89%E6%9F%93%E8%89%B2%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508936971,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508936971,"objectID":"44ebd2cb18355eade9518a80ede234fb","permalink":"https://111qqz.github.io/2017/10/codeforces-346-div2-e/","publishdate":"2017-10-25T13:09:31Z","readingtime":1,"relpermalink":"/2017/10/codeforces-346-div2-e/","section":"post","summary":"题意： 给出n个点，条边的无向图，无重边，无自环。现在要求把所有的无向边换成有向边，使得入度为0的点最少。问最少的入度为0的点是多少。 思路： 对","tags":["计数问题"],"title":"codeforces #346 div 2 E. New Reform (和图有关的的计数)","type":"post","url":"/2017/10/codeforces-346-div2-e/","weight":0,"wordcount":375},{"author":null,"categories":null,"content":null,"date":1508936971,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508936971,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%A1%E6%95%B0%E9%97%AE%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E6%95%B0%E9%97%AE%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"计数问题","type":"tags","url":"/tags/%E8%AE%A1%E6%95%B0%E9%97%AE%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508928564,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508928564,"objectID":"f3b9ee74522c8492ada8ed85377b1fec","permalink":"https://111qqz.github.io/2017/10/bzoj-1854/","publishdate":"2017-10-25T10:49:24Z","readingtime":2,"relpermalink":"/2017/10/bzoj-1854/","section":"post","summary":"Description lxhgww最近迷上了一款游戏，在游戏里，他拥有很多的装备，每种装备都有2个属性，这些属性的值用[1,10000]之间的数表示。当他使用某","tags":["并查集"],"title":"BZOJ 1854: [Scoi2010]游戏  (并查集)","type":"post","url":"/2017/10/bzoj-1854/","weight":0,"wordcount":864},{"author":null,"categories":null,"content":null,"date":1508928564,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508928564,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/","section":"tags","summary":"","tags":null,"title":"并查集","type":"tags","url":"/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508913062,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508913062,"objectID":"09dcc94a9c15f8ffecff3fd20dfc8b62","permalink":"https://111qqz.github.io/2017/10/codeforces-439-c/","publishdate":"2017-10-25T06:31:02Z","readingtime":2,"relpermalink":"/2017/10/codeforces-439-c/","section":"post","summary":"题意： 3个岛屿群，每个岛屿群有若干岛屿。现在要在岛屿之间连桥，桥的长度是1，规定2个属于相同岛屿群的岛屿的距离要大于等于3. 思路： 一直在纠结","tags":["组合数学","计数问题"],"title":"codeforces 439 C - The Intriguing Obsession  (和图有关的计数，组合数学)","type":"post","url":"/2017/10/codeforces-439-c/","weight":0,"wordcount":607},{"author":null,"categories":null,"content":null,"date":1508913062,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508913062,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/","section":"tags","summary":"","tags":null,"title":"组合数学","type":"tags","url":"/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508827167,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508827167,"objectID":"ca8239747bae864da9cc213785e4be7a","permalink":"https://111qqz.github.io/2017/10/codeforces-440-div2-e/","publishdate":"2017-10-24T06:39:27Z","readingtime":2,"relpermalink":"/2017/10/codeforces-440-div2-e/","section":"post","summary":"题目链接 题意：有n个整点，每个点处可以什么都不画，或者画一条垂直方向的直线，或者画一条水平方向的直线。 现在给出n个点的坐标，问最多右多少种不","tags":["思维题","计数问题"],"title":"codeforces # 440 div2  E. Points, Lines and Ready-made Titles (和图有关的计数，思维题)","type":"post","url":"/2017/10/codeforces-440-div2-e/","weight":0,"wordcount":836},{"author":null,"categories":["ACM"],"content":null,"date":1508590480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508590480,"objectID":"9d0ce0fd9f06072f1822373c75ea001b","permalink":"https://111qqz.github.io/2017/10/vimrc-for-acm-icpc/","publishdate":"2017-10-21T12:54:40Z","readingtime":1,"relpermalink":"/2017/10/vimrc-for-acm-icpc/","section":"post","summary":"弄了点比较短的，赛场上用的配置文件orz map \u0026lt;F5\u0026gt; :call Co()\u0026lt;CR\u0026gt; func! Co() exec \u0026quot;w\u0026quot; exec \u0026quot;!g++ % -std=gnu++11 -Wall -o %\u0026lt;\u0026quot; exec \u0026quot;! ./%\u0026lt;\u0026quot; endfunc syntax on set nu autocmd BufNewFile *.cpp exec \u0026quot;:call SetTitle()\u0026quot; func SetTitle() let l = 0 let l = l + 1 | call setline(l,'#include \u0026lt;bits/stdc++.h\u0026gt;') let l = l +","tags":null,"title":"vimrc for ACM-ICPC (赛场用)","type":"post","url":"/2017/10/vimrc-for-acm-icpc/","weight":0,"wordcount":161},{"author":null,"categories":null,"content":null,"date":1508305123,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508305123,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/","section":"tags","summary":"","tags":null,"title":"二次剩余","type":"tags","url":"/tags/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508305123,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508305123,"objectID":"e364f6c2d1d64f7c4456ca7bbc39753d","permalink":"https://111qqz.github.io/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/","publishdate":"2017-10-18T05:38:43Z","readingtime":5,"relpermalink":"/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/","section":"post","summary":"**问题：**给定，满足，求的循 环节长度。 原理见广义Fibonacci数列找循环节 这里只说做法 我们先写出递推式的特征式子 x^2 =ax + b,整理得到 x","tags":["二次剩余","循环节"],"title":"广义Fibonacci数列找循环节 （二次剩余）","type":"post","url":"/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/","weight":0,"wordcount":2006},{"author":null,"categories":null,"content":null,"date":1508303528,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508303528,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"主席树","type":"tags","url":"/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1508303528,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508303528,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"tags","summary":"","tags":null,"title":"可持久化数据结构","type":"tags","url":"/tags/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508303528,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508303528,"objectID":"a8d2ffa7f912c0b8bb06637bcd65571b","permalink":"https://111qqz.github.io/2017/10/persistent-segment-tree-notes/","publishdate":"2017-10-18T05:12:08Z","readingtime":3,"relpermalink":"/2017/10/persistent-segment-tree-notes/","section":"post","summary":"起因是16长春CCPC遇到了一个全场万人过的主席树题目，然而我不会orz，哭哭 可持久化线段树的本质是很多棵形态完全相同的线段树。 也可以理解成","tags":["主席树","可持久化数据结构"],"title":"可持久化线段树学习笔记","type":"post","url":"/2017/10/persistent-segment-tree-notes/","weight":0,"wordcount":1027},{"author":null,"categories":["ACM"],"content":null,"date":1508302320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508302320,"objectID":"140d5c4aeefb3b6e27743a8ea428fd76","permalink":"https://111qqz.github.io/2017/10/hdu-5919/","publishdate":"2017-10-18T04:52:00Z","readingtime":2,"relpermalink":"/2017/10/hdu-5919/","section":"post","summary":"题目链接 题意： 给定一个序列 n，有 m次查询，每次查询一个区间[l,r]，求区间中每一种数在区间中第一次出现的位置的中位数，强制在线。 思路： 先分","tags":["主席树","区间第k大","可持久化数据结构"],"title":"2016 CCPC 长春 I 题 | hdu 5919 Sequence II （可持久化线段树求区间第k大+可持久化线段树求区间不同数个数）","type":"post","url":"/2017/10/hdu-5919/","weight":0,"wordcount":820},{"author":null,"categories":null,"content":null,"date":1508302320,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508302320,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8C%BA%E9%97%B4%E7%AC%ACk%E5%A4%A7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8C%BA%E9%97%B4%E7%AC%ACk%E5%A4%A7/","section":"tags","summary":"","tags":null,"title":"区间第k大","type":"tags","url":"/tags/%E5%8C%BA%E9%97%B4%E7%AC%ACk%E5%A4%A7/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1508179133,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508179133,"objectID":"1e7b5ae26a1a12ba74adeb7d9eb427e6","permalink":"https://111qqz.github.io/2017/10/bzoj-1901/","publishdate":"2017-10-16T18:38:53Z","readingtime":3,"relpermalink":"/2017/10/bzoj-1901/","section":"post","summary":"Description 给定一个含有n个数的序列a[1],a[2],a[3]……a[n]，程序必须回答这样的询问：对于给定的i,j,k，在a[i],a[i+1 ],","tags":["主席树","区间第k大","可持久化数据结构"],"title":"bzoj 1901: Zju2112 Dynamic Rankings (可持久化线段树，区间动态第k大)","type":"post","url":"/2017/10/bzoj-1901/","weight":0,"wordcount":1241},{"author":null,"categories":["ACM"],"content":null,"date":1508164779,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508164779,"objectID":"33943719654f82a47f0dad856437e2b6","permalink":"https://111qqz.github.io/2017/10/hdu-2665/","publishdate":"2017-10-16T14:39:39Z","readingtime":2,"relpermalink":"/2017/10/hdu-2665/","section":"post","summary":"题意： 求区间第k大数 思路： 可持久化线段树。 其实这东西在国内更常见的名字应该是 zhu xi 树？应该是由于“中国高端数据结构领导者”的hjt比较早得引入","tags":["主席树","可持久化数据结构"],"title":"hdu 2665 Kth number  (静态区间第k大，可持久化线段树模板题)","type":"post","url":"/2017/10/hdu-2665/","weight":0,"wordcount":504},{"author":null,"categories":["ACM"],"content":null,"date":1508000064,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1508000064,"objectID":"c9fff218bccc9c1bf6ec3e4da6564a59","permalink":"https://111qqz.github.io/2017/10/poj-3301/","publishdate":"2017-10-14T16:54:24Z","readingtime":2,"relpermalink":"/2017/10/poj-3301/","section":"post","summary":"题目链接 题意： 给定二维平面的n个点，要求一个面积最小的正方形，使其能覆盖所有的点。 思路： 先考虑如果水平竖直地放置正方形（边和坐标轴平行）圈住","tags":["三分"],"title":"poj 3301 Texas Trip (三分，模板题)","type":"post","url":"/2017/10/poj-3301/","weight":0,"wordcount":712},{"author":null,"categories":null,"content":null,"date":1508000064,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1508000064,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%B8%89%E5%88%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%89%E5%88%86/","section":"tags","summary":"","tags":null,"title":"三分","type":"tags","url":"/tags/%E4%B8%89%E5%88%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507996531,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507996531,"objectID":"16b4d15a824d5cbc8431b9b586c764ee","permalink":"https://111qqz.github.io/2017/10/hdu-5531/","publishdate":"2017-10-14T15:55:31Z","readingtime":3,"relpermalink":"/2017/10/hdu-5531/","section":"post","summary":"题目链接 题意： 有n个点，表示n个圆的圆心，问一组圆的半径，满足相邻(i,i+1)或者(n,1) 圆相外切。 思路： 我们发现确定第一个半径之后，其","tags":["三分"],"title":"hdu 5531 | 2015 ICPC  长春 regional onsite Rebuild (三分)","type":"post","url":"/2017/10/hdu-5531/","weight":0,"wordcount":1100},{"author":null,"categories":["ACM"],"content":null,"date":1507897429,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507897429,"objectID":"9522835f01ec06a3ed2e342c69b28a45","permalink":"https://111qqz.github.io/2017/10/hdu-4794/","publishdate":"2017-10-13T12:23:49Z","readingtime":3,"relpermalink":"/2017/10/hdu-4794/","section":"post","summary":"题意： 给定一个 N∗N(N≤4e9) 的矩阵，现在经过这样一个变换：将 (x,y) 变为 ((x+y)%N,(x+2×y)%N)(0≤x\u0026lt;N,0≤y\u0026l","tags":["二次剩余","斐波那契"],"title":"hdu 4794 Arnold (二次剩余，斐波那契循环节)","type":"post","url":"/2017/10/hdu-4794/","weight":0,"wordcount":1102},{"author":null,"categories":null,"content":null,"date":1507897429,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507897429,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/","section":"tags","summary":"","tags":null,"title":"斐波那契","type":"tags","url":"/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507815869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507815869,"objectID":"f38cb6b25dccb3620a27ac5e490153ee","permalink":"https://111qqz.github.io/2017/10/2016-neerc-subregional-g/","publishdate":"2017-10-12T13:44:29Z","readingtime":3,"relpermalink":"/2017/10/2016-neerc-subregional-g/","section":"post","summary":"题意： 有一棵树，水源在根节点1，房子在叶子节点。有若干操作，操作可能是歹徒占领或者离开一个房子。我们不想给歹徒供水，可以通过切断边实现（如果","tags":["LCA"],"title":"2016-2017 ACM-ICPC, NEERC, Northern Subregional Contest  G Gangsters in Central City  (LCA)","type":"post","url":"/2017/10/2016-NEERC-subregional-G/","weight":0,"wordcount":1329},{"author":null,"categories":null,"content":null,"date":1507815869,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507815869,"objectID":"","permalink":"https://111qqz.github.io/tags/lca/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lca/","section":"tags","summary":"","tags":null,"title":"LCA","type":"tags","url":"/tags/lca/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1507796813,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507796813,"objectID":"","permalink":"https://111qqz.github.io/tags/binary-search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/binary-search/","section":"tags","summary":"","tags":null,"title":"binary search","type":"tags","url":"/tags/binary-search/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507796813,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507796813,"objectID":"ee7c6a81c00799b2c8598775cf4f3945","permalink":"https://111qqz.github.io/2017/10/uvalive-7675/","publishdate":"2017-10-12T08:26:53Z","readingtime":3,"relpermalink":"/2017/10/uvalive-7675/","section":"post","summary":"题目链接 题意： 在一个二维平面上，有n个加热设备，每个加热设备加热一个圆形，加热设备需要信号源才可以工作，信号源在原点上，但是高度不确定。假设","tags":["binary search","计算几何"],"title":"uvalive 7675 | 2016 北京 regional onsite H - A New Ground Heating Device （二分+多个圆面积并）","type":"post","url":"/2017/10/uvalive-7675/","weight":0,"wordcount":1095},{"author":null,"categories":null,"content":null,"date":1507796813,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507796813,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/","section":"tags","summary":"","tags":null,"title":"计算几何","type":"tags","url":"/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507783623,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507783623,"objectID":"326192b723492e4f38c06868426b06fd","permalink":"https://111qqz.github.io/2017/10/spoj-cirut/","publishdate":"2017-10-12T04:47:03Z","readingtime":4,"relpermalink":"/2017/10/spoj-cirut/","section":"post","summary":"题目链接 题意\u0026amp;思路： 给出n个圆 求恰好k个圆相交的面积，k属于1..n 先放个别人的代码。。。 我真是体会到了。。。软件工程这门课的重要性","tags":["计算几何"],"title":"SPOJ CIRUT - CIRU2  (多个圆交，求交任意次的面积，模板题)","type":"post","url":"/2017/10/spoj-cirut/","weight":0,"wordcount":1733},{"author":null,"categories":null,"content":null,"date":1507739051,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507739051,"objectID":"","permalink":"https://111qqz.github.io/tags/archlinux/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/archlinux/","section":"tags","summary":"","tags":null,"title":"archlinux","type":"tags","url":"/tags/archlinux/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1507739051,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507739051,"objectID":"47826d026ebf1261b499509f7c227182","permalink":"https://111qqz.github.io/2017/10/manjaro-fcitx-drop-chinese-words-randomly/","publishdate":"2017-10-11T16:24:11Z","readingtime":1,"relpermalink":"/2017/10/manjaro-fcitx-drop-chinese-words-randomly/","section":"post","summary":"[已解决]最近两个版本的 chrome（aura界面）有两个问题 https://github.com/fcitx/fcitx/issues/197 解决办法： 安装fcitx-im 包即可","tags":["archlinux"],"title":"archlinux/manjaro  fcitx 与 chrome 不兼容  中文掉字 解决办法","type":"post","url":"/2017/10/manjaro-fcitx-drop-chinese-words-randomly/","weight":0,"wordcount":50},{"author":null,"categories":["ACM"],"content":null,"date":1507725412,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507725412,"objectID":"7998c5a2898c1de7ab54d2cbca8de857","permalink":"https://111qqz.github.io/2017/10/spoj-ciru/","publishdate":"2017-10-11T12:36:52Z","readingtime":3,"relpermalink":"/2017/10/spoj-ciru/","section":"post","summary":"题目链接 题意： 多n个圆的面积并。 思路： 发现和求2个圆的完全不一样，具体请参考 SPOJ 8073 The area of the union of circles（计算几何の圆并）（CIRU） 圆的","tags":["计算几何"],"title":"spoj CIRU - The area of the union of circles  (多个圆面积并，模板题)","type":"post","url":"/2017/10/spoj-ciru/","weight":0,"wordcount":1324},{"author":null,"categories":null,"content":null,"date":1507640000,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507640000,"objectID":"","permalink":"https://111qqz.github.io/tags/cdq%E5%88%86%E6%B2%BB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cdq%E5%88%86%E6%B2%BB/","section":"tags","summary":"","tags":null,"title":"cdq分治","type":"tags","url":"/tags/cdq%E5%88%86%E6%B2%BB/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507640000,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507640000,"objectID":"f65d8f43b7ecfe419a12596e040452f8","permalink":"https://111qqz.github.io/2017/10/hdu-5618/","publishdate":"2017-10-10T12:53:20Z","readingtime":2,"relpermalink":"/2017/10/hdu-5618/","section":"post","summary":"题目链接 题意: If two point such as (xi,yi,zi) and (xj,yj,zj) xi≥xj yi≥yj zi≥zj, the bigger one level add 1 问每个point的level是多少。 思路： cdq分治，先去重并统计","tags":["cdq分治","树状数组"],"title":"hdu 5618 Jam's problem again （cdq分治+BIT，三维偏序）","type":"post","url":"/2017/10/hdu-5618/","weight":0,"wordcount":556},{"author":null,"categories":["ACM"],"content":null,"date":1507635802,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507635802,"objectID":"ceeb23f9dfe07b9870d7dc4d84db73c6","permalink":"https://111qqz.github.io/2017/10/bzoj-3262/","publishdate":"2017-10-10T11:43:22Z","readingtime":2,"relpermalink":"/2017/10/bzoj-3262/","section":"post","summary":"Description 有n朵花，每朵花有三个属性：花形(s)、颜色(c)、气味(m)，又三个整数表示。现要对每朵花评级，一朵花的级别是它拥有的美丽能超过的花的数","tags":["cdq分治","树状数组"],"title":"BZOJ 3262: 陌上花开 (cdq分治模板题，三维偏序)","type":"post","url":"/2017/10/bzoj-3262/","weight":0,"wordcount":790},{"author":null,"categories":["ACM"],"content":null,"date":1507630795,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507630795,"objectID":"92d47c9ed8d0c7b4f113d5a7b637d37f","permalink":"https://111qqz.github.io/2017/10/hdu-5950/","publishdate":"2017-10-10T10:19:55Z","readingtime":2,"relpermalink":"/2017/10/hdu-5950/","section":"post","summary":"题目链接 题意： 给f[1],f[2],n,f[i] = 2*f[i-2] + f[i-1] + i^4,求f[n]的值。 思路： 很容易想到矩阵，但是i^4不是线性的差评，我们可以拆","tags":["构造","矩阵快速幂"],"title":"hdu 5950 Recursive sequence (构造矩阵，快速幂)","type":"post","url":"/2017/10/hdu-5950/","weight":0,"wordcount":571},{"author":null,"categories":null,"content":null,"date":1507630795,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507630795,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9E%84%E9%80%A0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9E%84%E9%80%A0/","section":"tags","summary":"","tags":null,"title":"构造","type":"tags","url":"/tags/%E6%9E%84%E9%80%A0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1507630795,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507630795,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/","section":"tags","summary":"","tags":null,"title":"矩阵快速幂","type":"tags","url":"/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507622586,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507622586,"objectID":"0ff9e97771fabe2788de53e444151e07","permalink":"https://111qqz.github.io/2017/10/cdq-divide-notes/","publishdate":"2017-10-10T08:03:06Z","readingtime":2,"relpermalink":"/2017/10/cdq-divide-notes/","section":"post","summary":"起因是队里的大佬们都会这东西，而我一个老年选手竟然还不会，实在说不过去。 cdq分治显然是分治的一种，cdq的意思就是超短裙啦（ 这东西网上资料","tags":["cdq分治"],"title":"cdq分治学习笔记","type":"post","url":"/2017/10/cdq-divide-notes/","weight":0,"wordcount":684},{"author":null,"categories":["ACM"],"content":null,"date":1507618712,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507618712,"objectID":"0d85f6b8b0fece4d004fc4e9f33cf898","permalink":"https://111qqz.github.io/2017/10/bzoj2648/","publishdate":"2017-10-10T06:58:32Z","readingtime":2,"relpermalink":"/2017/10/bzoj2648/","section":"post","summary":"Description 这天，SJY显得无聊。在家自己玩。在一个棋盘上，有N个黑色棋子。他每次要么放到棋盘上一个黑色棋子，要么放上一个白色棋子，如果是白色棋子，他","tags":["kd-tree","输入挂"],"title":"BZOJ 2648: SJY摆棋子 (动态kd-tree,插入，曼哈顿距离,输入挂)","type":"post","url":"/2017/10/bzoj2648/","weight":0,"wordcount":792},{"author":null,"categories":null,"content":null,"date":1507618712,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507618712,"objectID":"","permalink":"https://111qqz.github.io/tags/kd-tree/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kd-tree/","section":"tags","summary":"","tags":null,"title":"kd-tree","type":"tags","url":"/tags/kd-tree/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1507618712,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507618712,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%BE%93%E5%85%A5%E6%8C%82/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%BE%93%E5%85%A5%E6%8C%82/","section":"tags","summary":"","tags":null,"title":"输入挂","type":"tags","url":"/tags/%E8%BE%93%E5%85%A5%E6%8C%82/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507618195,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507618195,"objectID":"513d833a303bcb42a2fa944946f3b47b","permalink":"https://111qqz.github.io/2017/10/bzoj2716/","publishdate":"2017-10-10T06:49:55Z","readingtime":2,"relpermalink":"/2017/10/bzoj2716/","section":"post","summary":"题目链接 Description Input Output 样例太长了，就不写了。 题意是说，现在有n个在二维平面，m个操作，2种类型，一种是加入一个点，另一种是对于一个定点，询问距离其最","tags":["kd-tree","曼哈顿距离"],"title":"BZOJ 2716: [Violet 3]天使玩偶 (动态kd-tree,带插入，曼哈顿距离模板题)","type":"post","url":"/2017/10/bzoj2716/","weight":0,"wordcount":650},{"author":null,"categories":null,"content":null,"date":1507618195,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507618195,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB/","section":"tags","summary":"","tags":null,"title":"曼哈顿距离","type":"tags","url":"/tags/%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507556016,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507556016,"objectID":"783bb94adb975e60ea29acad9e25419f","permalink":"https://111qqz.github.io/2017/10/hdu-1724/","publishdate":"2017-10-09T13:33:36Z","readingtime":1,"relpermalink":"/2017/10/hdu-1724/","section":"post","summary":"hdu1724题目链接 题意： 求图示区域的面积。 思路： 辛普森积分学习笔记 容易推出被积函数为 f(x)=b_sqrt(1-(x_x/a/a)); /* *********************************************** Author :111qqz Created Time :2017年10月09日 星期一 21时0","tags":["数值计算方法","计算几何","辛普森积分"],"title":"hdu 1724 Ellipse (辛普森积分模板题)","type":"post","url":"/2017/10/hdu-1724/","weight":0,"wordcount":242},{"author":null,"categories":null,"content":null,"date":1507556016,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507556016,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"数值计算方法","type":"tags","url":"/tags/%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1507556016,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507556016,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%BE%9B%E6%99%AE%E6%A3%AE%E7%A7%AF%E5%88%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%BE%9B%E6%99%AE%E6%A3%AE%E7%A7%AF%E5%88%86/","section":"tags","summary":"","tags":null,"title":"辛普森积分","type":"tags","url":"/tags/%E8%BE%9B%E6%99%AE%E6%A3%AE%E7%A7%AF%E5%88%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507554643,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507554643,"objectID":"bbf050cc059af010400ab0a083c84645","permalink":"https://111qqz.github.io/2017/10/simpsons-rule-notes/","publishdate":"2017-10-09T13:10:43Z","readingtime":1,"relpermalink":"/2017/10/simpsons-rule-notes/","section":"post","summary":"16沈阳的阴影还在orz，来学习一下辛普森积分。 参考资料：梯形多步法和辛普森积分 辛普森计算定积分 辛普森积分是一种数值积分方法（然后现在只记得","tags":["数值计算方法","计算几何","辛普森积分"],"title":"辛普森积分学习笔记","type":"post","url":"/2017/10/Simpsons-rule-notes/","weight":0,"wordcount":316},{"author":null,"categories":["ACM"],"content":null,"date":1507528883,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507528883,"objectID":"bee87c0c8c07c114732de9be57cdf6b7","permalink":"https://111qqz.github.io/2017/10/hdu-4347/","publishdate":"2017-10-09T06:01:23Z","readingtime":2,"relpermalink":"/2017/10/hdu-4347/","section":"post","summary":"题目链接 题意： 给出若干个点，在给出一个定点，求距离该定点最近的m个点。 思路： 我们已经知道kd-tree可以得到最近邻，实际上M近邻，只需要维","tags":["kd-tree","优先队列"],"title":"hdu 4347 The Closest M Points (kd-tree+优先队列，求M近邻)","type":"post","url":"/2017/10/hdu-4347/","weight":0,"wordcount":586},{"author":null,"categories":null,"content":null,"date":1507528883,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1507528883,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","section":"tags","summary":"","tags":null,"title":"优先队列","type":"tags","url":"/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1507467355,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507467355,"objectID":"2f545b5a10f8ce9a5c743c425904fc76","permalink":"https://111qqz.github.io/2017/10/hdu-5992/","publishdate":"2017-10-08T12:55:55Z","readingtime":2,"relpermalink":"/2017/10/hdu-5992/","section":"post","summary":"题目链接 题意： 有若干个(2E5)旅馆，分别给出旅馆的坐标和价格。有m个查询，每个查询给出一个人的位置(x0,y0),以及其能接受的最高价格。","tags":["kd-tree"],"title":"hdu 5992 Finding Hotels (kd-tree 裸题,查询)","type":"post","url":"/2017/10/hdu-5992/","weight":0,"wordcount":542},{"author":null,"categories":["ACM"],"content":null,"date":1507463615,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507463615,"objectID":"0d6dfc5365e49c337fbce9b346bac32b","permalink":"https://111qqz.github.io/2017/10/hdu-2966/","publishdate":"2017-10-08T11:53:35Z","readingtime":1,"relpermalink":"/2017/10/hdu-2966/","section":"post","summary":"题目链接：hdu2966 题意： 给出二维平面上n(1E5)个点，问对于每个点，其他距离其最近的点的距离是多少。 思路： kd-tree 裸题。 kd-tree 学习笔记 /* *********************************************** Author :111qqz","tags":["kd-tree"],"title":"hdu 2966 In case of failure （ kd-tree（只有查询） 模板题）","type":"post","url":"/2017/10/hdu-2966/","weight":0,"wordcount":470},{"author":null,"categories":["ACM"],"content":null,"date":1507463206,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507463206,"objectID":"6ee0b3926c9ab1018bfb3e897d1aac63","permalink":"https://111qqz.github.io/2017/10/kd-tree-notes/","publishdate":"2017-10-08T11:46:46Z","readingtime":5,"relpermalink":"/2017/10/kd-tree-notes/","section":"post","summary":"老规矩，资料先行。 好久没学新算法了，有点忘记怎么学了orz K-D tree 数据结构 hdu 2966 In case of failure （k-d树 最近邻近点） 首先来看算法的提出。 现在二维平面上有","tags":["kd-tree"],"title":"kd tree 学习笔记","type":"post","url":"/2017/10/kd-tree-notes/","weight":0,"wordcount":2072},{"author":null,"categories":["ACM"],"content":null,"date":1507003093,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1507003093,"objectID":"9a6f2650f3d427ad40ad3caf9cf96c66","permalink":"https://111qqz.github.io/2017/10/2016-neerc-subregional-a/","publishdate":"2017-10-03T03:58:13Z","readingtime":1,"relpermalink":"/2017/10/2016-neerc-subregional-a/","section":"post","summary":"题意： W_H的方格纸，共有(w+1)_(H+1)个整点，现在将2个蜡烛放在2个不同的整点上。蜡烛不会被放在边界上。现在给出方格纸的尺寸和2个","tags":null,"title":"2016 NEERC  Northern Subregional Contest  A Anniversary Cake （水题）","type":"post","url":"/2017/10/2016-NEERC-subregional-A/","weight":0,"wordcount":353},{"author":null,"categories":["ACM"],"content":null,"date":1506911049,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506911049,"objectID":"8ddfebf6823c265692300a9d219d5862","permalink":"https://111qqz.github.io/2017/10/codeforces-div2-385e/","publishdate":"2017-10-02T02:24:09Z","readingtime":2,"relpermalink":"/2017/10/codeforces-div2-385e/","section":"post","summary":"题目链接 题意： 有一只熊，初始在(sx,sy)处，如果当前的位置在(x,y)，那么下一秒会在((x+dx-1)%n+1,(y+dy-1)%n+","tags":["快速幂","矩阵"],"title":"codeforces 385 E. Bear in the Field (先记录想法）","type":"post","url":"/2017/10/codeforces-div2-385e/","weight":0,"wordcount":580},{"author":null,"categories":null,"content":null,"date":1506911049,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506911049,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%9F%A9%E9%98%B5/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%9F%A9%E9%98%B5/","section":"tags","summary":"","tags":null,"title":"矩阵","type":"tags","url":"/tags/%E7%9F%A9%E9%98%B5/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506856216,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506856216,"objectID":"c26b3938561bce7e834c018584e7831a","permalink":"https://111qqz.github.io/2017/10/uva-10518/","publishdate":"2017-10-01T11:10:16Z","readingtime":1,"relpermalink":"/2017/10/uva-10518/","section":"post","summary":"题目链接 题意： 求f[n] = f[n-1] + f[n-2] + 1，在b(10000)进制下的最后一位数字的十进制表示。 思路： 构造矩阵即可，M矩阵是一个3_3的矩阵，M1","tags":["快速幂","构造","矩阵"],"title":"UVA - 10518  How Many Calls?  (构造矩阵，快速幂)","type":"post","url":"/2017/10/uva-10518/","weight":0,"wordcount":475},{"author":null,"categories":["ACM"],"content":null,"date":1506839628,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506839628,"objectID":"31a7c4da213b81df9365ab8a38912f5e","permalink":"https://111qqz.github.io/2017/10/hdu-4686/","publishdate":"2017-10-01T06:33:48Z","readingtime":2,"relpermalink":"/2017/10/hdu-4686/","section":"post","summary":"hdu4686题目链接 题意： An Arc of Dream is a curve defined by following function: where a 0 = A0 a i = a i-1_AX+AY b 0 = B0 b i = b i-1_BX+BY What is the value of AoD(N) modulo 1,000,000,007? 思路： 看n的1E18的范围也知道是矩","tags":["快速幂","构造","矩阵"],"title":"hdu 4686 Arc of Dream  (构造矩阵，快速幂)","type":"post","url":"/2017/10/hdu-4686/","weight":0,"wordcount":741},{"author":null,"categories":["ACM"],"content":null,"date":1506803755,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506803755,"objectID":"470df0028436a220ba58c76add713566","permalink":"https://111qqz.github.io/2017/10/uva-10870/","publishdate":"2017-09-30T20:35:55Z","readingtime":2,"relpermalink":"/2017/10/uva-10870/","section":"post","summary":"uva10870题目链接 题意： f(n) = a1f(n − 1) + a2f(n − 2) + a3f(n − 3) + . . . + adf(n − d), for n \u0026gt; d 给出f[1]..f[d],a[1]..a[d],问 f[n]%","tags":["快速幂","矩阵","矩阵快速幂"],"title":"uva 10870 - Recurrences (矩阵加速线性递推式)","type":"post","url":"/2017/10/uva-10870/","weight":0,"wordcount":667},{"author":null,"categories":null,"content":null,"date":1506800415,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506800415,"objectID":"","permalink":"https://111qqz.github.io/tags/math/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/math/","section":"tags","summary":"","tags":null,"title":"math","type":"tags","url":"/tags/math/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506800415,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506800415,"objectID":"a53f6e21511154e857029c9ef4859e33","permalink":"https://111qqz.github.io/2017/10/uva-10655/","publishdate":"2017-09-30T19:40:15Z","readingtime":1,"relpermalink":"/2017/10/uva-10655/","section":"post","summary":"uva10655题目链接 题意： 给出a+b和ab的值，问a^n+b^n 思路： 构造矩阵,手写一下很显然\u0026hellip; 转移矩阵M=[0 , 1] [-q,p ] 初","tags":["math","快速幂","矩阵"],"title":"uva 10655 - Contemplation! Algebra （构造矩阵，快速幂）","type":"post","url":"/2017/10/uva-10655/","weight":0,"wordcount":496},{"author":null,"categories":null,"content":null,"date":1506775842,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506775842,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BF%AB%E9%80%9F%E4%B9%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BF%AB%E9%80%9F%E4%B9%98/","section":"tags","summary":"","tags":null,"title":"快速乘","type":"tags","url":"/tags/%E5%BF%AB%E9%80%9F%E4%B9%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506775842,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506775842,"objectID":"2440e4f552b12818aed8c53f801bb8a1","permalink":"https://111qqz.github.io/2017/09/fast-multiply-notes/","publishdate":"2017-09-30T12:50:42Z","readingtime":1,"relpermalink":"/2017/09/fast-multiply-notes/","section":"post","summary":"16年北京网络赛遇到了这个技巧\u0026hellip;但是竟然忘记记了下来？ 快速乘是为了解决 计算a_b % mod 时a_b溢出LL 的问题 比如a=1E16,b","tags":["快速乘"],"title":"快速乘","type":"post","url":"/2017/09/fast-multiply-notes/","weight":0,"wordcount":217},{"author":null,"categories":["ACM"],"content":null,"date":1506771485,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506771485,"objectID":"5e8b6e587198acf58ea0c7a53da2f30d","permalink":"https://111qqz.github.io/2017/09/hdu-4990/","publishdate":"2017-09-30T11:38:05Z","readingtime":2,"relpermalink":"/2017/09/hdu-4990/","section":"post","summary":"题目链接 题意： 给出了一段程序，程序实际算的是f[n] = (f[n-1] + n%2)%m的值，其中f[1]=1,给出n,m(1E9)，问f[n] 思路： 显然是矩","tags":["构造","矩阵快速幂"],"title":"hdu 4990 Reading comprehension (构造矩阵，快速幂)","type":"post","url":"/2017/09/hdu-4990/","weight":0,"wordcount":514},{"author":null,"categories":["ACM"],"content":null,"date":1506768847,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506768847,"objectID":"66f1ff6ba7b4f29d9f237a24c8b6f520","permalink":"https://111qqz.github.io/2017/09/hdu-5015/","publishdate":"2017-09-30T10:54:07Z","readingtime":2,"relpermalink":"/2017/09/hdu-5015/","section":"post","summary":"hdu5015题目链接 题意： 给出矩阵的构造规则： a[0][j] (j\u0026gt;=1) 分别为233,2333,23333\u0026hellip;.给出a[i][0] (i\u0026gt;=1)","tags":["矩阵快速幂"],"title":"hdu 5015 233 Matrix (构造矩阵，快速幂)","type":"post","url":"/2017/09/hdu-5015/","weight":0,"wordcount":964},{"author":null,"categories":["其他"],"content":null,"date":1506705029,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506705029,"objectID":"ebbbf6ade7ca1df8574cc3639f6b7b67","permalink":"https://111qqz.github.io/2017/09/20170929/","publishdate":"2017-09-29T17:10:29Z","readingtime":1,"relpermalink":"/2017/09/20170929/","section":"post","summary":"刚刚看了TBBT season 11 episode 1 Sheldon 和Amy 订婚了，Bernadette又怀孕了。 想想上一季结束的时候，大概半年前。 我好像还是只单身狗，手头没啥能看的","tags":null,"title":"20170929","type":"post","url":"/2017/09/20170929/","weight":0,"wordcount":359},{"author":null,"categories":["ACM"],"content":null,"date":1506681249,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506681249,"objectID":"fb3e523f7f25eba82fb1e09936cd7a0e","permalink":"https://111qqz.github.io/2017/09/hdu-3642/","publishdate":"2017-09-29T10:34:09Z","readingtime":3,"relpermalink":"/2017/09/hdu-3642/","section":"post","summary":"hdu3642题目链接 题意：给出若干个（1000）长方体，求至少交三次的空间的体积。 尺寸为[x1,x2],[y1,y2],[z1,z2],其","tags":["扫描线","线段树"],"title":"hdu 3642 Get The Treasury  (线段树+扫描线，求长方体体积交)","type":"post","url":"/2017/09/hdu-3642/","weight":0,"wordcount":1058},{"author":null,"categories":null,"content":null,"date":1506681249,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506681249,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%89%AB%E6%8F%8F%E7%BA%BF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%89%AB%E6%8F%8F%E7%BA%BF/","section":"tags","summary":"","tags":null,"title":"扫描线","type":"tags","url":"/tags/%E6%89%AB%E6%8F%8F%E7%BA%BF/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506577487,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506577487,"objectID":"d3f46e74d488bb9a44c733e1740737d0","permalink":"https://111qqz.github.io/2017/09/hdu1828/","publishdate":"2017-09-28T05:44:47Z","readingtime":2,"relpermalink":"/2017/09/hdu1828/","section":"post","summary":"题目链接 题意: 求矩形周长并。 思路： 线段树+扫描线。 和前面的求面积并比较类似，我们先考虑平行x轴的线段，考虑线段树，维护的一段区间中被矩形覆盖","tags":["扫描线","矩形周长并","线段树"],"title":"hdu 1828  Picture （线段树+扫描线  求 矩形周长并）","type":"post","url":"/2017/09/hdu1828/","weight":0,"wordcount":711},{"author":null,"categories":null,"content":null,"date":1506577487,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506577487,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%9F%A9%E5%BD%A2%E5%91%A8%E9%95%BF%E5%B9%B6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%9F%A9%E5%BD%A2%E5%91%A8%E9%95%BF%E5%B9%B6/","section":"tags","summary":"","tags":null,"title":"矩形周长并","type":"tags","url":"/tags/%E7%9F%A9%E5%BD%A2%E5%91%A8%E9%95%BF%E5%B9%B6/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506518423,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506518423,"objectID":"fa03d4364d166d81e924fb7775ffb65c","permalink":"https://111qqz.github.io/2017/09/hdu1255/","publishdate":"2017-09-27T13:20:23Z","readingtime":2,"relpermalink":"/2017/09/hdu1255/","section":"post","summary":"题目链接 题意： 求n（1000）个矩形的面积交，也就是至少有2个矩形覆盖的区域的面积。 思路： 和矩形面积并_hdu1542解题报告 类似 面积并问题","tags":["扫描线","矩形面积交","线段树"],"title":"hdu 1255 覆盖的面积 (扫描线+线段树 求矩形面积交)","type":"post","url":"/2017/09/hdu1255/","weight":0,"wordcount":914},{"author":null,"categories":null,"content":null,"date":1506518423,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506518423,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/","section":"tags","summary":"","tags":null,"title":"矩形面积交","type":"tags","url":"/tags/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506509986,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506509986,"objectID":"6c15578c731cfd7521652958c065a9aa","permalink":"https://111qqz.github.io/2017/09/hdu-1542/","publishdate":"2017-09-27T10:59:46Z","readingtime":3,"relpermalink":"/2017/09/hdu-1542/","section":"post","summary":"hdu1542题目链接 题意： 求n(100)个矩形的面积并。 思路： 扫描线+线段树 题目是2000年中欧区域赛的题目，虽然年代久远，但是有好几个点","tags":["扫描线","离散化","线段树"],"title":"hdu 1542 Atlantis  (线段树+扫描线求矩形面积并，模板题)","type":"post","url":"/2017/09/hdu-1542/","weight":0,"wordcount":1329},{"author":null,"categories":null,"content":null,"date":1506509986,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506509986,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"离散化","type":"tags","url":"/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506430357,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506430357,"objectID":"2721ce8c00d71a25a192e140c8f30936","permalink":"https://111qqz.github.io/2017/09/zoj-3606/","publishdate":"2017-09-26T12:52:37Z","readingtime":3,"relpermalink":"/2017/09/zoj-3606/","section":"post","summary":"zoj3606题目链接 题意：有个小女孩卖火柴,有n个人会来买，分别在时间t[i]，以价格p[i]，买的火柴个数为1+(k-1)%3,其中k为","tags":["线段树"],"title":"zoj 3606  Lazy Salesgirl (线段树，单点更新，区间合并)","type":"post","url":"/2017/09/zoj-3606/","weight":0,"wordcount":1069},{"author":null,"categories":["ACM"],"content":null,"date":1506409017,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506409017,"objectID":"08eb50fdac26ec14a42b215282c16dd7","permalink":"https://111qqz.github.io/2017/09/hdu-4288/","publishdate":"2017-09-26T06:56:57Z","readingtime":2,"relpermalink":"/2017/09/hdu-4288/","section":"post","summary":"题目链接 题意：n（1E5）个操作，分为三种，add x表示将x加到集合中（保证集合中之前没有x)，del x表示从集合中删掉x(保证集合中一定右","tags":["离散化","线段树"],"title":"hdu 4288 Coder (离散化， 线段树，单点更新，区间合并)","type":"post","url":"/2017/09/hdu-4288/","weight":0,"wordcount":997},{"author":null,"categories":["ACM"],"content":null,"date":1506345145,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506345145,"objectID":"482404cc0b495afc8f839c09833045e3","permalink":"https://111qqz.github.io/2017/09/codeforces-855-b/","publishdate":"2017-09-25T13:12:25Z","readingtime":1,"relpermalink":"/2017/09/codeforces-855-b/","section":"post","summary":"题目链接 题意：给出n,p,q,r,以及n（1E5）个数，所有数的范围都是[-1E9,1E9],现在问p_a[i]+q_a[j]+r*a[k]","tags":["dp"],"title":"codeforces 855 B. Marvolo Gaunt's Ring (前缀最大，dp)","type":"post","url":"/2017/09/codeforces-855-b/","weight":0,"wordcount":429},{"author":null,"categories":["ACM"],"content":null,"date":1506336957,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506336957,"objectID":"2fe95961f2c03e8a11b183f3065ea27a","permalink":"https://111qqz.github.io/2017/09/codeforces-edu-29e/","publishdate":"2017-09-25T10:55:57Z","readingtime":2,"relpermalink":"/2017/09/codeforces-edu-29e/","section":"post","summary":"题目链接 题意：有若干线段，给出起点和终点，问是否有一个线段是冗余的。冗余的意思是说，对于该线段所覆盖的所有整数点，没有该线段，也能被其他一个","tags":["乱搞"],"title":"codeforces edu #29 E. Turn Off The TV (思维，乱搞)","type":"post","url":"/2017/09/codeforces-edu-29e/","weight":0,"wordcount":683},{"author":null,"categories":null,"content":null,"date":1506336957,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1506336957,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%B9%B1%E6%90%9E/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B9%B1%E6%90%9E/","section":"tags","summary":"","tags":null,"title":"乱搞","type":"tags","url":"/tags/%E4%B9%B1%E6%90%9E/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1506242833,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1506242833,"objectID":"49b827b83720c0d5805b8fc023392370","permalink":"https://111qqz.github.io/2017/09/codeforces-eductional-round-29/","publishdate":"2017-09-24T08:47:13Z","readingtime":5,"relpermalink":"/2017/09/codeforces-eductional-round-29/","section":"post","summary":"比赛链接 10个月没写题了，菜啊。进行一点恢复性训练好了。 A: 给一个数，可以在填写若干（或者0）个前缀0，问能否变成回文数。 思路是直接删掉后面可","tags":null,"title":"Codeforces eductional round  29","type":"post","url":"/2017/09/codeforces-eductional-round-29/","weight":0,"wordcount":2433},{"author":null,"categories":null,"content":null,"date":1504614617,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1504614617,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/","section":"tags","summary":"","tags":null,"title":"反向传播","type":"tags","url":"/tags/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1504614617,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1504614617,"objectID":"41a80e6640ce132965f4bfc5e4a4da05","permalink":"https://111qqz.github.io/2017/09/back-propagation-notes/","publishdate":"2017-09-05T12:30:17Z","readingtime":1,"relpermalink":"/2017/09/back-propagation-notes/","section":"post","summary":"先说下自己目前很笼统的理解： 反向传播是用来快速计算梯度的一种方法； 过程大概是把计算过程用计算图表示，这样每一个中间步骤都有一个节点，每一个l","tags":["反向传播"],"title":"反向传播学习笔记","type":"post","url":"/2017/09/back-propagation-notes/","weight":0,"wordcount":212},{"author":null,"categories":null,"content":null,"date":1504148667,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1504148667,"objectID":"","permalink":"https://111qqz.github.io/tags/high-performance-computing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/high-performance-computing/","section":"tags","summary":"","tags":null,"title":"High performance computing","type":"tags","url":"/tags/high-performance-computing/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1504148667,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1504148667,"objectID":"","permalink":"https://111qqz.github.io/tags/mpi/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mpi/","section":"tags","summary":"","tags":null,"title":"MPI","type":"tags","url":"/tags/mpi/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1504148667,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1504148667,"objectID":"1bbd72660e039be68961052ef76a1ced","permalink":"https://111qqz.github.io/2017/08/mpi-notes/","publishdate":"2017-08-31T03:04:27Z","readingtime":2,"relpermalink":"/2017/08/mpi-notes/","section":"post","summary":"参考资料： 消息传递接口（MPI）维基百科 MPI_TUTORIAL MPI 在大规模机器学习领域的前景如何？ 因为要和平台组对接工作以及写我们自己的BN同步\u0026hellip;所","tags":["High performance computing","MPI","Supercomputing","并行计算"],"title":"MPI  学习笔记","type":"post","url":"/2017/08/mpi-notes/","weight":0,"wordcount":554},{"author":null,"categories":null,"content":null,"date":1504148667,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1504148667,"objectID":"","permalink":"https://111qqz.github.io/tags/supercomputing/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/supercomputing/","section":"tags","summary":"","tags":null,"title":"Supercomputing","type":"tags","url":"/tags/supercomputing/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1503565978,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1503565978,"objectID":"","permalink":"https://111qqz.github.io/tags/pipline/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/pipline/","section":"tags","summary":"","tags":null,"title":"pipline","type":"tags","url":"/tags/pipline/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1503565978,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1503565978,"objectID":"","permalink":"https://111qqz.github.io/tags/tensorflow/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tensorflow/","section":"tags","summary":"","tags":null,"title":"tensorflow","type":"tags","url":"/tags/tensorflow/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1503565978,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503565978,"objectID":"68a447ad013059332a3dde2b6561fff9","permalink":"https://111qqz.github.io/2017/08/tensorflow-input-pipline-notes/","publishdate":"2017-08-24T09:12:58Z","readingtime":4,"relpermalink":"/2017/08/tensorflow-input-pipline-notes/","section":"post","summary":"参考资料： tf_doc_Reading data TENSORFLOW INPUT PIPELINE EXAMPLE tensorflow：理解tensorflow中的输入管道 第二个参考资料是第一个的翻译版本，翻译的水平一般，建议看原文","tags":["pipline","tensorflow"],"title":"tensorflow input pipline  学习笔记","type":"post","url":"/2017/08/tensorflow-input-pipline-notes/","weight":0,"wordcount":1928},{"author":null,"categories":["deep-learning"],"content":null,"date":1503298582,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503298582,"objectID":"4542e12f0788bf4d60b60bf9088fed64","permalink":"https://111qqz.github.io/2017/08/tensorflow-model-merging/","publishdate":"2017-08-21T06:56:22Z","readingtime":3,"relpermalink":"/2017/08/tensorflow-model-merging/","section":"post","summary":"在这里存个备份，还有些问题没有解决。 raise ValueError(\u0026ldquo;GraphDef cannot be larger than 2GB.\u0026quot;) 记录一些思路好了。现在是没有生成.meta文件，爆掉应该是因为所有的变量都加载到了默认图里","tags":["tensorflow"],"title":"tensorflow 合并模型","type":"post","url":"/2017/08/tensorflow-model-merging/","weight":0,"wordcount":1369},{"author":null,"categories":["deep-learning"],"content":null,"date":1503281025,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503281025,"objectID":"2db622364db8c7c28ca0a61315267672","permalink":"https://111qqz.github.io/2017/08/tensorflow-checkpoint-notes/","publishdate":"2017-08-21T02:03:45Z","readingtime":1,"relpermalink":"/2017/08/tensorflow-checkpoint-notes/","section":"post","summary":"参考资料： What is the TensorFlow checkpoint meta file? TensorFlow: Restoring variables from from multiple checkpoints 合并模型的时候发现.meta一直在累加，而其他数据文件没有改变。因此来探究一下checkpoint的几","tags":["tensorflow"],"title":"tensorflow checkpoint 学习笔记","type":"post","url":"/2017/08/tensorflow-checkpoint-notes/","weight":0,"wordcount":437},{"author":null,"categories":null,"content":null,"date":1503221760,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1503221760,"objectID":"","permalink":"https://111qqz.github.io/tags/checkpoint/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/checkpoint/","section":"tags","summary":"","tags":null,"title":"checkpoint","type":"tags","url":"/tags/checkpoint/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1503221760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503221760,"objectID":"58d9432ad9276bd6a80ff3560d381901","permalink":"https://111qqz.github.io/2017/08/tensorflow-variable-notes/","publishdate":"2017-08-20T09:36:00Z","readingtime":7,"relpermalink":"/2017/08/tensorflow-variable-notes/","section":"post","summary":"参考资料： programmers_guide/variables tf/Variable 之前感觉对tensorflow 的variable的理解不是很深刻\u0026hellip;跑个模型啥的倒不会有什么问题，但是涉及分布式，","tags":["checkpoint","tensorflow"],"title":"tensorflow variable 学习笔记","type":"post","url":"/2017/08/tensorflow-variable-notes/","weight":0,"wordcount":3100},{"author":null,"categories":["其他"],"content":null,"date":1503219375,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503219375,"objectID":"6a4f7214194e5032e51d0e1b8d7e4034","permalink":"https://111qqz.github.io/2017/08/20170819/","publishdate":"2017-08-20T08:56:15Z","readingtime":2,"relpermalink":"/2017/08/20170819/","section":"post","summary":"一转眼\u0026hellip;暑假就要结束了\u0026hellip; 秋招似乎也可以告一段落了\u0026hellip; 投了蛮多的，但是昨天突然发现我用gmail邮箱发","tags":null,"title":"20170819近况","type":"post","url":"/2017/08/20170819/","weight":0,"wordcount":979},{"author":null,"categories":["deep-learning"],"content":null,"date":1503217317,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503217317,"objectID":"dbaebf86a05d2cbd0a62171bbc5e0005","permalink":"https://111qqz.github.io/2017/08/tensorflow-session-notes/","publishdate":"2017-08-20T08:21:57Z","readingtime":1,"relpermalink":"/2017/08/tensorflow-session-notes/","section":"post","summary":"tensorflow-session官方文档 说下我自己的理解： session中文一般叫会话，可以理解成op执行时候需要的一层虚拟化的封装。 o","tags":["tensorflow"],"title":"tensorflow Session 学习笔记","type":"post","url":"/2017/08/tensorflow-session-notes/","weight":0,"wordcount":436},{"author":null,"categories":["面试"],"content":null,"date":1503083905,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1503083905,"objectID":"c795e71a81447c848753ead172b38be0","permalink":"https://111qqz.github.io/2017/08/leetcode-146-lru-cache/","publishdate":"2017-08-18T19:18:25Z","readingtime":1,"relpermalink":"/2017/08/leetcode-146-lru-cache/","section":"post","summary":"请实现最近最少使用缓存(Least Recently Used (LRU) cache)类,需要支持 get, set,操作。 get 操作,给出 key,获取到相应的 value (value 为非负数),如果不存在返","tags":["LRU"],"title":"leetcode 146. LRU Cache(list+unordered_map)","type":"post","url":"/2017/08/leetcode-146-lru-cache/","weight":0,"wordcount":402},{"author":null,"categories":null,"content":null,"date":1503083905,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1503083905,"objectID":"","permalink":"https://111qqz.github.io/tags/lru/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lru/","section":"tags","summary":"","tags":null,"title":"LRU","type":"tags","url":"/tags/lru/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1503083905,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1503083905,"objectID":"","permalink":"https://111qqz.github.io/categories/%E9%9D%A2%E8%AF%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E9%9D%A2%E8%AF%95/","section":"categories","summary":"","tags":null,"title":"面试","type":"categories","url":"/categories/%E9%9D%A2%E8%AF%95/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1502871701,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1502871701,"objectID":"01ff7797b908bb03ae6fdd59264e4149","permalink":"https://111qqz.github.io/2017/08/python-get-dir-name-in-current-path/","publishdate":"2017-08-16T08:21:41Z","readingtime":1,"relpermalink":"/2017/08/python-get-dir-name-in-current-path/","section":"post","summary":"list = os.listdir(rootdir)#列出目录下的所有文件和目录 for line in list: filepath = os.path.join(rootdir,line) if os.path.isdir(filepath):#如果","tags":["python"],"title":"python只获取当前目录下的文件夹及文件名","type":"post","url":"/2017/08/python-get-dir-name-in-current-path/","weight":0,"wordcount":224},{"author":null,"categories":["deep-learning"],"content":null,"date":1502675715,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1502675715,"objectID":"ae8ac55e1025f6c655d35105b37bb921","permalink":"https://111qqz.github.io/2017/08/distributed-tensorflow-cannot-assign-a-device-for-operation-save/","publishdate":"2017-08-14T01:55:15Z","readingtime":1,"relpermalink":"/2017/08/distributed-tensorflow-cannot-assign-a-device-for-operation-save/","section":"post","summary":"是在使用分布式tensorflow遇到的一个错误 报错如下： InvalidArgumentError (see above for traceback): Cannot assign a device for operation \u0026lsquo;save/Rest│| 2 GeForce GTX 1080 On | 0000:08:00.0 Off | N/A | oreV2_888\u0026rsquo;:","tags":["tensorflow"],"title":"Distributed Tensorflow : Cannot assign a device for operation save","type":"post","url":"/2017/08/distributed-tensorflow-cannot-assign-a-device-for-operation-save/","weight":0,"wordcount":211},{"author":null,"categories":null,"content":null,"date":1502510624,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1502510624,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%9D%A2%E8%AF%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%9D%A2%E8%AF%95/","section":"tags","summary":"","tags":null,"title":"面试","type":"tags","url":"/tags/%E9%9D%A2%E8%AF%95/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1502510624,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1502510624,"objectID":"675f22b9ad7a3b8d8f06f37ca09b38ee","permalink":"https://111qqz.github.io/2017/08/interview-record/","publishdate":"2017-08-12T04:03:44Z","readingtime":4,"relpermalink":"/2017/08/interview-record/","section":"post","summary":"随便记录一下面试中遇到的问题： 梯度下降和牛顿迭代的区别？为什么常用梯度下降？ 根据wiki上的解释，从几何上说，牛顿法就是用一个二次曲面去拟合","tags":["面试"],"title":"面试相关","type":"post","url":"/2017/08/interview-record/","weight":0,"wordcount":1878},{"author":null,"categories":["deep-learning"],"content":null,"date":1502110463,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1502110463,"objectID":"329c9fba0aae5da28a3ff9159d311e59","permalink":"https://111qqz.github.io/2017/08/tensorflow-notes/","publishdate":"2017-08-07T12:54:23Z","readingtime":4,"relpermalink":"/2017/08/tensorflow-notes/","section":"post","summary":"感觉资料不是很多，先收集资料好了。 tf-distributed官网文档 SO-between-graph和in-graph的区别 inception.README.md SyncReplicasOptimizer SO_How does ps work in","tags":["tensorflow"],"title":"分布式 tensorflow 学习笔记(非最终版)","type":"post","url":"/2017/08/tensorflow-notes/","weight":0,"wordcount":1599},{"author":null,"categories":null,"content":null,"date":1501838564,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501838564,"objectID":"","permalink":"https://111qqz.github.io/tags/supervisor/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/supervisor/","section":"tags","summary":"","tags":null,"title":"supervisor","type":"tags","url":"/tags/supervisor/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1501838564,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501838564,"objectID":"a5357249a4cf9a92f40adc1125304b8e","permalink":"https://111qqz.github.io/2017/08/tensorflow-supervisor-notes/","publishdate":"2017-08-04T09:22:44Z","readingtime":2,"relpermalink":"/2017/08/tensorflow-supervisor-notes/","section":"post","summary":"update:supervisor的缺点是遇到问题只会抛异常，所以现在有一个better的管理工具,MonitoredSession master,chief worker,Supervisor 这几","tags":["supervisor","tensorflow"],"title":"tensorflow Supervisor 学习笔记","type":"post","url":"/2017/08/tensorflow-supervisor-notes/","weight":0,"wordcount":916},{"author":null,"categories":["deep-learning"],"content":null,"date":1501765757,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501765757,"objectID":"7a92c85dbe3268d66b5efe3c0e1879ec","permalink":"https://111qqz.github.io/2017/08/k-means-clustering-notes/","publishdate":"2017-08-03T13:09:17Z","readingtime":1,"relpermalink":"/2017/08/k-means-clustering-notes/","section":"post","summary":"其实这算法巨简单。。。。让我想到了均分纸牌（noip200? 还是大致说一下： 对于有 features 但是 **没有 **labels 的数据，没办法用监督学习，但是可以使用非监","tags":["k-means"],"title":"k-means clustering 学习笔记","type":"post","url":"/2017/08/k-means-clustering-notes/","weight":0,"wordcount":431},{"author":null,"categories":["deep-learning"],"content":null,"date":1501643257,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501643257,"objectID":"2aab913290be1547360b2734773659d8","permalink":"https://111qqz.github.io/2017/08/tensorflow-architecture-notes-2/","publishdate":"2017-08-02T03:07:37Z","readingtime":6,"relpermalink":"/2017/08/tensorflow-architecture-notes-2/","section":"post","summary":"Adding a New Op * [目录](https://www.tensorflow.org/extend/adding_an_op#top_of_page) *","tags":["tensorflow"],"title":"TensorFlow Architecture 学习笔记（二）Adding a New Op","type":"post","url":"/2017/08/tensorflow-architecture-notes-2/","weight":0,"wordcount":2573},{"author":null,"categories":null,"content":null,"date":1501637698,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501637698,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%81%8F%E5%BA%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%81%8F%E5%BA%A6/","section":"tags","summary":"","tags":null,"title":"偏度","type":"tags","url":"/tags/%E5%81%8F%E5%BA%A6/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1501637698,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501637698,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B3%B0%E5%BA%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B3%B0%E5%BA%A6/","section":"tags","summary":"","tags":null,"title":"峰度","type":"tags","url":"/tags/%E5%B3%B0%E5%BA%A6/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1501637698,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501637698,"objectID":"69d2667e357647637cc5d457dfafba8c","permalink":"https://111qqz.github.io/2017/08/kurtosisskewness/","publishdate":"2017-08-02T01:34:58Z","readingtime":1,"relpermalink":"/2017/08/kurtosisskewness/","section":"post","summary":"昨天pinduoduo笔试遇到了，看心情蒙的2333，来学习一下 ** 峰度（Kurtosis）和偏度（Skewness）** 重点：正太分布的峰度","tags":["偏度","峰度"],"title":"峰度（Kurtosis）和偏度（Skewness）","type":"post","url":"/2017/08/kurtosisskewness/","weight":0,"wordcount":262},{"author":null,"categories":["deep-learning"],"content":null,"date":1501556472,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501556472,"objectID":"9f3249093ceeec87510924fc6c3f210a","permalink":"https://111qqz.github.io/2017/08/tensorflow-architecture-notes-1/","publishdate":"2017-08-01T03:01:12Z","readingtime":5,"relpermalink":"/2017/08/tensorflow-architecture-notes-1/","section":"post","summary":"这篇文章不会涉及tensorflow的具体使用，而是专注于介绍tensorflow的架构，目的是让开发者能够对tensorflow现有框架进","tags":["tensorflow"],"title":"TensorFlow Architecture 学习笔记（一）","type":"post","url":"/2017/08/tensorflow-architecture-notes-1/","weight":0,"wordcount":2031},{"author":null,"categories":["deep-learning"],"content":null,"date":1501495501,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501495501,"objectID":"09dddeb511553a213494bfa6b78ae80d","permalink":"https://111qqz.github.io/2017/07/lstm-notes/","publishdate":"2017-07-31T10:05:01Z","readingtime":2,"relpermalink":"/2017/07/lstm-notes/","section":"post","summary":"参考资料： 维基百科_长短期记忆(LSTM) Understanding LSTM Networks [译] 理解 LSTM 网络 LSTM笔记 翻译的比较一般，建议看原文\u0026hellip;.比如cell还是不要","tags":["LSTM","RNN"],"title":"Long Short-Term Memory （LSTM） 网络 学习笔记","type":"post","url":"/2017/07/lstm-notes/","weight":0,"wordcount":995},{"author":null,"categories":null,"content":null,"date":1501495501,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501495501,"objectID":"","permalink":"https://111qqz.github.io/tags/lstm/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lstm/","section":"tags","summary":"","tags":null,"title":"LSTM","type":"tags","url":"/tags/lstm/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1501495501,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501495501,"objectID":"","permalink":"https://111qqz.github.io/tags/rnn/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rnn/","section":"tags","summary":"","tags":null,"title":"RNN","type":"tags","url":"/tags/rnn/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1501436718,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501436718,"objectID":"","permalink":"https://111qqz.github.io/tags/dfs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dfs/","section":"tags","summary":"","tags":null,"title":"dfs","type":"tags","url":"/tags/dfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1501436718,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501436718,"objectID":"a450585236068fd34697d46e6f501ad6","permalink":"https://111qqz.github.io/2017/07/hdu-3078/","publishdate":"2017-07-30T17:45:18Z","readingtime":2,"relpermalink":"/2017/07/hdu-3078/","section":"post","summary":"题目链接 题意： 一棵树，给出点权，问一条树链上第k大的点权，点权可以动态修改。 思路： 暴力即可orz(数据是真的水啊。 求路径上的点的时候需要用到","tags":["dfs","LCA","rmq"],"title":"hdu 3078 Network (LCA)","type":"post","url":"/2017/07/hdu-3078/","weight":0,"wordcount":520},{"author":null,"categories":null,"content":null,"date":1501436718,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501436718,"objectID":"","permalink":"https://111qqz.github.io/tags/rmq/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/rmq/","section":"tags","summary":"","tags":null,"title":"rmq","type":"tags","url":"/tags/rmq/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1501416330,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501416330,"objectID":"bc1156ef0c7e0a96ec41ba012b28ed5b","permalink":"https://111qqz.github.io/2017/07/codeforces-div2-425d/","publishdate":"2017-07-30T12:05:30Z","readingtime":2,"relpermalink":"/2017/07/codeforces-div2-425d/","section":"post","summary":"题目链接 题意： 给出一棵树，以及三个点（可能重合），问两两组成的3条路径中，哪2条路径重合部分最长。 思路： LCA还是一下就能想到的，rmq+d","tags":["dfs","LCA","rmq"],"title":"codeforces #425 D. Misha, Grisha and Underground (dfs+rmq在线求LCA,讨论了一年)","type":"post","url":"/2017/07/codeforces-div2-425d/","weight":0,"wordcount":937},{"author":null,"categories":null,"content":null,"date":1501397183,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501397183,"objectID":"","permalink":"https://111qqz.github.io/tags/brute-force/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/brute-force/","section":"tags","summary":"","tags":null,"title":"brute force","type":"tags","url":"/tags/brute-force/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1501397183,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501397183,"objectID":"12f1995dae34df6f94ffc498e5b649f2","permalink":"https://111qqz.github.io/2017/07/codeforces-div2-425b/","publishdate":"2017-07-30T06:46:23Z","readingtime":2,"relpermalink":"/2017/07/codeforces-div2-425b/","section":"post","summary":"题目链接 题意： 给出由小写字母，'?\u0026lsquo;和\u0026rsquo;*\u0026lsquo;组成的字符串s，仅由小写字母组成的字符串t,问按照规则s能否","tags":["brute force"],"title":"codeforces #425 B. Petya and Exam (暴力)","type":"post","url":"/2017/07/codeforces-div2-425b/","weight":0,"wordcount":983},{"author":null,"categories":null,"content":null,"date":1501251816,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501251816,"objectID":"","permalink":"https://111qqz.github.io/tags/bsgs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/bsgs/","section":"tags","summary":"","tags":null,"title":"BSGS","type":"tags","url":"/tags/bsgs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1501251816,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501251816,"objectID":"263536daa4d9c1926720c129e69e7a45","permalink":"https://111qqz.github.io/2017/07/hdu-2815/","publishdate":"2017-07-28T14:23:36Z","readingtime":1,"relpermalink":"/2017/07/hdu-2815/","section":"post","summary":"题意：k^D=n(%p),求最小的D (1\u0026lt;=K, P, N\u0026lt;=10^9) 思路：出题人英文水平捉鸡。。。。 扩展BSGS算法即可，注意p\u0026gt;=n的时候显然是无解的，判掉。","tags":["BSGS","扩展BSGS"],"title":"hdu 2815 Mod Tree (扩展BSGS算法)","type":"post","url":"/2017/07/hdu-2815/","weight":0,"wordcount":393},{"author":null,"categories":null,"content":null,"date":1501251816,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501251816,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%89%A9%E5%B1%95bsgs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%89%A9%E5%B1%95bsgs/","section":"tags","summary":"","tags":null,"title":"扩展BSGS","type":"tags","url":"/tags/%E6%89%A9%E5%B1%95bsgs/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1501233214,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1501233214,"objectID":"471bf77b0f4746c9269e199963c752c1","permalink":"https://111qqz.github.io/2017/07/install-youcompleteme-on-manjaro/","publishdate":"2017-07-28T09:13:34Z","readingtime":1,"relpermalink":"/2017/07/install-youcompleteme-on-manjaro/","section":"post","summary":"来来回回折腾了好多次，aur直接安装或者手动编译，安装后都无法补全 ycm的log文件是在/tmp目录下的。 发现问题是缺少libtinfo.s","tags":["archlinux","vim","youcompleteme"],"title":"manjaro(archlinux) 安装 YouCompleteMe","type":"post","url":"/2017/07/install-YouCompleteMe-on-manjaro/","weight":0,"wordcount":271},{"author":null,"categories":null,"content":null,"date":1501233214,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1501233214,"objectID":"","permalink":"https://111qqz.github.io/tags/youcompleteme/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/youcompleteme/","section":"tags","summary":"","tags":null,"title":"youcompleteme","type":"tags","url":"/tags/youcompleteme/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1500903460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500903460,"objectID":"6a00eaa31b2e6a2f3c8675b55dcfc036","permalink":"https://111qqz.github.io/2017/07/bzoj-2480/","publishdate":"2017-07-24T13:37:40Z","readingtime":2,"relpermalink":"/2017/07/bzoj-2480/","section":"post","summary":"Description 已知数a,p,b，求满足a^x≡b(mod p)的最小自然数x。 Input 每个测试文件中最多包含100组测试数据。 每组数据中，每行包含3个正整数a,","tags":["BSGS","扩展BSGS"],"title":"BZOJ 2480: Spoj3105 Mod (扩展BSGS算法，模板)","type":"post","url":"/2017/07/bzoj-2480/","weight":0,"wordcount":593},{"author":null,"categories":null,"content":null,"date":1500865715,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500865715,"objectID":"","permalink":"https://111qqz.github.io/tags/numpy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/numpy/","section":"tags","summary":"","tags":null,"title":"numpy","type":"tags","url":"/tags/numpy/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1500865715,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":8200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500865715,"objectID":"334064048c56e2f12a1cab710c808a70","permalink":"https://111qqz.github.io/2017/07/python-numpy-notes/","publishdate":"2017-07-24T03:08:35Z","readingtime":17,"relpermalink":"/2017/07/python-numpy-notes/","section":"post","summary":"原文链接 感谢stanford,感谢原作者的翻译，我调整了一下代码格式，可以当做手册来用了，毕竟之前没怎么写过py 23333 原文如下 这篇教程由Just","tags":["numpy","python"],"title":"python numpy 用法 简明手册","type":"post","url":"/2017/07/python-numpy-notes/","weight":0,"wordcount":8157},{"author":null,"categories":["ACM"],"content":null,"date":1500813706,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500813706,"objectID":"cd0353f2f485e7b20ba9a05d09b317b9","permalink":"https://111qqz.github.io/2017/07/bsgs-algorithm-notes/","publishdate":"2017-07-23T12:41:46Z","readingtime":2,"relpermalink":"/2017/07/bsgs-algorithm-notes/","section":"post","summary":"离散对数（Discrete Logarithm）问题是这样一个问题，它是对于模方程 a^x=b(mod prime)，求满足条件的X，或者得出不存在这样的X 最暴力","tags":["BSGS","分块"],"title":"BSGS（Baby steps giant steps）算法学习笔记","type":"post","url":"/2017/07/bsgs-algorithm-notes/","weight":0,"wordcount":910},{"author":null,"categories":null,"content":null,"date":1500813706,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500813706,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%88%86%E5%9D%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%88%86%E5%9D%97/","section":"tags","summary":"","tags":null,"title":"分块","type":"tags","url":"/tags/%E5%88%86%E5%9D%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1500812008,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500812008,"objectID":"9b98fde740e1b07a5c0c4a6b70a25f71","permalink":"https://111qqz.github.io/2017/07/poj-2417/","publishdate":"2017-07-23T12:13:28Z","readingtime":1,"relpermalink":"/2017/07/poj-2417/","section":"post","summary":"题目链接 题意： Given a prime P, 2 \u0026lt;= P \u0026lt; 231, an integer B, 2 \u0026lt;= B \u0026lt; P, and an integer N, 1 \u0026lt;= N \u0026lt; P, compute the discrete logarithm of N, base B, modulo P. That is, find an integer L such that BL == N (mod P) 思路：bsgs算法 详情见BS","tags":["BSGS"],"title":"poj 2417 Discrete Logging (BSGS算法)","type":"post","url":"/2017/07/poj-2417/","weight":0,"wordcount":477},{"author":null,"categories":["deep-learning"],"content":null,"date":1500713768,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500713768,"objectID":"0ee4b00a15d5dd7934f25a0a1f9c73ea","permalink":"https://111qqz.github.io/2017/07/common-activation-functions/","publishdate":"2017-07-22T08:56:08Z","readingtime":6,"relpermalink":"/2017/07/common-activation-functions/","section":"post","summary":"其实我觉得这部分可以直接黑箱。。。直接无脑上Leaky ReLU或者Maxou？不过对这些激活函数的特点有个high-level的了解应该总是","tags":["激活函数"],"title":"stanford cs 231n:常用激活函数","type":"post","url":"/2017/07/common-activation-functions/","weight":0,"wordcount":2632},{"author":null,"categories":null,"content":null,"date":1500713768,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500713768,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"激活函数","type":"tags","url":"/tags/%E6%BF%80%E6%B4%BB%E5%87%BD%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1500445300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500445300,"objectID":"b17afc1a5da8a595895f204f9c3f0fe4","permalink":"https://111qqz.github.io/2017/07/how-to-copy-modify-nets-model-on-tensorflow-slim/","publishdate":"2017-07-19T06:21:40Z","readingtime":2,"relpermalink":"/2017/07/how-to-copy-modify-nets-model-on-tensorflow-slim/","section":"post","summary":"想要修改tensorflow-slim 中 nets中的某个model,例如明明为kk_v2.py 观察到train_image_classifi","tags":["slim","tensorflow"],"title":"how to copy \u0026 modify nets model on tensorflow slim","type":"post","url":"/2017/07/how-to-copy-modify-nets-model-on-tensorflow-slim/","weight":0,"wordcount":559},{"author":null,"categories":null,"content":null,"date":1500445300,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500445300,"objectID":"","permalink":"https://111qqz.github.io/tags/slim/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/slim/","section":"tags","summary":"","tags":null,"title":"slim","type":"tags","url":"/tags/slim/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1500345770,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500345770,"objectID":"","permalink":"https://111qqz.github.io/tags/inception/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/inception/","section":"tags","summary":"","tags":null,"title":"Inception","type":"tags","url":"/tags/inception/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1500345770,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500345770,"objectID":"216a68da7b97ea6629eaab6ec3f3c62d","permalink":"https://111qqz.github.io/2017/07/inception-resnet-notes/","publishdate":"2017-07-18T02:42:50Z","readingtime":13,"relpermalink":"/2017/07/inception-resnet-notes/","section":"post","summary":"原始论文 翻译链接 摘要： 近年来，深度卷积神经网络对图像识别性能的巨大提升发挥着关键作用。以Inception网络为例，其以相对较低的计算代价取","tags":["Inception","resnet"],"title":"Inception-v4,Inception-ResNet 和残差连接对学习的影响","type":"post","url":"/2017/07/inception-resnet-notes/","weight":0,"wordcount":6395},{"author":null,"categories":null,"content":null,"date":1500345770,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500345770,"objectID":"","permalink":"https://111qqz.github.io/tags/resnet/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/resnet/","section":"tags","summary":"","tags":null,"title":"resnet","type":"tags","url":"/tags/resnet/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1500256963,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500256963,"objectID":"","permalink":"https://111qqz.github.io/tags/convolutional-neural-network/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/convolutional-neural-network/","section":"tags","summary":"","tags":null,"title":"Convolutional Neural Network","type":"tags","url":"/tags/convolutional-neural-network/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1500256963,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500256963,"objectID":"","permalink":"https://111qqz.github.io/tags/cs231n/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cs231n/","section":"tags","summary":"","tags":null,"title":"CS231n","type":"tags","url":"/tags/cs231n/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1500256963,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1500256963,"objectID":"","permalink":"https://111qqz.github.io/tags/linear-classification/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linear-classification/","section":"tags","summary":"","tags":null,"title":"Linear classification","type":"tags","url":"/tags/linear-classification/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1500256963,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":13000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500256963,"objectID":"5f12b03f7e3e74f544a6be0551a81c18","permalink":"https://111qqz.github.io/2017/07/cs231n-linear-classification/","publishdate":"2017-07-17T02:02:43Z","readingtime":26,"relpermalink":"/2017/07/cs231n-linear-classification/","section":"post","summary":"课程链接 知乎翻译链接 之前看的原版，后来发现知乎上有翻译，正好想到之前看完没有整理总结，干脆就写一下自己的理解，顺便贴一下课程翻译（感觉翻译的","tags":["Convolutional Neural Network","CS231n","Linear classification"],"title":"stanford CS231n notes：Linear classification","type":"post","url":"/2017/07/cs231n-linear-classification/","weight":0,"wordcount":12968},{"author":null,"categories":["deep-learning"],"content":null,"date":1500210604,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1500210604,"objectID":"eee3c88c5df742400cd6f469a2e1206f","permalink":"https://111qqz.github.io/2017/07/tensorflow-slim-code-notes/","publishdate":"2017-07-16T13:10:04Z","readingtime":9,"relpermalink":"/2017/07/tensorflow-slim-code-notes/","section":"post","summary":"py的源码看起来还是很愉快的。。。（虽然熟练成程度完全不如cpp。。。。 datasets里是数据集相关 deployment是部署相关 nets","tags":["tensorflow"],"title":"tensorflow slim 源码分析","type":"post","url":"/2017/07/tensorflow-slim-code-notes/","weight":0,"wordcount":4259},{"author":null,"categories":["deep-learning"],"content":null,"date":1499651344,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1499651344,"objectID":"4ff4e0d1178be131478cc50cb4147781","permalink":"https://111qqz.github.io/2017/07/gradient-descent-methods/","publishdate":"2017-07-10T01:49:04Z","readingtime":3,"relpermalink":"/2017/07/gradient-descent-methods/","section":"post","summary":"参考资料 机器学习中梯度下降（Gradient Descent， GD）算法只需要计算损失函数的一阶导数，计算代价小，非常适合训练数据非常大的应用","tags":["梯度下降"],"title":"几种梯度下降(GD)法的比较（转载）","type":"post","url":"/2017/07/Gradient-descent-methods/","weight":0,"wordcount":1297},{"author":null,"categories":null,"content":null,"date":1499651344,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1499651344,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/","section":"tags","summary":"","tags":null,"title":"梯度下降","type":"tags","url":"/tags/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/","weight":0,"wordcount":0},{"author":null,"categories":["deep-learning"],"content":null,"date":1499330151,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1499330151,"objectID":"de6d66c8467f5bd1b32fae0f98a9f9f2","permalink":"https://111qqz.github.io/2017/07/deep-learning-tutorial-pca-and-whitening/","publishdate":"2017-07-06T08:35:51Z","readingtime":4,"relpermalink":"/2017/07/deep-learning-tutorial-pca-and-whitening/","section":"post","summary":"说下我自己的理解 PCA：主成分分析，是一种预处理手段。对于n维的数据，通过一些手段，把变化显著的k个维度保留，舍弃另外n-k个维度。对于一些","tags":["PCA","Whitening","预处理"],"title":"Deep Learning Tutorial - PCA and Whitening","type":"post","url":"/2017/07/deep-learning-tutorial-pca-and-whitening/","weight":0,"wordcount":1699},{"author":null,"categories":null,"content":null,"date":1499330151,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1499330151,"objectID":"","permalink":"https://111qqz.github.io/tags/whitening/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/whitening/","section":"tags","summary":"","tags":null,"title":"Whitening","type":"tags","url":"/tags/whitening/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1499330151,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1499330151,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%A2%84%E5%A4%84%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%A2%84%E5%A4%84%E7%90%86/","section":"tags","summary":"","tags":null,"title":"预处理","type":"tags","url":"/tags/%E9%A2%84%E5%A4%84%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1498493359,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1498493359,"objectID":"16dfe5c469fe4dddbc8600b4681d50f7","permalink":"https://111qqz.github.io/2017/06/install-qq-on-manjaro/","publishdate":"2017-06-26T16:09:19Z","readingtime":2,"relpermalink":"/2017/06/install-qq-on-manjaro/","section":"post","summary":"参考资料：install qq/tim on linux with wine wine运行qq不能输入账号 This tutorial introduces how to install QQ/TIM in Linux with Wine, which had been tested on ArchLinux with Wine 2.4. Prerequisites Before start, you need to get the latest Wine. I\u0026rsquo;m not sure whether QQ/TIM can run on lower","tags":null,"title":"archlinux/manjaro 下 安装 qq/tim","type":"post","url":"/2017/06/install-qq-on-manjaro/","weight":0,"wordcount":578},{"author":null,"categories":["其他"],"content":null,"date":1497039161,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1497039161,"objectID":"1ead4c022c1a9efae83b8b51836037ec","permalink":"https://111qqz.github.io/2017/06/libgfortran-so-4-missing-under-archlinux/","publishdate":"2017-06-09T20:12:41Z","readingtime":3,"relpermalink":"/2017/06/libgfortran-so-4-missing-under-archlinux/","section":"post","summary":"。。。哭了哦。。终于解决了这个bug 参考资料： libgfortran broken? libgfortran=3.0 should not be install with numpy \u0026lt;= 1.9 [SOLVED] libgfortran.so.3:cannot open shared object file: No such file [Replacing gcc-libs-libs with gcc-multilib arch conflict with gcc-libs and gcc-libs-multilib on latest update 一开始以为是anaconda","tags":["archlinux","python"],"title":"libgfortran.so.4 missing under archlinux","type":"post","url":"/2017/06/libgfortran-so-4-missing-under-archlinux/","weight":0,"wordcount":1005},{"author":null,"categories":null,"content":null,"date":1496946374,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496946374,"objectID":"","permalink":"https://111qqz.github.io/tags/manjaro/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/manjaro/","section":"tags","summary":"","tags":null,"title":"manjaro","type":"tags","url":"/tags/manjaro/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1496946374,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496946374,"objectID":"11730e26fc1d7d00baec49ce8b7ed400","permalink":"https://111qqz.github.io/2017/06/manjaro-installation-guide/","publishdate":"2017-06-08T18:26:14Z","readingtime":18,"relpermalink":"/2017/06/manjaro-installation-guide/","section":"post","summary":"20180214 update: 第一个版本已经比较久了，于是更新一下，顺便写了个脚本orz pacman-mirrors -c China echo \u0026quot; [archlinuxcn] \u0026quot; \u0026gt;\u0026gt; /etc/pacman.conf echo \u0026quot; SigLevel = Optional TrustedOnly \u0026quot; \u0026gt;\u0026gt; /etc/pacman.conf echo \u0026quot; Server = https://mirrors.ustc.edu.cn/archlinuxcn/\\$arch\u0026quot; \u0026gt;\u0026gt; /etc/pacman.conf echo \u0026quot;[arch4edu]\u0026quot; \u0026gt;\u0026gt; /etc/pacman.conf echo \u0026quot;SigLevel = Never\u0026quot; \u0026gt;\u0026gt; /etc/pacman.conf echo \u0026quot;Server = http://mirrors.tuna.tsinghua.edu.cn/arch4edu/\\$arch","tags":["manjaro"],"title":"manjaro installation guide","type":"post","url":"/2017/06/manjaro-installation-guide/","weight":0,"wordcount":8910},{"author":null,"categories":null,"content":null,"date":1496927031,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496927031,"objectID":"","permalink":"https://111qqz.github.io/tags/anaconda/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/anaconda/","section":"tags","summary":"","tags":null,"title":"anaconda","type":"tags","url":"/tags/anaconda/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1496927031,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496927031,"objectID":"79ade6eaf63ce409e0f59014231dde13","permalink":"https://111qqz.github.io/2017/06/how-to-fix-conda-upgrade-valueerror/","publishdate":"2017-06-08T13:03:51Z","readingtime":1,"relpermalink":"/2017/06/how-to-fix-conda-upgrade-valueerror/","section":"post","summary":"conda update anaconda 后提示 ValueError: unsupported format character ')' (0x29) at index 49 查到了这个：anaconda update issue 我先把psutil卸载掉，重新update了一下，成功。 conda remove psutil","tags":["anaconda","python"],"title":"conda升级anaconda　ValueError的解决办法","type":"post","url":"/2017/06/how-to-fix-conda-upgrade-valueerror/","weight":0,"wordcount":62},{"author":null,"categories":null,"content":null,"date":1496818416,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496818416,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","section":"tags","summary":"","tags":null,"title":"数字图像处理","type":"tags","url":"/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1496818416,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496818416,"objectID":"87791497d5afdf2978774e21e4aa09cf","permalink":"https://111qqz.github.io/2017/06/digital-image-processing-course-final-project/","publishdate":"2017-06-07T06:53:36Z","readingtime":2,"relpermalink":"/2017/06/digital-image-processing-course-final-project/","section":"post","summary":"\u0026hellip;先随便记录一下好了。。。 * 神经网络识别数字或者字母？ * 识别车牌号？ * not hot dog? 安装python pandas pandas 发现之前装caffe的时候\u0026h","tags":["python","数字图像处理"],"title":"数字图像处理大作业(初步）","type":"post","url":"/2017/06/digital-image-processing-course-final-project/","weight":0,"wordcount":732},{"author":null,"categories":["其他"],"content":null,"date":1496816472,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496816472,"objectID":"70d4282d76310ed430cead621000b85d","permalink":"https://111qqz.github.io/2017/06/vimrc-for-python/","publishdate":"2017-06-07T06:21:12Z","readingtime":2,"relpermalink":"/2017/06/vimrc-for-python/","section":"post","summary":"由于最近要做数字图像处理的大作业，以及之后一段时间，估计写python多一些，所以打算花些时间配置下vim. 1. 一键执行 其实之前一直有的。。不","tags":["python","vim"],"title":"vim下python 的配置","type":"post","url":"/2017/06/vimrc-for-python/","weight":0,"wordcount":779},{"author":null,"categories":null,"content":null,"date":1496814627,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496814627,"objectID":"","permalink":"https://111qqz.github.io/tags/fish/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fish/","section":"tags","summary":"","tags":null,"title":"fish","type":"tags","url":"/tags/fish/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1496814627,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496814627,"objectID":"","permalink":"https://111qqz.github.io/tags/vundle/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vundle/","section":"tags","summary":"","tags":null,"title":"vundle","type":"tags","url":"/tags/vundle/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1496814627,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496814627,"objectID":"b2ffaa5f6b284e42929f6f208d7b520a","permalink":"https://111qqz.github.io/2017/06/vundle-error-detected-while-processing-function/","publishdate":"2017-06-07T05:50:27Z","readingtime":1,"relpermalink":"/2017/06/vundle-error-detected-while-processing-function/","section":"post","summary":"好久没装新插件了，最新要配下python,发现安装时候满屏的错误。。。 最后发现是shell的锅，因为我用的是fish,在.vimrc文件中添","tags":["fish","vim","vundle"],"title":"vundle error detected while processing function","type":"post","url":"/2017/06/vundle-error-detected-while-processing-function/","weight":0,"wordcount":295},{"author":null,"categories":["其他"],"content":null,"date":1496749357,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496749357,"objectID":"4955872b006498f06e57c319879e5eb7","permalink":"https://111qqz.github.io/2017/06/digital-image-processing-course-review/","publishdate":"2017-06-06T11:42:37Z","readingtime":4,"relpermalink":"/2017/06/digital-image-processing-course-review/","section":"post","summary":"复习一下数字图像处理。 按照我自己的理解简单来说： 原链码：按照任意起点走边界一周，方向按照上图对应的表示，得到的数字序列就是原链码。 归一化链码","tags":["数字图像处理"],"title":"边界的链码，归一化链码，差分玛，形状数","type":"post","url":"/2017/06/digital-image-processing-course-review/","weight":0,"wordcount":1626},{"author":null,"categories":null,"content":null,"date":1496596479,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1496596479,"objectID":"","permalink":"https://111qqz.github.io/tags/qt/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/qt/","section":"tags","summary":"","tags":null,"title":"qt","type":"tags","url":"/tags/qt/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1496596479,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496596479,"objectID":"f8afd497ee439c55db0bf329e3822b3a","permalink":"https://111qqz.github.io/2017/06/qt-5-notes-5/","publishdate":"2017-06-04T17:14:39Z","readingtime":1,"relpermalink":"/2017/06/qt-5-notes-5/","section":"post","summary":"qt_5.9_ui_doc 还是比直接写代码方便点。。。所以不妨学习一个！ 以及。。。qt在2017年6月１号发布了5.9。。。所以之前是5.8。。。现在变成5.9了。","tags":["qt","c++"],"title":"qt 5.x　初探　(5)　","type":"post","url":"/2017/06/qt-5-notes-5/","weight":0,"wordcount":153},{"author":null,"categories":["其他"],"content":null,"date":1496580891,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496580891,"objectID":"aa682a9c932f383891574554998f5332","permalink":"https://111qqz.github.io/2017/06/qt-5-notes-4/","publishdate":"2017-06-04T12:54:51Z","readingtime":3,"relpermalink":"/2017/06/qt-5-notes-4/","section":"post","summary":"des的基本搞定了。。。打包。。。 在linux下打包成exe。。。。实在是。。没什么好办法的样子。。。 嘛。转念一想。老师说是打包成可执行文件","tags":["qt","c++"],"title":"qt 5.x初探　（４）　qt 在win下打包成exe","type":"post","url":"/2017/06/qt-5-notes-4/","weight":0,"wordcount":1344},{"author":null,"categories":["其他"],"content":null,"date":1496124189,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1496124189,"objectID":"69885372f9f82dd9c9ad85f41fd0ee55","permalink":"https://111qqz.github.io/2017/05/think-about-love-relationship/","publishdate":"2017-05-30T06:03:09Z","readingtime":2,"relpermalink":"/2017/05/think-about-love-relationship/","section":"post","summary":"最近和妹子闹了一点小矛盾，不过已经problem solved. 大概是因为，我聊到了妹子很不喜欢的话题，导致妹子情绪变得负面而我还没意识到\u0026hellip;","tags":null,"title":"关于恋爱模式的一点思考","type":"post","url":"/2017/05/think-about-Love-relationship/","weight":0,"wordcount":790},{"author":null,"categories":["其他"],"content":null,"date":1495944635,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1495944635,"objectID":"39bbbfb566c1fac083994bbbe2db166f","permalink":"https://111qqz.github.io/2017/05/missing-grub-after-install-windows10/","publishdate":"2017-05-28T04:10:35Z","readingtime":1,"relpermalink":"/2017/05/missing-grub-after-install-windows10/","section":"post","summary":"我之前是单系统manjaro，装了win10以后，grub menu直接消失不见\u0026hellip; ubuntu 的live cd进去，用神器boot-repa","tags":null,"title":"安装win10后导致grub 引导缺失的解决办法","type":"post","url":"/2017/05/missing-grub-after-install-windows10/","weight":0,"wordcount":283},{"author":null,"categories":["其他"],"content":null,"date":1495392087,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1495392087,"objectID":"c07f183e926178e505b328283a3714bc","permalink":"https://111qqz.github.io/2017/05/install-archlinux-notes/","publishdate":"2017-05-21T18:41:27Z","readingtime":1,"relpermalink":"/2017/05/install-archlinux-notes/","section":"post","summary":"实在不忍心x1c吃灰。。。 打算装个arch玩。。。 第一次失败了，原因是忘记配置引导相关\u0026hellip; 第二次就成功了\u0026hellip; 教程满大","tags":null,"title":"archlinux安装记","type":"post","url":"/2017/05/install-archlinux-notes/","weight":0,"wordcount":167},{"author":null,"categories":["其他"],"content":null,"date":1495111640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1495111640,"objectID":"ec4196c629cbc6e3643c2e9dbe532a55","permalink":"https://111qqz.github.io/2017/05/qt-5-notes-3/","publishdate":"2017-05-18T12:47:20Z","readingtime":2,"relpermalink":"/2017/05/qt-5-notes-3/","section":"post","summary":"update3： 终于知道了正确的学习姿势\u0026hellip; 用百度把要用的东西大概描述出来，然后总能找到一个是你要的。。。 然后再去搜关键词。。。","tags":["qt","c++"],"title":"qt 5.x初探 （3）","type":"post","url":"/2017/05/qt-5-notes-3/","weight":0,"wordcount":673},{"author":null,"categories":["其他"],"content":null,"date":1494918426,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494918426,"objectID":"b8da00cdb8ccec2e45a03bc3826794d2","permalink":"https://111qqz.github.io/2017/05/cpp-header-file-and-source-file/","publishdate":"2017-05-16T07:07:06Z","readingtime":11,"relpermalink":"/2017/05/cpp-header-file-and-source-file/","section":"post","summary":"感觉其实。。。更像是一种规范。。。？而不是一种具体要求吧。。。 转自 头文件(.h)： 写类的声明（包括类里面的成员和方法的声明）、函数原型、#d","tags":null,"title":"C++中头文件（.h）和源文件（.cpp）都应该写些什么（转载）","type":"post","url":"/2017/05/cpp-header-file-and-source-file/","weight":0,"wordcount":5083},{"author":null,"categories":null,"content":null,"date":1494916803,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1494916803,"objectID":"","permalink":"https://111qqz.github.io/tags/g++/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/g++/","section":"tags","summary":"","tags":null,"title":"g++","type":"tags","url":"/tags/g++/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1494916803,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494916803,"objectID":"7181237174c27c0326af4354f7e10ef6","permalink":"https://111qqz.github.io/2017/05/g++-compile-multi-file/","publishdate":"2017-05-16T06:40:03Z","readingtime":3,"relpermalink":"/2017/05/g++-compile-multi-file/","section":"post","summary":"参考资料 一. 常用编译命令选项 假设源程序文件名为test.c。 无选项编译链接 用法：#gcc test.c 作用：将test.c预处理、汇编、编译并链接形成可","tags":["g++"],"title":"g++ 编译多个源文件（转载）","type":"post","url":"/2017/05/g++-compile-multi-file/","weight":0,"wordcount":1369},{"author":null,"categories":["其他"],"content":null,"date":1494904459,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494904459,"objectID":"95ff87e3ab80db4a5f7472e8ba9e8c26","permalink":"https://111qqz.github.io/2017/05/qt-5-notes-2/","publishdate":"2017-05-16T03:14:19Z","readingtime":6,"relpermalink":"/2017/05/qt-5-notes-2/","section":"post","summary":"先来放一波过程中用到的资料和官方文档好了。 basic layout_qt5.8 QBoxLayout Class_qt5.8 QString Class 5.8 QChar Class qt 5.8 Standard Dialogs Example qt 5.8 更新的部分还是放在最前面好了。。。 convert from QString to char *的时候有个坑。。。 举","tags":["qt","c++"],"title":"qt 5.x 学习笔记　(2)","type":"post","url":"/2017/05/qt-5-notes-2/","weight":0,"wordcount":2630},{"author":null,"categories":["其他"],"content":null,"date":1494764516,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494764516,"objectID":"b30383aa5a6d207e61776c7c2b341922","permalink":"https://111qqz.github.io/2017/05/qt-5-notes-1/","publishdate":"2017-05-14T12:21:56Z","readingtime":1,"relpermalink":"/2017/05/qt-5-notes-1/","section":"post","summary":"嘛。。为了系统安全课来学一波qt\u0026hellip; 现在算是写出了一个可以打开文件，保存文件的记事本。。。 接下来要搞定的事情是。。。如何写一个自","tags":["qt","c++"],"title":"qt 5.x　初探(1)","type":"post","url":"/2017/05/qt-5-notes-1/","weight":0,"wordcount":382},{"author":null,"categories":["ACM"],"content":null,"date":1494595656,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494595656,"objectID":"ef5ca899dc677f01773c686afa437e9f","permalink":"https://111qqz.github.io/2017/05/codeforces-div2-413c/","publishdate":"2017-05-12T13:27:36Z","readingtime":2,"relpermalink":"/2017/05/codeforces-div2-413c/","section":"post","summary":"题目链接 题意：有２种货币，分别为C和D.给出n种资源的代价和美丽度，每种资源只能用其中一种资源购买。现在拥有货币C的数量是c,拥有货币D的数","tags":["树状数组"],"title":"codeforces #413  C. Fountains （BIT维护前缀max）","type":"post","url":"/2017/05/codeforces-div2-413c/","weight":0,"wordcount":891},{"author":null,"categories":["ACM"],"content":null,"date":1494595086,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494595086,"objectID":"658646bac2f11f11df889291be6eb0d0","permalink":"https://111qqz.github.io/2017/05/codeforces-div2-413b/","publishdate":"2017-05-12T13:18:06Z","readingtime":2,"relpermalink":"/2017/05/codeforces-div2-413b/","section":"post","summary":"题目链接 题意：有n个Ｔ恤，每个价格都不同，有三种颜色，分别用1,2,3表示，每件Ｔ恤给出前xiong和后背的颜色。现在有m个顾客排成一队，对","tags":["greedy"],"title":"codeforces #413 B T-shirt buying (贪心)","type":"post","url":"/2017/05/codeforces-div2-413b/","weight":0,"wordcount":626},{"author":null,"categories":null,"content":null,"date":1494595086,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1494595086,"objectID":"","permalink":"https://111qqz.github.io/tags/greedy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/greedy/","section":"tags","summary":"","tags":null,"title":"greedy","type":"tags","url":"/tags/greedy/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1494594750,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1494594750,"objectID":"deb077b9618bcdd4619688d00ad9da07","permalink":"https://111qqz.github.io/2017/05/codeforces-div2-413a/","publishdate":"2017-05-12T13:12:30Z","readingtime":1,"relpermalink":"/2017/05/codeforces-div2-413a/","section":"post","summary":"题目链接 题意：初始有一个锅，每t分钟可以做好k个饼，现在需要N个饼。还可以另外建一个锅，花费d时间，建好以后两个锅可以并行烙饼。问是否应该建","tags":["math","模拟"],"title":"codeforces #413 A. Carrot Cakes (模拟)","type":"post","url":"/2017/05/codeforces-div2-413a/","weight":0,"wordcount":349},{"author":null,"categories":["其他"],"content":null,"date":1493902686,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1493902686,"objectID":"704491cc1dc622ae02f17df56380d101","permalink":"https://111qqz.github.io/2017/05/20170504/","publishdate":"2017-05-04T12:58:06Z","readingtime":2,"relpermalink":"/2017/05/20170504/","section":"post","summary":"啊。。在准备考试QAQ 明天约了鹅厂面试。。。然而从四月就开始一直考试考试考试\u0026hellip;.感觉药丸啊？ MS的结果貌似明天也要出了orz\u0026","tags":null,"title":"20170504近况","type":"post","url":"/2017/05/20170504/","weight":0,"wordcount":630},{"author":null,"categories":["其他"],"content":null,"date":1493535507,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1493535507,"objectID":"ac8fb7fb015c9c9e67a471e78945af20","permalink":"https://111qqz.github.io/2017/04/fix-ubuntu-package-manager-broken-problem/","publishdate":"2017-04-30T06:58:27Z","readingtime":1,"relpermalink":"/2017/04/fix-ubuntu-package-manager-broken-problem/","section":"post","summary":"症状是不管安装什么，都会说有一大堆依赖无法安装。。。 大概是: a depends b[i],but b[i] is not be installed. (b==0..n) 最后会提示Unable to correct problems, you have held broken packages 解决办法：用synapt","tags":null,"title":"ubuntu  包管理(apt-get)损坏的解决办法","type":"post","url":"/2017/04/fix-ubuntu-package-manager-broken-problem/","weight":0,"wordcount":287},{"author":null,"categories":null,"content":null,"date":1493478591,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1493478591,"objectID":"","permalink":"https://111qqz.github.io/tags/chromebook/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/chromebook/","section":"tags","summary":"","tags":null,"title":"chromebook","type":"tags","url":"/tags/chromebook/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1493478591,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1493478591,"objectID":"","permalink":"https://111qqz.github.io/tags/galliumos/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/galliumos/","section":"tags","summary":"","tags":null,"title":"galliumOS","type":"tags","url":"/tags/galliumos/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1493478591,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1493478591,"objectID":"217f073c718f873b4c87ca833bcd874d","permalink":"https://111qqz.github.io/2017/04/install-galliumos-with-chrx-on-chromebook/","publishdate":"2017-04-29T15:09:51Z","readingtime":2,"relpermalink":"/2017/04/install-galliumos-with-chrx-on-chromebook/","section":"post","summary":"我的chromebook 是 samsung 3 查阅Hardware Compatibility 可以知道我的cb支持 gallium,对应的cpu 是Intel Braswell 然后去galliumos 官","tags":["chromebook","galliumOS"],"title":"install galliumOS on chromebook with chrx","type":"post","url":"/2017/04/install-galliumos-with-chrx-on-chromebook/","weight":0,"wordcount":550},{"author":null,"categories":["其他"],"content":null,"date":1493279602,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1493279602,"objectID":"6bcf0c94b0db3c64c8d7c315bb3d2562","permalink":"https://111qqz.github.io/2017/04/why-is-it-like-this/","publishdate":"2017-04-27T07:53:22Z","readingtime":1,"relpermalink":"/2017/04/why-is-it-like-this/","section":"post","summary":"连着考试。。。 取消考试周这做法就是蠢。。。 白天上课晚上考试。。。 说得好像没有考试周大家就不会复习了一样。。。 结果就只能是在白天的课上复习。。","tags":null,"title":"为什么。。。为什么会变成这样呢。。。","type":"post","url":"/2017/04/why-is-it-like-this/","weight":0,"wordcount":243},{"author":null,"categories":["其他"],"content":null,"date":1492606573,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492606573,"objectID":"62ca5db19c203a35bd61b2f503299fad","permalink":"https://111qqz.github.io/2017/04/20140419/","publishdate":"2017-04-19T12:56:13Z","readingtime":1,"relpermalink":"/2017/04/20140419/","section":"post","summary":"在知乎看到这句话，不禁在想 人无疑是zhangk，可是学到了什么呢？ 好像什么都没学到T T 那我好亏啊~~~~(\u0026gt;_\u0026lt;)~~~~","tags":null,"title":"20140419","type":"post","url":"/2017/04/20140419/","weight":0,"wordcount":67},{"author":null,"categories":null,"content":null,"date":1492172716,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492172716,"objectID":"","permalink":"https://111qqz.github.io/tags/leetcode/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/leetcode/","section":"tags","summary":"","tags":null,"title":"leetcode","type":"tags","url":"/tags/leetcode/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492172716,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492172716,"objectID":"25cb2d1858fba216f9ad61b38462eecd","permalink":"https://111qqz.github.io/2017/04/leetcode-162/","publishdate":"2017-04-14T12:25:16Z","readingtime":1,"relpermalink":"/2017/04/leetcode-162/","section":"post","summary":"A peak element is an element that is greater than its neighbors. Given an input array where num[i] ≠ num[i+1], find a peak element and return its index. The array may contain multiple peaks, in that case return the index to any one of the peaks is fine. You may imagine that num[-1] = num[n] = -∞. For example, in array [1, 2, 3, 1], 3 is a","tags":["binary search","leetcode"],"title":"leetcode162. Find Peak Element (O(lgn)复杂度寻找峰值)","type":"post","url":"/2017/04/leetcode-162/","weight":0,"wordcount":430},{"author":null,"categories":["面试"],"content":null,"date":1492169610,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492169610,"objectID":"bdf80c2cd87ff2949bbddd4993356437","permalink":"https://111qqz.github.io/2017/04/leetcode-152-maximum-product-subarray/","publishdate":"2017-04-14T11:33:30Z","readingtime":1,"relpermalink":"/2017/04/leetcode-152-maximum-product-subarray/","section":"post","summary":"Find the contiguous subarray within an array (containing at least one number) which has the largest product. For example, given the array [2,3,-2,4], the contiguous subarray [2,3] has the largest product = 6. 思路：由于有正，有负，还有0.。。所以比最大子串之和要复杂一些。。。 dp[","tags":["dp","leetcode"],"title":"leetcode 152. Maximum Product Subarray (最大连续子序列乘积，dp)","type":"post","url":"/2017/04/leetcode-152-maximum-product-subarray/","weight":0,"wordcount":267},{"author":null,"categories":["面试"],"content":null,"date":1492167099,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492167099,"objectID":"96e6b9f855e60569557189ac02495ee3","permalink":"https://111qqz.github.io/2017/04/leetcode-228/","publishdate":"2017-04-14T10:51:39Z","readingtime":1,"relpermalink":"/2017/04/leetcode-228/","section":"post","summary":"Given a sorted integer array without duplicates, return the summary of its ranges. For example, given [0,1,2,4,5,7], return [\u0026quot;0-\u0026gt;2\u0026quot;,\u0026quot;4-\u0026gt;5\u0026quot;,\u0026quot;7\u0026quot;]. 题意：把连续的数连续表示 思路：模拟。注意有负数，注意有-2147483648这种数据。 本来还想着，可能","tags":["leetcode"],"title":"leetcode 228. Summary Ranges","type":"post","url":"/2017/04/leetcode-228/","weight":0,"wordcount":352},{"author":null,"categories":["面试"],"content":null,"date":1492091402,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492091402,"objectID":"adf34067e2a7f9042d822dbe78c8f713","permalink":"https://111qqz.github.io/2017/04/leetcode-209-minimum-size-subarray-sum/","publishdate":"2017-04-13T13:50:02Z","readingtime":1,"relpermalink":"/2017/04/leetcode-209-minimum-size-subarray-sum/","section":"post","summary":"Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn\u0026rsquo;t one, return 0 instead. For example, given the array [2,3,1,2,4,3] and s = 7, the subarray [4,3] has the minimal length under the problem constraint 思路：尺取即可。。好久没写，竟然","tags":["尺取法","leetcode"],"title":"leetcode 209. Minimum Size Subarray Sum (尺取法)","type":"post","url":"/2017/04/leetcode-209-minimum-size-subarray-sum/","weight":0,"wordcount":197},{"author":null,"categories":null,"content":null,"date":1492091402,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492091402,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"尺取法","type":"tags","url":"/tags/%E5%B0%BA%E5%8F%96%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492087293,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492087293,"objectID":"7ccc2586c9d2527ed61bc201d8deb59f","permalink":"https://111qqz.github.io/2017/04/leetcode-229-majority-element-ii/","publishdate":"2017-04-13T12:41:33Z","readingtime":1,"relpermalink":"/2017/04/leetcode-229-majority-element-ii/","section":"post","summary":"Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times. The algorithm should run in linear time and in O(1) space. 题意：给你n个数，要求找出出现此处大于n/3的。。。 思路：之前做过一个找出n个数出","tags":["leetcode"],"title":"leetcode 229. Majority Element II （O(1)空间找出现次数大于n/3的元素）","type":"post","url":"/2017/04/leetcode-229-majority-element-ii/","weight":0,"wordcount":461},{"author":null,"categories":["面试"],"content":null,"date":1492084922,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492084922,"objectID":"b38cebddcbb4a2d077adf820f19733cb","permalink":"https://111qqz.github.io/2017/04/leetcode-75-sort-colors/","publishdate":"2017-04-13T12:02:02Z","readingtime":2,"relpermalink":"/2017/04/leetcode-75-sort-colors/","section":"post","summary":"Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue. Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively. 题意：一个数组，由0,1,2组成，现在","tags":["two pointer","leetcode"],"title":"leetcode 75. Sort Colors","type":"post","url":"/2017/04/leetcode-75-sort-colors/","weight":0,"wordcount":573},{"author":null,"categories":null,"content":null,"date":1492084922,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492084922,"objectID":"","permalink":"https://111qqz.github.io/tags/two-pointer/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/two-pointer/","section":"tags","summary":"","tags":null,"title":"two pointer","type":"tags","url":"/tags/two-pointer/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492078381,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492078381,"objectID":"ff8c5c9f49a95b33952a49822d819009","permalink":"https://111qqz.github.io/2017/04/leetcode-11-container-with-most-water-two-pointer/","publishdate":"2017-04-13T10:13:01Z","readingtime":1,"relpermalink":"/2017/04/leetcode-11-container-with-most-water-two-pointer/","section":"post","summary":"Given n non-negative integers a1, a2, \u0026hellip;, an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water. Note: You may not slant the container and n is at least 2. 题意","tags":["two pointer","leetcode"],"title":"leetcode 11. Container With Most Water (two pointer)","type":"post","url":"/2017/04/leetcode-11-container-with-most-water-two-pointer/","weight":0,"wordcount":307},{"author":null,"categories":null,"content":null,"date":1492076745,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492076745,"objectID":"","permalink":"https://111qqz.github.io/tags/k-sum/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/k-sum/","section":"tags","summary":"","tags":null,"title":"k-sum","type":"tags","url":"/tags/k-sum/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492076745,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492076745,"objectID":"dd724adf6045f249f62d6f386a787ce6","permalink":"https://111qqz.github.io/2017/04/leetcode-16-3sum-closest/","publishdate":"2017-04-13T09:45:45Z","readingtime":1,"relpermalink":"/2017/04/leetcode-16-3sum-closest/","section":"post","summary":"Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution. 思路： 排序，然后two pointer,复杂度 O(n^2) /* *********************************************** Author :111qqz Created Time","tags":["k-sum","two pointer","leetcode"],"title":"leetcode 16. 3Sum Closest (k-sum问题，two pointer)","type":"post","url":"/2017/04/leetcode-16-3sum-closest/","weight":0,"wordcount":189},{"author":null,"categories":["面试"],"content":null,"date":1492076055,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492076055,"objectID":"6e74cdc1ff7904e7efbc09ab21a581f7","permalink":"https://111qqz.github.io/2017/04/leetcode-18-4sum/","publishdate":"2017-04-13T09:34:15Z","readingtime":1,"relpermalink":"/2017/04/leetcode-18-4sum/","section":"post","summary":"Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target. Note: The solution set must not contain duplicate quadruplets. 思路： O(n^2)枚举两个元素，变成2-","tags":["k-sum","two pointer","leetcode"],"title":"leetcode 18. 4Sum (k-sum问题，two pointer)","type":"post","url":"/2017/04/leetcode-18-4sum/","weight":0,"wordcount":233},{"author":null,"categories":["面试"],"content":null,"date":1492071712,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492071712,"objectID":"b7a636eb79538961da68a2a35cfd451b","permalink":"https://111qqz.github.io/2017/04/leetcode-15-3sum/","publishdate":"2017-04-13T08:21:52Z","readingtime":1,"relpermalink":"/2017/04/leetcode-15-3sum/","section":"post","summary":"Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero. Note: The solution set must not contain duplicate triplets. 思路：排序O(nlgn)，然后枚举一个元素O(n","tags":["k-sum","two pointer","leetcode"],"title":"leetcode 15. 3Sum (k-sum问题，two pointer)","type":"post","url":"/2017/04/leetcode-15-3sum/","weight":0,"wordcount":221},{"author":null,"categories":["面试"],"content":null,"date":1492070109,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492070109,"objectID":"e7d30449adabd9e67a9de6056bb0cd01","permalink":"https://111qqz.github.io/2017/04/leetcode-216-combination-sum-iii-add-to-list/","publishdate":"2017-04-13T07:55:09Z","readingtime":1,"relpermalink":"/2017/04/leetcode-216-combination-sum-iii-add-to-list/","section":"post","summary":"Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers. 题意：1..9个数，从中选择k个，和为n，要求输出所有满足题意的集合。","tags":["枚举子集","leetcode"],"title":"leetcode 216. Combination Sum III Add to List (枚举子集，限定集合大小，和为定值）","type":"post","url":"/2017/04/leetcode-216-combination-sum-iii-add-to-list/","weight":0,"wordcount":208},{"author":null,"categories":null,"content":null,"date":1492070109,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492070109,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/","section":"tags","summary":"","tags":null,"title":"枚举子集","type":"tags","url":"/tags/%E6%9E%9A%E4%B8%BE%E5%AD%90%E9%9B%86/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492069423,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492069423,"objectID":"76a7dd795a7e24c9387da3de9e1f7479","permalink":"https://111qqz.github.io/2017/04/leetcode-77-combinations/","publishdate":"2017-04-13T07:43:43Z","readingtime":1,"relpermalink":"/2017/04/leetcode-77-combinations/","section":"post","summary":"Given two integers n and k, return all possible combinations of k numbers out of 1 \u0026hellip; n. 思路：就是枚举子集，根据集合的大小剪枝。。。最后只要集合大小为k的集合 /* *********************************************** Author :111qqz Created Time :2017年04月13","tags":["枚举子集"],"title":"leetcode 77. Combinations (枚举子集，限定集合大小)","type":"post","url":"/2017/04/leetcode-77-combinations/","weight":0,"wordcount":162},{"author":null,"categories":["面试"],"content":null,"date":1492068281,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492068281,"objectID":"1217663b2f12c3215f7c8c7ddaaf4470","permalink":"https://111qqz.github.io/2017/04/leetcode-60-permutation-sequence/","publishdate":"2017-04-13T07:24:41Z","readingtime":1,"relpermalink":"/2017/04/leetcode-60-permutation-sequence/","section":"post","summary":"The set [1,2,3,…,_n_] contains a total of n! unique permutations. By listing and labeling all of the permutations in order, We get the following sequence (ie, for n = 3): 1. `\u0026quot;123\u0026quot;` 2. `\u0026quot;132\u0026quot;` 3. `\u0026quot;213\u0026quot;` 4. `\u0026quot;231\u0026quot;` 5. `\u0026quot;312\u0026quot;` 6. `\u0026quot;321\u0026quot;` Given n and k, return the _k_th permutation sequence. Note: Given n will be between 1","tags":["排列组合","leetcode"],"title":"leetcode 60. Permutation Sequence (求第k个排列)","type":"post","url":"/2017/04/leetcode-60-permutation-sequence/","weight":0,"wordcount":277},{"author":null,"categories":null,"content":null,"date":1492068281,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1492068281,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/","section":"tags","summary":"","tags":null,"title":"排列组合","type":"tags","url":"/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1492067643,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492067643,"objectID":"973fed15336b30840540be0c288ca0bb","permalink":"https://111qqz.github.io/2017/04/leetcode-47-permutations-ii/","publishdate":"2017-04-13T07:14:03Z","readingtime":1,"relpermalink":"/2017/04/leetcode-47-permutations-ii/","section":"post","summary":"Given a collection of numbers that might contain duplicates, return all possible unique permutations.__ 思路：和leet code 46 类似，最后用set去个重即可。。 /* *********************************************** Author :111qqz Created Time :2017年04月13日 星期四 15时00分48秒","tags":["排列组合","leetcode"],"title":"leetcode 47. Permutations II (生成全排列，有重复元素)","type":"post","url":"/2017/04/leetcode-47-permutations-ii/","weight":0,"wordcount":233},{"author":null,"categories":["面试"],"content":null,"date":1492066783,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492066783,"objectID":"1fd1846dd355043017ecb12dde682dcc","permalink":"https://111qqz.github.io/2017/04/leetcode-46-permutations/","publishdate":"2017-04-13T06:59:43Z","readingtime":1,"relpermalink":"/2017/04/leetcode-46-permutations/","section":"post","summary":"Given a collection of distinct numbers, return all possible permutations. 思路：调用n-1次 leetcode 31 解题报告 中提到的算法即可。。。 /* *********************************************** Author :111qqz Created Time :2017年04月13日 星期四 14时49分34秒 File Name :46.cpp ************************************************","tags":["排列组合","leetcode"],"title":"leetcode 46. Permutations (生成全排列，无重复元素)","type":"post","url":"/2017/04/leetcode-46-permutations/","weight":0,"wordcount":196},{"author":null,"categories":["面试"],"content":null,"date":1492066075,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492066075,"objectID":"c977bf08bc611eebeacc7a80892c1707","permalink":"https://111qqz.github.io/2017/04/leetcode-31-next-permutation-in-place/","publishdate":"2017-04-13T06:47:55Z","readingtime":1,"relpermalink":"/2017/04/leetcode-31-next-permutation-in-place/","section":"post","summary":"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers. If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order). The replacement must be in-place, do not allocate extra memory. Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column. 1,2,3 → 1,3,2 3,2,1 → 1,2,3 1,1,5","tags":["排列组合","leetcode"],"title":"leetcode 31. Next Permutation (in-place 生成下一个全排列)","type":"post","url":"/2017/04/leetcode-31-next-permutation-in-place/","weight":0,"wordcount":300},{"author":null,"categories":["面试"],"content":null,"date":1492064977,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492064977,"objectID":"9e25067c584660842c90ab4af017f0e4","permalink":"https://111qqz.github.io/2017/04/leetcode-33-search-in-rotated-sorted-array/","publishdate":"2017-04-13T06:29:37Z","readingtime":1,"relpermalink":"/2017/04/leetcode-33-search-in-rotated-sorted-array/","section":"post","summary":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2). You are given a target value to search. If found in the array return its index, otherwise return -1. You may assume no duplicate exists in the array. 思路：找规律。。。","tags":["binary search","leetcode"],"title":"leetcode 33. Search in Rotated Sorted Array (无重复数的旋转数组找定值)","type":"post","url":"/2017/04/leetcode-33-search-in-rotated-sorted-array/","weight":0,"wordcount":340},{"author":null,"categories":["面试"],"content":null,"date":1492061685,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492061685,"objectID":"a02df8e83d5dc200e49392a17e6d8ba3","permalink":"https://111qqz.github.io/2017/04/leetcode-34-search-for-a-range/","publishdate":"2017-04-13T05:34:45Z","readingtime":1,"relpermalink":"/2017/04/leetcode-34-search-for-a-range/","section":"post","summary":"Given an array of integers sorted in ascending order, find the starting and ending position of a given target value. Your algorithm\u0026rsquo;s runtime complexity must be in the order of O(log n). If the target is not found in the array, return [-1, -1]. For example, Given [5, 7, 7, 8, 8, 10] and target value 8, return [3, 4]. 思路：二分。。。 我好","tags":["binary search","leetcode"],"title":"leetcode 34. Search for a Range (二分，找到一段值为tar的区间)","type":"post","url":"/2017/04/leetcode-34-search-for-a-range/","weight":0,"wordcount":297},{"author":null,"categories":["面试"],"content":null,"date":1492051669,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492051669,"objectID":"dd92226a5ae9a4ba9574d2d3a6d8b169","permalink":"https://111qqz.github.io/2017/04/leetcode-39-combination-sum/","publishdate":"2017-04-13T02:47:49Z","readingtime":1,"relpermalink":"/2017/04/leetcode-39-combination-sum/","section":"post","summary":"Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. The same repeated number may be chosen from C unlimited number of times. Note: * All numbers (including target) will be positive integers. * The solution set must not contain duplicate combinations. 题意：给n个数，求所有","tags":["dfs","leetcode"],"title":"leetcode 39. Combination Sum (dfs，求所有的组合，和为定值，每个数可以重复用)","type":"post","url":"/2017/04/leetcode-39-combination-sum/","weight":0,"wordcount":248},{"author":null,"categories":["面试"],"content":null,"date":1492014209,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492014209,"objectID":"6ffaa03783edbd6fc4c75aa01b3c6283","permalink":"https://111qqz.github.io/2017/04/leetcode-40-combination-sum-ii/","publishdate":"2017-04-12T16:23:29Z","readingtime":1,"relpermalink":"/2017/04/leetcode-40-combination-sum-ii/","section":"post","summary":"* Total Accepted: **106670** * Total Submissions: **329718** * Difficulty: **Medium** * Contributor: **LeetCode** Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T. Each number in C may only be used once in the combination. Note: * All numbers (including target) will be positive integers. * The solution set must not contain duplicate combinations.","tags":["leetcode","枚举子集"],"title":"leetcode 40. Combination Sum II (枚举子集，和为定值)","type":"post","url":"/2017/04/leetcode-40-combination-sum-ii/","weight":0,"wordcount":106},{"author":null,"categories":["面试"],"content":null,"date":1492012857,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492012857,"objectID":"7f42606a0266b4ce60529fd0ae22cbe9","permalink":"https://111qqz.github.io/2017/04/leetcode-495-teemo-attacking/","publishdate":"2017-04-12T16:00:57Z","readingtime":1,"relpermalink":"/2017/04/leetcode-495-teemo-attacking/","section":"post","summary":"In LLP world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo\u0026rsquo;s attacking ascending time series towards Ashe and the poisoning time duration per Teemo\u0026rsquo;s attacking, you need to output the total time that Ashe is in poisoned condition. You may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe","tags":["leetcode"],"title":"leetcode 495. Teemo Attacking","type":"post","url":"/2017/04/leetcode-495-teemo-attacking/","weight":0,"wordcount":231},{"author":null,"categories":["面试"],"content":null,"date":1492010483,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492010483,"objectID":"6617b2f343f9ba8713218f7329d3411b","permalink":"https://111qqz.github.io/2017/04/leetcode-442-find-all-duplicates-in-an-array/","publishdate":"2017-04-12T15:21:23Z","readingtime":1,"relpermalink":"/2017/04/leetcode-442-find-all-duplicates-in-an-array/","section":"post","summary":"Given an array of integers, 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once. Find all the elements that appear twice in this array. Could you do it without extra space and in O(n) runtime? 思路：还是一个映射，如果某个位置要映射的时候已经为负","tags":["leetcode"],"title":"leetcode 442. Find All Duplicates in an Array（找出出现两次的元素）","type":"post","url":"/2017/04/leetcode-442-find-all-duplicates-in-an-array/","weight":0,"wordcount":218},{"author":null,"categories":["面试"],"content":null,"date":1492003353,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1492003353,"objectID":"b96aa76dd1c018dde9c7781c99f8318f","permalink":"https://111qqz.github.io/2017/04/leetcode-48-rotate-image/","publishdate":"2017-04-12T13:22:33Z","readingtime":2,"relpermalink":"/2017/04/leetcode-48-rotate-image/","section":"post","summary":"You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise). Follow up: Could you do this in-place? 题意：给一个n*n的方阵，要求顺时针旋转90度。 思路：(x,y)-\u0026gt;(y,n-1-","tags":["leetcode"],"title":"leetcode 48. Rotate Image (旋转方阵(in place))","type":"post","url":"/2017/04/leetcode-48-rotate-image/","weight":0,"wordcount":509},{"author":null,"categories":["面试"],"content":null,"date":1491912474,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491912474,"objectID":"6e4b3a551e20dc9b78a69ad8da3f0b39","permalink":"https://111qqz.github.io/2017/04/leetcode-54-spiral-matrix/","publishdate":"2017-04-11T12:07:54Z","readingtime":1,"relpermalink":"/2017/04/leetcode-54-spiral-matrix/","section":"post","summary":"Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order. 思路：。。。再次让我回想起高一的暑假。。。。 /* *********************************************** Author :111qqz Created Time :2017年04月11日 星期二 19时42分","tags":["leetcode"],"title":"leetcode 54. Spiral Matrix (矩阵蛇形取数)","type":"post","url":"/2017/04/leetcode-54-spiral-matrix/","weight":0,"wordcount":225},{"author":null,"categories":["面试"],"content":null,"date":1491910755,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491910755,"objectID":"a299d1db229ee4cbf17c4d3299295acd","permalink":"https://111qqz.github.io/2017/04/leetcode-55-jump-game-dp/","publishdate":"2017-04-11T11:39:15Z","readingtime":1,"relpermalink":"/2017/04/leetcode-55-jump-game-dp/","section":"post","summary":"Given a collection of intervals, merge all overlapping intervals. For example, Given [1,3],[2,6],[8,10],[15,18], return [1,6],[8,10],[15,18]. 思路:dp[i]表示能否到达位置i\u0026hellip;无脑dp即可。。。 /* *********************************************** Author :111qqz Created Time :2017年04月11日 星期二","tags":["leetcode"],"title":"leetcode  55. Jump Game (dp)","type":"post","url":"/2017/04/leetcode-55-jump-game-dp/","weight":0,"wordcount":144},{"author":null,"categories":["面试"],"content":null,"date":1491910232,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491910232,"objectID":"b02fb99830d35e24ae323604a0b6174b","permalink":"https://111qqz.github.io/2017/04/leetcode-56-merge-intervals/","publishdate":"2017-04-11T11:30:32Z","readingtime":1,"relpermalink":"/2017/04/leetcode-56-merge-intervals/","section":"post","summary":"Given a collection of intervals, merge all overlapping intervals. For example, Given [1,3],[2,6],[8,10],[15,18], return [1,6],[8,10],[15,18]. 思路：扫一遍即可。。 /* *********************************************** Author :111qqz Created Time :2017年04月11日 星期二 19时15分30秒 File Name :56.cpp ************************************************ */ /** * Definition for an interval. * struct Interval {","tags":["leetcode"],"title":"leetcode 56. Merge Intervals (模拟，求相交区间)","type":"post","url":"/2017/04/leetcode-56-merge-intervals/","weight":0,"wordcount":205},{"author":null,"categories":["面试"],"content":null,"date":1491908872,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491908872,"objectID":"48412e67dde600ce99a106e58e9ca758","permalink":"https://111qqz.github.io/2017/04/59-spiral-matrix-ii/","publishdate":"2017-04-11T11:07:52Z","readingtime":1,"relpermalink":"/2017/04/59-spiral-matrix-ii/","section":"post","summary":"Given an integer n, generate a square matrix filled with elements from 1 to _n_2 in spiral order. 思路：仿佛回到高一的那个暑假。。。 /* *********************************************** Author :111qqz Created Time :2017年04月11日 星期二 18时52分15秒 File Name :59.cpp ************************************************ */","tags":["leetcode"],"title":"leetocde 59. Spiral Matrix II (模拟)","type":"post","url":"/2017/04/59-spiral-matrix-ii/","weight":0,"wordcount":204},{"author":null,"categories":["面试"],"content":null,"date":1491907857,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491907857,"objectID":"d965a094f98265e951fa4904d05c7d63","permalink":"https://111qqz.github.io/2017/04/63-unique-paths-ii/","publishdate":"2017-04-11T10:50:57Z","readingtime":1,"relpermalink":"/2017/04/63-unique-paths-ii/","section":"post","summary":"Follow up for \u0026ldquo;Unique Paths\u0026rdquo;: Now consider if some obstacles are added to the grids. How many unique paths would there be? An obstacle and empty space is marked as 1 and 0 respectively in the grid. For example, There is one obstacle in the middle of a 3x3 grid as illustrated below. [ [0,0,0], [0,1,0], [0,0,0] ] The total number of unique paths is 2. 题意：从","tags":["dp","leetcode"],"title":"leetocde 63. Unique Paths II","type":"post","url":"/2017/04/63-unique-paths-ii/","weight":0,"wordcount":299},{"author":null,"categories":["面试"],"content":null,"date":1491791720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491791720,"objectID":"6a69e759446cfdcd3e58d30c0e23b770","permalink":"https://111qqz.github.io/2017/04/leetcode-64-minimum-path-sum/","publishdate":"2017-04-10T02:35:20Z","readingtime":1,"relpermalink":"/2017/04/leetcode-64-minimum-path-sum/","section":"post","summary":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time. 数字三角形。。。。从坐上到右下问最短路径。。每次只能向","tags":["dp","leetcode"],"title":"leetcode 64. Minimum Path Sum (二维dp)","type":"post","url":"/2017/04/leetcode-64-minimum-path-sum/","weight":0,"wordcount":346},{"author":null,"categories":["面试"],"content":null,"date":1491787003,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491787003,"objectID":"a795ab01d4fe426fe4ebe8f2eb623898","permalink":"https://111qqz.github.io/2017/04/leetcode-73-set-matrix-zeroes/","publishdate":"2017-04-10T01:16:43Z","readingtime":2,"relpermalink":"/2017/04/leetcode-73-set-matrix-zeroes/","section":"post","summary":"Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place. click to show follow up. **Follow up:**Did you use extra space? A straight forward solution using O(m__n) space is probably a bad idea. A simple improvement uses O(m + n) space, but still not the best solution. Could you devise a constant space solution? 直接放","tags":["leetcode"],"title":"leetcode  73. Set Matrix Zeroes (矩阵置0，乱搞)","type":"post","url":"/2017/04/leetcode-73-set-matrix-zeroes/","weight":0,"wordcount":825},{"author":null,"categories":["面试"],"content":null,"date":1491738605,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491738605,"objectID":"1ebaa211a7d1e2074c3f147a869fbc8d","permalink":"https://111qqz.github.io/2017/04/leetcode-238-product-of-array-except-self/","publishdate":"2017-04-09T11:50:05Z","readingtime":1,"relpermalink":"/2017/04/leetcode-238-product-of-array-except-self/","section":"post","summary":"Given an array of n integers where n \u0026gt; 1, nums, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i]. Solve it without division and in O(n). For example, given [1,2,3,4], return [24,12,8,6]. Follow up: Could you solve it with constant space complexity? (Note: The output array does not count as extra space for the purpose of space complexity","tags":["leetcode"],"title":"leetcode 238. Product of Array Except Self (乱搞)","type":"post","url":"/2017/04/leetcode-238-product-of-array-except-self/","weight":0,"wordcount":373},{"author":null,"categories":["面试"],"content":null,"date":1491548366,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491548366,"objectID":"08b21626133f92d79b09e72baa50cc52","permalink":"https://111qqz.github.io/2017/04/leetcode-79-word-search-dfs/","publishdate":"2017-04-07T06:59:26Z","readingtime":1,"relpermalink":"/2017/04/leetcode-79-word-search-dfs/","section":"post","summary":"Given a 2D board and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cell, where \u0026ldquo;adjacent\u0026rdquo; cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once. 思路：dfs即可。记得要回溯一下\u0026hellip;","tags":["leetcode","dfs"],"title":"leetcode 79. Word Search (dfs)","type":"post","url":"/2017/04/leetcode-79-word-search-dfs/","weight":0,"wordcount":314},{"author":null,"categories":["面试"],"content":null,"date":1491399404,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491399404,"objectID":"f955b8ba91e24703a198aeb4e3e57ffe","permalink":"https://111qqz.github.io/2017/04/leetcode-80-remove-duplicates-from-sorted-array-ii/","publishdate":"2017-04-05T13:36:44Z","readingtime":1,"relpermalink":"/2017/04/leetcode-80-remove-duplicates-from-sorted-array-ii/","section":"post","summary":"Follow up for \u0026ldquo;Remove Duplicates\u0026rdquo;: What if duplicates are allowed at most twice? For example, Given sorted array nums = [1,1,1,2,2,3], Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn\u0026rsquo;t matter what you leave beyond the new length. Subscribe to see which companies asked this question. 题意：一个有序数组，","tags":["leetcode"],"title":"leetcode 80 Remove Duplicates from Sorted Array II  （有序数组去除重复元素）","type":"post","url":"/2017/04/leetcode-80-remove-duplicates-from-sorted-array-ii/","weight":0,"wordcount":302},{"author":null,"categories":["面试"],"content":null,"date":1491398271,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491398271,"objectID":"4e38b6ec761dbe864d1b24632b6517e8","permalink":"https://111qqz.github.io/2017/04/leetcode-81-search-in-rotated-sorted-array-ii/","publishdate":"2017-04-05T13:17:51Z","readingtime":1,"relpermalink":"/2017/04/leetcode-81-search-in-rotated-sorted-array-ii/","section":"post","summary":"Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand. (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2). Write a function to determine if a given target is in the array. The array may contain duplicates. 好像阿里一面的时候问过。。。 思路：肯定","tags":["binary search","leetcode"],"title":"leetcode  81. Search in Rotated Sorted Array II (有重复元素的旋转数组找给定值)","type":"post","url":"/2017/04/leetcode-81-search-in-rotated-sorted-array-ii/","weight":0,"wordcount":299},{"author":null,"categories":["面试"],"content":null,"date":1491393808,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491393808,"objectID":"a04eee3b53315feb2585a778f9848fae","permalink":"https://111qqz.github.io/2017/04/leetcode-289-game-of-life/","publishdate":"2017-04-05T12:03:28Z","readingtime":2,"relpermalink":"/2017/04/leetcode-289-game-of-life/","section":"post","summary":"According to the Wikipedia\u0026rsquo;s article: \u0026ldquo;The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\u0026rdquo; Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article): 1. Any","tags":["leetcode"],"title":"leetcode  289. Game of Life (模拟)","type":"post","url":"/2017/04/leetcode-289-game-of-life/","weight":0,"wordcount":999},{"author":null,"categories":["面试"],"content":null,"date":1491389102,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491389102,"objectID":"687a8b619ec1255fd80c725ea2a4a378","permalink":"https://111qqz.github.io/2017/04/leetcode-90-subsets-ii/","publishdate":"2017-04-05T10:45:02Z","readingtime":1,"relpermalink":"/2017/04/leetcode-90-subsets-ii/","section":"post","summary":"Given a collection of integers that might contain duplicates, nums, return all possible subsets. Note: The solution set must not contain duplicate subsets. For example, If nums = [1,2,2], a solution is: [ [2], [1], [1,2,2], [2,2], [1,2], [] ] 思路： 复习（？）一下 枚举子集的三种写法 （还有种更飘逸的\u0026he","tags":["枚举子集","leetcode"],"title":"leetcode 90. Subsets II (枚举子集)","type":"post","url":"/2017/04/leetcode 90-subsets-ii/","weight":0,"wordcount":229},{"author":null,"categories":["面试"],"content":null,"date":1491382781,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491382781,"objectID":"5633206c1d1b9696ec3e5828241a443c","permalink":"https://111qqz.github.io/2017/04/106-construct-binary-tree-from-inorder-and-postorder-traversal/","publishdate":"2017-04-05T08:59:41Z","readingtime":1,"relpermalink":"/2017/04/106-construct-binary-tree-from-inorder-and-postorder-traversal/","section":"post","summary":"/* *********************************************** Author :111qqz Created Time :2017年04月05日 星期三 16时49分57秒 File Name :106.cpp ************************************************ */ /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */ class Solution {","tags":null,"title":"106. Construct Binary Tree from Inorder and Postorder Traversal(根据中序和后序遍历构建二叉树)","type":"post","url":"/2017/04/106-construct-binary-tree-from-inorder-and-postorder-traversal/","weight":0,"wordcount":167},{"author":null,"categories":null,"content":null,"date":1491377509,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1491377509,"objectID":"","permalink":"https://111qqz.github.io/tags/floyd-%E5%88%A4%E5%9C%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/floyd-%E5%88%A4%E5%9C%88/","section":"tags","summary":"","tags":null,"title":"floyd 判圈","type":"tags","url":"/tags/floyd-%E5%88%A4%E5%9C%88/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1491377509,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491377509,"objectID":"502f26d219303988c795f46bfcfad1f0","permalink":"https://111qqz.github.io/2017/04/leetcode-287-find-the-duplicate-number-floyd/","publishdate":"2017-04-05T07:31:49Z","readingtime":1,"relpermalink":"/2017/04/leetcode-287-find-the-duplicate-number-floyd/","section":"post","summary":"Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one. Note: 1. You **must not** modify the array (assume the array is read only). 2. You must use only constant, _O_(1) extra space. 3. Your runtime complexity should be less than","tags":["floyd 判圈","leetcode"],"title":"leetcode 287. Find the Duplicate Number (floyd判圈算法找重复元素)","type":"post","url":"/2017/04/leetcode-287-find-the-duplicate-number-floyd/","weight":0,"wordcount":402},{"author":null,"categories":["面试"],"content":null,"date":1491375182,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491375182,"objectID":"9de2f9b8d42b05aeea0003a5d6e5c6f5","permalink":"https://111qqz.github.io/2017/04/leetcode-532-k-diff-pairs-in-an-array/","publishdate":"2017-04-05T06:53:02Z","readingtime":2,"relpermalink":"/2017/04/leetcode-532-k-diff-pairs-in-an-array/","section":"post","summary":"Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k. Example 1: Input: [3, 1, 4, 1, 5], k = 2 Output: 2 Explanation: There are two 2-diff pairs in","tags":["leetcode"],"title":"leetcode 532. K-diff Pairs in an Array （找差为k的数对）","type":"post","url":"/2017/04/leetcode-532-k-diff-pairs-in-an-array/","weight":0,"wordcount":528},{"author":null,"categories":["面试"],"content":null,"date":1491373146,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491373146,"objectID":"178d02edaa58817f158817cfb773efd6","permalink":"https://111qqz.github.io/2017/04/leetcode-448-find-all-numbers-disappeared-in-an-array/","publishdate":"2017-04-05T06:19:06Z","readingtime":1,"relpermalink":"/2017/04/leetcode-448-find-all-numbers-disappeared-in-an-array/","section":"post","summary":"Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once. Find all the elements of [1, n] inclusive that do not appear in this array. Could you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space. Example: Input: [4,3,2,7,8,2,3,1] Output: [5,6] 思路：","tags":["leetcode"],"title":"leetcode 448. Find All Numbers Disappeared in an Array(寻找所有消失的元素）","type":"post","url":"/2017/04/leetcode-448-find-all-numbers-disappeared-in-an-array/","weight":0,"wordcount":322},{"author":null,"categories":["ACM"],"content":null,"date":1491115850,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491115850,"objectID":"aa68ee17baca5a10c5f9729ec6691a11","permalink":"https://111qqz.github.io/2017/04/bzoj-2748-haoi2012-dp/","publishdate":"2017-04-02T06:50:50Z","readingtime":2,"relpermalink":"/2017/04/bzoj-2748-haoi2012-dp/","section":"post","summary":"2748: [HAOI2012]音量调节 Time Limit: 3 Sec Memory Limit: 128 MB Submit: 1814 Solved: 1148 [Submit][Status][Discuss] Description 一个吉他手准备参加一场演出。他不喜欢在演出时始终使用同一个音量，所以他决定每一首歌","tags":["dp"],"title":"BZOJ 2748: [HAOI2012]音量调节 (dp)","type":"post","url":"/2017/04/bzoj-2748-haoi2012-dp/","weight":0,"wordcount":782},{"author":null,"categories":["ACM"],"content":null,"date":1491114362,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491114362,"objectID":"ef0e5329de0dcf42f1b022bc5e897600","permalink":"https://111qqz.github.io/2017/04/bzoj-2257-jsoi2009-/","publishdate":"2017-04-02T06:26:02Z","readingtime":3,"relpermalink":"/2017/04/bzoj-2257-jsoi2009-/","section":"post","summary":"2257: [Jsoi2009]瓶子和燃料 Time Limit: 10 Sec Memory Limit: 128 MB Submit: 1246 Solved: 756 [Submit][Status][Discuss] Description jyy就一直想着尽快回地球，可惜他飞船的燃料不够了。 有一天他又去向火星人要燃料，","tags":["number theory","裴蜀定理"],"title":"BZOJ 2257: [Jsoi2009]瓶子和燃料 (裴蜀定理)","type":"post","url":"/2017/04/bzoj-2257-jsoi2009-/","weight":0,"wordcount":1180},{"author":null,"categories":null,"content":null,"date":1491114362,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1491114362,"objectID":"","permalink":"https://111qqz.github.io/tags/number-theory/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/number-theory/","section":"tags","summary":"","tags":null,"title":"number theory","type":"tags","url":"/tags/number-theory/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1491114362,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1491114362,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"裴蜀定理","type":"tags","url":"/tags/%E8%A3%B4%E8%9C%80%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1491038448,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1491038448,"objectID":"ec81924a5672a9c2b01ab34639cdd07e","permalink":"https://111qqz.github.io/2017/04/bzoj-1012-jsoi2008maxnumber-/","publishdate":"2017-04-01T09:20:48Z","readingtime":2,"relpermalink":"/2017/04/bzoj-1012-jsoi2008maxnumber-/","section":"post","summary":"1012: [JSOI2008]最大数maxnumber Time Limit: 3 Sec Memory Limit: 162 MB Submit: 9717 Solved: 4244 [Submit][Status][Discuss] Description 现在请求你维护一个数列，要求提供以下两种操作：1、 查询操作。语法：","tags":["线段树"],"title":"BZOJ 1012: [JSOI2008]最大数maxnumber (线段树,,单点更新)","type":"post","url":"/2017/04/bzoj-1012-jsoi2008maxnumber-/","weight":0,"wordcount":733},{"author":null,"categories":["ACM"],"content":null,"date":1490949383,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490949383,"objectID":"8939a5fc0c748ef1946f2ae65e20a28c","permalink":"https://111qqz.github.io/2017/03/hihocoder-1197-give-my-text-back-/","publishdate":"2017-03-31T08:36:23Z","readingtime":2,"relpermalink":"/2017/03/hihocoder-1197-give-my-text-back-/","section":"post","summary":"#1197 : Give My Text Back 时间限制:10000ms 单点时限:1000ms 内存限制:256MB 描述 To prepare for the English exam Little Ho collected many digital reading materials. Unfortunately the materials are messed up by a malware. It is known that the original text","tags":["模拟"],"title":"hihocoder 1197  Give My Text Back (模拟)","type":"post","url":"/2017/03/hihocoder-1197-give-my-text-back-/","weight":0,"wordcount":720},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1490946310,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490946310,"objectID":"8701d581558d79bd08cb716954817757","permalink":"https://111qqz.github.io/2017/03/cry/","publishdate":"2017-03-31T07:45:10Z","readingtime":1,"relpermalink":"/2017/03/cry/","section":"post","summary":"\u0026hellip;.拿到offer结果被人同情得问\u0026hellip;\u0026ldquo;你怎么这么惨\u0026rdquo;\u0026hellip;还不止被一个人这样说","tags":null,"title":"..........呜呜呜","type":"post","url":"/2017/03/cry/","weight":0,"wordcount":180},{"author":null,"categories":null,"content":null,"date":1490946310,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1490946310,"objectID":"","permalink":"https://111qqz.github.io/categories/%E9%9A%8F%E7%AC%94%E6%9D%82%E8%B0%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/categories/%E9%9A%8F%E7%AC%94%E6%9D%82%E8%B0%88/","section":"categories","summary":"","tags":null,"title":"随笔杂谈","type":"categories","url":"/categories/%E9%9A%8F%E7%AC%94%E6%9D%82%E8%B0%88/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1490853213,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490853213,"objectID":"72db2607c7e34e61162959a26b7bc3a7","permalink":"https://111qqz.github.io/2017/03/2017_1/","publishdate":"2017-03-30T05:53:33Z","readingtime":2,"relpermalink":"/2017/03/2017_1/","section":"post","summary":"头条校招（今日头条2017秋招真题） 题目描述 头条的2017校招开始了！为了这次校招，我们组织了一个规模宏大的出题团队。每个出题人都出了一些有","tags":["greedy"],"title":"今日头条2017秋招笔试_1","type":"post","url":"/2017/03/2017_1/","weight":0,"wordcount":753},{"author":null,"categories":["ACM"],"content":null,"date":1490843046,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490843046,"objectID":"63e92c25bc3cdd603ef48dccfd08be2b","permalink":"https://111qqz.github.io/2017/03/_/","publishdate":"2017-03-30T03:04:06Z","readingtime":3,"relpermalink":"/2017/03/_/","section":"post","summary":"给定 x, k ，求满足 x + y = x | y 的第 k 小的正整数 y 。 | 是二进制的或(or)运算，例如 3 | 5 = 7。 比如当 x=5，k=1时返回 2，因为5+1=6 不","tags":["打表","构造"],"title":"今日头条笔试题_或与加(打表,构造)","type":"post","url":"/2017/03/_/","weight":0,"wordcount":1010},{"author":null,"categories":["面试"],"content":null,"date":1490794044,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490794044,"objectID":"aa48e74ae6ed790c0a15e159d37d079f","permalink":"https://111qqz.github.io/2017/03/-/","publishdate":"2017-03-29T13:27:24Z","readingtime":2,"relpermalink":"/2017/03/-/","section":"post","summary":"有一个由很多木棒构成的集合，每个木棒有对应的长度，请问能否用集合中的这些木棒以某个顺序首尾相连构成一个面积大于 0 的简单多边形且所有木棒都要用","tags":["math"],"title":"今日头条笔试题-木棒拼图(数学)","type":"post","url":"/2017/03/-/","weight":0,"wordcount":728},{"author":null,"categories":["面试"],"content":null,"date":1490791649,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490791649,"objectID":"bc09f47e52e74ceb11ae9fcab9cf3797","permalink":"https://111qqz.github.io/2017/03/-/","publishdate":"2017-03-29T12:47:29Z","readingtime":3,"relpermalink":"/2017/03/-/","section":"post","summary":"有 n 个字符串，每个字符串都是由 A-J 的大写字符构成。现在你将每个字符映射为一个 0-9 的数字，不同字符映射为不同的数字。这样每个字符串就可以看做一个整","tags":["greedy"],"title":"今日头条笔试题-最大映射(贪心)","type":"post","url":"/2017/03/-/","weight":0,"wordcount":1034},{"author":null,"categories":null,"content":null,"date":1490185237,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1490185237,"objectID":"","permalink":"https://111qqz.github.io/tags/hash/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/hash/","section":"tags","summary":"","tags":null,"title":"hash","type":"tags","url":"/tags/hash/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1490185237,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1490185237,"objectID":"","permalink":"https://111qqz.github.io/tags/murmurhash/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/murmurhash/","section":"tags","summary":"","tags":null,"title":"murmurhash","type":"tags","url":"/tags/murmurhash/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1490185237,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490185237,"objectID":"5bcf8f4cd667c702e3bf073563c9cd04","permalink":"https://111qqz.github.io/2017/03/murmurhash/","publishdate":"2017-03-22T12:20:37Z","readingtime":4,"relpermalink":"/2017/03/murmurhash/","section":"post","summary":"分析levelDB源码的时候遇到的\u0026hellip;发现是一个广泛应用的hash算法，而且是纯c写的，于是找来了源码看。 最初的实现是C++的，","tags":["hash","murmurhash"],"title":"murmurhash源码分析","type":"post","url":"/2017/03/murmurhash/","weight":0,"wordcount":1891},{"author":null,"categories":null,"content":null,"date":1490159813,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1490159813,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%86%85%E5%AD%98%E5%B1%8F%E9%9A%9C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%86%85%E5%AD%98%E5%B1%8F%E9%9A%9C/","section":"tags","summary":"","tags":null,"title":"内存屏障","type":"tags","url":"/tags/%E5%86%85%E5%AD%98%E5%B1%8F%E9%9A%9C/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1490159813,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490159813,"objectID":"2ddcfb516996053ccfd86b751dbdb78b","permalink":"https://111qqz.github.io/2017/03/memory-barriers/","publishdate":"2017-03-22T05:16:53Z","readingtime":4,"relpermalink":"/2017/03/memory-barriers/","section":"post","summary":"起因是最近在看levelDB源码，其中port里的atomic_pointer.h文件用到了内存屏障。。 于是来学习一下。。 粗略得说下我自己的","tags":["levelDB","内存屏障"],"title":"内存屏障（Memory Barriers）","type":"post","url":"/2017/03/memory-barriers/","weight":0,"wordcount":1688},{"author":null,"categories":["c++"],"content":null,"date":1490088296,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1490088296,"objectID":"3360d44464c52e43db22f68a6a911e70","permalink":"https://111qqz.github.io/2017/03/lock-free-vs-wait-free-concurrency/","publishdate":"2017-03-21T09:24:56Z","readingtime":2,"relpermalink":"/2017/03/lock-free-vs-wait-free-concurrency/","section":"post","summary":"参考资料 看leveldb源码中遇到的，关于lock-free 和 wait-free..感觉这个讲得不错，我试着翻译一下？ 有两种 无阻塞线程同步算","tags":["levelDB"],"title":"Lock-free vs wait-free concurrency","type":"post","url":"/2017/03/lock-free-vs-wait-free-concurrency/","weight":0,"wordcount":823},{"author":null,"categories":null,"content":null,"date":1489917778,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489917778,"objectID":"","permalink":"https://111qqz.github.io/tags/awk/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/awk/","section":"tags","summary":"","tags":null,"title":"awk","type":"tags","url":"/tags/awk/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489917778,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489917778,"objectID":"25597547e18da693b987d308583bb004","permalink":"https://111qqz.github.io/2017/03/awk-/","publishdate":"2017-03-19T10:02:58Z","readingtime":6,"relpermalink":"/2017/03/awk-/","section":"post","summary":"参考资料： awk_维基百科 awk简明教程 awk是一门比较古老但是很好用的文本处理工具（语言?） 语法还是很好懂的。。。转载了一篇文章。。。算是","tags":["awk","linux"],"title":"AWK 初探","type":"post","url":"/2017/03/awk-/","weight":0,"wordcount":2599},{"author":null,"categories":["c++"],"content":null,"date":1489839752,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489839752,"objectID":"e15208ae341b5dadfbf503d0109015e5","permalink":"https://111qqz.github.io/2017/03/c-const-/","publishdate":"2017-03-18T12:22:32Z","readingtime":6,"relpermalink":"/2017/03/c-const-/","section":"post","summary":"基本全文照搬了：关于C++ const 的全面总结 总结全面还是要一点时间的orz..感谢原作者，暂时没发现有什么错误（? 其中对我而言比较陌生的是“con","tags":null,"title":"C++ const 用法总结（转载）","type":"post","url":"/2017/03/c-const-/","weight":0,"wordcount":2924},{"author":null,"categories":["面试"],"content":null,"date":1489824109,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489824109,"objectID":"a0f220f3443cb5b84240c5e4a9d59ee4","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-18T08:01:49Z","readingtime":3,"relpermalink":"/2017/03/","section":"post","summary":"印象中是并没有看到jd，只是要求熟悉算法和数据结构+C艹\u0026hellip;于是当时扔了份简历过去。 然后立刻就接到了一个电话，大概问了下一些基本","tags":null,"title":"京东实习面试总结","type":"post","url":"/2017/03//","weight":0,"wordcount":1271},{"author":null,"categories":["其他"],"content":null,"date":1489646245,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489646245,"objectID":"468b92cb49d52ed5040953326d596b7b","permalink":"https://111qqz.github.io/2017/03/20173archlinux/","publishdate":"2017-03-16T06:37:25Z","readingtime":1,"relpermalink":"/2017/03/20173archlinux/","section":"post","summary":"系统信息： 表现为不管外放还是耳机。。都没有声音。。。 解决办法： pacmd set-card-profile alsa_card.pci-0000_00_1b.0 output:analog-stereo+input:analog-stereo 参考资料","tags":null,"title":"2017年3月更新archlinux后没有声音问题的解决办法","type":"post","url":"/2017/03/20173archlinux/","weight":0,"wordcount":39},{"author":null,"categories":null,"content":null,"date":1489564685,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489564685,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C/","section":"tags","summary":"","tags":null,"title":"一致性哈希","type":"tags","url":"/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489564685,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489564685,"objectID":"4634f72ab8a8319fff6debf158711e4b","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-15T07:58:05Z","readingtime":8,"relpermalink":"/2017/03/","section":"post","summary":"原始论文：一致性哈希 本来不打算放的。。被批评说太不严谨orz.. 说说自己的理解好了。。 大概就是。。。hash的时候。。一开始有n个桶。。你设","tags":["hash","一致性哈希"],"title":"一致性哈希初探","type":"post","url":"/2017/03//","weight":0,"wordcount":3794},{"author":null,"categories":["其他"],"content":null,"date":1489559376,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489559376,"objectID":"a9cadf8339ec0b7581f1baf8f81dc0ca","permalink":"https://111qqz.github.io/2017/03/linux-/","publishdate":"2017-03-15T06:29:36Z","readingtime":5,"relpermalink":"/2017/03/linux-/","section":"post","summary":"参考：[wiki_FHS](http://Filesystem Hierarchy Standard) 其实这东西。。。虽然有一个统一的标准。。。但是不同发行版。。。或者同一个发","tags":["linux"],"title":"Linux 下各个目录的作用及内容","type":"post","url":"/2017/03/linux-/","weight":0,"wordcount":2505},{"author":null,"categories":["其他"],"content":null,"date":1489546556,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":5900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489546556,"objectID":"e08de84047397ba71dce23e610de40fe","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-15T02:55:56Z","readingtime":12,"relpermalink":"/2017/03/","section":"post","summary":"参考链接 简要概述原理： 每个文件都由各种不同代码组成，比如01代码。这类文件只有数字0与1组合。 压缩原理就是 【通过寻找其中的规律，简化数字的排","tags":["数据压缩"],"title":"压缩算法初探（科普向，转载）","type":"post","url":"/2017/03//","weight":0,"wordcount":5805},{"author":null,"categories":null,"content":null,"date":1489546556,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489546556,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/","section":"tags","summary":"","tags":null,"title":"数据压缩","type":"tags","url":"/tags/%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1489538090,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489538090,"objectID":"","permalink":"https://111qqz.github.io/tags/cache/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/cache/","section":"tags","summary":"","tags":null,"title":"cache","type":"tags","url":"/tags/cache/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1489538090,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489538090,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"组成原理","type":"tags","url":"/tags/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489538090,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489538090,"objectID":"489a9a2a36f72994dd02ba5eb831cb31","permalink":"https://111qqz.github.io/2017/03/lru/","publishdate":"2017-03-15T00:34:50Z","readingtime":8,"relpermalink":"/2017/03/lru/","section":"post","summary":"参考博客 计组块忘光了呜呜呜。。。来复习一波。。 1. LRU 1.1. 原理 LRU（Least recently used，最近最少使用）算法根据数据的历史访问记录来进行淘汰数据","tags":["cache","LRU","组成原理"],"title":"缓存淘汰算法之LRU（转载）","type":"post","url":"/2017/03/lru/","weight":0,"wordcount":3918},{"author":null,"categories":["面试"],"content":null,"date":1489472922,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489472922,"objectID":"5b82a093f7be08d67c6ee798a5c60736","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-14T06:28:42Z","readingtime":19,"relpermalink":"/2017/03/","section":"post","summary":"I want to match those five numbers 3, 7, 8, 9, 87 through regular express. Here is my thought: - match those four numbers `3 7 8 9` var `^[3|7|8|9]$` - match number `87` var `^87$` Then combine them together, `(^[3|7|8|9]$|^87$)`. With some test, it seems correct. Is there any way to do that more efficiently? ------------------------------- Q: 已知三个升序整数数组a[","tags":null,"title":"阿里面试算法题（转载）","type":"post","url":"/2017/03//","weight":0,"wordcount":9420},{"author":null,"categories":["其他"],"content":null,"date":1489472484,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":9900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489472484,"objectID":"68abb7fae0313b9b5f0e161596fa2ec7","permalink":"https://111qqz.github.io/2017/03/top-k-/","publishdate":"2017-03-14T06:21:24Z","readingtime":20,"relpermalink":"/2017/03/top-k-/","section":"post","summary":"转自：http://blog.csdn.net/v_july_v/article/details/6279498 第一部分、十道海量数据处理面","tags":null,"title":"大数据top K 问题总结（转载）","type":"post","url":"/2017/03/top-k-/","weight":0,"wordcount":9818},{"author":null,"categories":["面试"],"content":null,"date":1489327928,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489327928,"objectID":"65b742bba20ddd9c56b13beb3e5c5761","permalink":"https://111qqz.github.io/2017/03/o1/","publishdate":"2017-03-12T14:12:08Z","readingtime":1,"relpermalink":"/2017/03/o1/","section":"post","summary":"题意：定义栈的数据结构，请在该类型中实现一个能够得到栈最小元素的min函数，要求时间复杂度为O(1) 思路：标题党去死一死好么。。。真是无趣。","tags":null,"title":"O(1)得到最小值的栈","type":"post","url":"/2017/03/o1/","weight":0,"wordcount":181},{"author":null,"categories":["面试"],"content":null,"date":1489324756,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489324756,"objectID":"04e4b83494513ac743279c0bd7bbefe4","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-12T13:19:16Z","readingtime":1,"relpermalink":"/2017/03/","section":"post","summary":"题意：把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组","tags":["binary search"],"title":"求旋转数组最小值（二分）","type":"post","url":"/2017/03//","weight":0,"wordcount":169},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1489261017,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489261017,"objectID":"cca02044656647fe4f159b2b7a92186a","permalink":"https://111qqz.github.io/2017/03/i-love-icpc-forever/","publishdate":"2017-03-11T19:36:57Z","readingtime":1,"relpermalink":"/2017/03/i-love-icpc-forever/","section":"post","summary":"虽然说感觉这届学弟蛮厉害\u0026hellip;不知道能不能拿到校内资格。。。 以及没有太多时间训练\u0026hellip; 不过只要假期实习的地方。。。加班不","tags":null,"title":"预言向：大概还是要再打一年的","type":"post","url":"/2017/03/I-love-icpc-forever/","weight":0,"wordcount":208},{"author":null,"categories":["面试"],"content":null,"date":1489236778,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489236778,"objectID":"32e0603f8a3d88cdf455a2546f061f85","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-11T12:52:58Z","readingtime":1,"relpermalink":"/2017/03/","section":"post","summary":"思路： 一个元素入队的时候直接插入到stack1中。。。 一个元素出队的时候。。。如果stack2不为空。。stack2顶的元素就是要出队的。。","tags":null,"title":"用两个栈实现队列","type":"post","url":"/2017/03//","weight":0,"wordcount":168},{"author":null,"categories":["面试"],"content":null,"date":1489232080,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489232080,"objectID":"dc4497a277d48f3d804c9bd65c431f4f","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-11T11:34:40Z","readingtime":1,"relpermalink":"/2017/03/","section":"post","summary":"思路： 分治搞之。 实际上两个vector就够了。。。4个会MLE(在leetcode上。。。 /** * Definition for binary tree * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL),","tags":null,"title":"leetcode 105 根据前序遍历和中序遍历重构二叉树","type":"post","url":"/2017/03//","weight":0,"wordcount":333},{"author":null,"categories":["ACM"],"content":null,"date":1489220126,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489220126,"objectID":"baeccc2e5f772fc6c27a6b6dadfc0cb7","permalink":"https://111qqz.github.io/2017/03/hash/","publishdate":"2017-03-11T08:15:26Z","readingtime":4,"relpermalink":"/2017/03/hash/","section":"post","summary":"前言： hash这种东西人人都会用的东西还有必要说？起因是\u0026hellip;本问了hash中的一个细节\u0026hellip;然后\u0026hellip;我知道","tags":["hash"],"title":"hash学习笔记","type":"post","url":"/2017/03/hash/","weight":0,"wordcount":1831},{"author":null,"categories":null,"content":null,"date":1489219140,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489219140,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B1%80%E9%83%A8%E6%95%8F%E6%84%9Fhash/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B1%80%E9%83%A8%E6%95%8F%E6%84%9Fhash/","section":"tags","summary":"","tags":null,"title":"局部敏感hash","type":"tags","url":"/tags/%E5%B1%80%E9%83%A8%E6%95%8F%E6%84%9Fhash/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489219140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489219140,"objectID":"6cfb599bac1e557f8548e608fd992163","permalink":"https://111qqz.github.io/2017/03/locality-sensitive-hashing/","publishdate":"2017-03-11T07:59:00Z","readingtime":7,"relpermalink":"/2017/03/locality-sensitive-hashing/","section":"post","summary":"前言： 其实有了前文simhash算法的基础，局部敏感hash算法已经不存在理解上的问题了吧。。。毕竟simhash算法应该是局部敏感哈希算法","tags":["局部敏感hash"],"title":"局部敏感哈希算法(Locality Sensitive Hashing)初探","type":"post","url":"/2017/03/locality-sensitive-hashing/","weight":0,"wordcount":3037},{"author":null,"categories":null,"content":null,"date":1489116788,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489116788,"objectID":"","permalink":"https://111qqz.github.io/tags/simhash/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/simhash/","section":"tags","summary":"","tags":null,"title":"simhash","type":"tags","url":"/tags/simhash/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1489116788,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489116788,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4/","section":"tags","summary":"","tags":null,"title":"协同过滤","type":"tags","url":"/tags/%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489116788,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489116788,"objectID":"19099c7e1ac785ae8adfee494a5e52ee","permalink":"https://111qqz.github.io/2017/03/-simhash/","publishdate":"2017-03-10T03:33:08Z","readingtime":5,"relpermalink":"/2017/03/-simhash/","section":"post","summary":"先放原始论文。。。以此表达对这个算法的敬意orz 论文链接 问题引出： 那天百度一面，frog学姐问了我如何判断两篇新闻稿的相似度的问题\u0026hell","tags":["simhash","协同过滤","局部敏感hash"],"title":"文本相似度判断-simhash算法学习笔记","type":"post","url":"/2017/03/-simhash/","weight":0,"wordcount":2421},{"author":null,"categories":null,"content":null,"date":1489061651,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1489061651,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/","section":"tags","summary":"","tags":null,"title":"蓄水池抽样","type":"tags","url":"/tags/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1489061651,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489061651,"objectID":"c85f7a6affb97280bf4fe21ce9588018","permalink":"https://111qqz.github.io/2017/03/reservoir-sampling-algorithm/","publishdate":"2017-03-09T12:14:11Z","readingtime":3,"relpermalink":"/2017/03/reservoir-sampling-algorithm/","section":"post","summary":"面京东被这个问题卡了QAQ，来补补这方面的课。 转自：链接 蓄水池抽样算法随机算法的一种，用来从 N 个样本中随机选择 K 个样本，其中 N 非常大（以至于","tags":["蓄水池抽样"],"title":"蓄水池抽样算法概述(Reservoir Sampling Algorithm)[转载]","type":"post","url":"/2017/03/reservoir-sampling-algorithm/","weight":0,"wordcount":1195},{"author":null,"categories":["面试"],"content":null,"date":1489058045,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1489058045,"objectID":"7a1e1ebb140a780783d607f9bd02e136","permalink":"https://111qqz.github.io/2017/03/leetcode-74-search-a-2d-matrix/","publishdate":"2017-03-09T11:14:05Z","readingtime":1,"relpermalink":"/2017/03/leetcode-74-search-a-2d-matrix/","section":"post","summary":"题目链接 题意：给一个二维数组。。。每一行每一列都分别递增。。问某个value是否出现过。。。 思路：单调。。显然二分。。。唯一的技巧是从右上角","tags":["binary search"],"title":"leetcode 74. Search a 2D Matrix","type":"post","url":"/2017/03/leetcode-74-search-a-2d-matrix/","weight":0,"wordcount":162},{"author":null,"categories":["面试"],"content":null,"date":1488718302,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1488718302,"objectID":"44f55610d4900b1c9ff75db22a03812a","permalink":"https://111qqz.github.io/2017/03/","publishdate":"2017-03-05T12:51:42Z","readingtime":3,"relpermalink":"/2017/03/","section":"post","summary":"一开始是晚上七点半，直接一个电话过来就开始面试》。。 窝说不方便，又约了周末下午或者晚上，然后周六上午来了电话\u0026hellip;.。。。。于是又","tags":null,"title":"阿里一面.","type":"post","url":"/2017/03//","weight":0,"wordcount":1420},{"author":null,"categories":["c++"],"content":null,"date":1488353232,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1488353232,"objectID":"77d0d9e1b9917dbf5a3c04fde139c808","permalink":"https://111qqz.github.io/2017/03/c-sort/","publishdate":"2017-03-01T07:27:12Z","readingtime":1,"relpermalink":"/2017/03/c-sort/","section":"post","summary":"回想起大一的时候打cf\u0026hellip;那个时候对C++还不怎么熟悉。。。用sort不会自定义排序方式。。 于是手写快排。。。直接取中间元素没加","tags":["cpp","sort"],"title":"C++ sort学习笔记","type":"post","url":"/2017/03/c-sort/","weight":0,"wordcount":377},{"author":null,"categories":null,"content":null,"date":1488353232,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1488353232,"objectID":"","permalink":"https://111qqz.github.io/tags/sort/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sort/","section":"tags","summary":"","tags":null,"title":"sort","type":"tags","url":"/tags/sort/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1488288971,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1488288971,"objectID":"ddab07f7f165f13bf881216d4266fa6b","permalink":"https://111qqz.github.io/2017/02/","publishdate":"2017-02-28T13:36:11Z","readingtime":5,"relpermalink":"/2017/02/","section":"post","summary":"啊。。。虽然结果还没出来。。。不过回想发现有些细节已经有些记不清了。。。 所以打算先记录一下？ 就算过不了。。。也算是积累一些经验。 一面： 先是简","tags":null,"title":"百度实习生面试总结","type":"post","url":"/2017/02//","weight":0,"wordcount":2189},{"author":null,"categories":["c++"],"content":null,"date":1488266509,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1488266509,"objectID":"b21fc03748f3024c8c70a95b197d8793","permalink":"https://111qqz.github.io/2017/02/cpp-vector/","publishdate":"2017-02-28T07:21:49Z","readingtime":2,"relpermalink":"/2017/02/cpp-vector/","section":"post","summary":"起因是百度实习二面的时候被问了一道类似这样的题： 给我下面的代码，问有没有什么问题。 /* *********************************************** Author :111qqz Created Time :2017年02月28日 星期二 14时49分37","tags":["cpp","vector"],"title":"cpp vector学习笔记","type":"post","url":"/2017/02/cpp-vector/","weight":0,"wordcount":851},{"author":null,"categories":null,"content":null,"date":1488266509,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1488266509,"objectID":"","permalink":"https://111qqz.github.io/tags/vector/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/vector/","section":"tags","summary":"","tags":null,"title":"vector","type":"tags","url":"/tags/vector/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1487907938,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487907938,"objectID":"33312343fb562f0f1ef5cd3202adbf28","permalink":"https://111qqz.github.io/2017/02/leetcode-437-path-sum-iii/","publishdate":"2017-02-24T03:45:38Z","readingtime":1,"relpermalink":"/2017/02/leetcode-437-path-sum-iii/","section":"post","summary":"题目链接 题意：求一棵二叉树中，所有一段连续路径之和等于给定值的路径数目。 思路：想了半天就只能想到暴力。。。复杂度大概O(n^2)。。。也不是","tags":["brute force"],"title":"leetcode 437. Path Sum III","type":"post","url":"/2017/02/leetcode-437-path-sum-iii/","weight":0,"wordcount":222},{"author":null,"categories":["面试"],"content":null,"date":1487905039,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487905039,"objectID":"94f45819f5eb08841523a3c1deeaa8c5","permalink":"https://111qqz.github.io/2017/02/leetcode-101-symmetric-tree-add-to-list/","publishdate":"2017-02-24T02:57:19Z","readingtime":1,"relpermalink":"/2017/02/leetcode-101-symmetric-tree-add-to-list/","section":"post","summary":"题目链接 题意：判断一棵二叉树是否是自己的镜像。做法是做个copy，相当于两棵树做比较。注意逻辑不要漏掉就好 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode","tags":null,"title":"leetcode 101. Symmetric Tree Add to List（二叉树，判断镜像）","type":"post","url":"/2017/02/leetcode-101-symmetric-tree-add-to-list/","weight":0,"wordcount":212},{"author":null,"categories":["面试"],"content":null,"date":1487895619,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487895619,"objectID":"7b220e6e4c8e8d3165813e386a4029e0","permalink":"https://111qqz.github.io/2017/02/leetcode-110-balanced-binary-tree/","publishdate":"2017-02-24T00:20:19Z","readingtime":1,"relpermalink":"/2017/02/leetcode-110-balanced-binary-tree/","section":"post","summary":"题目链接 题意：判断一颗二叉树是否平衡\u0026hellip;. 思路：直接搞就好了。。。神TM又忘记dfs的时候忘记返回子调用的值。。。。我这是药丸啊","tags":null,"title":"leetcode 110. Balanced Binary Tree","type":"post","url":"/2017/02/leetcode-110-balanced-binary-tree/","weight":0,"wordcount":204},{"author":null,"categories":["面试"],"content":null,"date":1487769728,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487769728,"objectID":"e02ce56a0b34f6e39e6fa0195d27830b","permalink":"https://111qqz.github.io/2017/02/leetcode-235-lowest-common-ancestor-of-a-binary-search-tree/","publishdate":"2017-02-22T13:22:08Z","readingtime":1,"relpermalink":"/2017/02/leetcode-235-lowest-common-ancestor-of-a-binary-search-tree/","section":"post","summary":"题目链接 题意：求一个BST中某两个节点LCA\u0026hellip;. 思路：卧槽。。。竟然求LCA\u0026hellip;直接想到的显然是Tarjan的方法","tags":["binary search","LCA"],"title":"leetcode 235. Lowest Common Ancestor of a Binary Search Tree（求一个BST中某两个节点LCA）","type":"post","url":"/2017/02/leetcode-235-lowest-common-ancestor-of-a-binary-search-tree/","weight":0,"wordcount":347},{"author":null,"categories":["ACM"],"content":null,"date":1487767294,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487767294,"objectID":"482c5c0e289193bfdf4507b9604fcda5","permalink":"https://111qqz.github.io/2017/02/leetcode-104-maximum-depth-of-binary-tree/","publishdate":"2017-02-22T12:41:34Z","readingtime":1,"relpermalink":"/2017/02/leetcode-104-maximum-depth-of-binary-tree/","section":"post","summary":"题目链接 题意：求一棵树的深度。。。。 思路：。。。定义搞即可。。按照左右子树中大的算。。。因为据说是经典题（虽然并不觉得2333。。。所以记录","tags":null,"title":"leetcode 104. Maximum Depth of Binary Tree（求一棵树的深度）","type":"post","url":"/2017/02/leetcode-104-maximum-depth-of-binary-tree/","weight":0,"wordcount":136},{"author":null,"categories":["面试"],"content":null,"date":1487765676,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487765676,"objectID":"88e8f5805630a43aadd518cd9d87e90f","permalink":"https://111qqz.github.io/2017/02/leetcode-226-invert-binary-tree/","publishdate":"2017-02-22T12:14:36Z","readingtime":1,"relpermalink":"/2017/02/leetcode-226-invert-binary-tree/","section":"post","summary":"题目链接 题意：反转一棵二叉树。。。字面意思理解即可。。就是把每一棵子树的左右孩子交换。。。 思路：直接照着题意做就好了。。。没有坑。。记录的原","tags":null,"title":"leetcode 226. Invert Binary Tree（反转二叉树）","type":"post","url":"/2017/02/leetcode-226-invert-binary-tree/","weight":0,"wordcount":179},{"author":null,"categories":["面试"],"content":null,"date":1487763623,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487763623,"objectID":"c56cc65dbc7e6013b9ca3ccc1ff77d46","permalink":"https://111qqz.github.io/2017/02/112-path-sum/","publishdate":"2017-02-22T11:40:23Z","readingtime":1,"relpermalink":"/2017/02/112-path-sum/","section":"post","summary":"题目链接 题意：给一棵树。。问是否存在一条从树根到叶子的路径，使得路径上每个点的val之和等于给定的sum。 思路：。。。直接搞就好。。。由于是","tags":["前缀和"],"title":"112. Path Sum","type":"post","url":"/2017/02/112-path-sum/","weight":0,"wordcount":225},{"author":null,"categories":null,"content":null,"date":1487763623,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1487763623,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%89%8D%E7%BC%80%E5%92%8C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%89%8D%E7%BC%80%E5%92%8C/","section":"tags","summary":"","tags":null,"title":"前缀和","type":"tags","url":"/tags/%E5%89%8D%E7%BC%80%E5%92%8C/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1487675688,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1487675688,"objectID":"","permalink":"https://111qqz.github.io/tags/binary-search-tree/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/binary-search-tree/","section":"tags","summary":"","tags":null,"title":"binary search tree","type":"tags","url":"/tags/binary-search-tree/","weight":0,"wordcount":0},{"author":null,"categories":["面试"],"content":null,"date":1487675688,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487675688,"objectID":"a5151a840cf7a1695244dca254536a9e","permalink":"https://111qqz.github.io/2017/02/leetcode-108-convert-sorted-array-to-binary-search-tree/","publishdate":"2017-02-21T11:14:48Z","readingtime":1,"relpermalink":"/2017/02/leetcode-108-convert-sorted-array-to-binary-search-tree/","section":"post","summary":"leetcode108 题意：把有一个有序的数组转化成一课高度尽量小的bst(二叉搜索树) 思路：我竟然忘记了什么是bst\u0026hellip;\u0026hellip;..我好傻","tags":["binary search tree"],"title":"leetcode 108. Convert Sorted Array to Binary Search Tree（有序数组转化成bst）","type":"post","url":"/2017/02/leetcode-108-convert-sorted-array-to-binary-search-tree/","weight":0,"wordcount":326},{"author":null,"categories":["面试"],"content":null,"date":1487594181,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487594181,"objectID":"6673cffbdc001742ccfc38a5c8ced44e","permalink":"https://111qqz.github.io/2017/02/leetcode-107-binary-tree-level-order-traversal-ii/","publishdate":"2017-02-20T12:36:21Z","readingtime":1,"relpermalink":"/2017/02/leetcode-107-binary-tree-level-order-traversal-ii/","section":"post","summary":"最近要准备面试\u0026hellip;虽然leetcode的题目难度比较水..不过白板写代码还是要练下的。。。我所理解的白板写代码。。。大概就是。。","tags":null,"title":"leetcode 107 Binary Tree Level Order Traversal II(最底层往上依次输出二叉树每一个node的val)","type":"post","url":"/2017/02/leetcode-107-binary-tree-level-order-traversal-ii/","weight":0,"wordcount":426},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1487321083,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1487321083,"objectID":"63fbe6bedf6a1026810791dade722377","permalink":"https://111qqz.github.io/2017/02/hypereal-interview/","publishdate":"2017-02-17T08:44:43Z","readingtime":1,"relpermalink":"/2017/02/hypereal-interview/","section":"post","summary":"第一次参加面试orz\u0026hellip;所以还是有点期待+紧张的2333 题目比较多，30分钟做了一半吧，之后就是和面试官聊。 优先编程题。 由于题目","tags":null,"title":"hypereal面小记","type":"post","url":"/2017/02/hypereal-interview/","weight":0,"wordcount":496},{"author":null,"categories":["ACM"],"content":null,"date":1485792562,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1485792562,"objectID":"6e99e9024a050b28fa4da662941a7fd1","permalink":"https://111qqz.github.io/2017/01/bzoj-1303-cqoi2009/","publishdate":"2017-01-30T16:09:22Z","readingtime":2,"relpermalink":"/2017/01/bzoj-1303-cqoi2009/","section":"post","summary":"1303: [CQOI2009]中位数图 Time Limit: 1 Sec Memory Limit: 162 MB Submit: 2480 Solved: 1529 [Submit][Status][Discuss] Description 给出1~n的一个排列，统计该排列有多少个长度为奇数的连续子序列的中位数是b。中位数","tags":["乱搞","前缀和","后缀和"],"title":"BZOJ 1303: [CQOI2009]中位数图（前缀/后缀和乱搞）","type":"post","url":"/2017/01/bzoj-1303-cqoi2009/","weight":0,"wordcount":596},{"author":null,"categories":null,"content":null,"date":1485792562,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1485792562,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%90%8E%E7%BC%80%E5%92%8C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%90%8E%E7%BC%80%E5%92%8C/","section":"tags","summary":"","tags":null,"title":"后缀和","type":"tags","url":"/tags/%E5%90%8E%E7%BC%80%E5%92%8C/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1485523344,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1485523344,"objectID":"b321fba647e6f835c5fe06bc4de5ae97","permalink":"https://111qqz.github.io/2017/01/goodbye-2016/","publishdate":"2017-01-27T13:22:24Z","readingtime":4,"relpermalink":"/2017/01/goodbye-2016/","section":"post","summary":"所以还是稍微写写年终总结吧.. 感觉\u0026hellip;2016分成了两部分吧，前11个月是一部分，后1个月是另一部分。 前11个月似乎都在做同一件","tags":null,"title":"再见2016","type":"post","url":"/2017/01/goodbye-2016/","weight":0,"wordcount":1577},{"author":null,"categories":["ACM"],"content":null,"date":1485445327,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1485445327,"objectID":"9c87f1c494077b55a367326e32c8a1a0","permalink":"https://111qqz.github.io/2017/01/bzoj-1800-ahoi2009fly-/","publishdate":"2017-01-26T15:42:07Z","readingtime":2,"relpermalink":"/2017/01/bzoj-1800-ahoi2009fly-/","section":"post","summary":"1800: [Ahoi2009]fly 飞行棋 Time Limit: 10 Sec Memory Limit: 64 MB Submit: 1530 Solved: 1220 [Submit][Status][Discuss] Description 给出圆周上的若干个点，已知点与点之间的弧长，其值均为正整数，并依圆周顺序排列。 请找出这些点中有没有可以","tags":["math","尺取法"],"title":"BZOJ 1800: [Ahoi2009]fly 飞行棋 （尺取+数学）","type":"post","url":"/2017/01/bzoj-1800-ahoi2009fly--/","weight":0,"wordcount":638},{"author":null,"categories":["ACM"],"content":null,"date":1485418358,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1485418358,"objectID":"012ba692e34fed83520a023d9739267e","permalink":"https://111qqz.github.io/2017/01/bzoj-1207-hnoi2004-lis/","publishdate":"2017-01-26T08:12:38Z","readingtime":2,"relpermalink":"/2017/01/bzoj-1207-hnoi2004-lis/","section":"post","summary":"1207: [HNOI2004]打鼹鼠 Time Limit: 10 Sec Memory Limit: 162 MB Submit: 2854 Solved: 1390 [Submit][Status][Discuss] Description 鼹鼠是一种很喜欢挖洞的动物，但每过一定的时间，它还是喜欢把头探出到地面上来透透气的。","tags":["dp","LIS"],"title":"BZOJ 1207: [HNOI2004]打鼹鼠 (LIS)","type":"post","url":"/2017/01/bzoj-1207-hnoi2004-lis/","weight":0,"wordcount":929},{"author":null,"categories":null,"content":null,"date":1485418358,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1485418358,"objectID":"","permalink":"https://111qqz.github.io/tags/lis/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lis/","section":"tags","summary":"","tags":null,"title":"LIS","type":"tags","url":"/tags/lis/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1483794176,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1483794176,"objectID":"d2fb1d57909c2957e4ad1291160970df","permalink":"https://111qqz.github.io/2017/01/this-desperate-feeling-again/","publishdate":"2017-01-07T13:02:56Z","readingtime":1,"relpermalink":"/2017/01/this-desperate-feeling-again/","section":"post","summary":"绝望什么的\u0026hellip; 总要有个具体的事情吧\u0026hellip; 可是又说不清\u0026hellip;好像突然每件事都让我绝望\u0026hellip; 思考人生的","tags":null,"title":"又是这种绝望的感觉...","type":"post","url":"/2017/01/this-Desperate-feeling-again/","weight":0,"wordcount":240},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1483769884,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1483769884,"objectID":"25070affe48637204d15d76db1c136b0","permalink":"https://111qqz.github.io/2017/01/2333/","publishdate":"2017-01-07T06:18:04Z","readingtime":1,"relpermalink":"/2017/01/2333/","section":"post","summary":"“元旦打算干嘛？” “复习啊，你微机接口复习好了？数据库复习好了？体系架构复习好了？编译原理复习好了？嵌入式复习好了？” “\u0026hellip;\u0026h","tags":null,"title":"大概功课不忙才有资本谈恋爱吧2333","type":"post","url":"/2017/01/2333/","weight":0,"wordcount":77},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1483699555,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1483699555,"objectID":"4829776bb3d5b0568cde9e1d94cdd546","permalink":"https://111qqz.github.io/2017/01/every-age-has-a-different-temptation/","publishdate":"2017-01-06T10:45:55Z","readingtime":1,"relpermalink":"/2017/01/every-age-has-a-different-temptation/","section":"post","summary":"人生大概就是同各种欲望，各种诱惑做斗争的过程吧。","tags":null,"title":"其实每个时代都有不同的诱惑","type":"post","url":"/2017/01/Every-age-has-a-different-temptation/","weight":0,"wordcount":24},{"author":null,"categories":["其他"],"content":null,"date":1483413999,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1483413999,"objectID":"c45bdbc30896ed42896ce13c9a6ada4c","permalink":"https://111qqz.github.io/2017/01/software-architecture-course-review/","publishdate":"2017-01-03T03:26:39Z","readingtime":6,"relpermalink":"/2017/01/software-architecture-course-review/","section":"post","summary":"Cha1 软件架构概念： 是系统的一个或多个结构，它们由软件组件，组件的外部可见属性以及组件之间的关系组成。 组件的外部可见属性是指其他组件对该组件所做","tags":null,"title":"软件体系结构复习笔记","type":"post","url":"/2017/01/Software-Architecture-course-review/","weight":0,"wordcount":2948},{"author":null,"categories":["其他"],"content":null,"date":1482813653,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1482813653,"objectID":"1dcbc22090b4f90b6ec012b324be8859","permalink":"https://111qqz.github.io/2016/12/manjarozheteng/","publishdate":"2016-12-27T04:40:53Z","readingtime":2,"relpermalink":"/2016/12/manjarozheteng/","section":"post","summary":"噫。。之前x200上装的是win7+fedora25 gnome。。。 虽然感觉gnome对于09年的老电脑来说有点吃力\u0026hellip;不过也懒","tags":null,"title":"manjaro安(zhe)装(teng)记","type":"post","url":"/2016/12/manjarozheteng/","weight":0,"wordcount":729},{"author":null,"categories":null,"content":null,"date":1482650868,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1482650868,"objectID":"","permalink":"https://111qqz.github.io/tags/discourse/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/discourse/","section":"tags","summary":"","tags":null,"title":"discourse","type":"tags","url":"/tags/discourse/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1482650868,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1482650868,"objectID":"65594d6e0434dbd43dda63527b8f9798","permalink":"https://111qqz.github.io/2016/12/discourse/","publishdate":"2016-12-25T07:27:48Z","readingtime":1,"relpermalink":"/2016/12/discourse/","section":"post","summary":"解决办法:https://blog.discourse.org/2016/03/switching-your-discourse-from-","tags":["discourse"],"title":"discourse邮件服务无法使用的解决方案","type":"post","url":"/2016/12/discourse/","weight":0,"wordcount":90},{"author":null,"categories":["ACM"],"content":null,"date":1481979101,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1481979101,"objectID":"8493062a65727f371caf1f8247badabb","permalink":"https://111qqz.github.io/2016/12/","publishdate":"2016-12-17T12:51:41Z","readingtime":1,"relpermalink":"/2016/12/","section":"post","summary":"https://www.zhihu.com/question/35659528/answer/136064981 高考。。保送\u0026hellip;选择一错再错。 唯一正确的选择大概就是远离东北了吧。 真是幸运。 东北衰落不衰落是另一回事。 我不喜欢东北的人，虽然我","tags":null,"title":"这几年我只做对了一个选择","type":"post","url":"/2016/12//","weight":0,"wordcount":141},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1481970092,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1481970092,"objectID":"220dcf51e2f34be9cd005955c21f2d43","permalink":"https://111qqz.github.io/2016/12/20161217/","publishdate":"2016-12-17T10:21:32Z","readingtime":1,"relpermalink":"/2016/12/20161217/","section":"post","summary":"不知道什么时候会死。。。 中弹。。。是谁。。。。？ 竟然是。。。小学的一个同学。。。 肩膀。。。我要死了吗。。。 醒来以后回忆。。这个同学好像的确是","tags":null,"title":"20161217。。。","type":"post","url":"/2016/12/20161217/","weight":0,"wordcount":91},{"author":null,"categories":["其他"],"content":null,"date":1481533332,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1481533332,"objectID":"a83491851cee27172c8e7e6f6074ad68","permalink":"https://111qqz.github.io/2016/12/","publishdate":"2016-12-12T09:02:12Z","readingtime":4,"relpermalink":"/2016/12/","section":"post","summary":"实验一 设计实现简单语言的词法分析器 1、实验目的 通过该实验,熟练应用编译原理关于词法分析的基本理论和方法；学会用C/C++高级程序设计语言设计","tags":["编译器"],"title":"编译原理实验：词法分析器","type":"post","url":"/2016/12//","weight":0,"wordcount":1862},{"author":null,"categories":null,"content":null,"date":1481533332,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1481533332,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BC%96%E8%AF%91%E5%99%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BC%96%E8%AF%91%E5%99%A8/","section":"tags","summary":"","tags":null,"title":"编译器","type":"tags","url":"/tags/%E7%BC%96%E8%AF%91%E5%99%A8/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1481277100,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1481277100,"objectID":"100f6a8a870208c3fbf3cf4b627ae1b8","permalink":"https://111qqz.github.io/2016/12/","publishdate":"2016-12-09T09:51:40Z","readingtime":1,"relpermalink":"/2016/12/","section":"post","summary":"感觉owncloud的确很赞的样子。。。 小电影什么的。。我倒是需求不大。。。 不过作为同步盘感觉蛮赞的。。。 然而现在手头的服务器。。。除了论坛","tags":null,"title":"一些计划。。。","type":"post","url":"/2016/12//","weight":0,"wordcount":204},{"author":null,"categories":["其他"],"content":null,"date":1481182974,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1481182974,"objectID":"74a90d70a7b9342c755025d95f262421","permalink":"https://111qqz.github.io/2016/12/fedoracentosshadowsocks/","publishdate":"2016-12-08T07:42:54Z","readingtime":1,"relpermalink":"/2016/12/fedoracentosshadowsocks/","section":"post","summary":"操作肯定没有错，就是连接不上，显示超时 发现是防火墙的锅 具体请看：github_shadowsocks_issues_477","tags":["shadowsocks"],"title":"fedora/centos　服务器搭建shadowsocks超时的解决办法","type":"post","url":"/2016/12/fedoracentosshadowsocks/","weight":0,"wordcount":61},{"author":null,"categories":["其他"],"content":null,"date":1480926758,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480926758,"objectID":"e9e039d4ca19d9a73af4a96a670fcb9f","permalink":"https://111qqz.github.io/2016/12/","publishdate":"2016-12-05T08:32:38Z","readingtime":2,"relpermalink":"/2016/12/","section":"post","summary":"。。。由于一些不可描述的原因。。。 和某个华师计科的妹子一拍即合。。。打算搞一个论坛出来。。。 算是做一些微小的贡献2333 一开始打算尝试dz\u0026","tags":null,"title":"搭建论坛历程","type":"post","url":"/2016/12//","weight":0,"wordcount":547},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1480649869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480649869,"objectID":"8ea61688e66ce239fe0467b7a41f7882","permalink":"https://111qqz.github.io/2016/12/","publishdate":"2016-12-02T03:37:49Z","readingtime":1,"relpermalink":"/2016/12/","section":"post","summary":"原因大概是觉得\u0026hellip;我好无趣啊\u0026hellip;你也好无趣啊\u0026hellip;.何必浪费口舌在这里客套呢\u0026hellip;.","tags":null,"title":"承认吧，我就是不喜欢和人在一起","type":"post","url":"/2016/12//","weight":0,"wordcount":64},{"author":null,"categories":["ACM"],"content":null,"date":1480599890,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480599890,"objectID":"116344d8d3df6dbcb51a65ceb341a467","permalink":"https://111qqz.github.io/2016/12/codeforces-382-div-2-e-ostap-and-tree-dp/","publishdate":"2016-12-01T13:44:50Z","readingtime":2,"relpermalink":"/2016/12/codeforces-382-div-2-e-ostap-and-tree-dp/","section":"post","summary":"题目链接 题意：将一棵树的若干点染成黑色，要求满足对于任何一个点u,至少存在一个距离其k以内的点v被染成黑色，问染色方案数。 思路：还没完全搞懂","tags":["树形dp"],"title":"codeforces #382 div 2 E. Ostap and Tree (树形dp)","type":"post","url":"/2016/12/codeforces-382-div-2-e-ostap-and-tree-dp/","weight":0,"wordcount":593},{"author":null,"categories":null,"content":null,"date":1480599890,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1480599890,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A0%91%E5%BD%A2dp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%91%E5%BD%A2dp/","section":"tags","summary":"","tags":null,"title":"树形dp","type":"tags","url":"/tags/%E6%A0%91%E5%BD%A2dp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1480510530,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480510530,"objectID":"6f5fb32e408eec00799f75aa537417d8","permalink":"https://111qqz.github.io/2016/11/hdu-1520/","publishdate":"2016-11-30T12:55:30Z","readingtime":2,"relpermalink":"/2016/11/hdu-1520/","section":"post","summary":"题目链接 题意：一个舞会，每个人有一个val，给出n个人之间的领导和被领导关系，一个人不愿意与他的领导同时参加，问一种安排方案，使得参加的人的","tags":["树形dp"],"title":"hdu 1520 Anniversary party (树形dp模板题)","type":"post","url":"/2016/11/hdu-1520/","weight":0,"wordcount":506},{"author":null,"categories":["ACM"],"content":null,"date":1480507849,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480507849,"objectID":"3ade291c570e47b46d16668fa7e72334","permalink":"https://111qqz.github.io/2016/11/dp/","publishdate":"2016-11-30T12:10:49Z","readingtime":1,"relpermalink":"/2016/11/dp/","section":"post","summary":"资料１","tags":["树形dp"],"title":"树形dp学习资料","type":"post","url":"/2016/11/dp/","weight":0,"wordcount":3},{"author":null,"categories":["其他"],"content":null,"date":1480495077,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480495077,"objectID":"710c49e1d18de75a7acb52217a4bcbed","permalink":"https://111qqz.github.io/2016/11/crayon/","publishdate":"2016-11-30T08:37:57Z","readingtime":1,"relpermalink":"/2016/11/crayon/","section":"post","summary":"在最后一个标签 加上两个 （空格的字符表示 ＆ ＋ nbsp） 就好了。。。。","tags":null,"title":"关于代码插件　crayon　无法高亮的解决方案","type":"post","url":"/2016/11/crayon/","weight":0,"wordcount":33},{"author":null,"categories":["ACM"],"content":null,"date":1480493423,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480493423,"objectID":"352f55e829809e3cbd99883f9a98d535","permalink":"https://111qqz.github.io/2016/11/poj-3274/","publishdate":"2016-11-30T08:10:23Z","readingtime":3,"relpermalink":"/2016/11/poj-3274/","section":"post","summary":"poj 3274 题目链接 题意：给出n个数和k，每个数不超过k位二进制。现在问最长的一段区间，满足该区间中所有数相加，k个位置上的数相等。 思路：k个位置上","tags":["hash","抽屉原理"],"title":"poj 3274 Gold Balanced Lineup (抽屉原理？错题？)","type":"post","url":"/2016/11/poj-3274/","weight":0,"wordcount":1264},{"author":null,"categories":null,"content":null,"date":1480493423,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1480493423,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"抽屉原理","type":"tags","url":"/tags/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1480487456,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480487456,"objectID":"b32810a06c862e8f663da7fd0535937a","permalink":"https://111qqz.github.io/2016/11/poj-3349/","publishdate":"2016-11-30T06:30:56Z","readingtime":2,"relpermalink":"/2016/11/poj-3349/","section":"post","summary":"题意：有n个雪花，每个雪花有６瓣，给出每一瓣的长度，问是否有两个雪花相同。（雪花相同的条件是：存在某个顺序使得两个雪花的每一瓣长度对应相等）","tags":["hash"],"title":"poj 3349 Snowflake Snow Snowflakes (利用hash分组)","type":"post","url":"/2016/11/poj-3349/","weight":0,"wordcount":751},{"author":null,"categories":["ACM"],"content":null,"date":1480418188,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480418188,"objectID":"c5fae8b87aaa40af05404800a6b0f151","permalink":"https://111qqz.github.io/2016/11/cf375d-2/","publishdate":"2016-11-29T11:16:28Z","readingtime":1,"relpermalink":"/2016/11/cf375d-2/","section":"post","summary":"题目链接 题意：一个人有n元前，他要交的税是n的最大因子（除n外)，现在这个投机倒把者想把前分成k部分(k为大于等于１的任意值）每部分不能为１","tags":["math","number theory","哥德巴赫猜想"],"title":"codeforces #382 div2 D. Taxes(哥德巴赫猜想)","type":"post","url":"/2016/11/cf375d-2/","weight":0,"wordcount":473},{"author":null,"categories":null,"content":null,"date":1480418188,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1480418188,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/","section":"tags","summary":"","tags":null,"title":"哥德巴赫猜想","type":"tags","url":"/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1480417645,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480417645,"objectID":"ab5f69336f9ec2929fe0d3e86b950e59","permalink":"https://111qqz.github.io/2016/11/cf735d/","publishdate":"2016-11-29T11:07:25Z","readingtime":1,"relpermalink":"/2016/11/cf735d/","section":"post","summary":"题目链接 题意：n个人进行淘汰赛制的比赛，输的人直接被淘汰，不进行下一轮，现在要求两个人可以比赛当且仅当两个人的胜场数相差小于等于１，现在问赢","tags":["math"],"title":"codeforces #382 div2 C. Tennis Championship(打表找规律）","type":"post","url":"/2016/11/cf735d/","weight":0,"wordcount":361},{"author":null,"categories":["ACM"],"content":null,"date":1480341810,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480341810,"objectID":"b42ae18c4c4db56e67982b329774ae76","permalink":"https://111qqz.github.io/2016/11/bzoj-1257-cqoi2007sum-/","publishdate":"2016-11-28T14:03:30Z","readingtime":2,"relpermalink":"/2016/11/bzoj-1257-cqoi2007sum-/","section":"post","summary":"1257: [CQOI2007]余数之和sum Time Limit: 5 Sec Memory Limit: 162 MB Submit: 3724 Solved: 1711 [Submit][Status][Discuss] Description 给出正整数n和k，计算j(n, k)=k mod 1 + k mod 2 + k mod 3 + … + k mod n的值，其中k","tags":["math"],"title":"bzoj 1257: [CQOI2007]余数之和sum (数学)","type":"post","url":"/2016/11/bzoj-1257-cqoi2007sum-/","weight":0,"wordcount":558},{"author":null,"categories":["ACM"],"content":null,"date":1480321870,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480321870,"objectID":"f5d1aaaa81d8efde1c42badce86ecb0b","permalink":"https://111qqz.github.io/2016/11/bzoj-1008-hnoi2008/","publishdate":"2016-11-28T08:31:10Z","readingtime":1,"relpermalink":"/2016/11/bzoj-1008-hnoi2008/","section":"post","summary":"1008: [HNOI2008]越狱 Time Limit: 1 Sec Memory Limit: 162 MB Submit: 8165 Solved: 3486 [Submit][Status][Discuss] Description 监狱有连续编号为1\u0026hellip;N的N个房间，每个房间关押一个犯人，有M种宗教，每个","tags":["组合数学"],"title":"bzoj 1008: [HNOI2008]越狱(对立事件，组合数学)","type":"post","url":"/2016/11/bzoj-1008-hnoi2008/","weight":0,"wordcount":424},{"author":null,"categories":["ACM"],"content":null,"date":1480320893,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480320893,"objectID":"b3f6a75aa30da2cd4f91c7917e000a2a","permalink":"https://111qqz.github.io/2016/11/bzoj-1192/","publishdate":"2016-11-28T08:14:53Z","readingtime":2,"relpermalink":"/2016/11/bzoj-1192/","section":"post","summary":"1192: [HNOI2006]鬼谷子的钱袋 Time Limit: 10 Sec Memory Limit: 162 MB Submit: 3192 Solved: 2313 [Submit][Status][Discuss] Description 鬼谷子非常聪明，正因为这样，他非常繁忙，经常有各诸侯车的特派员前来向他咨询时政","tags":["二进制"],"title":"bzoj 1192: [HNOI2006]鬼谷子的钱袋","type":"post","url":"/2016/11/bzoj-1192/","weight":0,"wordcount":603},{"author":null,"categories":null,"content":null,"date":1480320893,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1480320893,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/","section":"tags","summary":"","tags":null,"title":"二进制","type":"tags","url":"/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1480317412,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480317412,"objectID":"36d820bd961136ba767e84de426bae35","permalink":"https://111qqz.github.io/2016/11/cf740e/","publishdate":"2016-11-28T07:16:52Z","readingtime":3,"relpermalink":"/2016/11/cf740e/","section":"post","summary":"e:题意：那个数，定义hill为一段连续的区间，满足该区间为严格单峰。现在有若干操作，每个操作是对某段区间的数同时增加一个数，问每次操作后，","tags":["lazy标记","线段树"],"title":"codeforces #381 div2 E. Alyona and towers (线段树 区间合并)","type":"post","url":"/2016/11/cf740e/","weight":0,"wordcount":1349},{"author":null,"categories":["ACM"],"content":null,"date":1480316820,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480316820,"objectID":"cfca61066c9e4f917effa8ef2d4a70f1","permalink":"https://111qqz.github.io/2016/11/cf740d/","publishdate":"2016-11-28T07:07:00Z","readingtime":2,"relpermalink":"/2016/11/cf740d/","section":"post","summary":"题目链接 d:题意：一棵树，给出边权和点权，定义点v控制点u，当且仅当u是v的子树中的点，并且dis(u,v)\u0026lt;=a[u]，其中dis(","tags":["binary search","前缀和"],"title":"codeforces 381 div 2 D. Alyona and a tree(二分+前缀和)","type":"post","url":"/2016/11/cf740d/","weight":0,"wordcount":786},{"author":null,"categories":["ACM"],"content":null,"date":1480316631,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480316631,"objectID":"a338d05fb82fae5e2a902e8ec4ac40ea","permalink":"https://111qqz.github.io/2016/11/cf740c/","publishdate":"2016-11-28T07:03:51Z","readingtime":1,"relpermalink":"/2016/11/cf740c/","section":"post","summary":"题目链接 题意： m个区间，要求构造一个长度为n的数组，满足m个区间中，每个区间的mex值中的最小值最大。 s思路：很容易想到的是\u0026hellip;","tags":["构造"],"title":"codeforces #381 div 2 C. Alyona and mex (构造)","type":"post","url":"/2016/11/cf740c/","weight":0,"wordcount":392},{"author":null,"categories":["ACM"],"content":null,"date":1480237149,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480237149,"objectID":"ad418cb0870d7a81f66f581e09cbaa7d","permalink":"https://111qqz.github.io/2016/11/hdu-5367-digger/","publishdate":"2016-11-27T08:59:09Z","readingtime":4,"relpermalink":"/2016/11/hdu-5367-digger/","section":"post","summary":"题目链接 题意： 地主小花有n座山，这些山在地主家门前排成一条直线。这些山一开始均有相同的高度。 每一天，小花都会要求ZJiaQ开挖机把几座山挖掉","tags":["动态线段树","线段树"],"title":"hdu 5367 digger(动态线段树，区间合并)","type":"post","url":"/2016/11/hdu-5367-digger/","weight":0,"wordcount":1646},{"author":null,"categories":null,"content":null,"date":1480237149,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1480237149,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8A%A8%E6%80%81%E7%BA%BF%E6%AE%B5%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8A%A8%E6%80%81%E7%BA%BF%E6%AE%B5%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"动态线段树","type":"tags","url":"/tags/%E5%8A%A8%E6%80%81%E7%BA%BF%E6%AE%B5%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1480159286,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1480159286,"objectID":"7ffd0e791d08a8d6952970ad5da4eb5a","permalink":"https://111qqz.github.io/2016/11/hdu-3308/","publishdate":"2016-11-26T11:21:26Z","readingtime":2,"relpermalink":"/2016/11/hdu-3308/","section":"post","summary":"题目链接 题意：长度为n的序列，单点更新，或者询问某一个区间中最长连续严格递增序列的长度是多少。（此处的连续为位置连续，并非数值连续，也就是3","tags":["线段树"],"title":"hdu 3308 LCIS (线段树单点更新，区间合并)","type":"post","url":"/2016/11/hdu-3308/","weight":0,"wordcount":695},{"author":null,"categories":["ACM"],"content":null,"date":1479953353,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479953353,"objectID":"8547085b6eea93094897790839a74e99","permalink":"https://111qqz.github.io/2016/11/codeforces-381-div2/","publishdate":"2016-11-24T02:09:13Z","readingtime":5,"relpermalink":"/2016/11/codeforces-381-div2/","section":"post","summary":"http://codeforces.com/contest/740 A:现在有n个某种物品，要买k个使得n+k是4的倍数，可以的购买方案为a元1个，b元2个，c元3个，每种方案都可以买无限多。 思路：需要注意","tags":null,"title":"codeforces #381 div2","type":"post","url":"/2016/11/codeforces-381-div2/","weight":0,"wordcount":2255},{"author":null,"categories":["ACM"],"content":null,"date":1479827294,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479827294,"objectID":"884e7f1f58a6b2818abf676967d7335c","permalink":"https://111qqz.github.io/2016/11/poj-1971/","publishdate":"2016-11-22T15:08:14Z","readingtime":1,"relpermalink":"/2016/11/poj-1971/","section":"post","summary":"题目链接 题意：给出n（n\u0026lt;=1E3）个不同的点，问最多组成多少个平行四边形。 思路：这道题的关键是，对于平行四边形的判断条件，要利用平行","tags":["math"],"title":"poj 1971  Parallelogram Counting","type":"post","url":"/2016/11/poj-1971/","weight":0,"wordcount":393},{"author":null,"categories":["ACM"],"content":null,"date":1479823361,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479823361,"objectID":"1cdd3f55e742c1cc47ed84b0177de3f3","permalink":"https://111qqz.github.io/2016/11/poj-1200/","publishdate":"2016-11-22T14:02:41Z","readingtime":1,"relpermalink":"/2016/11/poj-1200/","section":"post","summary":"题目链接 题意：一个字符串，其仅由nc种字符组成，问其所有长度为n的字串里，共用多少种不同的。 思路：一开始木有懂nc种字符有什么用\u0026helli","tags":["hash"],"title":"poj 1200  Crazy Search (字符串哈希)","type":"post","url":"/2016/11/poj-1200/","weight":0,"wordcount":385},{"author":null,"categories":["ACM"],"content":null,"date":1479814894,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479814894,"objectID":"fde88569fb00bd4457d63bb8b5175672","permalink":"https://111qqz.github.io/2016/11/hdu1800/","publishdate":"2016-11-22T11:41:34Z","readingtime":1,"relpermalink":"/2016/11/hdu1800/","section":"post","summary":"题目链接 题意：n个人，每个人有一个level值，用一个最长30位的，可能带前缀0的数字串表示，如果i的level大于j的level，那么i可","tags":["hash"],"title":"hdu 1800 Flying to the Mars (字符串hash)","type":"post","url":"/2016/11/hdu1800/","weight":0,"wordcount":481},{"author":null,"categories":["ACM"],"content":null,"date":1479813086,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479813086,"objectID":"2034295ea00753bbe6006be8dcfbc2da","permalink":"https://111qqz.github.io/2016/11/cf4c/","publishdate":"2016-11-22T11:11:26Z","readingtime":1,"relpermalink":"/2016/11/cf4c/","section":"post","summary":"题目链接 题意：网站的注册系统..处理用户要注册的用户名，如果数据库中没有重名输出OK，否则输出要注册的用户名的字符串+num,num的大小为","tags":["hash"],"title":"codeforces 4C. Registration system (字符串hash)","type":"post","url":"/2016/11/cf4c/","weight":0,"wordcount":285},{"author":null,"categories":["ACM"],"content":null,"date":1479812356,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479812356,"objectID":"38748fc0032ddba2d000f646bb268d6e","permalink":"https://111qqz.github.io/2016/11/poj-2503/","publishdate":"2016-11-22T10:59:16Z","readingtime":1,"relpermalink":"/2016/11/poj-2503/","section":"post","summary":"题目链接 题意：给定一个两种语言的对照关系表\u0026hellip;给出后一种语言中的单词，问对应的前一种语言的单词是什么。。。 思路：hash一下然后","tags":["hash"],"title":"poj 2503 Babelfish (字符串hash +sscanf读入技巧)","type":"post","url":"/2016/11/poj-2503/","weight":0,"wordcount":354},{"author":null,"categories":["ACM"],"content":null,"date":1479611338,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479611338,"objectID":"6b43d4669788344b71ce1154800a6873","permalink":"https://111qqz.github.io/2016/11/hdu-1880-hash/","publishdate":"2016-11-20T03:08:58Z","readingtime":1,"relpermalink":"/2016/11/hdu-1880-hash/","section":"post","summary":"题目链接 题意：给你一部魔咒词典。当哈利听到一个魔咒时，你的程序必须告诉他那个魔咒的功能；当哈利需要某个功能但不知道该用什么魔咒时，你的程序要","tags":["hash"],"title":"hdu 1880 魔咒词典 (字符串hash)","type":"post","url":"/2016/11/hdu-1880--hash/","weight":0,"wordcount":386},{"author":null,"categories":["ACM"],"content":null,"date":1479604948,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479604948,"objectID":"c6cb11b3848caf5be26d4a4c9897bd45","permalink":"https://111qqz.github.io/2016/11/bzoj-2456-mode-o1n2/","publishdate":"2016-11-20T01:22:28Z","readingtime":1,"relpermalink":"/2016/11/bzoj-2456-mode-o1n2/","section":"post","summary":"2456: mode Time Limit: 1 Sec Memory Limit: 1 MB Submit: 3887 Solved: 1636 [Submit][Status][Discuss] Description 给你一个n个数的数列，其中某个数出现了超过n div 2次即众数，请你找出那个数。 Input 第1行一个正整数n。 第2行n个正","tags":["math"],"title":"bzoj 2456: mode (O(1)找到出现次数大于n/2的数)","type":"post","url":"/2016/11/bzoj-2456-mode-o1n2/","weight":0,"wordcount":375},{"author":null,"categories":null,"content":null,"date":1479574211,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479574211,"objectID":"b7b1bb84feba8f4048e8feff097f886d","permalink":"https://111qqz.github.io/2016/11/mutual-training-for-wannafly-union-1/","publishdate":"2016-11-19T16:50:11Z","readingtime":5,"relpermalink":"/2016/11/mutual-training-for-wannafly-union-1/","section":"post","summary":"比赛链接 题外话： 说实话我依然记得我入学那年，也就是14年，看到了华科又一次进final，然后15年仿佛已经开始走下坡路，到了16年，icpc","tags":null,"title":"Mutual Training for Wannafly Union #1","type":"post","url":"/2016/11/mutual-training-for-wannafly-union-1/","weight":0,"wordcount":2303},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1479553179,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479553179,"objectID":"04f6d7ffb12aa39b147e12aa375baed6","permalink":"https://111qqz.github.io/2016/11/reflection/","publishdate":"2016-11-19T10:59:39Z","readingtime":1,"relpermalink":"/2016/11/reflection/","section":"post","summary":"我的问题。。。大概在于。。。 太容易中途弃疗。。以及。。。没有成为队伍carry的觉悟。。。或者说信心。。。","tags":null,"title":"反思","type":"post","url":"/2016/11/Reflection/","weight":0,"wordcount":53},{"author":null,"categories":["ACM"],"content":null,"date":1479477026,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479477026,"objectID":"1439b8a2266785006a7ab67f6d2d8e5d","permalink":"https://111qqz.github.io/2016/11/bzoj-1968-ahoi2005common-/","publishdate":"2016-11-18T13:50:26Z","readingtime":1,"relpermalink":"/2016/11/bzoj-1968-ahoi2005common-/","section":"post","summary":"1968: [Ahoi2005]COMMON 约数研究 Time Limit: 1 Sec Memory Limit: 64 MB Submit: 1997 Solved: 1508 [Submit][Status][Discuss] Description Input 只有一行一个整数 N（0 \u0026lt; N \u0026lt; 1000000）。 Output 只有一行输出，为整数M，即f(1)到f(N)的累加","tags":["math","思维"],"title":"bzoj 1968: [Ahoi2005]COMMON 约数研究 (思维题)","type":"post","url":"/2016/11/bzoj-1968-ahoi2005common--/","weight":0,"wordcount":317},{"author":null,"categories":null,"content":null,"date":1479477026,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1479477026,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%80%9D%E7%BB%B4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%80%9D%E7%BB%B4/","section":"tags","summary":"","tags":null,"title":"思维","type":"tags","url":"/tags/%E6%80%9D%E7%BB%B4/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1479475981,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479475981,"objectID":"259ee5473dfb7debf09981ddc070a402","permalink":"https://111qqz.github.io/2016/11/bzoj-2463-2009-/","publishdate":"2016-11-18T13:33:01Z","readingtime":2,"relpermalink":"/2016/11/bzoj-2463-2009-/","section":"post","summary":"2463: [中山市选2009]谁能赢呢？ Time Limit: 10 Sec Memory Limit: 128 MB Submit: 1826 Solved: 1347 [Submit][Status][Discuss] Description 小明和小红经常玩一个博弈游戏。给定一个n×n的棋盘，一个石头被放在棋盘的左上角。","tags":["博弈论"],"title":"bzoj 2463: [中山市选2009]谁能赢呢？ (博弈论)","type":"post","url":"/2016/11/bzoj-2463-2009-/","weight":0,"wordcount":535},{"author":null,"categories":null,"content":null,"date":1479475981,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1479475981,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"博弈论","type":"tags","url":"/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1479461225,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479461225,"objectID":"f383d1aec1762a89c38ce42b5f94fdad","permalink":"https://111qqz.github.io/2016/11/sigh/","publishdate":"2016-11-18T09:27:05Z","readingtime":1,"relpermalink":"/2016/11/sigh/","section":"post","summary":"上编译原理课 写题\u0026hellip;被老师干了QAQ 还好他的提问我没回答错Orz，不然更惨 吓傻了2333","tags":null,"title":"sigh","type":"post","url":"/2016/11/sigh/","weight":0,"wordcount":50},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1479398668,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479398668,"objectID":"8032a5d1f2c88e391a95c8aa7b54eefb","permalink":"https://111qqz.github.io/2016/11/depression/","publishdate":"2016-11-17T16:04:28Z","readingtime":1,"relpermalink":"/2016/11/depression/","section":"post","summary":"这样下去迟早抑郁\u0026hellip;.","tags":null,"title":"。。。。。。。。","type":"post","url":"/2016/11/depression/","weight":0,"wordcount":17},{"author":null,"categories":["ACM"],"content":null,"date":1479388967,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479388967,"objectID":"7d1a643cf2f5251814e8784ced197b72","permalink":"https://111qqz.github.io/2016/11/poj-3244/","publishdate":"2016-11-17T13:22:47Z","readingtime":2,"relpermalink":"/2016/11/poj-3244/","section":"post","summary":"题目链接 题意： For every pair of triplets, Ta = (Ia, Ja, Ka) and T__b = (Ib, Jb, Kb), we define the difference value between Ta and_T__b_ as follows: D(Ta,_ Tb_) = max {_Ia_ − _Ib_, _Ja_ − _Jb_, _Ka_ − _Kb_} − min {_Ia_ − _Ib_, _Ja_ − _Jb_, _Ka_ − _Kb_} Now you are given N triplets, could you write a program to calculate","tags":["math"],"title":"【叉姐的魔法训练第一课_初级魔法练习】poj 3244 Difference between Triplets （数学）","type":"post","url":"/2016/11/poj-3244/","weight":0,"wordcount":524},{"author":null,"categories":null,"content":null,"date":1479349759,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1479349759,"objectID":"","permalink":"https://111qqz.github.io/tags/bitset%E4%BC%98%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/bitset%E4%BC%98%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"bitset优化","type":"tags","url":"/tags/bitset%E4%BC%98%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1479349759,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479349759,"objectID":"20b0f21f748d6d9f4d8a15b02b94d1c9","permalink":"https://111qqz.github.io/2016/11/poj2443/","publishdate":"2016-11-17T02:29:19Z","readingtime":2,"relpermalink":"/2016/11/poj2443/","section":"post","summary":"poj 2443题目链接 题意：给出n个可重集\u0026hellip;以及集合中的元素。。。现在若干查询，每个查询给出一对数x,y，询问是否存在某个集合，同","tags":["bitset优化"],"title":"【叉姐的魔法训练第一课_初级魔法练习】poj 2443 Set Operation ( bitset加速)","type":"post","url":"/2016/11/poj2443/","weight":0,"wordcount":518},{"author":null,"categories":["ACM"],"content":null,"date":1479281313,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479281313,"objectID":"a3a73ea96a0ef6e0000c5e76b9d59037","permalink":"https://111qqz.github.io/2016/11/hdu2602/","publishdate":"2016-11-16T07:28:33Z","readingtime":1,"relpermalink":"/2016/11/hdu2602/","section":"post","summary":"题目链接 题意:容量为V的背包，n个骨头，给出价值和体积，问最多能装多少价值的背包。 思路：01背包裸体。 /* *********************************************** Author :111qqz Created Time :2016年11月16日 星","tags":["01背包","dp"],"title":"(dp专题006)hdu 2602 Bone Collector（01背包）","type":"post","url":"/2016/11/hdu2602/","weight":0,"wordcount":266},{"author":null,"categories":null,"content":null,"date":1479281313,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1479281313,"objectID":"","permalink":"https://111qqz.github.io/tags/01%E8%83%8C%E5%8C%85/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/01%E8%83%8C%E5%8C%85/","section":"tags","summary":"","tags":null,"title":"01背包","type":"tags","url":"/tags/01%E8%83%8C%E5%8C%85/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1479279860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479279860,"objectID":"d158b515c7b790f290bc4bea08a21700","permalink":"https://111qqz.github.io/2016/11/hdu1864/","publishdate":"2016-11-16T07:04:20Z","readingtime":1,"relpermalink":"/2016/11/hdu1864/","section":"post","summary":"hdu1864题目链接 题意：中文题目，不多说了。 思路：正解是01背包，呵呵呵。 出题人是傻逼吗？ 不给数据范围？ 以及，正解的01背包基于所有的发","tags":["01背包","dp"],"title":"[dp专题005]hdu 1864最大报销额（01背包，垃圾题）","type":"post","url":"/2016/11/hdu1864/","weight":0,"wordcount":421},{"author":null,"categories":["ACM"],"content":null,"date":1479208796,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479208796,"objectID":"1f582a7e76711a69d34f092b45ec3b0b","permalink":"https://111qqz.github.io/2016/11/hdu2955/","publishdate":"2016-11-15T11:19:56Z","readingtime":2,"relpermalink":"/2016/11/hdu2955/","section":"post","summary":"题目链接 题意： 给出n个银行 ，以及抢劫每个银行可以得到的价值和被抓的概率，不同银行之间被抓的概率是相互独立的，现在给出安全概率p，只有当概率从","tags":["01背包","dp"],"title":"(dp专题004)hdu 2955Robberies（01背包变形）","type":"post","url":"/2016/11/hdu2955/","weight":0,"wordcount":511},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1479139701,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479139701,"objectID":"6394c5f3a01f2227efd10c0b7b536b52","permalink":"https://111qqz.github.io/2016/11/deepin-is-so-poor/","publishdate":"2016-11-14T16:08:21Z","readingtime":2,"relpermalink":"/2016/11/deepin-is-so-poor/","section":"post","summary":"前几天忘记什么原因，把gnome的什么东西搞坏了，干脆就换了kde. 然后发现kde太多细节，而且换了kde之后，关机键是失灵的\u0026hellip","tags":null,"title":"对deepin失望至极","type":"post","url":"/2016/11/deepin-is-so-poor/","weight":0,"wordcount":704},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1479092561,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479092561,"objectID":"42c37292b4c11c35a1441c4b8218c0cf","permalink":"https://111qqz.github.io/2016/11/kde/","publishdate":"2016-11-14T03:02:41Z","readingtime":1,"relpermalink":"/2016/11/kde/","section":"post","summary":"kde好难用啊\u0026hellip;. 换回了gnome.","tags":null,"title":"辣鸡kde","type":"post","url":"/2016/11/kde/","weight":0,"wordcount":25},{"author":null,"categories":["ACM"],"content":null,"date":1479047886,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479047886,"objectID":"b7a9ecfba2639df6fb899f63c70c68f9","permalink":"https://111qqz.github.io/2016/11/hdu-4055/","publishdate":"2016-11-13T14:38:06Z","readingtime":2,"relpermalink":"/2016/11/hdu-4055/","section":"post","summary":"题目链接 题意：给出n(n\u0026lt;=1E3)个字符，字符可能为\u0026rsquo;D\u0026rsquo;,\u0026lsquo;I\u0026rsquo;,'?'，第i位对","tags":["dp"],"title":"(dp专题003)hdu 4055 Number String(dp)","type":"post","url":"/2016/11/hdu-4055/","weight":0,"wordcount":595},{"author":null,"categories":["ACM"],"content":null,"date":1479036800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479036800,"objectID":"86c04105ca62d627a549f7dd7b545aa5","permalink":"https://111qqz.github.io/2016/11/dp002hdu-4489-the-kings-ups-and-downs-dp/","publishdate":"2016-11-13T11:33:20Z","readingtime":2,"relpermalink":"/2016/11/dp002hdu-4489-the-kings-ups-and-downs-dp/","section":"post","summary":"题目链接 题意：问长度为n的“波浪”型排列（即1..n每个数出现一次）有多少。波浪型的含义是，“高低高”或者“低高低” 思路：我们考虑当前已经知","tags":["dp"],"title":"【dp专题002】hdu 4489 The King’s Ups and Downs (dp)","type":"post","url":"/2016/11/dp002hdu-4489-the-kings-ups-and-downs-dp/","weight":0,"wordcount":709},{"author":null,"categories":["ACM"],"content":null,"date":1479031847,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479031847,"objectID":"616ac0e190ed6af5f0fbf6b8fe9a3436","permalink":"https://111qqz.github.io/2016/11/hdu-4747-mex-lazy/","publishdate":"2016-11-13T10:10:47Z","readingtime":2,"relpermalink":"/2016/11/hdu-4747-mex-lazy/","section":"post","summary":"题目连接 题意：给出n(n\u0026lt;=200000)个数，问所有区间[l,r]中mex的和。 （一个区间mex的定义为，这个区间中没有出现的最小的","tags":["lazy标记","线段树"],"title":"hdu 4747 Mex （线段树lazy标记）","type":"post","url":"/2016/11/hdu-4747-mex-lazy/","weight":0,"wordcount":894},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1479024705,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479024705,"objectID":"4104d935331225c5560f93d4a3e4e6bd","permalink":"https://111qqz.github.io/2016/11/20161113/","publishdate":"2016-11-13T08:11:45Z","readingtime":1,"relpermalink":"/2016/11/20161113/","section":"post","summary":"感冒也好得差不多了。 纠结也纠结够了吧。 退役个毛线啊。 寒假还要去叉姐的camp呢.. 好了，继续。","tags":null,"title":"20161113","type":"post","url":"/2016/11/20161113/","weight":0,"wordcount":47},{"author":null,"categories":null,"content":null,"date":1479021662,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1479021662,"objectID":"","permalink":"https://111qqz.github.io/tags/kmp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/kmp/","section":"tags","summary":"","tags":null,"title":"kmp","type":"tags","url":"/tags/kmp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1479021662,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1479021662,"objectID":"43267bad5dde4ddf944ee19838d294c5","permalink":"https://111qqz.github.io/2016/11/bzoj-1009/","publishdate":"2016-11-13T07:21:02Z","readingtime":3,"relpermalink":"/2016/11/bzoj-1009/","section":"post","summary":"1009: [HNOI2008]GT考试 Time Limit: 1 Sec Memory Limit: 162 MB Submit: 3127 Solved: 1926 [Submit][Status][Discuss] Description 阿申准备报名参加GT考试，准考证号为N位数X1X2\u0026hellip;.Xn(0\u0026lt","tags":["dp","kmp","快速幂","矩阵"],"title":"【dp专题001】bzoj 1009: [HNOI2008]GT考试 (字符串上dp+kmp+矩阵加速线性递推式)","type":"post","url":"/2016/11/bzoj-1009/","weight":0,"wordcount":1011},{"author":null,"categories":["ACM"],"content":null,"date":1478954365,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478954365,"objectID":"8c81bbc6b21379dc7a40a5a8b3fb0b50","permalink":"https://111qqz.github.io/2016/11/uva10328/","publishdate":"2016-11-12T12:39:25Z","readingtime":2,"relpermalink":"/2016/11/uva10328/","section":"post","summary":"题目链接 题意：问长度为n，每个位置由且仅有‘H’和\u0026rsquo;T'组成的序列中，至少有连续k个‘H’出现的方案数。 思路：不会做，参考了题解","tags":["dp","java","区间dp","高精度"],"title":"[dp专题000]uva 10328  Coin Toss (java 大数+dp)（Unsolved）","type":"post","url":"/2016/11/uva10328/","weight":0,"wordcount":746},{"author":null,"categories":null,"content":null,"date":1478954365,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1478954365,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8C%BA%E9%97%B4dp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8C%BA%E9%97%B4dp/","section":"tags","summary":"","tags":null,"title":"区间dp","type":"tags","url":"/tags/%E5%8C%BA%E9%97%B4dp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1478954365,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1478954365,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/","section":"tags","summary":"","tags":null,"title":"高精度","type":"tags","url":"/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1478861192,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478861192,"objectID":"dcab6744a12b753f5ce697ad45f63b25","permalink":"https://111qqz.github.io/2016/11/20161111/","publishdate":"2016-11-11T10:46:32Z","readingtime":1,"relpermalink":"/2016/11/20161111/","section":"post","summary":"明明一直都穿着而很厚的衣服\u0026hellip;还是被冻感冒了。 感冒了还是要吃药的吧\u0026hellip;那种利用身体的免疫系统来对抗病毒的做法\u0026hel","tags":null,"title":"20161111","type":"post","url":"/2016/11/20161111/","weight":0,"wordcount":365},{"author":null,"categories":["ACM"],"content":null,"date":1478581753,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478581753,"objectID":"830dc5b449c65036ac5937f45ed9fd57","permalink":"https://111qqz.github.io/2016/11/","publishdate":"2016-11-08T05:09:13Z","readingtime":1,"relpermalink":"/2016/11/","section":"post","summary":"rt","tags":null,"title":"大纠结","type":"post","url":"/2016/11//","weight":0,"wordcount":1},{"author":null,"categories":["ACM"],"content":null,"date":1478133594,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478133594,"objectID":"bd5978bc9b40382517a19cbb5aaff563","permalink":"https://111qqz.github.io/2016/11/acdream-oj-1124-/","publishdate":"2016-11-03T00:39:54Z","readingtime":2,"relpermalink":"/2016/11/acdream-oj-1124-/","section":"post","summary":"题目链接 题意： F0 = 1 , F1 = 1 , F2 = 2 , Fn = Fn-1+Fn-2 求： FFFn Mod P ( 也就是 F[ F[ F[n] ] ] % P ) 思路：原来这是适牛出的题2333. 需要注意的是p可能为1，因此","tags":["循环节","快速幂","斐波那契","矩阵"],"title":"acdream oj 1124 喵喵的遗憾 (斐波那契数列循环节)","type":"post","url":"/2016/11/acdream-oj-1124--/","weight":0,"wordcount":974},{"author":null,"categories":["ACM"],"content":null,"date":1478081296,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478081296,"objectID":"9b4f056c80f10379497d2c4fa358986d","permalink":"https://111qqz.github.io/2016/11/hdu-3978/","publishdate":"2016-11-02T10:08:16Z","readingtime":2,"relpermalink":"/2016/11/hdu-3978/","section":"post","summary":"题意：now he let you calculate G(n,k) .Here G(n,0) = f(n) , G(n,i) = f( G(n,i-1) ) (k \u0026gt;= i \u0026gt;= 1).其中f是斐波那契数列。 思路：其实就是hdu 4291的加强版：hdu 4291 解题报告 开一个1","tags":["循环节","斐波那契"],"title":"hdu 3978 Evil teacher's Final Problem (斐波那契数列的循环节)","type":"post","url":"/2016/11/hdu-3978/","weight":0,"wordcount":906},{"author":null,"categories":["ACM"],"content":null,"date":1478002872,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1478002872,"objectID":"db3d10957004ad9300657a4207577f89","permalink":"https://111qqz.github.io/2016/11/hdu-2522/","publishdate":"2016-11-01T12:21:12Z","readingtime":1,"relpermalink":"/2016/11/hdu-2522/","section":"post","summary":"题目链接 题意：求一个小数的循环节\u0026hellip; 思路：其实直接模拟就好\u0026hellip; 模拟竖式计算\u0026hellip; 这里用到一个小技巧。 由于多","tags":["循环节","模拟"],"title":"hdu 2522 A simple problem (模拟，求小数循环节)","type":"post","url":"/2016/11/hdu-2522/","weight":0,"wordcount":292},{"author":null,"categories":["ACM","随笔杂谈"],"content":null,"date":1477996818,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477996818,"objectID":"33cc450cd2576e0810e2bd412787b351","permalink":"https://111qqz.github.io/2016/11/acm/","publishdate":"2016-11-01T10:40:18Z","readingtime":2,"relpermalink":"/2016/11/acm/","section":"post","summary":"这种东西我也没什么资格评论，只是随便说说自己的感受。 之前在知乎上看到有人批判说，OI/ACM圈子的戾气，大致有两点。 一个是（装）弱，一个是膜","tags":null,"title":"对acm圈现风气的感受","type":"post","url":"/2016/11/acm/","weight":0,"wordcount":855},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1477937675,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477937675,"objectID":"8e08dbdea32be73446cbc5e1ab55ba1c","permalink":"https://111qqz.github.io/2016/11/20161101/","publishdate":"2016-10-31T18:14:35Z","readingtime":1,"relpermalink":"/2016/11/20161101/","section":"post","summary":"软院的妹子，简称软妹。 [audio mp3=\u0026quot;https://111qqz.com/wordpress/wp-content/uploads/","tags":null,"title":"20161101","type":"post","url":"/2016/11/20161101/","weight":0,"wordcount":105},{"author":null,"categories":["ACM"],"content":null,"date":1477904393,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477904393,"objectID":"3f796707cdd0c3515cf3fe4388a0273c","permalink":"https://111qqz.github.io/2016/10/hdu-4291/","publishdate":"2016-10-31T08:59:53Z","readingtime":4,"relpermalink":"/2016/10/hdu-4291/","section":"post","summary":"题目链接 题意： Given n (1 \u0026lt;= n \u0026lt;= 1018), You should solve for g(g(g(n))) mod 109 + 7 where g(n) = 3g(n - 1) + g(n - 2) g(1) = 1 g(0) = 0思路：找循环节。首先由于模数固定，可以暴力一下找到循环节。 得到","tags":["循环节","快速幂","斐波那契","矩阵"],"title":"hdu 4291 A Short problem (矩阵快速幂+广义斐波那契循环节||暴力找循环节)","type":"post","url":"/2016/10/hdu-4291/","weight":0,"wordcount":1815},{"author":null,"categories":["ACM"],"content":null,"date":1477862316,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477862316,"objectID":"b9c7a0422a86b03a23f2c2163c721d15","permalink":"https://111qqz.github.io/2016/10/hdu-1005/","publishdate":"2016-10-30T21:18:36Z","readingtime":1,"relpermalink":"/2016/10/hdu-1005/","section":"post","summary":"题目链接 题意：A number sequence is defined as follows: f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) mod 7. Given A, B, and n, you are to calculate the value of f(n). 思路：矩阵加速线性递推式。 这题第一次看是20","tags":["快速幂","矩阵"],"title":"hdu 1005 Number Sequence (矩阵快速幂加速线性递推式)","type":"post","url":"/2016/10/hdu-1005/","weight":0,"wordcount":351},{"author":null,"categories":["ACM"],"content":null,"date":1477861297,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477861297,"objectID":"43fdce654716a0ad5d3aab41d92c9b60","permalink":"https://111qqz.github.io/2016/10/hdu-3977/","publishdate":"2016-10-30T21:01:37Z","readingtime":3,"relpermalink":"/2016/10/hdu-3977/","section":"post","summary":"题目链接 题意：f[0] = 1,f[1] = 1,f[i] = f[i-1] + f[i-2] (i\u0026gt;=2)，问最小的m满足f[n]%p==f[n+m]%p 思路：求斐波那契数列循环节。 参考了A","tags":["二次剩余","循环节","斐波那契"],"title":"hdu 3977 Evil teacher (斐波那契数列循环节)","type":"post","url":"/2016/10/hdu-3977/","weight":0,"wordcount":1240},{"author":null,"categories":["ACM"],"content":null,"date":1477845932,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477845932,"objectID":"4dccb51a216b61f120fc2f06d813f6c5","permalink":"https://111qqz.github.io/2016/10/hdu-3221/","publishdate":"2016-10-30T16:45:32Z","readingtime":2,"relpermalink":"/2016/10/hdu-3221/","section":"post","summary":"题目链接 题意：给出了一段伪代码。分析得知其实就是f[1]= a,f[2] = b,f[n]=f[n-1] * f[n-2] 思路：一眼题，和hdu4549很类似hdu4549解题报告 不同的是这道题","tags":["快速幂","指数循环节","矩阵"],"title":"hdu 3221 Brute-force Algorithm (矩阵快速幂+指数循环节)","type":"post","url":"/2016/10/hdu-3221/","weight":0,"wordcount":595},{"author":null,"categories":null,"content":null,"date":1477845932,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1477845932,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8C%87%E6%95%B0%E5%BE%AA%E7%8E%AF%E8%8A%82/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8C%87%E6%95%B0%E5%BE%AA%E7%8E%AF%E8%8A%82/","section":"tags","summary":"","tags":null,"title":"指数循环节","type":"tags","url":"/tags/%E6%8C%87%E6%95%B0%E5%BE%AA%E7%8E%AF%E8%8A%82/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1477841399,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477841399,"objectID":"563676ab45ced0a504dbec2b752d9e95","permalink":"https://111qqz.github.io/2016/10/hdu-2837/","publishdate":"2016-10-30T15:29:59Z","readingtime":2,"relpermalink":"/2016/10/hdu-2837/","section":"post","summary":"题目链接 题意： Assume that f(0) = 1 and 0^0=1. f(n) = (n)^f(n/10) for all n bigger than zero. Please calculate f(n)%m. (2 ≤ n , m ≤ 10^9, x^y means the y th power of x). 思路：指数循环节。 trick点在于0^0=1这点。 比较容易","tags":["指数循环节","欧拉函数"],"title":"hdu 2837 Calculation (指数循环节+欧拉函数)","type":"post","url":"/2016/10/hdu-2837/","weight":0,"wordcount":538},{"author":null,"categories":null,"content":null,"date":1477841399,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1477841399,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"欧拉函数","type":"tags","url":"/tags/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1477570700,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477570700,"objectID":"8b5ad034172abe534e0ceadfef3800b5","permalink":"https://111qqz.github.io/2016/10/hdu-4335/","publishdate":"2016-10-27T12:18:20Z","readingtime":2,"relpermalink":"/2016/10/hdu-4335/","section":"post","summary":"题目链接 题意：给出b,p,m（( 0\u0026lt;=b\u0026lt;P, 1\u0026lt;=P\u0026lt;=10^5, 1 \u0026lt;= M \u0026lt;=2^64 – 1 )）,问满足图中条件的n有多少个。 思路：这题由于对p没有限制，所以细节多一些，需要讨论。 首先","tags":["指数循环节","欧拉函数"],"title":"hdu 4335 What is N? （指数循环节+欧拉函数)","type":"post","url":"/2016/10/hdu-4335/","weight":0,"wordcount":623},{"author":null,"categories":["ACM"],"content":null,"date":1477484650,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477484650,"objectID":"8b1a331ba76d2044bcdee2d40c96bc2a","permalink":"https://111qqz.github.io/2016/10/uva-10692/","publishdate":"2016-10-26T12:24:10Z","readingtime":1,"relpermalink":"/2016/10/uva-10692/","section":"post","summary":"题目链接 题意：求一个楼梯数%m的大小。 思路：指数循环节。 需要注意的是，模数只有最外层是m，每往里一层，模数都变成m=phi(m) 所以可以写个","tags":["number theory","指数循环节","欧拉函数"],"title":"uva 10692  Huge Mods (欧拉函数，指数循环节)","type":"post","url":"/2016/10/uva-10692/","weight":0,"wordcount":415},{"author":null,"categories":["ACM"],"content":null,"date":1477478541,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477478541,"objectID":"291355c7f5e24caffe58a096e234daaa","permalink":"https://111qqz.github.io/2016/10/hdu-4704-sum-/","publishdate":"2016-10-26T10:42:21Z","readingtime":2,"relpermalink":"/2016/10/hdu-4704-sum-/","section":"post","summary":"题目链接 题意：定义s(k)为将n分成k个正整数的划分数，给出n，问s(1) + s(2) + \u0026hellip; + s(n-1) + s(n)是多少，结果9+7，其中n\u0026lt;=10^1","tags":["number theory","指数循环节","费马小定理"],"title":"hdu 4704 Sum (隔板法，指数循环节，费马小定理)","type":"post","url":"/2016/10/hdu-4704-sum-/","weight":0,"wordcount":772},{"author":null,"categories":null,"content":null,"date":1477478541,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1477478541,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"费马小定理","type":"tags","url":"/tags/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1477473163,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477473163,"objectID":"4ce240b1a4c37ce0a168be22d6da9302","permalink":"https://111qqz.github.io/2016/10/hdu4549/","publishdate":"2016-10-26T09:12:43Z","readingtime":2,"relpermalink":"/2016/10/hdu4549/","section":"post","summary":"题意：M斐波那契数列F[n]是一种整数数列，它的定义如下： F[0] = a F[1] = b F[n] = F[n-1] * F[n-2] ( n \u0026gt; 1 ) 现在给出a, b, n，你能求出F[n]的值吗？ 思路：观","tags":["number theory","指数循环节","矩阵快速幂","费马小定理"],"title":"hdu 4549 M斐波那契数列 (矩阵快速幂+费马小定理+指数循环节)","type":"post","url":"/2016/10/hdu4549/","weight":0,"wordcount":555},{"author":null,"categories":["ACM"],"content":null,"date":1477472388,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477472388,"objectID":"01ca4a9a2d43e9b8ddd12f44927f9e0c","permalink":"https://111qqz.github.io/2016/10/","publishdate":"2016-10-26T08:59:48Z","readingtime":1,"relpermalink":"/2016/10/","section":"post","summary":"资料先行： 指数循环节证明 指数循环节2 对指数循环节的一些理解 挂了一点题目，写完来写总结。 vjudge_不会指数循环节的111qqz 写完了。 首先","tags":["number theory","指数循环节","费马小定理"],"title":"指数循环节学习笔记","type":"post","url":"/2016/10//","weight":0,"wordcount":139},{"author":null,"categories":["ACM"],"content":null,"date":1477444178,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477444178,"objectID":"dff3e42fe55218c5f1120ba2b2dc4f78","permalink":"https://111qqz.github.io/2016/10/bzoj-4547-hdu5171-/","publishdate":"2016-10-26T01:09:38Z","readingtime":3,"relpermalink":"/2016/10/bzoj-4547-hdu5171-/","section":"post","summary":"4547: Hdu5171 小奇的集合 Time Limit: 2 Sec Memory Limit: 256 MB Submit: 263 Solved: 113 [Submit][Status][Discuss] Description 有一个大小为n的可重集S，小奇每次操作可以加入一个数a+b(a,b均属于S)，求k次操作后它可获得","tags":["快速幂","斐波那契","矩阵"],"title":"BZOJ 4547: Hdu5171 小奇的集合 (矩阵快速幂)","type":"post","url":"/2016/10/bzoj-4547-hdu5171--/","weight":0,"wordcount":1014},{"author":null,"categories":["ACM"],"content":null,"date":1477392970,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477392970,"objectID":"1b292298956598cde59c3042d5910e2c","permalink":"https://111qqz.github.io/2016/10/hdu-5171-gtys-birthday-gift-/","publishdate":"2016-10-25T10:56:10Z","readingtime":2,"relpermalink":"/2016/10/hdu-5171-gtys-birthday-gift-/","section":"post","summary":"题目链接 题意：给出n,k，以及n个正数，把n个数放在一个集合里，进行k次操作，每次操作取最大的数和次大的数放进集合。问k次操作结束后，集合中","tags":["快速幂","斐波那契","矩阵"],"title":"hdu 5171 GTY's birthday gift (矩阵快速幂)","type":"post","url":"/2016/10/hdu-5171-gtys-birthday-gift-/","weight":0,"wordcount":604},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1477282830,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477282830,"objectID":"7ddf4201eb513d0eb2ed459726128b04","permalink":"https://111qqz.github.io/2016/10/get-iron-medal-on-icpc-shenyang-regional/","publishdate":"2016-10-24T04:20:30Z","readingtime":1,"relpermalink":"/2016/10/get-iron-medal-on-icpc-shenyang-regional/","section":"post","summary":"沈阳打铁了。。。。 具体不多说了。。。总之现在格外消沉，心情也很差。 可能需要一段时间缓一缓\u0026hellip; 能缓过来就继续干\u0026hellip; 缓不","tags":null,"title":"近况。。。","type":"post","url":"/2016/10/get-iron-medal-on-icpc-shenyang-regional/","weight":0,"wordcount":133},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1477146841,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1477146841,"objectID":"667e81b18d781480c1e1d397ccc4a803","permalink":"https://111qqz.github.io/2016/10/2016-icpc-shenyang-reigonal-onsite/","publishdate":"2016-10-22T14:34:01Z","readingtime":1,"relpermalink":"/2016/10/2016-icpc-shenyang-reigonal-onsite/","section":"post","summary":"这两天一直睡不醒。。。 今天热身赛几乎睡了全场。 还是没能把自己的博客过一遍。。。 记得去年比赛前好像什么都没看呀？ 大概是因为去年什么都不会所以没","tags":null,"title":"2016 沈阳","type":"post","url":"/2016/10/2016-icpc-shenyang-reigonal-onsite/","weight":0,"wordcount":277},{"author":null,"categories":["ACM"],"content":null,"date":1476910451,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476910451,"objectID":"363790d2d771ccca27f3bebf461e8037","permalink":"https://111qqz.github.io/2016/10/hdu-4965-fast-matrix-calculation-20149/","publishdate":"2016-10-19T20:54:11Z","readingtime":2,"relpermalink":"/2016/10/hdu-4965-fast-matrix-calculation-20149/","section":"post","summary":"题目链接 题意：Step 1: Calculate a new NN matrix C = AB. Step 2: Calculate M = C^(N*N). Step 3: For each element x in M, calculate x % 6. All the remainders form a new matrix M’. Step 4: Calculate the sum of all the elements in M’. 思路： 水题。。就一","tags":["快速幂","矩阵"],"title":"hdu 4965 Fast Matrix Calculation (矩阵快速幂，2014多校#9)","type":"post","url":"/2016/10/hdu-4965-fast-matrix-calculation-20149/","weight":0,"wordcount":656},{"author":null,"categories":["ACM"],"content":null,"date":1476880580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476880580,"objectID":"6333b542929ae4099e0ae0d223b8d639","permalink":"https://111qqz.github.io/2016/10/hdu-2157/","publishdate":"2016-10-19T12:36:20Z","readingtime":2,"relpermalink":"/2016/10/hdu-2157/","section":"post","summary":"题意：给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值 思路： ** 把给定的图转为邻接矩阵，即A(i,j)=1当且","tags":["快速幂","矩阵","计数问题"],"title":"hdu 2157 How many ways?? (矩阵快速幂经典题目)","type":"post","url":"/2016/10/hdu-2157/","weight":0,"wordcount":559},{"author":null,"categories":["ACM"],"content":null,"date":1476871432,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476871432,"objectID":"a6273802f53d1df9f90a774b72fca836","permalink":"https://111qqz.github.io/2016/10/hdu-1211-rsa-/","publishdate":"2016-10-19T10:03:52Z","readingtime":2,"relpermalink":"/2016/10/hdu-1211-rsa-/","section":"post","summary":"题目链接 题意：给出p, q, e, l,令n = p * q, fn = (p-1) * (q-1) 给出l个c,计算m = D(c) = c**_d_** mod n,其中m为要输入的明文对应的ascii编码，d的计算方法：","tags":["快速幂","扩展欧几里得算法","逆元"],"title":"hdu 1211 RSA (扩展欧几里得算法求逆元 +快速幂)","type":"post","url":"/2016/10/hdu-1211-rsa--/","weight":0,"wordcount":675},{"author":null,"categories":null,"content":null,"date":1476871432,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1476871432,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"扩展欧几里得算法","type":"tags","url":"/tags/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1476871432,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1476871432,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%80%86%E5%85%83/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%80%86%E5%85%83/","section":"tags","summary":"","tags":null,"title":"逆元","type":"tags","url":"/tags/%E9%80%86%E5%85%83/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1476868635,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476868635,"objectID":"a2a1948aaf3e0f4367ed276ce16be1cd","permalink":"https://111qqz.github.io/2016/10/","publishdate":"2016-10-19T09:17:15Z","readingtime":1,"relpermalink":"/2016/10/","section":"post","summary":"acdreamer_逆元学习笔记 摘重点： ksm(a,mod-2)的方法求逆元只适用于mod为质数且 gcd(a,mod)==1 扩展欧几里得算法求逆元只适用于gcd(a","tags":["逆元"],"title":"逆元学习笔记","type":"post","url":"/2016/10//","weight":0,"wordcount":306},{"author":null,"categories":["ACM"],"content":null,"date":1476865024,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476865024,"objectID":"75f1573c82402a7beb7a5df25c966de1","permalink":"https://111qqz.github.io/2016/10/poj-3233/","publishdate":"2016-10-19T08:17:04Z","readingtime":2,"relpermalink":"/2016/10/poj-3233/","section":"post","summary":"题目链接 题意： Given a n × n matrix A and a positive integer k, find the sum S = A + _A_2 + _A_3 + … + Ak. 思路： 对k进行二分。 比如，当k=6时，有： A + A^2 + A^3 + A^4 + A^5 + A^6 =_(A + A^2 + A^3)_","tags":["分治","快速幂","矩阵"],"title":"poj 3233 Matrix Power Series  （矩阵快速幂+分治）","type":"post","url":"/2016/10/poj-3233/","weight":0,"wordcount":559},{"author":null,"categories":null,"content":null,"date":1476865024,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1476865024,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%88%86%E6%B2%BB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%88%86%E6%B2%BB/","section":"tags","summary":"","tags":null,"title":"分治","type":"tags","url":"/tags/%E5%88%86%E6%B2%BB/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1476852131,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476852131,"objectID":"25114210a96d44d5646af29387244587","permalink":"https://111qqz.github.io/2016/10/20161019-dream/","publishdate":"2016-10-19T04:42:11Z","readingtime":1,"relpermalink":"/2016/10/20161019-dream/","section":"post","summary":"梦。。。。 设定大概是我身上有某种可以产生军用价值的变异\u0026hellip; 所以要杀掉我做研究。。。？ 但是我不同意2333 于是把我抓了起来。。。判","tags":null,"title":"20161019梦境记录","type":"post","url":"/2016/10/20161019-dream/","weight":0,"wordcount":354},{"author":null,"categories":["ACM"],"content":null,"date":1476730167,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476730167,"objectID":"4022be4a3301eed8266d6b784212e446","permalink":"https://111qqz.github.io/2016/10/test-latex/","publishdate":"2016-10-17T18:49:27Z","readingtime":1,"relpermalink":"/2016/10/test-latex/","section":"post","summary":"(\\alpha+\\beta\\geq\\frac12)\n20180101_test:\n(\\alpha+\\beta\\geq\\frac12)\n$$\\left[ \\begin{matrix}a\u0026amp;b\\c\u0026amp;\\alpha\\end{matrix} \\right]$$\n\\left( \\begin{matrix}a\u0026amp;b\\c\u0026amp;\\alpha\\end{matrix} \\right)","tags":null,"title":"test latex","type":"post","url":"/2016/10/test-latex/","weight":0,"wordcount":9},{"author":null,"categories":["ACM"],"content":null,"date":1476729375,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476729375,"objectID":"71082ea48482709a00cdbb61ce1dadd5","permalink":"https://111qqz.github.io/2016/10/poj-3070-fibonacci/","publishdate":"2016-10-17T18:36:15Z","readingtime":1,"relpermalink":"/2016/10/poj-3070-fibonacci/","section":"post","summary":"题目链接 题意：求f[n] % 10000,f为斐波那契数。 思路：按照题目给出的公式，或者按照加速线性递推式的方法都可以。。。 因为把模数的1E4手","tags":["矩阵"],"title":"poj 3070 Fibonacci (矩阵加速线性递推式)","type":"post","url":"/2016/10/poj-3070-fibonacci/","weight":0,"wordcount":382},{"author":null,"categories":["ACM"],"content":null,"date":1476725916,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476725916,"objectID":"38c74f5a24ffb109778cf9372103b9a3","permalink":"https://111qqz.github.io/2016/10/","publishdate":"2016-10-17T17:38:36Z","readingtime":3,"relpermalink":"/2016/10/","section":"post","summary":"找到了篇四年前空间中的旧文，也是有点感动2333. 快速求解多项递推式 问题描述: 已知 F(n) = AF(n-1) + BF(n-2) + CF(n-3)+\u0026hellip;.. 求解 F(n)%P 分析: ＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊","tags":["矩阵"],"title":"矩阵加速线性递推式（转载）","type":"post","url":"/2016/10//","weight":0,"wordcount":1272},{"author":null,"categories":["ACM"],"content":null,"date":1476723796,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476723796,"objectID":"7ab2608a9249c483ccd8fe0df21e1b1e","permalink":"https://111qqz.github.io/2016/10/","publishdate":"2016-10-17T17:03:16Z","readingtime":1,"relpermalink":"/2016/10/","section":"post","summary":"参考资料： 十个利用矩阵乘法解决的经典题目","tags":["矩阵"],"title":"矩阵学习笔记","type":"post","url":"/2016/10//","weight":0,"wordcount":20},{"author":null,"categories":["ACM"],"content":null,"date":1476522014,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476522014,"objectID":"d23c7b14885d81a322c82238dd4583c9","permalink":"https://111qqz.github.io/2016/10/hdu-1573/","publishdate":"2016-10-15T09:00:14Z","readingtime":1,"relpermalink":"/2016/10/hdu-1573/","section":"post","summary":"题目链接 题意：求在小于等于N的正整数中有多少个X满足：X mod a[0] = b[0], X mod a[1] = b[1], X mod a[2] = b[2], …, X mod a[i] = b[i], … (0 \u0026lt; a[i] \u0026lt;= 10)。 思路：先用扩展欧几里得算","tags":["中国剩余定理","扩展欧几里得算法"],"title":"hdu 1573 X问题 (exgcd求解一般线性同余方程组解的个数)","type":"post","url":"/2016/10/hdu-1573/","weight":0,"wordcount":411},{"author":null,"categories":null,"content":null,"date":1476522014,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1476522014,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"中国剩余定理","type":"tags","url":"/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1476472615,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476472615,"objectID":"e61731cedcfafe79b97d5a6212f65cd8","permalink":"https://111qqz.github.io/2016/10/poj-2891/","publishdate":"2016-10-14T19:16:55Z","readingtime":3,"relpermalink":"/2016/10/poj-2891/","section":"post","summary":"题目链接 题意：给出k个方程，形式为 x==r1,求最小的正数x，无解输出-1. 思路：首先很容易让人联想到crt. 然而crt的使用条件是，所有的","tags":["number theory","中国剩余定理","扩展欧几里得算法"],"title":"poj 2891 Strange Way to Express Integers (扩展欧几里得算法解一般线性同余方程组)","type":"post","url":"/2016/10/poj-2891/","weight":0,"wordcount":1104},{"author":null,"categories":["ACM"],"content":null,"date":1476362367,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476362367,"objectID":"eea730f6423936a4b996bb8f2d395b6c","permalink":"https://111qqz.github.io/2016/10/poj-1006-biorhythms-/","publishdate":"2016-10-13T12:39:27Z","readingtime":1,"relpermalink":"/2016/10/poj-1006-biorhythms-/","section":"post","summary":"题目链接： **题意：**人自出生起就有体力，情感和智力三个生理周期，分别为23，28和33天。一个周期内有一天为峰值，在这一 天，人在对应的方","tags":["number theory","中国剩余定理"],"title":"poj 1006 Biorhythms (中国剩余定理模板题)","type":"post","url":"/2016/10/poj-1006-biorhythms-/","weight":0,"wordcount":490},{"author":null,"categories":["ACM"],"content":null,"date":1476358448,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476358448,"objectID":"d10b398679948c37a695e35d79593597","permalink":"https://111qqz.github.io/2016/10/poj-2142/","publishdate":"2016-10-13T11:34:08Z","readingtime":1,"relpermalink":"/2016/10/poj-2142/","section":"post","summary":"题目链接 题意：给出a,b,d，分别表示a,b两种刻度的砝码，以及要称量的物体重量为d.现在保证能称量出给定重量的物体，问两种砝码个数的和最小","tags":["number theory","扩展欧几里得算法"],"title":"poj 2142 The Balance (扩展欧几里得算法)","type":"post","url":"/2016/10/poj-2142/","weight":0,"wordcount":495},{"author":null,"categories":["ACM"],"content":null,"date":1476346277,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476346277,"objectID":"93b3519f1fae92f997e8b9bd43402e20","permalink":"https://111qqz.github.io/2016/10/poj-2115-c-looooops-/","publishdate":"2016-10-13T08:11:17Z","readingtime":1,"relpermalink":"/2016/10/poj-2115-c-looooops-/","section":"post","summary":"题目链接 题意： 问 循环for ( int i = a ; i !=b; i+=c)在% （2^k）的意义下循环了多少次。 思路： 一般的思路是： 列方程\u0026hellip; 化成扩展欧","tags":["number theory","扩展欧几里得算法","裴蜀定理"],"title":"poj 2115 C Looooops (扩展欧几里得算法)","type":"post","url":"/2016/10/poj-2115-c-looooops-/","weight":0,"wordcount":317},{"author":null,"categories":["ACM"],"content":null,"date":1476344915,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476344915,"objectID":"7d13a251ccf7f8ac5341fea80012ee34","permalink":"https://111qqz.github.io/2016/10/poj-1061-/","publishdate":"2016-10-13T07:48:35Z","readingtime":2,"relpermalink":"/2016/10/poj-1061-/","section":"post","summary":"题目链接 题意：两只青蛙初始在数轴的x,y点，单位时间内分别可以向右跳m米和n米，数轴是环型的，长度为L，问两只青蛙能否相遇，以及相遇时跳的次","tags":["扩展欧几里得算法","裴蜀定理"],"title":"poj 1061 青蛙的约会 （扩展欧几里得算法（负数的处理））","type":"post","url":"/2016/10/poj-1061--/","weight":0,"wordcount":619},{"author":null,"categories":["ACM"],"content":null,"date":1476275421,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476275421,"objectID":"469ea61f5e497cbe443d79dfa35cc80f","permalink":"https://111qqz.github.io/2016/10/hdu-2669/","publishdate":"2016-10-12T12:30:21Z","readingtime":1,"relpermalink":"/2016/10/hdu-2669/","section":"post","summary":"题目链接 题意：问ax+by=1的一组x\u0026gt;0的解，如果无解输出sorry. 思路：根据裴蜀定理， ax+by=1有解当且gcd(a,b)=1","tags":["number theory","扩展欧几里得算法","裴蜀定理"],"title":"hdu 2669 Romantic (扩展欧几里得模板题)","type":"post","url":"/2016/10/hdu-2669/","weight":0,"wordcount":328},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1476198435,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476198435,"objectID":"1da0540fb82f7e57bbe2e6f4d523701a","permalink":"https://111qqz.github.io/2016/10/20161011/","publishdate":"2016-10-11T15:07:15Z","readingtime":1,"relpermalink":"/2016/10/20161011/","section":"post","summary":"我信任学姐。","tags":null,"title":"20161011","type":"post","url":"/2016/10/20161011/","weight":0,"wordcount":6},{"author":null,"categories":["ACM"],"content":null,"date":1476191094,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476191094,"objectID":"7e8aedcf7d3e0d4d27295f6c40eaf595","permalink":"https://111qqz.github.io/2016/10/crt/","publishdate":"2016-10-11T13:04:54Z","readingtime":2,"relpermalink":"/2016/10/crt/","section":"post","summary":"前置技能点： 维基百科_裴蜀定理（贝祖等式） 有整数解时当且仅当_m_是_d_的倍数。裴蜀等式有解时必然有无穷多个整数解，每组解、都称为裴蜀数，","tags":["number theory","中国剩余定理","扩展欧几里得算法","裴蜀定理"],"title":"中国剩余定理(crt)学习笔记","type":"post","url":"/2016/10/crt/","weight":0,"wordcount":764},{"author":null,"categories":["ACM"],"content":null,"date":1476101321,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476101321,"objectID":"ae536441303f7f6c5d4179ea44ce0bf7","permalink":"https://111qqz.github.io/2016/10/cipollas-algorithm/","publishdate":"2016-10-10T12:08:41Z","readingtime":5,"relpermalink":"/2016/10/cipollas-algorithm/","section":"post","summary":"先放资料。 前置技能点： 剩余系 剩余系**:****设模为****m,****则根据余数可将所有的整数分成****m****类，分别记成****","tags":["number theory","二次剩余","剩余系"],"title":"二次剩余（Cipolla's algorithm）学习笔记","type":"post","url":"/2016/10/cipollas-algorithm/","weight":0,"wordcount":2163},{"author":null,"categories":null,"content":null,"date":1476101321,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1476101321,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%89%A9%E4%BD%99%E7%B3%BB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%89%A9%E4%BD%99%E7%B3%BB/","section":"tags","summary":"","tags":null,"title":"剩余系","type":"tags","url":"/tags/%E5%89%A9%E4%BD%99%E7%B3%BB/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1476095834,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1476095834,"objectID":"deffb77fafadc41b645d5ad207109f6b","permalink":"https://111qqz.github.io/2016/10/database-connection-error-/","publishdate":"2016-10-10T10:37:14Z","readingtime":2,"relpermalink":"/2016/10/database-connection-error-/","section":"post","summary":"其实 东西之前出现过\u0026hellip;不过好像重启一下服务器就可以了？ 这次比较麻烦。 一开始我是直接google 了这条错误信息，结果答案五花八门，","tags":["mysql"],"title":"database connection error 的解决方案","type":"post","url":"/2016/10/database-connection-error-/","weight":0,"wordcount":899},{"author":null,"categories":["ACM"],"content":null,"date":1475669116,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475669116,"objectID":"9eb706325af0233c85244385a6a8d559","permalink":"https://111qqz.github.io/2016/10/cf240f/","publishdate":"2016-10-05T12:05:16Z","readingtime":2,"relpermalink":"/2016/10/cf240f/","section":"post","summary":"题目链接 题意：给一个仅由小写字母组成的字符串，然后m个操作，每个操作一个区间，要求把区间中排列成字典序最小的回文串，如果不能形成回文串，就忽","tags":["回文串","线段树"],"title":"codeforces 240 F. TorCoder (线段树)","type":"post","url":"/2016/10/cf240f/","weight":0,"wordcount":976},{"author":null,"categories":null,"content":null,"date":1475669116,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1475669116,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9B%9E%E6%96%87%E4%B8%B2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%9E%E6%96%87%E4%B8%B2/","section":"tags","summary":"","tags":null,"title":"回文串","type":"tags","url":"/tags/%E5%9B%9E%E6%96%87%E4%B8%B2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1475606472,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475606472,"objectID":"07509acb75ce2b2c82652521b5afccb5","permalink":"https://111qqz.github.io/2016/10/cf558e/","publishdate":"2016-10-04T18:41:12Z","readingtime":4,"relpermalink":"/2016/10/cf558e/","section":"post","summary":"题目链接 题意：给出一个字符串，仅由小写字母组成。现在给出q个操作，每个操作l,r,k三个参数，k=1表示把区间[l,r]变为升序排列，k=0","tags":["线段树","计数排序"],"title":"codeforces 558 E. A Simple Task (线段树优化计数排序)","type":"post","url":"/2016/10/cf558e/","weight":0,"wordcount":1613},{"author":null,"categories":null,"content":null,"date":1475606472,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1475606472,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/","section":"tags","summary":"","tags":null,"title":"计数排序","type":"tags","url":"/tags/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1475585956,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475585956,"objectID":"0a427928529c0161ca9838139b3a1fbd","permalink":"https://111qqz.github.io/2016/10/cf605a/","publishdate":"2016-10-04T12:59:16Z","readingtime":1,"relpermalink":"/2016/10/cf605a/","section":"post","summary":"题目链接 题意：给出一个n个数的排列，每次可以把一个数放到最前面或者最后面的位置，问至少要进行多少次操作才能使得数列升序。 思路：考虑不被移动的","tags":["dp"],"title":"codeforces 605 A. Sorting Railway Cars (dp)","type":"post","url":"/2016/10/cf605a/","weight":0,"wordcount":394},{"author":null,"categories":["ACM"],"content":null,"date":1475581042,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475581042,"objectID":"468ab959dff65b459ba7a0cd463dd656","permalink":"https://111qqz.github.io/2016/10/cf496c/","publishdate":"2016-10-04T11:37:22Z","readingtime":2,"relpermalink":"/2016/10/cf496c/","section":"post","summary":"题目链接 题意：给一个n*m的由小写字母组成的table.要求从上往下每一行字典序不严格递增。问最少删除几列才能满足。 思路：一开始想的是用一个","tags":["构造"],"title":"codeforces 496 C Removing Columns (构造)","type":"post","url":"/2016/10/cf496c/","weight":0,"wordcount":543},{"author":null,"categories":["ACM"],"content":null,"date":1475521763,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475521763,"objectID":"3e68d48810bdee9703bae509d65be804","permalink":"https://111qqz.github.io/2016/10/cf509b/","publishdate":"2016-10-03T19:09:23Z","readingtime":1,"relpermalink":"/2016/10/cf509b/","section":"post","summary":"题目链接 题意：n堆石子，每堆a[i]个，k种颜色。给每个石子涂色，要求对于每种颜色，任意两堆中该颜色石子的个数最多差一个。问是否有解，有解输","tags":["构造"],"title":"codeforces 509 B. Painting Pebbles （构造）","type":"post","url":"/2016/10/cf509b/","weight":0,"wordcount":345},{"author":null,"categories":["ACM"],"content":null,"date":1475517817,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475517817,"objectID":"c975586953c77ffe0a0384267acd0f5e","permalink":"https://111qqz.github.io/2016/10/cf375d/","publishdate":"2016-10-03T18:03:37Z","readingtime":2,"relpermalink":"/2016/10/cf375d/","section":"post","summary":"题目链接 题意：nm个格子，有和.两种类型。定义一个湖为边相邻的只有.组成的最大点集合，且任何一个.不在边界上。现在给出一个nm的图保证至少有","tags":["dfs","greedy"],"title":"codeforces #375 D. Lakes in Berland (dfs)","type":"post","url":"/2016/10/cf375d/","weight":0,"wordcount":598},{"author":null,"categories":["ACM"],"content":null,"date":1475517473,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475517473,"objectID":"1edec067242ab1657dfd76fed7202254","permalink":"https://111qqz.github.io/2016/10/cf375c/","publishdate":"2016-10-03T17:57:53Z","readingtime":1,"relpermalink":"/2016/10/cf375c/","section":"post","summary":"题目链接 题意：给出n,m，n个数，对其中的一些数进行修改，要求1..m中出现次数最少的数最大，输出这个最少的数最大是多少，以及修改的次数。 思","tags":["greedy"],"title":"codeforces #375 C. Polycarp at the Radio (贪心)","type":"post","url":"/2016/10/cf375c/","weight":0,"wordcount":391},{"author":null,"categories":["ACM"],"content":null,"date":1475485177,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475485177,"objectID":"660cf1d059b2e0c21d26fea953bce0d3","permalink":"https://111qqz.github.io/2016/10/-2016-10-3/","publishdate":"2016-10-03T08:59:37Z","readingtime":3,"relpermalink":"/2016/10/-2016-10-3/","section":"post","summary":"题目链接 。。。sad\u0026hellip;.. 果然没睡够\u0026amp;起来就写题脑子完全就是不清醒的状态。。。 这个不清醒。。。主要体现在。。。。10+","tags":null,"title":"弱校连萌 2016 10.3","type":"post","url":"/2016/10/-2016-10-3/","weight":0,"wordcount":1499},{"author":null,"categories":["ACM"],"content":null,"date":1475428488,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475428488,"objectID":"c4c4d426c1be52b73c37f3200cfe46bc","permalink":"https://111qqz.github.io/2016/10/cf468a/","publishdate":"2016-10-02T17:14:48Z","readingtime":2,"relpermalink":"/2016/10/cf468a/","section":"post","summary":"题目链接 题意：给出n，有1..n n个数，可以选择两个数进行加，减，乘，三种操作，操做完得到一个数放回。 n-1次操作后只剩下一个数。现在要求剩","tags":["构造"],"title":"codeforces 468 A. 24 Game (构造)","type":"post","url":"/2016/10/cf468a/","weight":0,"wordcount":553},{"author":null,"categories":["ACM"],"content":null,"date":1475413104,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475413104,"objectID":"a4b9790d6f5638ae9212465ea8ee2715","permalink":"https://111qqz.github.io/2016/10/cf679a/","publishdate":"2016-10-02T12:58:24Z","readingtime":2,"relpermalink":"/2016/10/cf679a/","section":"post","summary":"题目链接 题意：存在一个[2..100]之间的数，每次可以询问一个数是否是该数的因子，返回yes或者no,最多询问20次。每次要输出询问的数，","tags":["交互题","构造"],"title":"codeforces 679A A. Bear and Prime 100 (交互题，构造)","type":"post","url":"/2016/10/cf679a/","weight":0,"wordcount":538},{"author":null,"categories":null,"content":null,"date":1475413104,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1475413104,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"交互题","type":"tags","url":"/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1475338293,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475338293,"objectID":"5a816d2aac557be61a54adb2c7477609","permalink":"https://111qqz.github.io/2016/10/hdu-5908/","publishdate":"2016-10-01T16:11:33Z","readingtime":2,"relpermalink":"/2016/10/hdu-5908/","section":"post","summary":"题目链接 题意：一段数字串，如果一个数字k满足，将该串分成若干个长度为K的子串，这些子串两两满足每个字符出现的次数一样多，那么称为k是一个阿贝","tags":["brute force","number theory"],"title":"bestcoder #88 || hdu 5908 Abelian Period(暴力)","type":"post","url":"/2016/10/hdu-5908/","weight":0,"wordcount":678},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1475160430,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475160430,"objectID":"25708c1807d209e96cafa1b6ff350175","permalink":"https://111qqz.github.io/2016/09/20160929/","publishdate":"2016-09-29T14:47:10Z","readingtime":1,"relpermalink":"/2016/09/20160929/","section":"post","summary":"好虚啊。。。 线段树勉强写完了单点更新的一组题。。。。16道题写了20天。。。 后面的带lazy标记的简直难度上天啊orz\u0026hellip;刷不动","tags":null,"title":"20160929好虚啊","type":"post","url":"/2016/09/20160929/","weight":0,"wordcount":165},{"author":null,"categories":["ACM"],"content":null,"date":1475138771,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475138771,"objectID":"8d39569313616d35917e9ae8f14f74d9","permalink":"https://111qqz.github.io/2016/09/hdu-3967/","publishdate":"2016-09-29T08:46:11Z","readingtime":2,"relpermalink":"/2016/09/hdu-3967/","section":"post","summary":"题目链接 题意：给出l,r,k，定义f(n,k)为将数n分成左右两个非空的部分，再求和之后能被k整除的方案数。 现在问区间[l,r]中所有f(i","tags":["数位dp"],"title":"hdu 3967 Zero's Number (不允许前导0（新写法）的数位dp)","type":"post","url":"/2016/09/hdu-3967/","weight":0,"wordcount":631},{"author":null,"categories":null,"content":null,"date":1475138771,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1475138771,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E4%BD%8Ddp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E4%BD%8Ddp/","section":"tags","summary":"","tags":null,"title":"数位dp","type":"tags","url":"/tags/%E6%95%B0%E4%BD%8Ddp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1475089629,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1475089629,"objectID":"31810753192bb1195204579cf726a3b5","permalink":"https://111qqz.github.io/2016/09/fzu-2113/","publishdate":"2016-09-28T19:07:09Z","readingtime":1,"relpermalink":"/2016/09/fzu-2113/","section":"post","summary":"题目链接 题意：统计区间[a,b]里数字1出现的次数。 思路：数位dp。 收获是，dfs传递的参数可能是为了判断符合条件的答案（比如不要62中的p","tags":["数位dp"],"title":"FZU 2113 Jason的特殊爱好 (数位dp)","type":"post","url":"/2016/09/fzu-2113/","weight":0,"wordcount":362},{"author":null,"categories":["ACM"],"content":null,"date":1474974953,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474974953,"objectID":"0994d761fdf76867f808b79c8e3f0871","permalink":"https://111qqz.github.io/2016/09/cf145e/","publishdate":"2016-09-27T11:15:53Z","readingtime":2,"relpermalink":"/2016/09/cf145e/","section":"post","summary":"题目链接 题意：给出一串只由数字\u0026rsquo;4'和\u0026rsquo;7'组成的串。两种操作，一种是询问整个串中最长非下降子序列的长度，另一种给出","tags":["lazy标记","线段树"],"title":"codeforces 145 E. Lucky Queries (线段树lazy标记)","type":"post","url":"/2016/09/cf145e/","weight":0,"wordcount":853},{"author":null,"categories":["ACM"],"content":null,"date":1474843420,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474843420,"objectID":"b68d202d34780383f2b80d6d4dac832e","permalink":"https://111qqz.github.io/2016/09/cf52c/","publishdate":"2016-09-25T22:43:40Z","readingtime":1,"relpermalink":"/2016/09/cf52c/","section":"post","summary":"题目链接 题意：一个循环数列，两种操作，一种是把某段区间中加上v，另一种是询问某区间的最小值。对于每个询问，输出答案。 思路：区间更新+区间询问","tags":["lazy标记","线段树"],"title":"codeforces 52 C. Circular RMQ (线段树区间更新，区间询问)","type":"post","url":"/2016/09/cf52c/","weight":0,"wordcount":456},{"author":null,"categories":["ACM"],"content":null,"date":1474836182,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474836182,"objectID":"4344cbaa967776cca74ca009c8cb9934","permalink":"https://111qqz.github.io/2016/09/","publishdate":"2016-09-25T20:43:02Z","readingtime":1,"relpermalink":"/2016/09/","section":"post","summary":"我学不会dp不是因为我智商低，而是因为没有足够好的资料。 ** 我学不会dp不是因为我智商低，而是因为没有足够好的资料。** ** 我学不会dp不是因为","tags":null,"title":"重要的事情","type":"post","url":"/2016/09//","weight":0,"wordcount":90},{"author":null,"categories":["ACM"],"content":null,"date":1474834418,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474834418,"objectID":"3d7e02e39bde470c9a74e75c7a7a0dd2","permalink":"https://111qqz.github.io/2016/09/hdu-5904-lcis-dp/","publishdate":"2016-09-25T20:13:38Z","readingtime":1,"relpermalink":"/2016/09/hdu-5904-lcis-dp/","section":"post","summary":"题目链接 题意： 给定两个序列，求它们的最长公共递增子序列的长度, 并且这个子序列的值是连续的 思路：以值为连续做入手点。 很显然个鬼咯dp[a[i]","tags":["dp"],"title":"hdu 5904 LCIS (dp)","type":"post","url":"/2016/09/hdu-5904-lcis-dp/","weight":0,"wordcount":303},{"author":null,"categories":["ACM"],"content":null,"date":1474819849,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474819849,"objectID":"a871daae248545f72eeefc0ef9e5dc35","permalink":"https://111qqz.github.io/2016/09/cf455e/","publishdate":"2016-09-25T16:10:49Z","readingtime":4,"relpermalink":"/2016/09/cf455e/","section":"post","summary":"题目链接 题意：已知 f(1, j) = a[j] f[i][j] = min (f[i-1][j],f[i-1][j-1]) 然后给出 n n≤1E5​​ 个数（a[i] a​i​​≤1E4​​)，给出 m组查询（m\u0026lt;=1E5），每组两","tags":["凸包","斜率优化","线段树"],"title":"codeforces 455 E. Function (斜率优化，线段树套凸包)","type":"post","url":"/2016/09/cf455e/","weight":0,"wordcount":1716},{"author":null,"categories":null,"content":null,"date":1474819849,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474819849,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%87%B8%E5%8C%85/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%87%B8%E5%8C%85/","section":"tags","summary":"","tags":null,"title":"凸包","type":"tags","url":"/tags/%E5%87%B8%E5%8C%85/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1474819849,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474819849,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"斜率优化","type":"tags","url":"/tags/%E6%96%9C%E7%8E%87%E4%BC%98%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1474733418,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474733418,"objectID":"8931227386846f243b1266f20293f8f0","permalink":"https://111qqz.github.io/2016/09/hdu3507/","publishdate":"2016-09-24T16:10:18Z","readingtime":3,"relpermalink":"/2016/09/hdu3507/","section":"post","summary":"题目链接 题意：n个数，分成若干段，每段的代价为，求最小代价。 思路：dp。 状态方程很显然个鬼。。。dp[i] 表示处理完前面i个数的最小代价。 dp[0]","tags":["区间dp","斜率优化"],"title":"hdu 3507 Print Article (斜率优化dp)","type":"post","url":"/2016/09/hdu3507/","weight":0,"wordcount":1322},{"author":null,"categories":["ACM"],"content":null,"date":1474731480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474731480,"objectID":"6a0b74b060868c6831a72037ac9516cb","permalink":"https://111qqz.github.io/2016/09/","publishdate":"2016-09-24T15:38:00Z","readingtime":1,"relpermalink":"/2016/09/","section":"post","summary":"浅谈数形结合思想在信息学竞赛中的应用 参考博客 这个东西英文好像叫做：convex hull trick Convex_hull_trick_wiki codeforces convex hull trick 简单说说我的理解：斜率优化是一种数形结合的思想。","tags":["dp","斜率优化"],"title":"斜率优化学习笔记","type":"post","url":"/2016/09//","weight":0,"wordcount":230},{"author":null,"categories":["ACM"],"content":null,"date":1474645901,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474645901,"objectID":"ced128495c7c23905e2bb128c67da6e9","permalink":"https://111qqz.github.io/2016/09/2017-/","publishdate":"2016-09-23T15:51:41Z","readingtime":1,"relpermalink":"/2016/09/2017-/","section":"post","summary":"题意：一串电话号码，每个数字+8取各位后，把每个数字写成对应的大写英文，从\u0026quot;ZERO\u0026quot;和“NINE”，然后打乱字母的顺序","tags":["模拟"],"title":"2017 小米 软件工程师 校招 笔试题 (模拟)","type":"post","url":"/2016/09/2017-----/","weight":0,"wordcount":406},{"author":null,"categories":["ACM"],"content":null,"date":1474627131,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474627131,"objectID":"0c0259bd2963552f30d51e19f55d1c25","permalink":"https://111qqz.github.io/2016/09/cf380c/","publishdate":"2016-09-23T10:38:51Z","readingtime":2,"relpermalink":"/2016/09/cf380c/","section":"post","summary":"题目链接 题意：给出一个由‘(’和‘）’组成的字符串。。。然后给出若干查询。。。每个查询一个区间，问区间中能匹配的括号数。。。 思路：考虑某一个","tags":["区间合并","线段树"],"title":"codeforces 380 C. Sereja and Brackets (线段树区间合并)","type":"post","url":"/2016/09/cf380c/","weight":0,"wordcount":801},{"author":null,"categories":null,"content":null,"date":1474627131,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474627131,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6/","section":"tags","summary":"","tags":null,"title":"区间合并","type":"tags","url":"/tags/%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1474541826,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474541826,"objectID":"bafd1f275485c67bb01cb65a891a9b9f","permalink":"https://111qqz.github.io/2016/09/too-sad-to-live/","publishdate":"2016-09-22T10:57:06Z","readingtime":1,"relpermalink":"/2016/09/too-sad-to-live/","section":"post","summary":"。。。。。 代码不会写。。。成绩又烂。。。又不会勾搭妹子。。。。 。。。。。。 对比一下。。。。。算了还是不对比了。。。。。 啊。。。人生啊。。。活","tags":null,"title":"挫败感++","type":"post","url":"/2016/09/too-sad-to-live/","weight":0,"wordcount":76},{"author":null,"categories":["ACM"],"content":null,"date":1474536982,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474536982,"objectID":"1753cc9207a880bc0309eeaac2d5c076","permalink":"https://111qqz.github.io/2016/09/","publishdate":"2016-09-22T09:36:22Z","readingtime":2,"relpermalink":"/2016/09/","section":"post","summary":"是14年才被提出来的算法\u0026hellip; 先%一下该算法的作者：作者的codeforces页 接下来，老规矩，放一波资料： 参考博客1 codefo","tags":["回文自动机"],"title":"【施工中】回文自动机学习笔记","type":"post","url":"/2016/09//","weight":0,"wordcount":889},{"author":null,"categories":["ACM"],"content":null,"date":1474530480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474530480,"objectID":"54b05b7ce2e48d846b8d689bc67da969","permalink":"https://111qqz.github.io/2016/09/cf594d/","publishdate":"2016-09-22T07:48:00Z","readingtime":3,"relpermalink":"/2016/09/cf594d/","section":"post","summary":"题目链接 题意：给出n个数,q个查询，每组一个区间，询问区间中所有数的乘积的欧拉函数9+7的答案是多少。 思路：这道题需要一点欧拉函数的知识。 p","tags":["number theory","快速幂","树状数组","欧拉函数","逆元"],"title":"codeforces 594  D. REQ (树状数组+欧拉函数+逆元)","type":"post","url":"/2016/09/cf594d/","weight":0,"wordcount":1137},{"author":null,"categories":["ACM"],"content":null,"date":1474477388,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474477388,"objectID":"afbde3020f4e3371b097c7797ec49376","permalink":"https://111qqz.github.io/2016/09/poj-2886/","publishdate":"2016-09-21T17:03:08Z","readingtime":2,"relpermalink":"/2016/09/poj-2886/","section":"post","summary":"poj 2886 题目链接 题意：n个人围成一圈，每个人身上由一个数，可正可负。从第k个人开始出圈，如果第k个人身上的数是X,X\u0026gt;0，就左边第x个没有","tags":["反素数","线段树"],"title":"poj  2886  Who Gets the Most Candies? （线段树模拟加强版约瑟夫问题+反素数)","type":"post","url":"/2016/09/poj-2886/","weight":0,"wordcount":857},{"author":null,"categories":null,"content":null,"date":1474477388,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474477388,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8F%8D%E7%B4%A0%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8F%8D%E7%B4%A0%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"反素数","type":"tags","url":"/tags/%E5%8F%8D%E7%B4%A0%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1474461061,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474461061,"objectID":"f2564b7941647420d2127389d4b81675","permalink":"https://111qqz.github.io/2016/09/bzoj-1053/","publishdate":"2016-09-21T12:31:01Z","readingtime":1,"relpermalink":"/2016/09/bzoj-1053/","section":"post","summary":"1053: [HAOI2007]反素数ant Time Limit: 10 Sec Memory Limit: 162 MB Submit: 2750 Solved: 1559 [Submit][Status][Discuss] Description 对于任何正整数x，其约数的个数记作g(x)。例如g(1)=1、g(6)=4。如","tags":["number theory","反素数"],"title":"bzoj 1053: [HAOI2007]反素数ant","type":"post","url":"/2016/09/bzoj-1053/","weight":0,"wordcount":459},{"author":null,"categories":["ACM"],"content":null,"date":1474448546,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474448546,"objectID":"481efc6dcb96556c967adf5bf1e51a0b","permalink":"https://111qqz.github.io/2016/09/codeforces-27-e-number-with-the-given-amount-of-divisors-dfs/","publishdate":"2016-09-21T09:02:26Z","readingtime":1,"relpermalink":"/2016/09/codeforces-27-e-number-with-the-given-amount-of-divisors-dfs/","section":"post","summary":"题目链接 题意：求约数个数恰好为n个的最小的x 思路：这道题是作为反素数的例题出现在acdreamer的博客里的。 但是实际上，这道题应该和反素数","tags":["dfs","number theory","反素数"],"title":"codeforces 27 E. Number With The Given Amount Of Divisors (dfs，反素数（假）)","type":"post","url":"/2016/09/codeforces-27-e-number-with-the-given-amount-of-divisors-dfs/","weight":0,"wordcount":475},{"author":null,"categories":["ACM"],"content":null,"date":1474446468,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474446468,"objectID":"98ab975c11e63a3945a03acad3a8cfd0","permalink":"https://111qqz.github.io/2016/09/hdu-2521/","publishdate":"2016-09-21T08:27:48Z","readingtime":6,"relpermalink":"/2016/09/hdu-2521/","section":"post","summary":"题目链接 题意：求区间[a,b]中约数最多的那个数，如果有多个，输出最小的。 思路：看起来好像和反素数没什么关系\u0026hellip;只是打个约数个数","tags":["number theory","反素数"],"title":"hdu 2521 反素数","type":"post","url":"/2016/09/hdu-2521/","weight":0,"wordcount":2597},{"author":null,"categories":["ACM"],"content":null,"date":1474442681,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474442681,"objectID":"4aacbd83046623b7375cb57352c98dbb","permalink":"https://111qqz.github.io/2016/09/","publishdate":"2016-09-21T07:24:41Z","readingtime":1,"relpermalink":"/2016/09/","section":"post","summary":"acdreamer的博客 wiki上的反素数是什么鬼orz\u0026hellip;完全不是一个东西吧。。。。 反素数直观得理解。。。就是一个约数特别多的","tags":["number theory","反素数"],"title":"反素数学习笔记","type":"post","url":"/2016/09//","weight":0,"wordcount":339},{"author":null,"categories":["ACM"],"content":null,"date":1474393698,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474393698,"objectID":"58e43bb353c3a7663543e9ac28d97985","permalink":"https://111qqz.github.io/2016/09/codeforces-609-f-frogs-and-mosquitoes-/","publishdate":"2016-09-20T17:48:18Z","readingtime":4,"relpermalink":"/2016/09/codeforces-609-f-frogs-and-mosquitoes-/","section":"post","summary":"题目链接 题意：n只青蛙，第i只位于x[i],舌头长度为t[i]。m只蚊子，第i只蚊子所在位置为p[i],蚊子的大小为b[i]。 蚊子按照出现顺","tags":["binary search","线段树"],"title":"codeforces #609 F. Frogs and mosquitoes (线段树+二分)","type":"post","url":"/2016/09/codeforces-609-f-frogs-and-mosquitoes-/","weight":0,"wordcount":1629},{"author":null,"categories":["ACM"],"content":null,"date":1474373222,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474373222,"objectID":"561e169ba3e6d95b525ab96aa855f9eb","permalink":"https://111qqz.github.io/2016/09/cf540e/","publishdate":"2016-09-20T12:07:02Z","readingtime":3,"relpermalink":"/2016/09/cf540e/","section":"post","summary":"题目链接 题意：一个无穷数列，从1开始，初始第i个位置上为i，给出n个swap，每次交换两个位置的数。问交换n次以后得到的数列中，逆序对的数。","tags":["线段树","逆序对"],"title":"codeforces 540 E. Infinite Inversions (分类思想+线段树求逆序对)","type":"post","url":"/2016/09/cf540e/","weight":0,"wordcount":1294},{"author":null,"categories":null,"content":null,"date":1474373222,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474373222,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%80%86%E5%BA%8F%E5%AF%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%80%86%E5%BA%8F%E5%AF%B9/","section":"tags","summary":"","tags":null,"title":"逆序对","type":"tags","url":"/tags/%E9%80%86%E5%BA%8F%E5%AF%B9/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1474304061,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474304061,"objectID":"dbe5f1fb7f08d01699934a75e3e11fbb","permalink":"https://111qqz.github.io/2016/09/poj-3579/","publishdate":"2016-09-19T16:54:21Z","readingtime":1,"relpermalink":"/2016/09/poj-3579/","section":"post","summary":"题意：给出n个数，两两做差的绝对值，共有m=n*(n-1)/2个，问其中的中位数是多少。特别地，当m为偶数的时候，中位数为第m/2个。 思路：","tags":["binary search"],"title":"poj 3579 Median (尺取法+二分)","type":"post","url":"/2016/09/poj-3579/","weight":0,"wordcount":461},{"author":null,"categories":["ACM"],"content":null,"date":1474298157,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474298157,"objectID":"41226c3ee07630541a56583893b69949","permalink":"https://111qqz.github.io/2016/09/poj2456/","publishdate":"2016-09-19T15:15:57Z","readingtime":1,"relpermalink":"/2016/09/poj2456/","section":"post","summary":"题目链接 题意：给出n个x轴上的坐标点，选取其中c个，问c个之中任意两个点的最小距离最大是多少。 思路：二分距离check合法性。 大水题。。。因","tags":["binary search"],"title":"poj 2456 Aggressive cows (二分)","type":"post","url":"/2016/09/poj2456/","weight":0,"wordcount":307},{"author":null,"categories":["ACM"],"content":null,"date":1474282487,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474282487,"objectID":"ddb69dbef0962da5a5b496cdd6459cb1","permalink":"https://111qqz.github.io/2016/09/cf515e/","publishdate":"2016-09-19T10:54:47Z","readingtime":2,"relpermalink":"/2016/09/cf515e/","section":"post","summary":"题目链接 题意：圆上，询问任意一段弧中，任意两点的距离+两点的权值和的最大值。 思路： 1.环先拆成串，复制1..n到后面，变成1..2n。 化简公","tags":["线段树"],"title":"codeforces 515 E. Drazil and Park ( 线段树区间合并)","type":"post","url":"/2016/09/cf515e/","weight":0,"wordcount":837},{"author":null,"categories":["ACM"],"content":null,"date":1474206819,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474206819,"objectID":"13ffee072e144997e086498fdeba43d5","permalink":"https://111qqz.github.io/2016/09/cf351d/","publishdate":"2016-09-18T13:53:39Z","readingtime":3,"relpermalink":"/2016/09/cf351d/","section":"post","summary":"题目链接 题意：有n个数，每次可以删除掉数值相同并且所在位置成等差数列（只删2个数或者只删1个数应该也是可以的），删掉这些数以后可以将剩下的数","tags":["树状数组","线段树"],"title":"codeforces #351 D. Jeff and Removing Periods (线段树/树状数组判断位置成等差数列)","type":"post","url":"/2016/09/cf351d/","weight":0,"wordcount":1085},{"author":null,"categories":["ACM"],"content":null,"date":1474197308,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474197308,"objectID":"b816a5724c163979b5f9aa62b04b016d","permalink":"https://111qqz.github.io/2016/09/hdu5898/","publishdate":"2016-09-18T11:15:08Z","readingtime":2,"relpermalink":"/2016/09/hdu5898/","section":"post","summary":"题目链接 题意：题意说得一点页不清楚。。。意思在询问在区间[l,r]中满足某条件的数。该条件是，该数的任何一段数字是奇数组成的数串必须有偶数长","tags":["数位dp"],"title":"2016 ShenYang regional online 1007||hdu 5898 odd-even number （数位dp）","type":"post","url":"/2016/09/hdu5898/","weight":0,"wordcount":574},{"author":null,"categories":["ACM"],"content":null,"date":1474113703,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474113703,"objectID":"bc9aa0be6ae856b3a128ff5c7778be3f","permalink":"https://111qqz.github.io/2016/09/spoj-dquery/","publishdate":"2016-09-17T12:01:43Z","readingtime":3,"relpermalink":"/2016/09/spoj-dquery/","section":"post","summary":"题目链接 题意：给出n个数，然后m个询问，每个询问一个区间[l,r],问该区间中不同的数有多少个。 思路：离线处理+线段树的做法不多说了： /* *********************************************** Author","tags":["主席树","分块","可持久化数据结构","线段树","莫队算法"],"title":"spoj DQUERY - D-query (询问区间中不同数的个数，线段树(离线) or 莫队算法（离线） or 主席树（在线）)","type":"post","url":"/2016/09/spoj-dquery/","weight":0,"wordcount":1137},{"author":null,"categories":null,"content":null,"date":1474113703,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1474113703,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"莫队算法","type":"tags","url":"/tags/%E8%8E%AB%E9%98%9F%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1474020831,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1474020831,"objectID":"aec66d80cbcad26f841ef05d669da3d4","permalink":"https://111qqz.github.io/2016/09/codeforces-338-e-optimize/","publishdate":"2016-09-16T10:13:51Z","readingtime":3,"relpermalink":"/2016/09/codeforces-338-e-optimize/","section":"post","summary":"题目链接 题意：题意是由伪代码给出的。。手算模拟了一下(noip初赛即视感），题意大概是说，给出两个数组a和b，a数组长度为n,b数组长度为l","tags":["线段树"],"title":"codeforces 338 E. Optimize! (线段树维护最小前缀和）","type":"post","url":"/2016/09/codeforces-338-e-optimize/","weight":0,"wordcount":1339},{"author":null,"categories":["ACM"],"content":null,"date":1473976293,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473976293,"objectID":"0923d96ab7ce57774cae5735af2e243c","permalink":"https://111qqz.github.io/2016/09/bzoj-1756/","publishdate":"2016-09-15T21:51:33Z","readingtime":3,"relpermalink":"/2016/09/bzoj-1756/","section":"post","summary":"1756: Vijos1083 小白逛公园 Time Limit: 10 Sec Memory Limit: 64 MB Submit: 1078 Solved: 353 [Submit][Status][Discuss] Description 小新经常陪小白去公园玩，也就是所谓的遛狗啦…在小新家附近有一条“公园路”，路的一边从南到北依次排着","tags":["最大连续区间和","线段树"],"title":"BZOJ 1756: Vijos1083 小白逛公园　 （线段树维护单点修改区间查询最大子段和）","type":"post","url":"/2016/09/bzoj-1756/","weight":0,"wordcount":1034},{"author":null,"categories":null,"content":null,"date":1473976293,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473976293,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%E5%92%8C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%E5%92%8C/","section":"tags","summary":"","tags":null,"title":"最大连续区间和","type":"tags","url":"/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%E5%92%8C/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1473973488,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473973488,"objectID":"bf7fc95764c0a0d49bec92a5c0279afd","permalink":"https://111qqz.github.io/2016/09/hit-oj-2687-candy/","publishdate":"2016-09-15T21:04:48Z","readingtime":2,"relpermalink":"/2016/09/hit-oj-2687-candy/","section":"post","summary":"题目链接 题意：给出n个数,m个修改，每次修改后询问整个区间的最大连续子段。 思路：考虑一段区间，分成左右两个子区间，这段区间的最大子段有三种情","tags":["最大连续区间和","线段树"],"title":"hit oj 2687 Candy (线段树动态维护最大连续子段)","type":"post","url":"/2016/09/hit-oj-2687-candy/","weight":0,"wordcount":570},{"author":null,"categories":["ACM"],"content":null,"date":1473927236,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473927236,"objectID":"82bdd4afe01e08a30478b674b9b6d02d","permalink":"https://111qqz.github.io/2016/09/cf220e/","publishdate":"2016-09-15T08:13:56Z","readingtime":2,"relpermalink":"/2016/09/cf220e/","section":"post","summary":"题目链接 题意： how many pairs of integers l and r are there, such that 1 ≤ l \u0026lt; r ≤ n and sequence b = _a_1_a_2\u0026hellip; a__l__a__r__a__r + 1\u0026hellip; a__n has no more than k inversions. 我花了两个小时才看懂题。。。。一直没懂b数列中a[l]和a","tags":["尺取法","树状数组","逆序对"],"title":"codeforces 220 E. Little Elephant and Inversions (树状数组+尺取)","type":"post","url":"/2016/09/cf220e/","weight":0,"wordcount":870},{"author":null,"categories":["ACM"],"content":null,"date":1473836721,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473836721,"objectID":"ddb17bab407f9bc4f7922fe67ec1b4b7","permalink":"https://111qqz.github.io/2016/09/codeforces-501-d-misha-and-permutations-summation-factorial_number_systemx2/","publishdate":"2016-09-14T07:05:21Z","readingtime":3,"relpermalink":"/2016/09/codeforces-501-d-misha-and-permutations-summation-factorial_number_systemx2/","section":"post","summary":"题目链接 题意：给出两个排列，定义ord(p)为排列p的顺序（字典顺从小到大），定义perm(x)为顺序为x的排列，现在要求1 ≤ n ≤ 200 000 思路：","tags":["Factorial number system","康托展开/逆展开","线段树"],"title":"codeforces 501 D Misha and Permutations Summation (康托展开+康托逆展开+factorial_number_system+线段树×2)","type":"post","url":"/2016/09/codeforces-501-d-misha-and-permutations-summation-factorial_number_systemx2/","weight":0,"wordcount":1166},{"author":null,"categories":null,"content":null,"date":1473836721,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473836721,"objectID":"","permalink":"https://111qqz.github.io/tags/factorial-number-system/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/factorial-number-system/","section":"tags","summary":"","tags":null,"title":"Factorial number system","type":"tags","url":"/tags/factorial-number-system/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1473836721,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473836721,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/%E9%80%86%E5%B1%95%E5%BC%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/%E9%80%86%E5%B1%95%E5%BC%80/","section":"tags","summary":"","tags":null,"title":"康托展开/逆展开","type":"tags","url":"/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/%E9%80%86%E5%B1%95%E5%BC%80/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1473788509,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473788509,"objectID":"66ee0cbd75116027722eb36f31f290a7","permalink":"https://111qqz.github.io/2016/09/light-oj-1080-binary-simulation-lazy/","publishdate":"2016-09-13T17:41:49Z","readingtime":2,"relpermalink":"/2016/09/light-oj-1080-binary-simulation-lazy/","section":"post","summary":"题目链接 题意：给出一个长度为n的数列，每个位置是0或者1，给出q个操作，操作有两种类型，分别是将一段区间中反转，和询问当前某位置是0还是1 思","tags":["lazy标记","线段树"],"title":"light oj 1080 Binary Simulation (线段树lazy标记，区间更新，单点查询)","type":"post","url":"/2016/09/light-oj-1080-binary-simulation-lazy/","weight":0,"wordcount":516},{"author":null,"categories":["ACM"],"content":null,"date":1473759698,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473759698,"objectID":"5a69c3f8380e3265551124807f653490","permalink":"https://111qqz.github.io/2016/09/digits-of-factorial-k/","publishdate":"2016-09-13T09:41:38Z","readingtime":1,"relpermalink":"/2016/09/digits-of-factorial-k/","section":"post","summary":"题目链接 题意：求n！在k进制表示下有多少位。 思路：答案为[ log(1)+log(2)+\u0026hellip;+log(N) ]+1 其中log的底数都是K 由于有多组数据，预处理一个log的前缀和。 /* *********************************************** Author :111qqz Created Time :Tue","tags":["log","math"],"title":"light oj 1045 Digits of Factorial (k进制数的位数)","type":"post","url":"/2016/09/digits-of-factorial-k/","weight":0,"wordcount":254},{"author":null,"categories":null,"content":null,"date":1473759698,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473759698,"objectID":"","permalink":"https://111qqz.github.io/tags/log/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/log/","section":"tags","summary":"","tags":null,"title":"log","type":"tags","url":"/tags/log/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1473743691,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473743691,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/","section":"tags","summary":"","tags":null,"title":"康托展开","type":"tags","url":"/tags/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1473743691,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473743691,"objectID":"d9d480e9938f5664a2b001656f79c848","permalink":"https://111qqz.github.io/2016/09/","publishdate":"2016-09-13T05:14:51Z","readingtime":1,"relpermalink":"/2016/09/","section":"post","summary":"感觉就是为了记录排列。。。重复之类的。。。用到的一个hash函数。。。？ 维基百科 讲解","tags":["hash","康托展开"],"title":"康托展开和康托逆展开","type":"post","url":"/2016/09//","weight":0,"wordcount":42},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1473442036,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473442036,"objectID":"cbd4236d4fde6c963358437281ccdbc4","permalink":"https://111qqz.github.io/2016/09/20160910/","publishdate":"2016-09-09T17:27:16Z","readingtime":1,"relpermalink":"/2016/09/20160910/","section":"post","summary":"被ex吐槽说。。。常年穿运动服。。。没有想看的欲望。。。。 已经是第二次被吐槽不会穿衣了Orz\u0026hellip;. 不禁陷入沉思。。。。？ 所以大概","tags":null,"title":"20160910随笔","type":"post","url":"/2016/09/20160910/","weight":0,"wordcount":230},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1473193017,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473193017,"objectID":"66c272dacd379543fa7bacdef554fc05","permalink":"https://111qqz.github.io/2016/09/sad/","publishdate":"2016-09-06T20:16:57Z","readingtime":1,"relpermalink":"/2016/09/sad/","section":"post","summary":"难得有聊得来的妹子邀请我出去玩。。。。。 我竟然。。。。。。。。 我。。。。。 。。。。。 。。。。。 。。。。。 我好菜啊。。。。。。。","tags":null,"title":"sad","type":"post","url":"/2016/09/sad/","weight":0,"wordcount":63},{"author":null,"categories":["ACM"],"content":null,"date":1473189551,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473189551,"objectID":"ad471fecc3764fcb317905aa4beaf7b6","permalink":"https://111qqz.github.io/2016/09/cf356a/","publishdate":"2016-09-06T19:19:11Z","readingtime":1,"relpermalink":"/2016/09/cf356a/","section":"post","summary":"思路：由于先前被打败的骑士直接就退场了。。。所以如果不做判断。。那么之后胜利的骑士会干扰之前的结果。。。 可以在pushdown的时候加判断。","tags":["lazy标记","线段树"],"title":"codeforces 356 A. Knight Tournament (线段树lazy标记，倒序处理)","type":"post","url":"/2016/09/cf356a/","weight":0,"wordcount":407},{"author":null,"categories":["ACM"],"content":null,"date":1473170274,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473170274,"objectID":"0a287a4b3a5db770797f0ad8a4cd1fb9","permalink":"https://111qqz.github.io/2016/09/cf292e/","publishdate":"2016-09-06T13:57:54Z","readingtime":3,"relpermalink":"/2016/09/cf292e/","section":"post","summary":"x题目链接 题意：给出两个数组，每个数组n个数，分别为a和b,给出m个操作，操作有两种类型，第一种是给出x,y,k,表示从a数组的x坐标开始复","tags":["lazy标记","染色问题","线段树"],"title":"codeforces 292 E. Copying Data (染色问题，线段树lazy标记模板题)","type":"post","url":"/2016/09/cf292e/","weight":0,"wordcount":1322},{"author":null,"categories":null,"content":null,"date":1473170274,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473170274,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"染色问题","type":"tags","url":"/tags/%E6%9F%93%E8%89%B2%E9%97%AE%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1473082943,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473082943,"objectID":"5cd3d9d4c6b4bb782b967f55e746ea6e","permalink":"https://111qqz.github.io/2016/09/cf474f/","publishdate":"2016-09-05T13:42:23Z","readingtime":2,"relpermalink":"/2016/09/cf474f/","section":"post","summary":"题目链接 题意：给出n个数，m个查询，每组查询一个区间[l,r]，问[l,r]中会被吃掉多少个（区间[l,r]中的数只有当其是其他所有数的因数","tags":["gcd","number theory","区间计数","线段树"],"title":"codeforces 474 F. Ant colony (线段树求gcd+统计区间中某数出现的次数的经典做法)","type":"post","url":"/2016/09/cf474f/","weight":0,"wordcount":776},{"author":null,"categories":null,"content":null,"date":1473082943,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473082943,"objectID":"","permalink":"https://111qqz.github.io/tags/gcd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gcd/","section":"tags","summary":"","tags":null,"title":"gcd","type":"tags","url":"/tags/gcd/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1473082943,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1473082943,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8C%BA%E9%97%B4%E8%AE%A1%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8C%BA%E9%97%B4%E8%AE%A1%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"区间计数","type":"tags","url":"/tags/%E5%8C%BA%E9%97%B4%E8%AE%A1%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1473064549,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473064549,"objectID":"703c149ad1221c44a0df697a13b9ff5f","permalink":"https://111qqz.github.io/2016/09/cf61e/","publishdate":"2016-09-05T08:35:49Z","readingtime":2,"relpermalink":"/2016/09/cf61e/","section":"post","summary":"题目链接 题意：给出n个数，求满足 i\u0026lt;j\u0026lt;k且a[i]\u0026gt;a[j]\u0026gt;a[k]的三元组有多少个。 思路：对于这种要求三个数满","tags":["离散化","线段树","逆序对"],"title":"codeforces 61 E. Enemy is weak (离散化+线段树求逆序三元组)","type":"post","url":"/2016/09/cf61e/","weight":0,"wordcount":573},{"author":null,"categories":["ACM"],"content":null,"date":1473060198,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473060198,"objectID":"889c1ecdb67135e40a6e913f0f7fafb3","permalink":"https://111qqz.github.io/2016/09/cf459d/","publishdate":"2016-09-05T07:23:18Z","readingtime":2,"relpermalink":"/2016/09/cf459d/","section":"post","summary":"题目链接 题意：定义_f_(_l_, _r_, _x_)为区间[l,r]中x出现的次数。现在要求calculate the number of pairs of indicies _i_, _j_ (1 ≤ _i_ \u0026lt; _j_ ≤ _n_) such that_f_(1, _i_, _a__i_)","tags":["线段树","逆序对"],"title":"codeforces 459 D. Pashmak and Parmida's problem (离散化+线段树求逆序对数)","type":"post","url":"/2016/09/cf459d/","weight":0,"wordcount":740},{"author":null,"categories":["ACM"],"content":null,"date":1473011291,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1473011291,"objectID":"9016e05f0195b5c2efe1e30917375f7b","permalink":"https://111qqz.github.io/2016/09/cf339d/","publishdate":"2016-09-04T17:48:11Z","readingtime":2,"relpermalink":"/2016/09/cf339d/","section":"post","summary":"题目链接 题意：给出n和m,初始给出1\u0026laquo;n个数，先相邻的两个数进行或操作（a[1]^a[2],a[3]^a[4]\u0026hellip;）","tags":["线段树"],"title":"codeforces 339 D. Xenia and Bit Operations(线段树)","type":"post","url":"/2016/09/cf339d/","weight":0,"wordcount":547},{"author":null,"categories":["ACM"],"content":null,"date":1472996827,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472996827,"objectID":"fe967bbf883db0606500b396857ad93e","permalink":"https://111qqz.github.io/2016/09/cf19d/","publishdate":"2016-09-04T13:47:07Z","readingtime":3,"relpermalink":"/2016/09/cf19d/","section":"post","summary":"题目链接 题意： 1.add x,y 将点(x,y)加进坐标系。 2.remove x,y 将点(x,y)移除. 3.find x,y 找到点(x,y)右上角的点(xp\u0026gt;x,yp\u0026gt;y)。如果有","tags":["set","树套树","离散化","线段树"],"title":"codeforces  19 D. Points (离散化+树套树（线段树+set）)","type":"post","url":"/2016/09/cf19d/","weight":0,"wordcount":1375},{"author":null,"categories":null,"content":null,"date":1472996827,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472996827,"objectID":"","permalink":"https://111qqz.github.io/tags/set/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/set/","section":"tags","summary":"","tags":null,"title":"set","type":"tags","url":"/tags/set/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1472996827,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472996827,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A0%91%E5%A5%97%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%91%E5%A5%97%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"树套树","type":"tags","url":"/tags/%E6%A0%91%E5%A5%97%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1472909214,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472909214,"objectID":"580b8ae0a2bf0b0ae45e2551088c8c03","permalink":"https://111qqz.github.io/2016/09/poj-2828/","publishdate":"2016-09-03T13:26:54Z","readingtime":2,"relpermalink":"/2016/09/poj-2828/","section":"post","summary":"poj 2828 题目链接 题意：n个人，每个人有一个rp值（用来区分不同的人），还有一个pos[i]，表示当第i个人来排队的时候插入到第pos[i]个人的","tags":["线段树"],"title":"poj 2828 Buy Tickets (线段树单点更新，逆序插入)","type":"post","url":"/2016/09/poj-2828/","weight":0,"wordcount":788},{"author":null,"categories":["ACM"],"content":null,"date":1472839066,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472839066,"objectID":"e5e48659857a0eb3eb4c64d6a50a8b12","permalink":"https://111qqz.github.io/2016/09/cf687a/","publishdate":"2016-09-02T17:57:46Z","readingtime":1,"relpermalink":"/2016/09/cf687a/","section":"post","summary":"题目链接 题意：找两个不相交点集使得对于每一条边至少有一个顶点在点集中 思路：判断能否构成二分图。染色即可。 需要注意的是。。。答案有特判。。和样","tags":["二分图","交叉染色法"],"title":"codeforces 687 A. NP-Hard Problem(交叉染色法)","type":"post","url":"/2016/09/cf687a/","weight":0,"wordcount":415},{"author":null,"categories":["ACM"],"content":null,"date":1472806117,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472806117,"objectID":"6bcaf29f52e30e427557df1ff03cb6b5","permalink":"https://111qqz.github.io/2016/09/cf623a/","publishdate":"2016-09-02T08:48:37Z","readingtime":2,"relpermalink":"/2016/09/cf623a/","section":"post","summary":"题目链接：题目链接 题意：给出一个无向图，该图是通过仅包含‘a’ \u0026lsquo;b\u0026rsquo; \u0026lsquo;c'三个字母，以规则“i,j之间有边，当且仅当s[i]和s[j","tags":["构造"],"title":"codeforces  623 A. Graph and String (构造)","type":"post","url":"/2016/09/cf623a/","weight":0,"wordcount":624},{"author":null,"categories":["ACM"],"content":null,"date":1472800383,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472800383,"objectID":"62ff763e8c5f146bdf55e3e0ba846503","permalink":"https://111qqz.github.io/2016/09/hdu-5285/","publishdate":"2016-09-02T07:13:03Z","readingtime":2,"relpermalink":"/2016/09/hdu-5285/","section":"post","summary":"题目链接：hdu 5285 题目lianjie 题意：给定n个小朋友，以及小朋友之间的关系，要求将小朋友分成两组，**并且每组至少一个人，**现在问能否","tags":["二分图","交叉染色法"],"title":"hdu 5285 wyh2000 and pupil (交叉染色法，二分图点集差最大)","type":"post","url":"/2016/09/hdu-5285/","weight":0,"wordcount":802},{"author":null,"categories":["ACM"],"content":null,"date":1472791225,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472791225,"objectID":"277250b10af56fd903e398e4029a03aa","permalink":"https://111qqz.github.io/2016/09/hdu-5215/","publishdate":"2016-09-02T04:40:25Z","readingtime":2,"relpermalink":"/2016/09/hdu-5215/","section":"post","summary":"hdu 5215 思路:询问一个无向图，是否存在奇数环，以及是否存在偶数环。（不同的环之间可以由相同的点，不能有相同的边） 思路：一开始的想法是，根据染色的","tags":["交叉染色法","无向图的环"],"title":"hdu 5215 Cycle(交叉染色法判断无向图的奇偶环)","type":"post","url":"/2016/09/hdu-5215/","weight":0,"wordcount":915},{"author":null,"categories":null,"content":null,"date":1472791225,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472791225,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%97%A0%E5%90%91%E5%9B%BE%E7%9A%84%E7%8E%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%97%A0%E5%90%91%E5%9B%BE%E7%9A%84%E7%8E%AF/","section":"tags","summary":"","tags":null,"title":"无向图的环","type":"tags","url":"/tags/%E6%97%A0%E5%90%91%E5%9B%BE%E7%9A%84%E7%8E%AF/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1472717767,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472717767,"objectID":"5919e23599644b000d0bbf530ba3e221","permalink":"https://111qqz.github.io/2016/09/solved-fedora-24-tap-to-click-not-working/","publishdate":"2016-09-01T08:16:07Z","readingtime":1,"relpermalink":"/2016/09/solved-fedora-24-tap-to-click-not-working/","section":"post","summary":"链接","tags":null,"title":"[solved ]fedora 24 \"Tap to click\" not working","type":"post","url":"/2016/09/solved-fedora-24-tap-to-click-not-working/","weight":0,"wordcount":2},{"author":null,"categories":["其他"],"content":null,"date":1472715871,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472715871,"objectID":"4890597c32cbdd95e595c735e1438a55","permalink":"https://111qqz.github.io/2016/09/using-your-computer-without-mouse/","publishdate":"2016-09-01T07:44:31Z","readingtime":2,"relpermalink":"/2016/09/using-your-computer-without-mouse/","section":"post","summary":"键盘足够爽了以后。。。 鼠标明显降低效率。。。 学会逐步脱离鼠标吧orz. 首先是chrome插件vimium vimium教程 Vimium 常用的按键功能解释","tags":null,"title":"using your computer without mouse","type":"post","url":"/2016/09/using-your-computer-without-mouse/","weight":0,"wordcount":613},{"author":null,"categories":["ACM"],"content":null,"date":1472711963,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472711963,"objectID":"cae6e05692dcf4bfd569a9ff80f24427","permalink":"https://111qqz.github.io/2016/09/hdu-2444/","publishdate":"2016-09-01T06:39:23Z","readingtime":1,"relpermalink":"/2016/09/hdu-2444/","section":"post","summary":"hdu 2444题目链接 题意：判断一个有向图是否是二分图，是的话求最大匹配数。 思路：交叉染色判二分图，是的话跑遍匈牙利即可。1A. /* *********************************************** Author :111qqz Created Time :2","tags":null,"title":"hdu 2444 The Accomodation of Students (交叉染色法+匈牙利算法)","type":"post","url":"/2016/09/hdu-2444/","weight":0,"wordcount":395},{"author":null,"categories":["ACM"],"content":null,"date":1472667997,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472667997,"objectID":"bcdc8b69ce6f3e905efe02353aee3a90","permalink":"https://111qqz.github.io/2016/09/hdu-4751/","publishdate":"2016-08-31T18:26:37Z","readingtime":2,"relpermalink":"/2016/09/hdu-4751/","section":"post","summary":"hdu 4751 题目链接 题意：n个人，给出每个人认识的人的信息。问能否将这些人分成两组，保证每组至少1个人，并且两两互相认识。 思路：首先是反向建图。由于","tags":["二分图","交叉染色法"],"title":"hdu 4751 Divide Groups (反向建图，判断二分图，交叉染色法)","type":"post","url":"/2016/09/hdu-4751/","weight":0,"wordcount":533},{"author":null,"categories":["ACM"],"content":null,"date":1472652230,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472652230,"objectID":"e03dc5bbd39a97db33a7a57292e124f8","permalink":"https://111qqz.github.io/2016/08/uva10004/","publishdate":"2016-08-31T14:03:50Z","readingtime":1,"relpermalink":"/2016/08/uva10004/","section":"post","summary":"uva10004题目链接 题意：给出一个无向图，问是否可以组成二分图。 思路：交叉染色法。 ** 1.未染色 那么继续染色此节点(染色为另一种颜色)**","tags":["二分图","交叉染色法"],"title":"uva 10004 Bicoloring （交叉染色法判断二分图模板题）","type":"post","url":"/2016/08/uva10004/","weight":0,"wordcount":456},{"author":null,"categories":["ACM"],"content":null,"date":1472650322,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472650322,"objectID":"ad0979a5e879ea8176a216d532f696d1","permalink":"https://111qqz.github.io/2016/08/bzoj-3680-xxx-/","publishdate":"2016-08-31T13:32:02Z","readingtime":3,"relpermalink":"/2016/08/bzoj-3680-xxx-/","section":"post","summary":"3680: 吊打XXX Time Limit: 10 Sec Memory Limit: 128 MBSec Special Judge Submit: 2043 Solved: 732 [Submit][Status][Discuss] Description gty又虐了一场比赛，被虐的蒟蒻们决定吊打gty。gty见大势不好机智的分出了n个分身，但还是被","tags":["模拟退火","爬山法","计算几何","费马点"],"title":"BZOJ 3680: 吊打XXX (广义费马点，模拟退火+爬山)","type":"post","url":"/2016/08/bzoj-3680-xxx-/","weight":0,"wordcount":1134},{"author":null,"categories":null,"content":null,"date":1472650322,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472650322,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/","section":"tags","summary":"","tags":null,"title":"模拟退火","type":"tags","url":"/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1472650322,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472650322,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%88%AC%E5%B1%B1%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%88%AC%E5%B1%B1%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"爬山法","type":"tags","url":"/tags/%E7%88%AC%E5%B1%B1%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1472650322,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472650322,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B4%B9%E9%A9%AC%E7%82%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B4%B9%E9%A9%AC%E7%82%B9/","section":"tags","summary":"","tags":null,"title":"费马点","type":"tags","url":"/tags/%E8%B4%B9%E9%A9%AC%E7%82%B9/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1472626289,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472626289,"objectID":"9a9e400cea49b693f2c6ce913d7184ea","permalink":"https://111qqz.github.io/2016/08/hdu-5017-ellipsoid-/","publishdate":"2016-08-31T06:51:29Z","readingtime":2,"relpermalink":"/2016/08/hdu-5017-ellipsoid-/","section":"post","summary":"hdu 5017 题目链接 题意：给出椭球方程的6的参数 a,b,c,d,e,f 问椭球上的点到原点(0,0,,0)的最小距离是多少。 思路：感觉难点在于，如何保证搜到的点一直在椭球","tags":["模拟退火","计算几何"],"title":"hdu 5017 Ellipsoid (模拟退火，计算椭球到定点的最小距离)","type":"post","url":"/2016/08/hdu-5017-ellipsoid-/","weight":0,"wordcount":695},{"author":null,"categories":["ACM"],"content":null,"date":1472559149,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472559149,"objectID":"538cfbd090d7d9c251894cbd75d07cb0","permalink":"https://111qqz.github.io/2016/08/poj-2069/","publishdate":"2016-08-30T12:12:29Z","readingtime":2,"relpermalink":"/2016/08/poj-2069/","section":"post","summary":"poj 2069 题目链接 题意：给出n个点，找出包含这n个点的最小半径的外接球。求球的半径。 思路：模拟退火。不过在走的时候，不是随机上下左右前后6个方向走","tags":["模拟退火"],"title":"poj 2069 Super Star (模拟退火)","type":"post","url":"/2016/08/poj-2069/","weight":0,"wordcount":658},{"author":null,"categories":["ACM"],"content":null,"date":1472557116,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472557116,"objectID":"ba493ba525d46f18ce78be6785934bd8","permalink":"https://111qqz.github.io/2016/08/2016-acm-icpc-asia-hong-kong-regional-rules/","publishdate":"2016-08-30T11:38:36Z","readingtime":2,"relpermalink":"/2016/08/2016-acm-icpc-asia-hong-kong-regional-rules/","section":"post","summary":"貌似香港赛区的规则和大陆有所不同？ 来整理一波。 (a)** **中国大陆各赛站及香港，北朝鲜赛站同为亚洲East Continent子赛区的一部分。 (b)** **","tags":null,"title":"2016 ACM ICPC Asia Hong Kong Regional  rules","type":"post","url":"/2016/08/2016-acm-icpc-asia-hong-kong-regional-rules/","weight":0,"wordcount":901},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1472466897,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472466897,"objectID":"6428db7521c0cf23cadd299df1f6183d","permalink":"https://111qqz.github.io/2016/08/2016-summer-holiday/","publishdate":"2016-08-29T10:34:57Z","readingtime":1,"relpermalink":"/2016/08/2016-summer-holiday/","section":"post","summary":"开学了orz。。。。。。 随手写个总结（好像团队老师也要个人写报告的样子。。。？ 大概一开始随便刷了点图论题，干掉了树的直径。。。次小生成树。。","tags":null,"title":"2016暑假总结","type":"post","url":"/2016/08/2016-summer-holiday/","weight":0,"wordcount":441},{"author":null,"categories":["ACM"],"content":null,"date":1472441475,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472441475,"objectID":"76a973eb2ec8b117b9a51adbf252c824","permalink":"https://111qqz.github.io/2016/08/poj-1385/","publishdate":"2016-08-29T03:31:15Z","readingtime":1,"relpermalink":"/2016/08/poj-1385/","section":"post","summary":"poj 1385 题目链接 题意：求多边形的重心。 思路： 抄模板（逃 嘛。。三角形的重心是三个点坐标的平均数。。。 多边形的重心其实就是先求三角形的重心然后再加权","tags":["计算几何","重心"],"title":"poj 1385 Lifting the Stone (多边形的重心)","type":"post","url":"/2016/08/poj-1385/","weight":0,"wordcount":322},{"author":null,"categories":null,"content":null,"date":1472441475,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472441475,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%87%8D%E5%BF%83/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%87%8D%E5%BF%83/","section":"tags","summary":"","tags":null,"title":"重心","type":"tags","url":"/tags/%E9%87%8D%E5%BF%83/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1472441007,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472441007,"objectID":"722ad25d940bc959eccbfa3aa7eb714f","permalink":"https://111qqz.github.io/2016/08/poj-2420/","publishdate":"2016-08-29T03:23:27Z","readingtime":1,"relpermalink":"/2016/08/poj-2420/","section":"post","summary":"poj 2420 题意：求多边形费马点，也就是距离所有点的距离之和最小的点。 思路：模拟退火裸题。 关于模拟退火的学习： 模拟退火讲解 我就记住了一句话2333：","tags":["模拟退火"],"title":"poj 2420 A Star not a Tree? (模拟退火模板题求多边形费马点)","type":"post","url":"/2016/08/poj-2420/","weight":0,"wordcount":442},{"author":null,"categories":["ACM"],"content":null,"date":1472389402,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472389402,"objectID":"94a767cb5893193f686a3625f63e7ee5","permalink":"https://111qqz.github.io/2016/08/poj-1380/","publishdate":"2016-08-28T13:03:22Z","readingtime":1,"relpermalink":"/2016/08/poj-1380/","section":"post","summary":"题目链接 题意：问一个小矩形能否放在一个大矩形中，给定两个矩形的尺寸。 思路：主要是斜着放比较难判断。学弟貌似写了离散化角度旋转。。。我的做法是","tags":["计算几何"],"title":"poj 1380 Equipment Box （简单几何）","type":"post","url":"/2016/08/poj-1380/","weight":0,"wordcount":256},{"author":null,"categories":["ACM"],"content":null,"date":1472388793,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472388793,"objectID":"37efc3bc569455da8ccdb97c25936e94","permalink":"https://111qqz.github.io/2016/08/poj-1386/","publishdate":"2016-08-28T12:53:13Z","readingtime":2,"relpermalink":"/2016/08/poj-1386/","section":"post","summary":"poj 1386 题意：n个单词，问能否形成一个串（单词接龙，收尾相连，当且仅当前一个单词的末尾字母和后一个单词的首字母相同） 思路：欧拉路。 关于欧拉路： (","tags":["欧拉路"],"title":"poj 1386 Play on Words (欧拉路)","type":"post","url":"/2016/08/poj-1386/","weight":0,"wordcount":544},{"author":null,"categories":null,"content":null,"date":1472388793,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472388793,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%AC%A7%E6%8B%89%E8%B7%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%AC%A7%E6%8B%89%E8%B7%AF/","section":"tags","summary":"","tags":null,"title":"欧拉路","type":"tags","url":"/tags/%E6%AC%A7%E6%8B%89%E8%B7%AF/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1472385855,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472385855,"objectID":"547e71585725a99c6c8ac72840368f4f","permalink":"https://111qqz.github.io/2016/08/poj-1383/","publishdate":"2016-08-28T12:04:15Z","readingtime":1,"relpermalink":"/2016/08/poj-1383/","section":"post","summary":"poj 1383题目链接 题意：一个迷宫图，求最远两点的距离是多少，保证每两个点都是联通的。 思路：树的直径。 #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt;","tags":["树的直径"],"title":"poj 1383 Labyrinth (树的直径裸题)","type":"post","url":"/2016/08/poj-1383/","weight":0,"wordcount":324},{"author":null,"categories":null,"content":null,"date":1472385855,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472385855,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/","section":"tags","summary":"","tags":null,"title":"树的直径","type":"tags","url":"/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1472384997,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472384997,"objectID":"276bda88298abb7d7946a0c01881c01d","permalink":"https://111qqz.github.io/2016/08/poj-1379/","publishdate":"2016-08-28T11:49:57Z","readingtime":1,"relpermalink":"/2016/08/poj-1379/","section":"post","summary":"poj 1379题目链接 题意：给出一个矩形区域的长宽，给出区域中若干点，问距离所有点的最近距离的最大值是多少。 思路：很容易想到模拟退火。 比赛的时候","tags":["模拟退火"],"title":"poj 1379 Run Away (模拟退火)","type":"post","url":"/2016/08/poj-1379/","weight":0,"wordcount":486},{"author":null,"categories":null,"content":null,"date":1472283443,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472283443,"objectID":"1de06640a9f09465cd09f3650f8c76d0","permalink":"https://111qqz.github.io/2016/08/seerc-2014-circle-of-digits-/","publishdate":"2016-08-27T07:37:23Z","readingtime":2,"relpermalink":"/2016/08/seerc-2014-circle-of-digits-/","section":"post","summary":"题目链接 题意：把一个长度为n的只由数字构成的串分成k个不为空的字串，使得最大的串最小（大小是说串所对应的十进制数的大小） 思路：由于长度为x的","tags":["binary search","后缀数组"],"title":"seerc 2014 Circle of digits (二分+后缀数组)","type":"post","url":"/2016/08/seerc-2014-circle-of-digits-/","weight":0,"wordcount":888},{"author":null,"categories":null,"content":null,"date":1472283443,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472283443,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/","section":"tags","summary":"","tags":null,"title":"后缀数组","type":"tags","url":"/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1472280758,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472280758,"objectID":"ad857422e87810718f34f16287fd729d","permalink":"https://111qqz.github.io/2016/08/seerc-2014-d-frame-/","publishdate":"2016-08-27T06:52:38Z","readingtime":1,"relpermalink":"/2016/08/seerc-2014-d-frame-/","section":"post","summary":"题目链接 思路：注意xy-(x-2)*(y-2)=2x+2y-4，一定被2整除。因此siz为2的也是合法的。这个比较容易忘掉。 其他的判定条件都","tags":["水"],"title":"seerc 2014 D - Frame (傻逼题)","type":"post","url":"/2016/08/seerc-2014-d-frame-/","weight":0,"wordcount":207},{"author":null,"categories":null,"content":null,"date":1472280758,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472280758,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%B0%B4/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B0%B4/","section":"tags","summary":"","tags":null,"title":"水","type":"tags","url":"/tags/%E6%B0%B4/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1472280137,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472280137,"objectID":"e2a83fd8d8c09e1aedfd73d4de1f49e7","permalink":"https://111qqz.github.io/2016/08/seerc-2014-a-banks-/","publishdate":"2016-08-27T06:42:17Z","readingtime":1,"relpermalink":"/2016/08/seerc-2014-a-banks-/","section":"post","summary":"题目链接 题意：n个数围成一圈，对于负数可以进行magic操作，也就是取反，但是会影响到左右相邻的，加上这个负数。问最少进行多少次magic操","tags":["brute force"],"title":"seerc 2014 A Banks (暴力)","type":"post","url":"/2016/08/seerc-2014-a-banks-/","weight":0,"wordcount":320},{"author":null,"categories":null,"content":null,"date":1472115530,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1472115530,"objectID":"","permalink":"https://111qqz.github.io/tags/fedora/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/fedora/","section":"tags","summary":"","tags":null,"title":"fedora","type":"tags","url":"/tags/fedora/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1472115530,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472115530,"objectID":"684d4c4bfc3523002f7b2c3d9b86744c","permalink":"https://111qqz.github.io/2016/08/fedora-24-cannot-modify-keyboard-delay-and-rate/","publishdate":"2016-08-25T08:58:50Z","readingtime":1,"relpermalink":"/2016/08/fedora-24-cannot-modify-keyboard-delay-and-rate/","section":"post","summary":"最近入手了x1 c 然后发现没办法支持 f22\u0026hellip;.. 没办法，只好上f24了。。。虽然明知道一堆bug\u0026hellip; 最近发现。。之前在系统设置-\u0026gt;键盘","tags":["fedora"],"title":"fedora 24 cannot modify keyboard delay and rate","type":"post","url":"/2016/08/fedora-24-cannot-modify-keyboard-delay-and-rate/","weight":0,"wordcount":174},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1472028258,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1472028258,"objectID":"65937b4b25c734590ef0e39b123298b5","permalink":"https://111qqz.github.io/2016/08/","publishdate":"2016-08-24T08:44:18Z","readingtime":1,"relpermalink":"/2016/08/","section":"post","summary":"想家了。 破游戏，不玩了。 上次绝望的想哭，还是那场校内选拔赛 我真的在努力了啊，我真的在认真了啊\u0026hellip; 可是一年过去，我还是这么菜。 真的","tags":null,"title":"累了","type":"post","url":"/2016/08//","weight":0,"wordcount":145},{"author":null,"categories":null,"content":null,"date":1471778329,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471778329,"objectID":"","permalink":"https://111qqz.github.io/tags/floyd/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/floyd/","section":"tags","summary":"","tags":null,"title":"floyd","type":"tags","url":"/tags/floyd/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471778329,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471778329,"objectID":"3d518c93b48603f148da582dbf8f7b27","permalink":"https://111qqz.github.io/2016/08/hdu-5036/","publishdate":"2016-08-21T11:18:49Z","readingtime":2,"relpermalink":"/2016/08/hdu-5036/","section":"post","summary":"题目链接 题意：有n扇门，n种钥匙，一一对应。每扇门打开后可能得到k把钥匙（k可能为0）。一扇门还可以用一颗炸弹炸开。现在问要开所有门，使用炸","tags":["bitset优化","floyd","传递闭包","位运算","概率","状态压缩"],"title":"hdu 5036 Explosion||2014 北京区域赛网络赛 (概率+bitset优化的状态压缩+floyd传递闭包)","type":"post","url":"/2016/08/hdu-5036/","weight":0,"wordcount":853},{"author":null,"categories":null,"content":null,"date":1471778329,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471778329,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","section":"tags","summary":"","tags":null,"title":"传递闭包","type":"tags","url":"/tags/%E4%BC%A0%E9%80%92%E9%97%AD%E5%8C%85/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1471778329,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471778329,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A6%82%E7%8E%87/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A6%82%E7%8E%87/","section":"tags","summary":"","tags":null,"title":"概率","type":"tags","url":"/tags/%E6%A6%82%E7%8E%87/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1471778329,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471778329,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/","section":"tags","summary":"","tags":null,"title":"状态压缩","type":"tags","url":"/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471776359,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471776359,"objectID":"dee336a163f1d62586b33e404c63b782","permalink":"https://111qqz.github.io/2016/08/cf707c/","publishdate":"2016-08-21T10:45:59Z","readingtime":1,"relpermalink":"/2016/08/cf707c/","section":"post","summary":"题目链接 题意：给出一个数，问包含这个数三个数组成的勾股数，输出另外两个数。 思路： 结论是： n\u0026lt;=2无解。 n为奇数用公式1构造。 n为偶数用","tags":["math","勾股数","构造"],"title":"codeforces  #368 div 2 C. Pythagorean Triples (构造，数学)","type":"post","url":"/2016/08/cf707c/","weight":0,"wordcount":225},{"author":null,"categories":null,"content":null,"date":1471776359,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471776359,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8B%BE%E8%82%A1%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8B%BE%E8%82%A1%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"勾股数","type":"tags","url":"/tags/%E5%8B%BE%E8%82%A1%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471768328,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471768328,"objectID":"4d5f2a86f3228bd1dfe2aa48cfba9f44","permalink":"https://111qqz.github.io/2016/08/hdu-2051/","publishdate":"2016-08-21T08:32:08Z","readingtime":1,"relpermalink":"/2016/08/hdu-2051/","section":"post","summary":"题目链接 题意：把一个数n(n\u0026lt;1000)转化成二进制输出。。。 思路：。。。搜acm bitset 搜到这题。。。所以其实这并不是“bitset”优化","tags":["bitset优化"],"title":"hdu 2051 bitset  (水)","type":"post","url":"/2016/08/hdu-2051/","weight":0,"wordcount":300},{"author":null,"categories":null,"content":null,"date":1471765196,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471765196,"objectID":"6eaaa35025aa90cb850e9cdaf464ef4c","permalink":"https://111qqz.github.io/2016/08/acm-bitset/","publishdate":"2016-08-21T07:39:56Z","readingtime":1,"relpermalink":"/2016/08/acm-bitset/","section":"post","summary":"1.定义与初始化 在定义 bitset 时，要明确 bitset 有多少位，这个位数是整形常量 (tips:如果长度和输入的数m有关，在做翻转操作以后再统计时候会多算，一个","tags":["bitset优化"],"title":"acm 奇技淫巧  bitset","type":"post","url":"/2016/08/acm--bitset/","weight":0,"wordcount":447},{"author":null,"categories":["ACM"],"content":null,"date":1471760279,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471760279,"objectID":"bb92c33c87fe0eb3e295320bbe95857a","permalink":"https://111qqz.github.io/2016/08/707b/","publishdate":"2016-08-21T06:17:59Z","readingtime":1,"relpermalink":"/2016/08/707b/","section":"post","summary":"题目链接 题意：n个城市，m条双向路，要从k条中选择一个，使得到其他n-k个城市中的某个城市的距离最短。 思路：直接暴力 枚举。1A /* *********************************************** Author :111qqz Created Time :","tags":["brute force"],"title":"codeforces #368 div 2 B. Bakery (暴力)","type":"post","url":"/2016/08/707b/","weight":0,"wordcount":315},{"author":null,"categories":["ACM"],"content":null,"date":1471759835,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471759835,"objectID":"a0de089cc4fa4988194e53825f320749","permalink":"https://111qqz.github.io/2016/08/cf707a/","publishdate":"2016-08-21T06:10:35Z","readingtime":1,"relpermalink":"/2016/08/cf707a/","section":"post","summary":"题目链接 。。。这题也能成hack题。。。。有毒啊。。然后我room里所有人都写对了。。。是我看这道题看得太早了？ /* *********************************************** Author :111qqz Created Time :2016年08","tags":["brute force"],"title":"codeforces #368 div 2 A. Brain's Photos (暴力)","type":"post","url":"/2016/08/cf707a/","weight":0,"wordcount":228},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1471715638,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471715638,"objectID":"d35bb7de0a83d5eb854fb9b8860a11a9","permalink":"https://111qqz.github.io/2016/08/0821/","publishdate":"2016-08-20T17:53:58Z","readingtime":1,"relpermalink":"/2016/08/0821/","section":"post","summary":"。。第一场组队赛。。。罚时爆炸。。。pacedect不在。。。没rk1好不开心啊。。。我的锅我的锅。。。 晚上cf听从适牛的写题策略。。先从c","tags":null,"title":"0821随笔","type":"post","url":"/2016/08/0821/","weight":0,"wordcount":287},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1471530848,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471530848,"objectID":"ab77aa1ec36dbbfa41be8a2219eb110f","permalink":"https://111qqz.github.io/2016/08/the-way-so-far/","publishdate":"2016-08-18T14:34:08Z","readingtime":0,"relpermalink":"/2016/08/the-way-so-far/","section":"post","summary":"","tags":null,"title":"the way so far","type":"post","url":"/2016/08/the-way-so-far/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471520861,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471520861,"objectID":"c51704bd975a8d57cfbad4a33ef3bdbd","permalink":"https://111qqz.github.io/2016/08/hdu-1754/","publishdate":"2016-08-18T11:47:41Z","readingtime":4,"relpermalink":"/2016/08/hdu-1754/","section":"post","summary":"hdu 1754 题目链接 题意：单点更新，区间查询最大值。 思路：线段树。 一开始借鉴了clj的pointer写法。。wjmzbmr\u0026rsquo;s code 直接ML","tags":["线段树"],"title":"hdu 1754 I Hate It (线段树模板题，炒鸡详细注释版)","type":"post","url":"/2016/08/hdu-1754/","weight":0,"wordcount":1601},{"author":null,"categories":["ACM"],"content":null,"date":1471511971,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471511971,"objectID":"70608d68e8f62d76a0a12606c0cd302d","permalink":"https://111qqz.github.io/2016/08/","publishdate":"2016-08-18T09:19:31Z","readingtime":1,"relpermalink":"/2016/08/","section":"post","summary":"嘛，终于下定决心搞定线段树了。 之前几次都是被lazy标记卡住，这次大概不会了吧2333 放一些学习资料，最后比较zkw线段树和普通线段树的区别","tags":["线段树"],"title":"线段树学习笔记","type":"post","url":"/2016/08//","weight":0,"wordcount":141},{"author":null,"categories":["c++"],"content":null,"date":1471505869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471505869,"objectID":"7312fce5726507dde0fc6f02e64cf529","permalink":"https://111qqz.github.io/2016/08/c11-/","publishdate":"2016-08-18T07:37:49Z","readingtime":1,"relpermalink":"/2016/08/c11-/","section":"post","summary":"昨天终于搞定了ycm对c++11的支持\u0026hellip;. 嘛，17都快出来了，我竟然连11都不会用。 不过突然把所有的11特性给我也没办法全部吸","tags":["c++11"],"title":"c++11 学习笔记","type":"post","url":"/2016/08/c11-/","weight":0,"wordcount":167},{"author":null,"categories":["ACM"],"content":null,"date":1471462593,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471462593,"objectID":"b56c8c1781a9d8cbefb62b9ee562830b","permalink":"https://111qqz.github.io/2016/08/hdu-3065/","publishdate":"2016-08-17T19:36:33Z","readingtime":2,"relpermalink":"/2016/08/hdu-3065/","section":"post","summary":"题目链接 题意：给出n个病毒的模式串，问每个病毒串在文本串中出现了多少次。 思路：ac自动机。模式串只由大写字母组成。文本串是所有可视字符。 如果","tags":null,"title":"hdu 3065 病毒侵袭持续中 (ac自动机)","type":"post","url":"/2016/08/hdu-3065/","weight":0,"wordcount":583},{"author":null,"categories":null,"content":null,"date":1471439822,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471439822,"objectID":"","permalink":"https://111qqz.github.io/tags/ac%E8%87%AA%E5%8A%A8%E6%9C%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/ac%E8%87%AA%E5%8A%A8%E6%9C%BA/","section":"tags","summary":"","tags":null,"title":"ac自动机","type":"tags","url":"/tags/ac%E8%87%AA%E5%8A%A8%E6%9C%BA/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471439822,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471439822,"objectID":"5b09ac41163d3a5f915da5078484b6b1","permalink":"https://111qqz.github.io/2016/08/hdu-2896/","publishdate":"2016-08-17T13:17:02Z","readingtime":2,"relpermalink":"/2016/08/hdu-2896/","section":"post","summary":"hdu 2896 题目链接 题意：给出n个病毒，然后给出m个网站，然后问每个网站中有哪些病毒，以及有病毒的网站的个数。 需要注意病毒和网站都需要按从小到达排列","tags":["ac自动机"],"title":"hdu 2896 病毒侵袭 (ac自动机)","type":"post","url":"/2016/08/hdu-2896/","weight":0,"wordcount":560},{"author":null,"categories":["ACM"],"content":null,"date":1471337693,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471337693,"objectID":"87706eb36546527811ecb9f998ba9aa8","permalink":"https://111qqz.github.io/2016/08/acby-lalatina-hdu-2222/","publishdate":"2016-08-16T08:54:53Z","readingtime":1,"relpermalink":"/2016/08/acby-lalatina-hdu-2222/","section":"post","summary":"orzorz 日常%学弟 华科的未来orz #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; using namespace std; struct tnode { int s; tnode *f, *w, *c[26]; } T[5000000], *Q[5000000]; int C; inline tnode *tnew() { memset(T + C, 0, sizeof(tnode)); return T + C++; } inline void AcaInsert(tnode *p, const char *s) { while (*s) { int u = *s - 'a'; if (!p-\u0026gt;c[u]) p-\u0026gt;c[u] =","tags":["ac自动机"],"title":"ac自动机模板by Lalatina （hdu 2222）","type":"post","url":"/2016/08/acby-lalatina-hdu-2222/","weight":0,"wordcount":281},{"author":null,"categories":["ACM"],"content":null,"date":1471331556,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471331556,"objectID":"eecba9a1d9619ec9dae16ee0c913f55f","permalink":"https://111qqz.github.io/2016/08/hdu-2222/","publishdate":"2016-08-16T07:12:36Z","readingtime":2,"relpermalink":"/2016/08/hdu-2222/","section":"post","summary":"hdu 2222 题目链接 题意：给出n个模式串，一个文本串，问文本串中出现了多少各模式串。 思路：ac自动机裸题。代码风格来自bin神。静态数组的写法。 需要","tags":["ac自动机"],"title":"hdu 2222 Keywords Search (ac自动机模板题（静态数组写法+动态指针写法）)","type":"post","url":"/2016/08/hdu-2222/","weight":0,"wordcount":896},{"author":null,"categories":["ACM"],"content":null,"date":1471297869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471297869,"objectID":"110d7ec1875381f09ab5c8975a7b44bc","permalink":"https://111qqz.github.io/2016/08/20160816/","publishdate":"2016-08-15T21:51:09Z","readingtime":1,"relpermalink":"/2016/08/20160816/","section":"post","summary":"突然感觉。。。 我这种几乎没有恋爱经验的人。。。 感觉被妹子随便用点手段就能收了啊orz 想想真是可怕。。。 别问我为什么突然有这种的感慨。。。 吓傻","tags":null,"title":"20160816随笔","type":"post","url":"/2016/08/20160816/","weight":0,"wordcount":87},{"author":null,"categories":["ACM"],"content":null,"date":1471297429,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471297429,"objectID":"19d0f830f8cfdae9857775a3195ad282","permalink":"https://111qqz.github.io/2016/08/ac/","publishdate":"2016-08-15T21:43:49Z","readingtime":1,"relpermalink":"/2016/08/ac/","section":"post","summary":"老规矩，先放资料： 参考资料1 参考资料2 参考资料3 （其实这些资料我都没怎么看。。。。因为感觉。。。理解起来非常容易的样子orz） 我的理解：感觉","tags":["ac自动机"],"title":"ac自动机学习笔记","type":"post","url":"/2016/08/ac/","weight":0,"wordcount":368},{"author":null,"categories":["ACM"],"content":null,"date":1471288956,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471288956,"objectID":"21297c4cd948cd0bd95af08b437779ce","permalink":"https://111qqz.github.io/2016/08/poj-2001/","publishdate":"2016-08-15T19:22:36Z","readingtime":2,"relpermalink":"/2016/08/poj-2001/","section":"post","summary":"poj 2001 题目链接 题意：给出n个字符串的表，问每个字符串的简化表示。简化表示的要求是，以该字符串的最短的而且不能产生歧义的前缀来表示。 思路：字典树","tags":["trie"],"title":"poj 2001 Shortest Prefixes (trie树)","type":"post","url":"/2016/08/poj-2001/","weight":0,"wordcount":506},{"author":null,"categories":["ACM"],"content":null,"date":1471287136,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471287136,"objectID":"8d5500d908da6bbca16cbff751595256","permalink":"https://111qqz.github.io/2016/08/poj-3630/","publishdate":"2016-08-15T18:52:16Z","readingtime":1,"relpermalink":"/2016/08/poj-3630/","section":"post","summary":"poj 3630 题目链接 题意：给出n个字符串，问是否满足所有的字符串都不以其他的字符串为前缀。 思路：字典树，先建树，然后每次查找的之前先删掉自己，找完以","tags":["trie"],"title":"poj 3630 Phone List (带删除操作的静态trie树模板题)","type":"post","url":"/2016/08/poj-3630/","weight":0,"wordcount":472},{"author":null,"categories":["ACM"],"content":null,"date":1471278989,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471278989,"objectID":"8d51760e70d72fe430fe6e509257123e","permalink":"https://111qqz.github.io/2016/08/hdu-1247/","publishdate":"2016-08-15T16:36:29Z","readingtime":2,"relpermalink":"/2016/08/hdu-1247/","section":"post","summary":"hdu 1247 题目链接 题意：给出n个字符串的单词表，输出所有的字符串a，满足字符串a是由n中另外两个字符串拼接成的。 思路：字典树。。其实我一开始想出了","tags":["trie"],"title":"hdu 1247 Hat’s Words (trie树)","type":"post","url":"/2016/08/hdu-1247/","weight":0,"wordcount":519},{"author":null,"categories":["ACM"],"content":null,"date":1471276480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471276480,"objectID":"6209bd95b187fa755507e090adec177a","permalink":"https://111qqz.github.io/2016/08/hdu-5536/","publishdate":"2016-08-15T15:54:40Z","readingtime":2,"relpermalink":"/2016/08/hdu-5536/","section":"post","summary":"hdu 5536 题目链接 题意：给出n个数，然后问最大的(a[i]+a[j])^a[k] (i,j,k互不相同) 思路：异或和最大很容易想到字典树。。但是如何","tags":["trie"],"title":"hdu 5536 || 2015 长春区域赛 J  Chip Factory (带删除操作的trie树)","type":"post","url":"/2016/08/hdu-5536/","weight":0,"wordcount":840},{"author":null,"categories":["ACM"],"content":null,"date":1471266568,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471266568,"objectID":"6e4f1393288621ae657259b40c1f5e47","permalink":"https://111qqz.github.io/2016/08/hdu-4828-xor-sum-trie-/","publishdate":"2016-08-15T13:09:28Z","readingtime":2,"relpermalink":"/2016/08/hdu-4828-xor-sum-trie-/","section":"post","summary":"hdu 4825 题目链接 题意：给定n个数，然后给出m个询问，每组询问一个数x，问n中的数y使得x和y的异或和最大。 思路：字典树。。把每个数转化成二进制，","tags":["trie"],"title":"hdu 4828 Xor Sum (trie 树模板题，经典应用)","type":"post","url":"/2016/08/hdu-4828-xor-sum-trie-/","weight":0,"wordcount":649},{"author":null,"categories":["ACM"],"content":null,"date":1471190762,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471190762,"objectID":"e137bc90024dfe59256ef2586c89fd9a","permalink":"https://111qqz.github.io/2016/08/hdu-1251/","publishdate":"2016-08-14T16:06:02Z","readingtime":1,"relpermalink":"/2016/08/hdu-1251/","section":"post","summary":"hdu 1251 题目链接 题意：先给一个单词表，然后给出若干查询，每个查询一个单词，问单词表中以这个单词为前缀的单词的个数。 思路：trie树裸题。第一次写","tags":["trie"],"title":"hdu 1251 统计难题 (trie树模板题)","type":"post","url":"/2016/08/hdu-1251/","weight":0,"wordcount":404},{"author":null,"categories":["ACM"],"content":null,"date":1471174405,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471174405,"objectID":"9e3b0525eb79167c9ec15bdb1f008b61","permalink":"https://111qqz.github.io/2016/08/hdu-5833/","publishdate":"2016-08-14T11:33:25Z","readingtime":1,"relpermalink":"/2016/08/hdu-5833/","section":"post","summary":"hdu 5833 题目链接 题意：n个数，保证每个数的素因子不超过2000，从中取若干个，问乘积是完全平方数的方案数。 思路： 完全平方数就是要求每个质因子的指","tags":["math","高斯消元"],"title":"hdu 5833 || ccpc 2016 网络赛 1002 Zhu and 772002 （高斯消元）","type":"post","url":"/2016/08/hdu-5833/","weight":0,"wordcount":411},{"author":null,"categories":null,"content":null,"date":1471174405,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471174405,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/","section":"tags","summary":"","tags":null,"title":"高斯消元","type":"tags","url":"/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471173841,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471173841,"objectID":"eb98fad024992668e4816f6b74dd7edc","permalink":"https://111qqz.github.io/2016/08/hdu-5835/","publishdate":"2016-08-14T11:24:01Z","readingtime":1,"relpermalink":"/2016/08/hdu-5835/","section":"post","summary":"hdu 5835 题目链接 题意：n种礼物，每种a[i]个。现在有无穷个小朋友排成一排，分给每个人一个“普通”的礼物，一个“昂贵”的礼物（哪个普通哪个昂贵是","tags":["模拟"],"title":"hdu 5835 || ccpc 2016 网络赛 1004 Danganronpa (模拟)","type":"post","url":"/2016/08/hdu-5835/","weight":0,"wordcount":492},{"author":null,"categories":["ACM"],"content":null,"date":1471173442,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471173442,"objectID":"e553361763d5f2605a728da75a560ea8","permalink":"https://111qqz.github.io/2016/08/hdu-5842/","publishdate":"2016-08-14T11:17:22Z","readingtime":1,"relpermalink":"/2016/08/hdu-5842/","section":"post","summary":"hdu 5842题目链接 题意：给一个只由小写字母组成的字符串，每个字符映射到一个数字，问映射之后的最长上升子序列的长度。。 思路：上来写nlogn的","tags":["set"],"title":"hdu 5842 || 2016 ccpc 网络赛 1011 Lweb and String（set）","type":"post","url":"/2016/08/hdu-5842/","weight":0,"wordcount":342},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1471031886,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471031886,"objectID":"a988b56481eba0015c327db3334c28af","permalink":"https://111qqz.github.io/2016/08/20160813/","publishdate":"2016-08-12T19:58:06Z","readingtime":1,"relpermalink":"/2016/08/20160813/","section":"post","summary":"感觉终于走在了正确的道路上了。 要是时间再多一点就好了。 我对成绩没有太多期待，顺其自然就好咯。 唯一的执念，就是，争取艹翻Pacedect (微笑","tags":null,"title":"20160813随笔","type":"post","url":"/2016/08/20160813/","weight":0,"wordcount":110},{"author":null,"categories":["ACM"],"content":null,"date":1471030761,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471030761,"objectID":"4c869050c9f89e4537306b9abbe136a7","permalink":"https://111qqz.github.io/2016/08/hdu-3374/","publishdate":"2016-08-12T19:39:21Z","readingtime":1,"relpermalink":"/2016/08/hdu-3374/","section":"post","summary":"hdu 3374 题目链接 题意：给出一个循环字符串，问最小表示出现的位置以及次数，最大表示出现的位置以及次数。 思路：之前只写过最小表示。。最大表示其实是一","tags":["kmp","字符串循环同构","最小表示法"],"title":"hdu 3374 String Problem (字符串的最小/大表示法+kmp)","type":"post","url":"/2016/08/hdu-3374/","weight":0,"wordcount":472},{"author":null,"categories":null,"content":null,"date":1471030761,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1471030761,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%AA%E7%8E%AF%E5%90%8C%E6%9E%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%AA%E7%8E%AF%E5%90%8C%E6%9E%84/","section":"tags","summary":"","tags":null,"title":"字符串循环同构","type":"tags","url":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%AA%E7%8E%AF%E5%90%8C%E6%9E%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1471028857,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471028857,"objectID":"8eea168ba1b050446c1402d04272f879","permalink":"https://111qqz.github.io/2016/08/hdu-2609/","publishdate":"2016-08-12T19:07:37Z","readingtime":1,"relpermalink":"/2016/08/hdu-2609/","section":"post","summary":"hdu 2609 题目链接 题意：给出n个循环字符串，问有多少种。 思路：将每个字符串换成最小表示，然后set存一下即可。 /* *********************************************** Author :111qqz Created Time :2016年08月13日","tags":["set","字符串循环同构","最小表示法"],"title":"hdu 2609 How many (字符串的最小表示法+set)","type":"post","url":"/2016/08/hdu-2609/","weight":0,"wordcount":314},{"author":null,"categories":["ACM"],"content":null,"date":1471027324,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471027324,"objectID":"54e2d87fa60913b2930f45b3ae65c967","permalink":"https://111qqz.github.io/2016/08/hdu-4162/","publishdate":"2016-08-12T18:42:04Z","readingtime":1,"relpermalink":"/2016/08/hdu-4162/","section":"post","summary":"hdu 4162 题意：给出一串代表8个方向的数字，求这串序列的一阶差分（the first difference）的字典序最小的表示。 思路：先做个变换，按照题意，第","tags":["字符串循环同构","最小表示法"],"title":"hdu 4162 Shape Number (字符串的最小表示法)","type":"post","url":"/2016/08/hdu-4162/","weight":0,"wordcount":350},{"author":null,"categories":["ACM"],"content":null,"date":1471022481,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471022481,"objectID":"79dea49328b7b316eee613c552a73229","permalink":"https://111qqz.github.io/2016/08/poj-1509/","publishdate":"2016-08-12T17:21:21Z","readingtime":1,"relpermalink":"/2016/08/poj-1509/","section":"post","summary":"poj 1509 题目链接 题意\u0026amp;思路：同uva 1314 /* *********************************************** Author :111qqz Created Time :2016年08月12日 星期五 18时48分29秒 File Name :code/uva/1314.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;stack\u0026gt;","tags":["最小表示法"],"title":"poj 1509 Glass Beads (字符串的最小表示法)","type":"post","url":"/2016/08/poj-1509/","weight":0,"wordcount":212},{"author":null,"categories":["ACM"],"content":null,"date":1471022086,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1471022086,"objectID":"61f7fc6bcb043e99c9906cf105c6198c","permalink":"https://111qqz.github.io/2016/08/ural-1314-hidden-password-/","publishdate":"2016-08-12T17:14:46Z","readingtime":1,"relpermalink":"/2016/08/ural-1314-hidden-password-/","section":"post","summary":"uva 1314 题目链接 题意：给定一个循环字符串，问字典序最小的串的开始位置。最小表示法裸题。 /* *********************************************** Author :111qqz Created Time :2016年08月12日 星期五 18时48分29","tags":["最小表示法"],"title":"ural 1314 Hidden Password (字符串的最小表示法模板题)","type":"post","url":"/2016/08/ural-1314-hidden-password-/","weight":0,"wordcount":232},{"author":null,"categories":null,"content":null,"date":1470991026,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470991026,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%90%8C%E6%9E%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%90%8C%E6%9E%84/","section":"tags","summary":"","tags":null,"title":"同构","type":"tags","url":"/tags/%E5%90%8C%E6%9E%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470991026,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470991026,"objectID":"ec8a0d4efafede65b7dfe044bb528840","permalink":"https://111qqz.github.io/2016/08/","publishdate":"2016-08-12T08:37:06Z","readingtime":1,"relpermalink":"/2016/08/","section":"post","summary":"首先放一波资料：叶子豪_最小表示法 周源_《浅谈最小表示法在字符串循环同构问题中的应用》 参考博客 对于字符串循环同构的最小表示法，其问题实质是求","tags":["同构","字符串循环同构","最小表示法"],"title":"最小表示法学习笔记（同构问题+模板）","type":"post","url":"/2016/08//","weight":0,"wordcount":446},{"author":null,"categories":["ACM"],"content":null,"date":1470987287,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470987287,"objectID":"6c575f5f5187311105183764f5731b86","permalink":"https://111qqz.github.io/2016/08/hdu4300/","publishdate":"2016-08-12T07:34:47Z","readingtime":2,"relpermalink":"/2016/08/hdu4300/","section":"post","summary":"hdu 4300题目链接 吐槽：题意难懂的一逼，关键的地方根本没有说清好么。。。竟然还是多校题。。。。出题人英语是体育老师教的吧。。？本来挺傻逼一道","tags":["kmp"],"title":"hdu 4300 Clairewd’s message (kmp)","type":"post","url":"/2016/08/hdu4300/","weight":0,"wordcount":667},{"author":null,"categories":["ACM"],"content":null,"date":1470979988,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470979988,"objectID":"c7f750451a7383875801eab55f2dbddd","permalink":"https://111qqz.github.io/2016/08/hdu3336/","publishdate":"2016-08-12T05:33:08Z","readingtime":3,"relpermalink":"/2016/08/hdu3336/","section":"post","summary":"hdu 3336 题目链接 题意：给一个字符串，问这个字符串的所有前缀的出现次数的和。 思路：这道题需要完全理解nxt函数是干嘛的。。nxt[i]表示的是字符","tags":["dfs","kmp","字符串dp"],"title":"hdu 3336 Count the string （nxt函数的运用kmp+（dfs|dp )）","type":"post","url":"/2016/08/hdu3336/","weight":0,"wordcount":1329},{"author":null,"categories":null,"content":null,"date":1470979988,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470979988,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2dp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2dp/","section":"tags","summary":"","tags":null,"title":"字符串dp","type":"tags","url":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2dp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470937249,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470937249,"objectID":"897877f1ada3cdecb18d5bd21833bcd9","permalink":"https://111qqz.github.io/2016/08/hdu-2594/","publishdate":"2016-08-11T17:40:49Z","readingtime":1,"relpermalink":"/2016/08/hdu-2594/","section":"post","summary":"hdu 2594 题目链接 题意：given string s1,s2, find the longest prefix of s1 that is a suffix of s2. 思路：kmp。。。懒得说了。注意边界。 /* *********************************************** Author :111qqz Created Time :2016年08月12日 星期五 01","tags":["kmp"],"title":"hdu 2594 Simpsons’ Hidden Talent (kmp)","type":"post","url":"/2016/08/hdu-2594/","weight":0,"wordcount":270},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1470935725,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470935725,"objectID":"bd96e874c8409cd39a1fdd4deae1fe4a","permalink":"https://111qqz.github.io/2016/08/","publishdate":"2016-08-11T17:15:25Z","readingtime":1,"relpermalink":"/2016/08/","section":"post","summary":"* 很多题毫无思路，真的只是见过的套路太少，如果知道套路，瞬间成水题。 * 很多算法觉得难懂，九成原因是看到的资料不够好或者不够适合你。","tags":null,"title":"一点感受，其实你并没有那么弱","type":"post","url":"/2016/08//","weight":0,"wordcount":65},{"author":null,"categories":["ACM"],"content":null,"date":1470935508,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470935508,"objectID":"3e15f50177a414537b6b43a135cdb6ed","permalink":"https://111qqz.github.io/2016/08/hdu2203/","publishdate":"2016-08-11T17:11:48Z","readingtime":1,"relpermalink":"/2016/08/hdu2203/","section":"post","summary":"hdu 2203 题目链接 题意：给定字符串A（一个环），和字符串B，问B是否在A中出现过。 思路：环的问题。。复制一遍到末尾就好了。。出于严谨的考虑。。我们","tags":null,"title":"hdu 2203 亲和串 (kmp)","type":"post","url":"/2016/08/hdu2203/","weight":0,"wordcount":391},{"author":null,"categories":["ACM"],"content":null,"date":1470934386,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470934386,"objectID":"28264164e84c7c19c0b9e6a77e013557","permalink":"https://111qqz.github.io/2016/08/hdu-3746/","publishdate":"2016-08-11T16:53:06Z","readingtime":1,"relpermalink":"/2016/08/hdu-3746/","section":"post","summary":"hdu 3746题目链接 题意：给定一个字符串，是一个环（首尾相连），问至少再添加多少个珠子才能使得整个串是循环的。。。 思路：一下子想到了最小覆盖子","tags":["kmp","最小覆盖子串"],"title":"hdu 3746 Cyclic Nacklace (最小覆盖子串，kmp)","type":"post","url":"/2016/08/hdu-3746/","weight":0,"wordcount":350},{"author":null,"categories":null,"content":null,"date":1470934386,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470934386,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/","section":"tags","summary":"","tags":null,"title":"最小覆盖子串","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470930117,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470930117,"objectID":"9a8025f28e7dd1565ea828819b1bd610","permalink":"https://111qqz.github.io/2016/08/hdu-5763/","publishdate":"2016-08-11T15:41:57Z","readingtime":2,"relpermalink":"/2016/08/hdu-5763/","section":"post","summary":"hdu 5763 题目链接 题意：给定两个字符串A和B，每个出现在A中的B(可以overlap)都有两种含义，问A串一共可能有多少种含义。 思路：kmp+dp","tags":["dp","kmp"],"title":"hdu 5763 || 2016 multi #4 1001 Another Meaning (kmp+dp)","type":"post","url":"/2016/08/hdu-5763/","weight":0,"wordcount":764},{"author":null,"categories":["ACM"],"content":null,"date":1470866599,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470866599,"objectID":"c85a5165f3c5067348cf32e1da02f0f1","permalink":"https://111qqz.github.io/2016/08/hdu-1867/","publishdate":"2016-08-10T22:03:19Z","readingtime":1,"relpermalink":"/2016/08/hdu-1867/","section":"post","summary":"hdu 1867 题意 题意：给两个字符串，将两个字符串首尾拼接之后得到一个长度最短的字符串，求这个最短的字符串（一个串的前缀可能是另一个串的后缀，这样的话","tags":["kmp"],"title":"hdu 1867 A + B for you again （kmp，最短的字符串a+b）","type":"post","url":"/2016/08/hdu-1867/","weight":0,"wordcount":463},{"author":null,"categories":["ACM"],"content":null,"date":1470862084,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470862084,"objectID":"e8ffe81889c6363fcbe2ef8cd4ca691e","permalink":"https://111qqz.github.io/2016/08/hdu1841/","publishdate":"2016-08-10T20:48:04Z","readingtime":2,"relpermalink":"/2016/08/hdu1841/","section":"post","summary":"hdu 1841题目链接 题意：给两个字符串，问包含这两个字符串的最小的字符串的长度（最小是因为，一个串的子串可能是另一个串的后缀，这样出现一次就可","tags":["kmp"],"title":"hdu 1841 Find the Shortest Common Superstring (kmp)","type":"post","url":"/2016/08/hdu1841/","weight":0,"wordcount":558},{"author":null,"categories":["ACM"],"content":null,"date":1470858073,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470858073,"objectID":"1c2bb12335c1a46b4a1ed3a2c7883f26","permalink":"https://111qqz.github.io/2016/08/hdu-1358-period-kmp/","publishdate":"2016-08-10T19:41:13Z","readingtime":2,"relpermalink":"/2016/08/hdu-1358-period-kmp/","section":"post","summary":"hdu 1358 题目链接 题意：给一个字符串，求这个字符串的每个前缀（包括本身）的能否由k个子串组成（K\u0026gt;1） 思路：和poj 2406 比较类似。。 结论：字符","tags":["kmp"],"title":"hdu 1358 Period (kmp，求字符串的周期)","type":"post","url":"/2016/08/hdu-1358-period-kmp/","weight":0,"wordcount":549},{"author":null,"categories":["ACM"],"content":null,"date":1470856431,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470856431,"objectID":"7c2f8da3151a07c7072f294c0ce37e9d","permalink":"https://111qqz.github.io/2016/08/hdu-2087/","publishdate":"2016-08-10T19:13:51Z","readingtime":1,"relpermalink":"/2016/08/hdu-2087/","section":"post","summary":"hdu 2087 题目链接 题意：问模式串在文本串中出现的次数，不允许重叠。 思路：kmp，关键在于不允许重叠。。。 其实只要每次找到的时候j=0一下就好咯。 /*","tags":["kmp"],"title":"hdu 2087 剪花布条 (kmp，不允许重叠的匹配)","type":"post","url":"/2016/08/hdu-2087/","weight":0,"wordcount":295},{"author":null,"categories":["ACM"],"content":null,"date":1470855120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470855120,"objectID":"4b01603830589b95073359b32adf223f","permalink":"https://111qqz.github.io/2016/08/hdu1711/","publishdate":"2016-08-10T18:52:00Z","readingtime":1,"relpermalink":"/2016/08/hdu1711/","section":"post","summary":"hdu 1711 题目链接 题意：给定两个数列，问第二个数列在第一个数列中出现的位置（第一个元素对应的位置） 思路：数列也可以看成字符串，然后左kmp，返回的","tags":["kmp"],"title":"hdu 1711 Number Sequence (kmp)","type":"post","url":"/2016/08/hdu1711/","weight":0,"wordcount":319},{"author":null,"categories":["ACM"],"content":null,"date":1470851667,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470851667,"objectID":"2140438f215b39fea6ddf2e57ae7e1fa","permalink":"https://111qqz.github.io/2016/08/poj-3080/","publishdate":"2016-08-10T17:54:27Z","readingtime":1,"relpermalink":"/2016/08/poj-3080/","section":"post","summary":"poj 3080 题目链接 题意：给出n个字符串（n\u0026lt;=10），字符串长度不超过70，问出现在全部n个字符串中的最长并且字典序最小的长度大于等于3的子","tags":["kmp"],"title":"poj 3080 Blue Jeans (n个字符串的最长公共子串，暴力+kmp)","type":"post","url":"/2016/08/poj-3080/","weight":0,"wordcount":412},{"author":null,"categories":["ACM"],"content":null,"date":1470848051,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470848051,"objectID":"7b0544b7c2391a4857f6b2f662e3de00","permalink":"https://111qqz.github.io/2016/08/poj-2185/","publishdate":"2016-08-10T16:54:11Z","readingtime":1,"relpermalink":"/2016/08/poj-2185/","section":"post","summary":"poj 2185 题目链接 题意：给出一个字符矩形，问一个面积最小的矩形，覆盖掉整个矩形。大概就是二维的最小覆盖子串。 思路：对于每一行做最小覆盖子串，然后求","tags":["kmp","最小覆盖子串","最小覆盖子矩形"],"title":"poj 2185 Milking Grid (最小覆盖子矩形，kmp)","type":"post","url":"/2016/08/poj-2185/","weight":0,"wordcount":385},{"author":null,"categories":null,"content":null,"date":1470848051,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470848051,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E7%9F%A9%E5%BD%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E7%9F%A9%E5%BD%A2/","section":"tags","summary":"","tags":null,"title":"最小覆盖子矩形","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E7%9F%A9%E5%BD%A2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470846538,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470846538,"objectID":"bcc0787f959b018af78afe4db4e5e6ca","permalink":"https://111qqz.github.io/2016/08/kmp/","publishdate":"2016-08-10T16:28:58Z","readingtime":3,"relpermalink":"/2016/08/kmp/","section":"post","summary":"参考资料（本文大部分是参考这篇博客，附带一些证明步骤的解释） 首先明确一些概念： 最小覆盖子串：对于某个字符串s，它的最小覆盖子串指的是长度最小","tags":["kmp","最小覆盖子串"],"title":"KMP与最小覆盖子串","type":"post","url":"/2016/08/kmp/","weight":0,"wordcount":1036},{"author":null,"categories":["ACM"],"content":null,"date":1470835559,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470835559,"objectID":"e79265994a5be5c6fd3947bdc8ee40d3","permalink":"https://111qqz.github.io/2016/08/poj-2752/","publishdate":"2016-08-10T13:25:59Z","readingtime":1,"relpermalink":"/2016/08/poj-2752/","section":"post","summary":"poj 2752题目链接 题意：求出所有的前缀和后缀相同的子串的长度。 思路:求出nxt函数，观察发现，从从len递归向前就是答案。 /* *********************************************** Author :111qqz Created Time :20","tags":["kmp"],"title":"poj 2752 Seek the Name, Seek the Fame (kmp 理解nxt函数)","type":"post","url":"/2016/08/poj-2752/","weight":0,"wordcount":264},{"author":null,"categories":["ACM"],"content":null,"date":1470832723,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470832723,"objectID":"dc776faaf297ade3bf160d2007fc105e","permalink":"https://111qqz.github.io/2016/08/hdu1686/","publishdate":"2016-08-10T12:38:43Z","readingtime":1,"relpermalink":"/2016/08/hdu1686/","section":"post","summary":"hdu1686 题意：给出模式串和文本串，问模式串在文本串中出现了多少次，可以overlap. 思路：思考naive的匹配过程。nxt函数不过是改进了当失配","tags":["kmp"],"title":"hdu  1686 Oulipo (kmp模板题)","type":"post","url":"/2016/08/hdu1686/","weight":0,"wordcount":424},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1470743280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470743280,"objectID":"14907e5f1b68e9264a32d6b1abf08d85","permalink":"https://111qqz.github.io/2016/08/2016-tanabata/","publishdate":"2016-08-09T11:48:00Z","readingtime":1,"relpermalink":"/2016/08/2016-tanabata/","section":"post","summary":"其实一个妹子身上，最让人着迷的，是对生活的态度吧。 ** 过了好久我终于领悟到这点。**","tags":null,"title":"2016七夕，关于爱情的随想","type":"post","url":"/2016/08/2016-Tanabata/","weight":0,"wordcount":41},{"author":null,"categories":["ACM"],"content":null,"date":1470655605,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470655605,"objectID":"619fa8c767647356279de788e8759b96","permalink":"https://111qqz.github.io/2016/08/kmp/","publishdate":"2016-08-08T11:26:45Z","readingtime":3,"relpermalink":"/2016/08/kmp/","section":"post","summary":"20170801update:当时竟然没有强调next函数的含义？ next[i]的含义是,i之前的整个前缀中，最长的该前缀的前缀和后缀相同的","tags":["kmp"],"title":"KMP算法学习","type":"post","url":"/2016/08/kmp/","weight":0,"wordcount":1011},{"author":null,"categories":null,"content":null,"date":1470591141,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470591141,"objectID":"26165ed3215a75f08e08a7d73103082b","permalink":"https://111qqz.github.io/2016/08/whust-2016-1-d-zhenya-moves-from-the-dormitory-/","publishdate":"2016-08-07T17:32:21Z","readingtime":1,"relpermalink":"/2016/08/whust-2016-1-d-zhenya-moves-from-the-dormitory-/","section":"post","summary":"题目链接 傻逼模拟。。读完题就ac了。。。 /* *********************************************** Author :111qqz Created Time :2016年08月07日 星期日 18时04分18秒 File Name :code/whust2016/#1/D.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;stack\u0026gt; #include","tags":["greedy","模拟"],"title":"whust 2016 #1 D Zhenya moves from the dormitory (贪心，模拟)","type":"post","url":"/2016/08/whust-2016-1-d-zhenya-moves-from-the-dormitory-/","weight":0,"wordcount":396},{"author":null,"categories":null,"content":null,"date":1470590971,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470590971,"objectID":"b9c82e78857522c7a22deaa35ec265fc","permalink":"https://111qqz.github.io/2016/08/whust-2016-1-h-pair-normal-and-paranormal/","publishdate":"2016-08-07T17:29:31Z","readingtime":1,"relpermalink":"/2016/08/whust-2016-1-h-pair-normal-and-paranormal/","section":"post","summary":"题目链接 其实就是括号匹配的模型。。用栈即可。。被我写挂好几发。。该死该死。。。 /* *********************************************** Author :111qqz Created Time :2016年08月07日 星期日 17时34分13秒 File","tags":["括号匹配","栈"],"title":"whust 2016 #1  H - Pair: normal and paranormal","type":"post","url":"/2016/08/whust-2016-1-h-pair-normal-and-paranormal/","weight":0,"wordcount":351},{"author":null,"categories":null,"content":null,"date":1470590971,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470590971,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/","section":"tags","summary":"","tags":null,"title":"括号匹配","type":"tags","url":"/tags/%E6%8B%AC%E5%8F%B7%E5%8C%B9%E9%85%8D/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1470590971,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470590971,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%A0%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%A0%88/","section":"tags","summary":"","tags":null,"title":"栈","type":"tags","url":"/tags/%E6%A0%88/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470400370,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470400370,"objectID":"28e55fcee9b918a798d2b310c874fc34","permalink":"https://111qqz.github.io/2016/08/hdu-3415/","publishdate":"2016-08-05T12:32:50Z","readingtime":2,"relpermalink":"/2016/08/hdu-3415/","section":"post","summary":"hdu 3415 题意：给出n个整数，是一个环（也就是a[n]右边是a[1]）求一段长度不超过k的数使得和最大，问最大和是多少并给出这段数的位置。 思路：为","tags":["单调队列"],"title":"hdu 3415 Max Sum of Max-K-sub-sequence (单调队列)","type":"post","url":"/2016/08/hdu-3415/","weight":0,"wordcount":727},{"author":null,"categories":null,"content":null,"date":1470400370,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470400370,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/","section":"tags","summary":"","tags":null,"title":"单调队列","type":"tags","url":"/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470326654,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470326654,"objectID":"65a304dd0aac3602ddddb00112b37b8f","permalink":"https://111qqz.github.io/2016/08/ural1126/","publishdate":"2016-08-04T16:04:14Z","readingtime":2,"relpermalink":"/2016/08/ural1126/","section":"post","summary":"ural 1126 题意：n个数，求从第k个元素开始，求每k个元素的最大值（一共求n-k+1次） 思路：单调队列。 单调队列学习链接 其实单调队列挺容易的理解的。","tags":["单调队列"],"title":"ural 1126. Magnetic Storms (单调队列模板题)","type":"post","url":"/2016/08/ural1126/","weight":0,"wordcount":865},{"author":null,"categories":["ACM"],"content":null,"date":1470230398,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470230398,"objectID":"1d269f488cbf132645e4eeb0fdcf7f3c","permalink":"https://111qqz.github.io/2016/08/hdu-1559/","publishdate":"2016-08-03T13:19:58Z","readingtime":1,"relpermalink":"/2016/08/hdu-1559/","section":"post","summary":"hdu 1559 题意：给你一个m×n的整数矩阵，在上面找一个x×y的子矩阵，使子矩阵中所有元素的和最大。 思路：二维前缀和就好。。。和单调栈没有半毛钱关系","tags":["前缀和"],"title":"hdu 1559 最大子矩阵 (二维前缀和)","type":"post","url":"/2016/08/hdu-1559/","weight":0,"wordcount":280},{"author":null,"categories":["ACM"],"content":null,"date":1470225779,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470225779,"objectID":"a6d72e89e690f39aaa3c9e5cb135349b","permalink":"https://111qqz.github.io/2016/08/poj-3494/","publishdate":"2016-08-03T12:02:59Z","readingtime":1,"relpermalink":"/2016/08/poj-3494/","section":"post","summary":"poj 3494 题意：给出一个n*m个0-1图，求最大的全部由1组成的矩阵。 思路：同poj 1964,一共做n+2×m次单调栈。。。数组开小re一发。。某","tags":["单调栈"],"title":"poj 3494 Largest Submatrix of All 1’s (单调栈)","type":"post","url":"/2016/08/poj-3494/","weight":0,"wordcount":458},{"author":null,"categories":null,"content":null,"date":1470225779,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470225779,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8D%95%E8%B0%83%E6%A0%88/","section":"tags","summary":"","tags":null,"title":"单调栈","type":"tags","url":"/tags/%E5%8D%95%E8%B0%83%E6%A0%88/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470223856,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470223856,"objectID":"037efc9f0a48744ba58aba67b0e035eb","permalink":"https://111qqz.github.io/2016/08/poj-2796/","publishdate":"2016-08-03T11:30:56Z","readingtime":1,"relpermalink":"/2016/08/poj-2796/","section":"post","summary":"poj 2796 题意：给出一个人n（1E5）天的情绪值（0..1E6），一段时间的value的定义是这段时间的情绪之和*这段时间情绪的最小值。 现在求va","tags":["前缀和","单调栈"],"title":"poj 2796 Feel Good (前缀和，单调栈)","type":"post","url":"/2016/08/poj-2796/","weight":0,"wordcount":457},{"author":null,"categories":["ACM"],"content":null,"date":1470222444,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470222444,"objectID":"b471fb6d6abd7cc5462aec3f2742c829","permalink":"https://111qqz.github.io/2016/08/po2082/","publishdate":"2016-08-03T11:07:24Z","readingtime":1,"relpermalink":"/2016/08/po2082/","section":"post","summary":"poj 2082 题目链接 题意：这道题简直就是。。。教给大家怎么把一句话把简单的题让人出得看不懂。。。真的一点意思都没有。给出n个矩形的宽度和高度，这些矩","tags":["前缀和","单调栈"],"title":"poj 2082 Terrible Sets  (前缀和，单调栈)","type":"post","url":"/2016/08/po2082/","weight":0,"wordcount":390},{"author":null,"categories":["ACM"],"content":null,"date":1470220949,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470220949,"objectID":"486a7c64d84dbd1d2e89f599470868fe","permalink":"https://111qqz.github.io/2016/08/poj-1964/","publishdate":"2016-08-03T10:42:29Z","readingtime":2,"relpermalink":"/2016/08/poj-1964/","section":"post","summary":"poj 1964 题意：n*m的maze,由\u0026rsquo;R'和‘F’组成，现在要求找到面积最大的矩形，使得矩形中所有格子都是\u0026rsquo;F\u0026rsquo","tags":["单调栈","输入挂"],"title":"poj 1964 City Game(单调栈，输入挂)","type":"post","url":"/2016/08/poj-1964/","weight":0,"wordcount":974},{"author":null,"categories":["ACM"],"content":null,"date":1470174050,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470174050,"objectID":"d255f31890d5549b008e7e5b626491e2","permalink":"https://111qqz.github.io/2016/08/poj-3250/","publishdate":"2016-08-02T21:40:50Z","readingtime":1,"relpermalink":"/2016/08/poj-3250/","section":"post","summary":"poj 3250 题意： n头牛排成一列，第n只牛在最前面，第1只牛在最后面。第i只牛能看到的牛的个数是，它前面的且没有被其他牛遮挡的牛的个数，遮挡的条件是","tags":["单调栈"],"title":"poj 3250 Bad Hair Day(单调栈)","type":"post","url":"/2016/08/poj-3250/","weight":0,"wordcount":411},{"author":null,"categories":["ACM"],"content":null,"date":1470172168,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470172168,"objectID":"893c9d64f4344ab55fb2206ec501bec8","permalink":"https://111qqz.github.io/2016/08/poj-2559/","publishdate":"2016-08-02T21:09:28Z","readingtime":2,"relpermalink":"/2016/08/poj-2559/","section":"post","summary":"poj 2559 题意：给定从左到右多个矩形，已知这此矩形的宽度都为1，长度不完全相等。这些矩形相连排成一排，求在这些矩形包括的范围内能得到的面积最大的矩","tags":["单调栈"],"title":"poj 2559 Largest Rectangle in a Histogram (单调栈)","type":"post","url":"/2016/08/poj-2559/","weight":0,"wordcount":609},{"author":null,"categories":["ACM"],"content":null,"date":1470151435,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470151435,"objectID":"d5d6e7f3656cf737cde73a48d615ebe7","permalink":"https://111qqz.github.io/2016/08/cf-123/","publishdate":"2016-08-02T15:23:55Z","readingtime":3,"relpermalink":"/2016/08/cf-123/","section":"post","summary":"题目链接 题意：定义一个函数F．． (1, 4), (4, 7), (9, 12) Its continuous sequences are: * * * * * * erfen ． erfen 题目描述得很烂．．看例子把．．大概就是：如果字符串y在字符串x中出现n","tags":["rmq","二分","后缀数组"],"title":"codeforces 123 D. String　（后缀数组+两次二分得到区间＋rmq）","type":"post","url":"/2016/08/cf-123/","weight":0,"wordcount":1257},{"author":null,"categories":null,"content":null,"date":1470151435,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1470151435,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E5%88%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E5%88%86/","section":"tags","summary":"","tags":null,"title":"二分","type":"tags","url":"/tags/%E4%BA%8C%E5%88%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1470145787,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470145787,"objectID":"4db4715b20f5f3c33860c57589cb237f","permalink":"https://111qqz.github.io/2016/08/poj-2406/","publishdate":"2016-08-02T13:49:47Z","readingtime":3,"relpermalink":"/2016/08/poj-2406/","section":"post","summary":"poj 2406 题意:给定一个字符串 L,已知这个字符串是由某个字符串 S 重复 R 次而得到的, 求 R 的最大值 思路:论文题. 转载论文中的题解: 最关键的在加黑的那句","tags":["kmp","后缀数组"],"title":"poj 2406 Power Strings (后缀数组||kmp)","type":"post","url":"/2016/08/poj-2406/","weight":0,"wordcount":1158},{"author":null,"categories":["ACM"],"content":null,"date":1470135052,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470135052,"objectID":"2ad2af37424640f246babf51189c9ca1","permalink":"https://111qqz.github.io/2016/08/spoj-subst1-new-distinct-substrings/","publishdate":"2016-08-02T10:50:52Z","readingtime":2,"relpermalink":"/2016/08/spoj-subst1-new-distinct-substrings/","section":"post","summary":"题目连接 题意：求所有不同的子串个数。 思路：后缀数组。和上一道题一样，就是数据范围变成了 5E4\u0026hellip;1A /* *********************************************** Author :111qqz Created Time :2016年08月02日 星期二 18时32","tags":["后缀数组"],"title":"spoj SUBST1 - New Distinct Substrings(后缀数组)","type":"post","url":"/2016/08/spoj-subst1-new-distinct-substrings/","weight":0,"wordcount":526},{"author":null,"categories":["ACM"],"content":null,"date":1470130748,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1470130748,"objectID":"e47bc9698110387e2ead6f6cef1cff00","permalink":"https://111qqz.github.io/2016/08/hdu-5787/","publishdate":"2016-08-02T09:39:08Z","readingtime":1,"relpermalink":"/2016/08/hdu-5787/","section":"post","summary":"hdu5787 题意:给出l,r,k求区间[l,r]中满足任意相邻k个数字都不相同的数的个数. 思路:数位dp,dp[i][k1][k2][k3][k4]表","tags":["数位dp"],"title":"hdu 5787 K-wolf Number 2016 Multi-University Training Contest 5 1007  (不允许前导0的数位dp)","type":"post","url":"/2016/08/hdu-5787/","weight":0,"wordcount":378},{"author":null,"categories":["ACM"],"content":null,"date":1469993502,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469993502,"objectID":"0d99916dd4232d85648ac1b1a7025b6f","permalink":"https://111qqz.github.io/2016/08/spoj-disubstr/","publishdate":"2016-07-31T19:31:42Z","readingtime":2,"relpermalink":"/2016/08/spoj-disubstr/","section":"post","summary":"题目链接 题意：给出一个字符串，问所有不同的字串的个数。 思路：直接求比较困难。我们考虑，假如组成字符串的所有字符都不相同，那么就没有相同的字串","tags":["后缀数组"],"title":"spoj DISUBSTR - Distinct Substrings (统计字串个数，后缀数组)","type":"post","url":"/2016/08/spoj-disubstr/","weight":0,"wordcount":997},{"author":null,"categories":["ACM"],"content":null,"date":1469989084,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469989084,"objectID":"cc95da5c408d5d1f5d070657340e40cb","permalink":"https://111qqz.github.io/2016/08/poj-3261/","publishdate":"2016-07-31T18:18:04Z","readingtime":2,"relpermalink":"/2016/08/poj-3261/","section":"post","summary":"poj3261 题意：给一个字符串，要求找出至少出现k次的最长重复子串\u0026hellip; 思路：后缀数组，然后再次用到了根据height数组对后缀进行分组的套","tags":["后缀数组","最长公共字串"],"title":"poj 3261 Milk Patterns (最长公共子串，后缀数组)","type":"post","url":"/2016/08/poj-3261/","weight":0,"wordcount":731},{"author":null,"categories":null,"content":null,"date":1469989084,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469989084,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%97%E4%B8%B2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%97%E4%B8%B2/","section":"tags","summary":"","tags":null,"title":"最长公共字串","type":"tags","url":"/tags/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%97%E4%B8%B2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469983105,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469983105,"objectID":"8704365edeada04d8284654d10c249ef","permalink":"https://111qqz.github.io/2016/08/poj-1743-musical-theme-/","publishdate":"2016-07-31T16:38:25Z","readingtime":4,"relpermalink":"/2016/08/poj-1743-musical-theme-/","section":"post","summary":"poj 1743 题意：n个数字（1..88）表示的音符，问最长的连续两段长度至少为5的变化相同的音符段的长度。。。 思路：求最长重复字串。。。。很容易想到","tags":["后缀数组","最长公共字串"],"title":"poj 1743 Musical Theme  (不可重叠最长重复子串，后缀数组)","type":"post","url":"/2016/08/poj-1743-musical-theme-/","weight":0,"wordcount":1553},{"author":null,"categories":["ACM"],"content":null,"date":1469899099,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469899099,"objectID":"794cdccd6ee348aeae4f9726269b5a8b","permalink":"https://111qqz.github.io/2016/07/ural1517/","publishdate":"2016-07-30T17:18:19Z","readingtime":2,"relpermalink":"/2016/07/ural1517/","section":"post","summary":"ural1517 题意：给出两个字符串，求最长的公共字串（要求出具体的字符串是什么） 思路：依然是后缀数组，在更新长度 的时候记录起始位置即可，1A。以及，发现","tags":["后缀数组","最长公共字串"],"title":"ural 1517. Freedom of Choice (后缀数组，最长公共子串)","type":"post","url":"/2016/07/ural1517/","weight":0,"wordcount":619},{"author":null,"categories":["ACM"],"content":null,"date":1469894562,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469894562,"objectID":"98c9c27f95219151c075df771dd428d1","permalink":"https://111qqz.github.io/2016/07/poj-2774/","publishdate":"2016-07-30T16:02:42Z","readingtime":4,"relpermalink":"/2016/07/poj-2774/","section":"post","summary":"poj2774 题意：给出两个字符串，问最长的公共连续字串。 思路：后缀数组模板题。 具体可以参考两篇国集论文（09，04） topcoder中的讲解 codec","tags":["后缀数组","最长公共字串"],"title":"poj 2774 Long Long Message (最长公共字串，后缀数组模板题)","type":"post","url":"/2016/07/poj-2774/","weight":0,"wordcount":1584},{"author":null,"categories":["ACM"],"content":null,"date":1469873610,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469873610,"objectID":"34c9bac2a452496af9b44356d776dd18","permalink":"https://111qqz.github.io/2016/07/hdu-1280/","publishdate":"2016-07-30T10:13:30Z","readingtime":1,"relpermalink":"/2016/07/hdu-1280/","section":"post","summary":"hdu1280 题意：给出n(3000)个数，两两求和，输出最大的m(5000)个和。 思路：由于数据有限，想到计数排序。。。以及，m个可能刚好某个数据没有","tags":["计数排序"],"title":"hdu 1280 前m大的数 （计数排序）","type":"post","url":"/2016/07/hdu-1280/","weight":0,"wordcount":434},{"author":null,"categories":["ACM"],"content":null,"date":1469869977,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469869977,"objectID":"0d3a5ced1352ff70f7d310caa33fa64f","permalink":"https://111qqz.github.io/2016/07/suffix_array_tutorial/","publishdate":"2016-07-30T09:12:57Z","readingtime":5,"relpermalink":"/2016/07/suffix_array_tutorial/","section":"post","summary":"原文链接：链接 讲了后缀数组的概念，然后从最暴力的O(nnlogn )的复杂度(O(n)用来比较字符串，O(nlogn)是排序的复杂度)逐步优化","tags":["后缀数组"],"title":"suffix array (转自 codechef)","type":"post","url":"/2016/07/suffix_array_tutorial/","weight":0,"wordcount":2371},{"author":null,"categories":["ACM"],"content":null,"date":1469809188,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469809188,"objectID":"010715c19b3f8d914b1ee484867fc7d4","permalink":"https://111qqz.github.io/2016/07/bzoj1874/","publishdate":"2016-07-29T16:19:48Z","readingtime":2,"relpermalink":"/2016/07/bzoj1874/","section":"post","summary":"1874: [BeiJing2009 WinterCamp]取石子游戏 Time Limit: 5 Sec Memory Limit: 162 MB Submit: 726 Solved: 296 [Submit][Status][Discuss] Description 小H和小Z正在玩一个取石子游戏。 取石子游戏的规则是这样的，每个人每次可以从一","tags":["sg函数","博弈论"],"title":"bzoj 1874: [BeiJing2009 WinterCamp]取石子游戏 (sg函数，要求输出第一步具体方案)","type":"post","url":"/2016/07/bzoj1874/","weight":0,"wordcount":818},{"author":null,"categories":null,"content":null,"date":1469809188,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469809188,"objectID":"","permalink":"https://111qqz.github.io/tags/sg%E5%87%BD%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sg%E5%87%BD%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"sg函数","type":"tags","url":"/tags/sg%E5%87%BD%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469646342,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469646342,"objectID":"06373d76bb7975d8d71a25fc686cb4d7","permalink":"https://111qqz.github.io/2016/07/cf429b/","publishdate":"2016-07-27T19:05:42Z","readingtime":2,"relpermalink":"/2016/07/cf429b/","section":"post","summary":"cf429 b 题目链接 题意： n*m个格子，每个格子有一个人value a[i][j]\u0026gt;0，连个人，一个从左上角到右下角，每次只能向下或者向右移动，","tags":["dp"],"title":"codeforces 429 B. Working out (dp)","type":"post","url":"/2016/07/cf429b/","weight":0,"wordcount":736},{"author":null,"categories":["ACM"],"content":null,"date":1469622915,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469622915,"objectID":"f6e318d0d7f08e773eb11544b9324702","permalink":"https://111qqz.github.io/2016/07/hdu-2050/","publishdate":"2016-07-27T12:35:15Z","readingtime":1,"relpermalink":"/2016/07/hdu-2050/","section":"post","summary":"hdu 2050题目链接 题意：n条折线。。最多能把平面分成几部分。。 思路：联想到m条直线，最多能把平面分成m*(m+1)/2+1部分。。 画图发现。","tags":["math"],"title":"hdu 2050 折线分割平面 (找规律，递推)","type":"post","url":"/2016/07/hdu-2050/","weight":0,"wordcount":222},{"author":null,"categories":["ACM"],"content":null,"date":1469621206,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469621206,"objectID":"978d8759b3af83374fb2282334e2dacc","permalink":"https://111qqz.github.io/2016/07/hdu-2049/","publishdate":"2016-07-27T12:06:46Z","readingtime":1,"relpermalink":"/2016/07/hdu-2049/","section":"post","summary":"hdu 2049 题目链接 题意：n个妹子和n个汉子对应。。然后让每个汉子取选一个妹子，不能重复，问恰好有m个汉子选错妹子的可能的方案数。 思路：从n个中选n","tags":["排列组合","错排公式"],"title":"hdu 2049 不容易系列之(4)——考新郎 (错排公式，注意精度)","type":"post","url":"/2016/07/hdu-2049/","weight":0,"wordcount":498},{"author":null,"categories":null,"content":null,"date":1469621206,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469621206,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%94%99%E6%8E%92%E5%85%AC%E5%BC%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%94%99%E6%8E%92%E5%85%AC%E5%BC%8F/","section":"tags","summary":"","tags":null,"title":"错排公式","type":"tags","url":"/tags/%E9%94%99%E6%8E%92%E5%85%AC%E5%BC%8F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469618082,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469618082,"objectID":"a07f58756888ec21e4709d3f14fd57ca","permalink":"https://111qqz.github.io/2016/07/fedoraupdate/","publishdate":"2016-07-27T11:14:42Z","readingtime":1,"relpermalink":"/2016/07/fedoraupdate/","section":"post","summary":"。。。重新编译一次就可以了。。。orz","tags":null,"title":"解决fedora无线驱动在update后不能用的问题","type":"post","url":"/2016/07/fedoraupdate/","weight":0,"wordcount":19},{"author":null,"categories":["ACM"],"content":null,"date":1469607493,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469607493,"objectID":"00106d28e2cbb660a5a6c1dbb10ef2d5","permalink":"https://111qqz.github.io/2016/07/hdu-2048/","publishdate":"2016-07-27T08:18:13Z","readingtime":1,"relpermalink":"/2016/07/hdu-2048/","section":"post","summary":"hdu2048 题目链接 题意:n个人不放回的从一个有n个每个人对应id的卡片的盒子取一张卡片，取的正好和自己的对应就算中奖。求所有人都没有中奖的概率。 思路","tags":["排列组合","错排公式"],"title":"hdu 2048 神、上帝以及老天爷 (错排公式)","type":"post","url":"/2016/07/hdu-2048/","weight":0,"wordcount":473},{"author":null,"categories":["ACM"],"content":null,"date":1469604800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469604800,"objectID":"802c6b9f1b34d27cb72e5edf27a3b058","permalink":"https://111qqz.github.io/2016/07/hdu-2047/","publishdate":"2016-07-27T07:33:20Z","readingtime":1,"relpermalink":"/2016/07/hdu-2047/","section":"post","summary":"hdu 2047 题目链接 题意：一个由\u0026rsquo;E\u0026rsquo; \u0026lsquo;O\u0026rsquo; \u0026lsquo;F\u0026rsquo; 组成的长度为n的字符串。‘O’不能相邻。。问方案数。。 思路：递推。。。蒙对了（误 考","tags":["递推"],"title":"hdu 2047 阿牛的EOF牛肉串 (递推)","type":"post","url":"/2016/07/hdu-2047/","weight":0,"wordcount":372},{"author":null,"categories":null,"content":null,"date":1469604800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469604800,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%80%92%E6%8E%A8/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%80%92%E6%8E%A8/","section":"tags","summary":"","tags":null,"title":"递推","type":"tags","url":"/tags/%E9%80%92%E6%8E%A8/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469603193,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469603193,"objectID":"e076553363bc9873138e702117d074ce","permalink":"https://111qqz.github.io/2016/07/hdu-2045/","publishdate":"2016-07-27T07:06:33Z","readingtime":1,"relpermalink":"/2016/07/hdu-2045/","section":"post","summary":"hdu2045 题目链接 题意： 一串 方格，每个格子可以涂三种颜色，要求相邻的格子颜色不能相同，首尾格子也不能相同。 思路：递推。没推出来23333 我好菜啊.j","tags":["递推"],"title":"hdu 2045 不容易系列之(3)—— LELE的RPG难题 (递推)","type":"post","url":"/2016/07/hdu-2045/","weight":0,"wordcount":358},{"author":null,"categories":["ACM"],"content":null,"date":1469599059,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469599059,"objectID":"016f333935ce4a471fc2e02b8312c2a2","permalink":"https://111qqz.github.io/2016/07/hdu-2018/","publishdate":"2016-07-27T05:57:39Z","readingtime":2,"relpermalink":"/2016/07/hdu-2018/","section":"post","summary":"hdu2018题目链接 题意:第1年有1头奶牛，每年生一头奶牛，新生的奶牛从生下来的第四年（包括生下来那年）也开始每年一头奶牛。 问第n年有多少","tags":["dp","记忆化搜索"],"title":"hdu 2018 母牛的故事 (基础dp，记忆化搜索)","type":"post","url":"/2016/07/hdu-2018/","weight":0,"wordcount":560},{"author":null,"categories":null,"content":null,"date":1469599059,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469599059,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/","section":"tags","summary":"","tags":null,"title":"记忆化搜索","type":"tags","url":"/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469596330,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469596330,"objectID":"6d8bb73185a480b70c16f40eb79b7dc3","permalink":"https://111qqz.github.io/2016/07/hdu-2084/","publishdate":"2016-07-27T05:12:10Z","readingtime":1,"relpermalink":"/2016/07/hdu-2084/","section":"post","summary":"hdu2084题目链接 题意：dp入门题。。。数字三角形。。 思路： 昨天看mit公开课。。。讲到dp的精髓是sub-problem+ reuse\u0026hellip; 为什么自底","tags":["dp"],"title":"hdu 2084  数塔 (基础dp)","type":"post","url":"/2016/07/hdu-2084/","weight":0,"wordcount":417},{"author":null,"categories":["ACM"],"content":null,"date":1469518724,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469518724,"objectID":"60f1d7eca6ef194d63e6eaf15c089a22","permalink":"https://111qqz.github.io/2016/07/hdu-4283/","publishdate":"2016-07-26T07:38:44Z","readingtime":2,"relpermalink":"/2016/07/hdu-4283/","section":"post","summary":"hdu 4283题目链接 题意：有N个人按顺序排成一排上台表演，每个都有一个num[]值，若在他是第k个上场的人，则会有num[]*(k-1)的un","tags":["dp","区间dp"],"title":"hdu 4283 You Are the One (区间dp)","type":"post","url":"/2016/07/hdu-4283/","weight":0,"wordcount":522},{"author":null,"categories":["ACM"],"content":null,"date":1469465482,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469465482,"objectID":"3521de8eec6a961ff6b691d3b0efb6c0","permalink":"https://111qqz.github.io/2016/07/poj-3661-running-dp/","publishdate":"2016-07-25T16:51:22Z","readingtime":2,"relpermalink":"/2016/07/poj-3661-running-dp/","section":"post","summary":"poj 3661题目链接 题意：锻炼，一共n分钟，每分钟可以选择跑步或者休息，第i分钟跑步可以跑d[i]米，并增加一点疲劳度，如果选择休息，那么每分","tags":["dp","区间dp"],"title":"poj 3661 Running (区间dp)","type":"post","url":"/2016/07/poj-3661-running-dp/","weight":0,"wordcount":948},{"author":null,"categories":["ACM"],"content":null,"date":1469459380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469459380,"objectID":"97f6031f1f0a08b1f83d14e37fbfe2d8","permalink":"https://111qqz.github.io/2016/07/poj-1651/","publishdate":"2016-07-25T15:09:40Z","readingtime":2,"relpermalink":"/2016/07/poj-1651/","section":"post","summary":"poj 1651题目链接 题意：n个数，删掉a[i]的得分是a[i]*a[i-1]*a[i+1]，两个端点的不允许删。问删完n-2个数得到的最小分数","tags":["dp","区间dp"],"title":"poj 1651 Multiplication Puzzle (区间dp)","type":"post","url":"/2016/07/poj-1651/","weight":0,"wordcount":506},{"author":null,"categories":["ACM"],"content":null,"date":1469453174,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469453174,"objectID":"3b8b494eb92349c2ab3e474093e651af","permalink":"https://111qqz.github.io/2016/07/poj-3280/","publishdate":"2016-07-25T13:26:14Z","readingtime":2,"relpermalink":"/2016/07/poj-3280/","section":"post","summary":"poj 3280 题目链接 题意：一个字符串，给出添加一个字符或者删掉该字符的花费，问最小的话费使得字符串变成回文串。 思路：dp[i][j]表示区间[i,j","tags":["dp","区间dp"],"title":"poj 3280 Cheapest Palindrome (区间dp)","type":"post","url":"/2016/07/poj-3280/","weight":0,"wordcount":804},{"author":null,"categories":["ACM"],"content":null,"date":1469445867,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469445867,"objectID":"b1062f9f9075d6f22665113488b1b78e","permalink":"https://111qqz.github.io/2016/07/light-oj-1422-halloween-costumes-dp/","publishdate":"2016-07-25T11:24:27Z","readingtime":2,"relpermalink":"/2016/07/light-oj-1422-halloween-costumes-dp/","section":"post","summary":"light oj 1422 题目链接 题意： 按顺序去参加舞会。每个舞会对衣服都有要求。可以连续穿好多件衣服。需要时候就脱下来，但是一旦脱下来，这件衣服就报废了。问最","tags":["dp","区间dp"],"title":"light oj 1422 - Halloween Costumes (区间dp)","type":"post","url":"/2016/07/light-oj-1422-halloween-costumes-dp/","weight":0,"wordcount":590},{"author":null,"categories":["ACM"],"content":null,"date":1469435343,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469435343,"objectID":"6dab193e334ec66ba4ad6bada97ce277","permalink":"https://111qqz.github.io/2016/07/poj-1141/","publishdate":"2016-07-25T08:29:03Z","readingtime":2,"relpermalink":"/2016/07/poj-1141/","section":"post","summary":"poj 1141题目链接 题意：给出一个括号序列，要求添加最少的括号，使得这个序列变成合法的括号匹配，输出最后的序列。 思路：区间dp。。。有了那么一","tags":["区间dp","括号匹配"],"title":"poj 1141 Brackets Sequence (区间dp,括号匹配，记录路径)","type":"post","url":"/2016/07/poj-1141/","weight":0,"wordcount":768},{"author":null,"categories":["ACM"],"content":null,"date":1469432783,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469432783,"objectID":"3156a6ea46f49527dbbefa7fce58e21a","permalink":"https://111qqz.github.io/2016/07/poj2955/","publishdate":"2016-07-25T07:46:23Z","readingtime":2,"relpermalink":"/2016/07/poj2955/","section":"post","summary":"poj2955题目链接 题意：给出若干括号，问最大匹配数是多少。 思路：没有思路。我知道这是dp。。。然后其他就什么都不知道了。。。转移方程？ 完","tags":["dp","区间dp"],"title":"poj 2955 Brackets（区间dp....括号匹配。。。人生第一道区间dp）","type":"post","url":"/2016/07/poj2955/","weight":0,"wordcount":640},{"author":null,"categories":["ACM"],"content":null,"date":1469263839,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469263839,"objectID":"caaf683c105b5bad834911d556032630","permalink":"https://111qqz.github.io/2016/07/hdu-3980/","publishdate":"2016-07-23T08:50:39Z","readingtime":2,"relpermalink":"/2016/07/hdu-3980/","section":"post","summary":"hdu 3980 题目链接 题意：一个有n个石子的环形串，初始没有被涂颜色，两个人轮流，涂连续m个没有被涂色的石子，不能操作的人为负。问先手是否有必赢策略。","tags":["sg函数","博弈论"],"title":"hdu 3980 Paint Chain (sg函数，环形串取石子)","type":"post","url":"/2016/07/hdu-3980/","weight":0,"wordcount":517},{"author":null,"categories":["ACM"],"content":null,"date":1469260080,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469260080,"objectID":"40b20bfd22920776db66551a66bfea0d","permalink":"https://111qqz.github.io/2016/07/hdu-2999/","publishdate":"2016-07-23T07:48:00Z","readingtime":2,"relpermalink":"/2016/07/hdu-2999/","section":"post","summary":"hdu2999题目链接 题意：有一串石子，给定一个集合S，每次只能拿连续x个石子，石子必须是在集合S中的数，问先手是否有必赢策略。需要注意石子","tags":["sg函数","博弈论"],"title":"hdu 2999 Stone Game, Why are you always there? (sg函数，线性串取石子)","type":"post","url":"/2016/07/hdu-2999/","weight":0,"wordcount":633},{"author":null,"categories":["ACM"],"content":null,"date":1469257030,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469257030,"objectID":"ce5ab347169bfcb3b9637fa480aa1969","permalink":"https://111qqz.github.io/2016/07/hdu-2873/","publishdate":"2016-07-23T06:57:10Z","readingtime":2,"relpermalink":"/2016/07/hdu-2873/","section":"post","summary":"hdu 2873题目链接 题意：n*m个格子，有若干炸弹。对于在第一行或者第一列的炸弹，爆炸后会到那一行或者那一列的更前面（总的来说就是更靠近左上角","tags":["sg函数","博弈论"],"title":"hdu 2873 Bomb Game（Sg函数）","type":"post","url":"/2016/07/hdu-2873/","weight":0,"wordcount":755},{"author":null,"categories":null,"content":null,"date":1469220477,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469220477,"objectID":"","permalink":"https://111qqz.github.io/tags/anti-sg/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/anti-sg/","section":"tags","summary":"","tags":null,"title":"anti-sg","type":"tags","url":"/tags/anti-sg/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469220477,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469220477,"objectID":"8fae3bb693d5132ceece7430c7cbc0d3","permalink":"https://111qqz.github.io/2016/07/hdu-2509/","publishdate":"2016-07-22T20:47:57Z","readingtime":1,"relpermalink":"/2016/07/hdu-2509/","section":"post","summary":"hdu2509题目链接 题意：？？？ 思路：同1907 /* *********************************************** Author :111qqz Created Time :2016年07月23日 星期六 04时41分38秒 File Name :code/hdu/2509.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt;","tags":["anti-sg","sg函数","sj定理","博弈论"],"title":"hdu 2509 Be the Winner (anti-sg,sg函数，sj定理)","type":"post","url":"/2016/07/hdu-2509/","weight":0,"wordcount":191},{"author":null,"categories":null,"content":null,"date":1469220477,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469220477,"objectID":"","permalink":"https://111qqz.github.io/tags/sj%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sj%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"sj定理","type":"tags","url":"/tags/sj%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469219857,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469219857,"objectID":"b2406a7a4380be87306aec3fd8be6d5b","permalink":"https://111qqz.github.io/2016/07/hdu-1907/","publishdate":"2016-07-22T20:37:37Z","readingtime":1,"relpermalink":"/2016/07/hdu-1907/","section":"post","summary":"hdu1907题目链接 题意：n堆石子，每次选一堆，最少拿一个，最多拿光那一堆，拿走最有一个的人输。 问是否有必胜策略。 思路：anti-nim问","tags":["anti-sg","sg函数","sj定理","博弈论"],"title":"BZOJ 1022 ||hdu 1907 John (sg函数，sj定理，anti-sg)","type":"post","url":"/2016/07/hdu-1907/","weight":0,"wordcount":409},{"author":null,"categories":["ACM"],"content":null,"date":1469196149,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469196149,"objectID":"1e0e1d66a14911b9815f840f1545f728","permalink":"https://111qqz.github.io/2016/07/hdu-1730/","publishdate":"2016-07-22T14:02:29Z","readingtime":2,"relpermalink":"/2016/07/hdu-1730/","section":"post","summary":"hdu 1730 题意：n行格子，每行m个，每行有一黑一白两个棋子，给定初始位置，先手执黑棋，后手执白棋，每次可以在同一行内向左移动，不能超过边界，且不能","tags":["sg函数","博弈论"],"title":"hdu 1730 Northcott Game (二维sg函数)","type":"post","url":"/2016/07/hdu-1730/","weight":0,"wordcount":618},{"author":null,"categories":["ACM"],"content":null,"date":1469191162,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469191162,"objectID":"935c4d2e8e9003daccc85e0d270ccd8e","permalink":"https://111qqz.github.io/2016/07/hdu-1404/","publishdate":"2016-07-22T12:39:22Z","readingtime":2,"relpermalink":"/2016/07/hdu-1404/","section":"post","summary":"hdu 1404题目链接 题意：一个数字串，每次可以选择一位减少任意大小到一个非负数，或者清除一个0以及该位右边的所有数字。问是否有必胜策略。。 思路","tags":["博弈论"],"title":"hdu 1404 Digital Deletions (博弈论，根据定义)","type":"post","url":"/2016/07/hdu-1404/","weight":0,"wordcount":545},{"author":null,"categories":["ACM"],"content":null,"date":1469187450,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469187450,"objectID":"469f34759ae6cef2f90df817e71daeb1","permalink":"https://111qqz.github.io/2016/07/","publishdate":"2016-07-22T11:37:30Z","readingtime":1,"relpermalink":"/2016/07/","section":"post","summary":"终于忍不了因为没办法科学上网而不能做什么事的感觉了。。。 买了班瓦工 20刀/年。。。搭了ss。。然后全平台（ios/androd/fedora","tags":null,"title":"科学上网小记","type":"post","url":"/2016/07//","weight":0,"wordcount":123},{"author":null,"categories":["ACM"],"content":null,"date":1469029535,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469029535,"objectID":"a8d1d0abace92390a366aca7c062cd68","permalink":"https://111qqz.github.io/2016/07/hdu-1536/","publishdate":"2016-07-20T15:45:35Z","readingtime":1,"relpermalink":"/2016/07/hdu-1536/","section":"post","summary":"hdu 1536题目链接 题意：还是若干堆石子，但是每次取的个数只能是集合S中有的数。。问是否必赢。。。 思路：sg函数。。。1A /* *********************************************** Author :111qqz Created Time :201","tags":["sg函数","博弈论"],"title":"hdu 1536 S-Nim (sg函数)","type":"post","url":"/2016/07/hdu-1536/","weight":0,"wordcount":296},{"author":null,"categories":["ACM"],"content":null,"date":1469021279,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469021279,"objectID":"2b01344a51ef1a75232dd296a8e34162","permalink":"https://111qqz.github.io/2016/07/hdu-1517/","publishdate":"2016-07-20T13:27:59Z","readingtime":2,"relpermalink":"/2016/07/hdu-1517/","section":"post","summary":"hdu 1517 题目链接 题意：初始为1，每次可以乘2..9中的一个数，最先达到或者超过n的人胜利。问谁有必赢策略。。 思路：一开始想用sg函数。。然而n太","tags":["博弈论"],"title":"hdu 1517 A Multiplication Game (博弈论，将点的局势对应到段)","type":"post","url":"/2016/07/hdu-1517/","weight":0,"wordcount":647},{"author":null,"categories":["ACM"],"content":null,"date":1469017326,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469017326,"objectID":"7523eb4a8625e289b7720717ef74ec76","permalink":"https://111qqz.github.io/2016/07/hdu-1848/","publishdate":"2016-07-20T12:22:06Z","readingtime":1,"relpermalink":"/2016/07/hdu-1848/","section":"post","summary":"hdu 1848题目链接 题意：三堆石头，每次任选一堆取，取的石子数目必须是斐波那契数列中的数(1,2,3,5,8\u0026hellip;.)问先手是否有必","tags":["sg函数","博弈论"],"title":"hdu 1848 Fibonacci again and again (sg函数)","type":"post","url":"/2016/07/hdu-1848/","weight":0,"wordcount":399},{"author":null,"categories":["ACM"],"content":null,"date":1469016225,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469016225,"objectID":"b3e838fadffed3dd617152582166d447","permalink":"https://111qqz.github.io/2016/07/hdu-1850/","publishdate":"2016-07-20T12:03:45Z","readingtime":1,"relpermalink":"/2016/07/hdu-1850/","section":"post","summary":"hdu1850题目链接 题意：n堆石子。。每堆可以取任意多个。。。先取完的赢。。问先手能否赢。。能赢的话第一步有几种取法。。 思路：sg函数。。","tags":["nim游戏","sg函数","博弈论"],"title":"hdu 1850 Being a Good Boy in Spring Festival (nim游戏问必胜方案数，sg函数)","type":"post","url":"/2016/07/hdu-1850/","weight":0,"wordcount":434},{"author":null,"categories":null,"content":null,"date":1469016225,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469016225,"objectID":"","permalink":"https://111qqz.github.io/tags/nim%E6%B8%B8%E6%88%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/nim%E6%B8%B8%E6%88%8F/","section":"tags","summary":"","tags":null,"title":"nim游戏","type":"tags","url":"/tags/nim%E6%B8%B8%E6%88%8F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469012383,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469012383,"objectID":"10c15c2f643520c330b9c7c6ad79fc12","permalink":"https://111qqz.github.io/2016/07/hdu-1847/","publishdate":"2016-07-20T10:59:43Z","readingtime":2,"relpermalink":"/2016/07/hdu-1847/","section":"post","summary":"hdu1847题目链接 题意：n个石子，每次只能取2的幂次个。。。问先手是否有必赢策略。。。 思路：画n点p点。。。发现n为３的倍数的时候先手必","tags":["sg函数","博弈论","巴什博奕"],"title":"hdu 1847 Good Luck in CET-4 Everybody! (巴什博奕,找规律｜｜sg函数)","type":"post","url":"/2016/07/hdu-1847/","weight":0,"wordcount":561},{"author":null,"categories":null,"content":null,"date":1469012383,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1469012383,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%A5%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%A5%95/","section":"tags","summary":"","tags":null,"title":"巴什博奕","type":"tags","url":"/tags/%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%A5%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1469002010,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469002010,"objectID":"f57725d99a1a3714a7f792b5d216c12b","permalink":"https://111qqz.github.io/2016/07/nim/","publishdate":"2016-07-20T08:06:50Z","readingtime":1,"relpermalink":"/2016/07/nim/","section":"post","summary":"参考资料 （后面的证明写错了，差评，不要看，看图就好了） 1.","tags":["nim游戏","博弈论"],"title":"nim游戏以及证明过程","type":"post","url":"/2016/07/nim/","weight":0,"wordcount":28},{"author":null,"categories":["ACM"],"content":null,"date":1469000125,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1469000125,"objectID":"cc52c31e6528c62663649eaa5dd878af","permalink":"https://111qqz.github.io/2016/07/hdu-2147/","publishdate":"2016-07-20T07:35:25Z","readingtime":1,"relpermalink":"/2016/07/hdu-2147/","section":"post","summary":"hdu 2147 题目链接 题意：一个n*m的方格，有一个棋子初始在右上角（１，m）,每次可以将棋子向下或者向左或者向左下移动**一个格子，**不能移出边界","tags":["博弈论","巴什博奕"],"title":"hdu 2147 kiki's game (巴什博奕)","type":"post","url":"/2016/07/hdu-2147/","weight":0,"wordcount":320},{"author":null,"categories":["ACM"],"content":null,"date":1468929309,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468929309,"objectID":"8d0fc6b70c4c1eaef7544224146e3c13","permalink":"https://111qqz.github.io/2016/07/hdu-1846-brave-game/","publishdate":"2016-07-19T11:55:09Z","readingtime":2,"relpermalink":"/2016/07/hdu-1846-brave-game/","section":"post","summary":"hdu 1846 题目链接 题意：有n个石子，每次最多取m个，最少取１个，如果没有石子可取就输了。给出n,m，两个人都很聪明，问先手和后手谁赢。。 思路： 首先","tags":["博弈论","巴什博奕"],"title":"hdu 1846 Brave Game　（巴什博奕）","type":"post","url":"/2016/07/hdu-1846-brave-game/","weight":0,"wordcount":606},{"author":null,"categories":["ACM"],"content":null,"date":1468844956,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468844956,"objectID":"89bd28f6ab16a95f08ac1bf35d127168","permalink":"https://111qqz.github.io/2016/07/cf689c/","publishdate":"2016-07-18T12:29:16Z","readingtime":1,"relpermalink":"/2016/07/cf689c/","section":"post","summary":"cf689C 题意：给出一个m。。问恰好使得不超过某个n的a*b^3（a,b是正整数）的方案数为m的n是多少。。。 思路：暴力+二分。。。 /* *********************************************** Author :111qqz Created Time :2","tags":["binary search","brute force"],"title":"whust 2016 warm up G ||codeforces 689C. Mike and Chocolate Thieves","type":"post","url":"/2016/07/cf689c/","weight":0,"wordcount":254},{"author":null,"categories":null,"content":null,"date":1468844408,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468844408,"objectID":"","permalink":"https://111qqz.github.io/tags/spfa/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/spfa/","section":"tags","summary":"","tags":null,"title":"spfa","type":"tags","url":"/tags/spfa/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468844408,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468844408,"objectID":"bcd49559933dd066051d2c20cd4834af","permalink":"https://111qqz.github.io/2016/07/cf689b/","publishdate":"2016-07-18T12:20:08Z","readingtime":1,"relpermalink":"/2016/07/cf689b/","section":"post","summary":"cf689B题目链接 题意：n点。。点i到点j的代价是|i-j|..给出n条近路。。。a[i]表示点i到a[i]的代价为1（注意近路不一定就近","tags":["spfa","最短路"],"title":"whust 2016 warm up E ||codeforces 689 B. Mike and Shortcuts (spfa)","type":"post","url":"/2016/07/cf689b/","weight":0,"wordcount":490},{"author":null,"categories":null,"content":null,"date":1468844408,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468844408,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/","section":"tags","summary":"","tags":null,"title":"最短路","type":"tags","url":"/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468843964,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468843964,"objectID":"892d76bb2340a15b97905107044d7b8b","permalink":"https://111qqz.github.io/2016/07/cf689a/","publishdate":"2016-07-18T12:12:44Z","readingtime":1,"relpermalink":"/2016/07/cf689a/","section":"post","summary":"cf689A 思路：一个老式的电话键盘。。。。给出一个拨号的移动路径。。。问这个路径是否唯一。 思路：如果唯一就说明。。。不能平移。。。否则不唯一。。 平移","tags":["模拟"],"title":"whust 2016 warm up E||codeforces 689 A. Mike and Cellphone (模拟)","type":"post","url":"/2016/07/cf689a/","weight":0,"wordcount":424},{"author":null,"categories":["ACM"],"content":null,"date":1468843560,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468843560,"objectID":"60df67b7e6b0054bca4f13fbc9a033d5","permalink":"https://111qqz.github.io/2016/07/cf682c/","publishdate":"2016-07-18T12:06:00Z","readingtime":1,"relpermalink":"/2016/07/cf682c/","section":"post","summary":"cf682C题目链接 题意：给一棵树。。有点权和边权。。。如果一个点v的子树中存在某点u,满足dis(u,v)\u0026gt;a[u]，那么点v就非常","tags":["最大连续和","树形dp"],"title":"whust 2016 warm up C ||codeforces 682 C. Alyona and the Tree (最大连续和,树形dp)","type":"post","url":"/2016/07/cf682c/","weight":0,"wordcount":459},{"author":null,"categories":null,"content":null,"date":1468843560,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468843560,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C/","section":"tags","summary":"","tags":null,"title":"最大连续和","type":"tags","url":"/tags/%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E5%92%8C/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468842995,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468842995,"objectID":"30f01709e2995d58a8ac4eaacbb79dcb","permalink":"https://111qqz.github.io/2016/07/cf682b/","publishdate":"2016-07-18T11:56:35Z","readingtime":1,"relpermalink":"/2016/07/cf682b/","section":"post","summary":"cf682B题目链接 题意：给出n个数。。每个数可以任意减小到一个正整数。。。问进行恰当的操作后。。。最小的没有出现的正整数的最大可能取值。。","tags":["离散化"],"title":"whust 2016 warm up ||codeforces 682 B. Alyona and Mex (离散化)","type":"post","url":"/2016/07/cf682b/","weight":0,"wordcount":285},{"author":null,"categories":["ACM"],"content":null,"date":1468842577,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468842577,"objectID":"b7643aebe1d4a740c01186afc1e05b46","permalink":"https://111qqz.github.io/2016/07/cf682a/","publishdate":"2016-07-18T11:49:37Z","readingtime":1,"relpermalink":"/2016/07/cf682a/","section":"post","summary":"cf682A题目链接 题意：两个数组，分别为1..n和1..m。。。从两个数组中各取一个，问和能被5整除的方案数。。。 思路：傻逼题。。。统计%","tags":["math","计数问题"],"title":"whust2016 warm up A ||codeforces 682 A. Alyona and Numbers (计数问题，水)","type":"post","url":"/2016/07/cf682a/","weight":0,"wordcount":263},{"author":null,"categories":["ACM"],"content":null,"date":1468772463,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468772463,"objectID":"e0c43f2e61acc096a6ca424d4431daeb","permalink":"https://111qqz.github.io/2016/07/hdu-4123/","publishdate":"2016-07-17T16:21:03Z","readingtime":2,"relpermalink":"/2016/07/hdu-4123/","section":"post","summary":"hdu 4123 题目链接 题意：一棵树，定义d[i]为点i到树上某点的最大距离。。。给出若干查询，每个查询一个x,问最多能有多少点满足这些点中，最大的d与","tags":["rmq","尺取法","树的直径"],"title":"hdu 4123 Bob’s Race (树的直径+尺取+rmq)(珍爱生命，远离log)","type":"post","url":"/2016/07/hdu-4123/","weight":0,"wordcount":813},{"author":null,"categories":["ACM"],"content":null,"date":1468755189,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468755189,"objectID":"7c4278c7951a4f098eedfa61de87b1d8","permalink":"https://111qqz.github.io/2016/07/poj1849/","publishdate":"2016-07-17T11:33:09Z","readingtime":2,"relpermalink":"/2016/07/poj1849/","section":"post","summary":"题目链接 题意:一棵树。。然后初始两个推雪机在点s,问如何选择路径使得处理完所有边上的积雪所耗费的汽油最少（走过一条有雪的边和一条没雪的边耗费","tags":["树的直径"],"title":"POJ 1849 Two (树的直径)","type":"post","url":"/2016/07/poj1849/","weight":0,"wordcount":683},{"author":null,"categories":null,"content":null,"date":1468517124,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468517124,"objectID":"","permalink":"https://111qqz.github.io/tags/dijkstra/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dijkstra/","section":"tags","summary":"","tags":null,"title":"dijkstra","type":"tags","url":"/tags/dijkstra/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468517124,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468517124,"objectID":"253e6e76221b6c3221370151c99ce07b","permalink":"https://111qqz.github.io/2016/07/hdu-3873/","publishdate":"2016-07-14T17:25:24Z","readingtime":2,"relpermalink":"/2016/07/hdu-3873/","section":"post","summary":"hdu3873题目链接 题意：n个点的图。。。每个点可能被若干其他点保护。。。被保护的意思是。。。如果想访问某个点。。那么必须先访问保护该点的","tags":["dijkstra","最短路"],"title":"hdu 3873 Invade the Mars (有限制条件的最短路。。)","type":"post","url":"/2016/07/hdu-3873/","weight":0,"wordcount":675},{"author":null,"categories":null,"content":null,"date":1468487101,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468487101,"objectID":"","permalink":"https://111qqz.github.io/tags/mst/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/mst/","section":"tags","summary":"","tags":null,"title":"mst","type":"tags","url":"/tags/mst/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468487101,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468487101,"objectID":"4136beb7374fa62a4b2a1e65acdc3cfd","permalink":"https://111qqz.github.io/2016/07/poj-2031/","publishdate":"2016-07-14T09:05:01Z","readingtime":2,"relpermalink":"/2016/07/poj-2031/","section":"post","summary":"poj 2031 题意：三维空间中n个球要相连。。。通路的代价是距离。。。如果球相交（切）或者包含那么不用建通路就能联系。。。问联系所有球的最小代价。。。","tags":["mst"],"title":"poj 2031 Building a Space Station (最小生成树)","type":"post","url":"/2016/07/poj-2031/","weight":0,"wordcount":538},{"author":null,"categories":["ACM"],"content":null,"date":1468431656,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468431656,"objectID":"7f843974c20bd8e2830df13e36f58937","permalink":"https://111qqz.github.io/2016/07/poj-1789/","publishdate":"2016-07-13T17:40:56Z","readingtime":2,"relpermalink":"/2016/07/poj-1789/","section":"post","summary":"poj1789题目链接 题意：其实题目不难理解。。。直接按照定义去搞就行了。。。 思路：由于距离在分母上。。所以要quality最大。。。就是要","tags":["mst","prim"],"title":"poj 1789 Truck History (mst,prim)","type":"post","url":"/2016/07/poj-1789/","weight":0,"wordcount":767},{"author":null,"categories":null,"content":null,"date":1468431656,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468431656,"objectID":"","permalink":"https://111qqz.github.io/tags/prim/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/prim/","section":"tags","summary":"","tags":null,"title":"prim","type":"tags","url":"/tags/prim/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468425693,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468425693,"objectID":"a42952e4b45909031f509d28ff7e2a9f","permalink":"https://111qqz.github.io/2016/07/poj-2349/","publishdate":"2016-07-13T16:01:33Z","readingtime":2,"relpermalink":"/2016/07/poj-2349/","section":"post","summary":"Poj2349题目链接 题意：给出n个点坐标。。。然后可以建s个卫星基站。。。有卫星基站的地方之间可以互相免费通信。。现在要建一些无线电通讯线","tags":["mst"],"title":"poj 2349 Arctic Network (mst)","type":"post","url":"/2016/07/poj-2349/","weight":0,"wordcount":536},{"author":null,"categories":["ACM"],"content":null,"date":1468416509,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468416509,"objectID":"8de8ed16c3e7a79009ed25a86571c7c6","permalink":"https://111qqz.github.io/2016/07/poj-1751-highways/","publishdate":"2016-07-13T13:28:29Z","readingtime":2,"relpermalink":"/2016/07/poj-1751-highways/","section":"post","summary":"poj1751题目链接 题意：一开始有一些边，然后添加一些边，使得代价之和最小。 思路：先把给定的边merge掉。。然后计算其余可以添加的边。。","tags":["mst"],"title":"poj 1751 Highways (最小生成树，空间卡常数有毒啊)","type":"post","url":"/2016/07/poj-1751-highways/","weight":0,"wordcount":512},{"author":null,"categories":["ACM"],"content":null,"date":1468393227,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468393227,"objectID":"7d1fed384701fc7c098ba3a0d871f2d0","permalink":"https://111qqz.github.io/2016/07/hdu-4607/","publishdate":"2016-07-13T07:00:27Z","readingtime":2,"relpermalink":"/2016/07/hdu-4607/","section":"post","summary":"hdu4607题目链接 题意：给出一棵树。。。边权都为1. m个查询。。每个查询给一个k,表示只访问k个点。。。问每次的最小路径和是多少。。。 思","tags":["math","树的直径"],"title":"hdu 4607 Park Visit (树的直径，推公式)","type":"post","url":"/2016/07/hdu-4607/","weight":0,"wordcount":660},{"author":null,"categories":["ACM"],"content":null,"date":1468390901,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468390901,"objectID":"7ee3d836dca5c961d923a7e09c76e572","permalink":"https://111qqz.github.io/2016/07/poj-3310/","publishdate":"2016-07-13T06:21:41Z","readingtime":3,"relpermalink":"/2016/07/poj-3310/","section":"post","summary":"poj3310 题目链接 题意：给出一个无向图。。。问是否满足。。联通，并且无环，并且能找到一条路径，图中所有的顶点要么在这条路径上，要么与这条路径上的顶点","tags":["dfs","并查集","无向图的环","树的直径","连通性"],"title":"poj 3310 Caterpillar (树的直径+并查集判环+dfs判断连通性)","type":"post","url":"/2016/07/poj-3310/","weight":0,"wordcount":1021},{"author":null,"categories":null,"content":null,"date":1468390901,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468390901,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%BF%9E%E9%80%9A%E6%80%A7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%BF%9E%E9%80%9A%E6%80%A7/","section":"tags","summary":"","tags":null,"title":"连通性","type":"tags","url":"/tags/%E8%BF%9E%E9%80%9A%E6%80%A7/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468317197,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468317197,"objectID":"b1a53196c633e75e7ba524083d418941","permalink":"https://111qqz.github.io/2016/07/poj1679/","publishdate":"2016-07-12T09:53:17Z","readingtime":1,"relpermalink":"/2016/07/poj1679/","section":"post","summary":"poj1679 题意：问最小生成树是否唯一。。 思路：求一下次小生成树。。。如果无解，或者次小生成树的权值之和和最小生成树的权值之和不同，那么唯一，否则不唯","tags":["mst","次小生成树"],"title":"poj 1679 The Unique MST (判断mst的唯一性，次小生成树)","type":"post","url":"/2016/07/poj1679/","weight":0,"wordcount":463},{"author":null,"categories":null,"content":null,"date":1468317197,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1468317197,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"次小生成树","type":"tags","url":"/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1468310395,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468310395,"objectID":"f81e516c292386aedce3c5951e17c43b","permalink":"https://111qqz.github.io/2016/07/hdu4514/","publishdate":"2016-07-12T07:59:55Z","readingtime":2,"relpermalink":"/2016/07/hdu4514/","section":"post","summary":"hdu4514 题意：给出一个无向图。。问是否有环。。。有的话输出YES。。如果没有环的话。。输出最长路径。。 思路：无向图判环并查集就好。。。关于最长路径","tags":["并查集","无向图的环","树的直径"],"title":"hdu 4514 湫湫系列故事——设计风景线 (无向图并查集判环+非联通图的最长路径)","type":"post","url":"/2016/07/hdu4514/","weight":0,"wordcount":862},{"author":null,"categories":["ACM"],"content":null,"date":1468303359,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468303359,"objectID":"4f0dc51423ce0b586d68ffb53e7afdff","permalink":"https://111qqz.github.io/2016/07/hdu2196/","publishdate":"2016-07-12T06:02:39Z","readingtime":3,"relpermalink":"/2016/07/hdu2196/","section":"post","summary":"hdu2196 题意：给出一棵树。。。求距离每个点的最远距离是多少。。。 思路：最远距离什么的。。能想到树的直径。。。但是有什么关系呢？ 我们在求树的直径的时","tags":["树形dp","树的直径"],"title":"hdu 2196  Computer (树的直径||树形dp)","type":"post","url":"/2016/07/hdu2196/","weight":0,"wordcount":1456},{"author":null,"categories":["ACM"],"content":null,"date":1468303038,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468303038,"objectID":"98538a8f5accb74f626c10582ea4067e","permalink":"https://111qqz.github.io/2016/07/poj2631/","publishdate":"2016-07-12T05:57:18Z","readingtime":1,"relpermalink":"/2016/07/poj2631/","section":"post","summary":"poj2631 题意：一棵树中求两个点的最远距离。。。 思路：就是求树的直径。。。裸体。。。。1A /* *********************************************** Author :111qqz Created Time :2016年07月12日 星期二 13时03分39","tags":["树的直径"],"title":"poj 2631 Roads in the North (树的直径)","type":"post","url":"/2016/07/poj2631/","weight":0,"wordcount":313},{"author":null,"categories":["ACM"],"content":null,"date":1468296420,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468296420,"objectID":"bff8ac6070c05bfb9be9ed725ceee4e4","permalink":"https://111qqz.github.io/2016/07/poj1985/","publishdate":"2016-07-12T04:07:00Z","readingtime":1,"relpermalink":"/2016/07/poj1985/","section":"post","summary":"poj1985 题意：求树上两点的最长距离。。。也就是传说中的树的直径。。。 参考博客 实际写的时候，第一次bfs最后一个出队的点就是直径的一个端点。。。 好像","tags":["树的直径"],"title":"poj 1985 Cow Marathon (树的直径模板题)","type":"post","url":"/2016/07/poj1985/","weight":0,"wordcount":425},{"author":null,"categories":["ACM"],"content":null,"date":1468266876,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468266876,"objectID":"02707bfcf2f63b33252eeb3e5f395ac3","permalink":"https://111qqz.github.io/2016/07/2016/","publishdate":"2016-07-11T19:54:36Z","readingtime":1,"relpermalink":"/2016/07/2016/","section":"post","summary":"* \u0026lt;del\u0026gt;树的直径，次小生成树（）\u0026lt;/del\u0026gt; * \u0026lt;del\u0026gt;最小生成树（拒绝划水，推一波难题）\u0026lt;/","tags":null,"title":"2016暑假计划","type":"post","url":"/2016/07/2016/","weight":0,"wordcount":460},{"author":null,"categories":["ACM"],"content":null,"date":1468266637,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468266637,"objectID":"309b416a8bd16a04ea2052df50f193c0","permalink":"https://111qqz.github.io/2016/07/ural1416/","publishdate":"2016-07-11T19:50:37Z","readingtime":2,"relpermalink":"/2016/07/ural1416/","section":"post","summary":"URAL1416 题意：次小生成树模板题 思路：用Kruskal求最小生成树，标记用过的边。求次小生成树时，依次枚举用过的边，将其去除后再求最小生成树，得出所","tags":["mst","次小生成树"],"title":"ural 1416. Confidential (次小生成树模板题)","type":"post","url":"/2016/07/ural1416/","weight":0,"wordcount":638},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1468174540,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1468174540,"objectID":"becd46aabad611cd1b94b4fc593dd563","permalink":"https://111qqz.github.io/2016/07/the-way-to-escape/","publishdate":"2016-07-10T18:15:40Z","readingtime":1,"relpermalink":"/2016/07/the-way-to-escape/","section":"post","summary":"没有退路。","tags":null,"title":"退路？","type":"post","url":"/2016/07/the-way-to-escape/","weight":0,"wordcount":5},{"author":null,"categories":["ACM"],"content":null,"date":1467811110,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1467811110,"objectID":"073783159be928fbc01f59d6424dc829","permalink":"https://111qqz.github.io/2016/07/bzoj-1681-usaco2005-marchecking-an-alibi-spfa/","publishdate":"2016-07-06T13:18:30Z","readingtime":2,"relpermalink":"/2016/07/bzoj-1681-usaco2005-marchecking-an-alibi-spfa/","section":"post","summary":"1681: [Usaco2005 Mar]Checking an Alibi 不在场的证明 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 250 Solved: 178 [Submit][Status][Discuss] Description A crime has been comitted: a load of grain has been taken from the barn by one of FJ\u0026rsquo;s cows. FJ is trying to determine which of his C (1 \u0026lt;= C \u0026lt;= 100) cows is the culprit. Fortunately, a passing satellite took an image","tags":["spfa","最短路"],"title":"BZOJ 1681: [Usaco2005 Mar]Checking an Alibi 不在场的证明 (spfa)","type":"post","url":"/2016/07/bzoj-1681-usaco2005-marchecking-an-alibi--spfa/","weight":0,"wordcount":993},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1467662635,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1467662635,"objectID":"804f40662e845b5da7389f749cf70cd3","permalink":"https://111qqz.github.io/2016/07/something-about-school-engineering-training/","publishdate":"2016-07-04T20:03:55Z","readingtime":3,"relpermalink":"/2016/07/something-about-school-engineering-training/","section":"post","summary":"哈哈哈哈哈哈哈哈哈 即将身败名裂。。。。 [audio mp3=\u0026quot;https://111qqz.com/wordpress/wp-content/","tags":null,"title":"实训相关\u0026\u0026近况","type":"post","url":"/2016/07/something-about-school-engineering-training/","weight":0,"wordcount":1352},{"author":null,"categories":["其他"],"content":null,"date":1467445467,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1467445467,"objectID":"898a14b9d463f3c229ceafd1c1a3653f","permalink":"https://111qqz.github.io/2016/07/","publishdate":"2016-07-02T07:44:27Z","readingtime":1,"relpermalink":"/2016/07/","section":"post","summary":"列个技能表。。。。。 java\u0026hellip;. mysql\u0026hellip; tomcat apache jsp\u0026hellip;.. idea\u0026hellip;? tomcat是apache的进化。。。。？？？ hibernate\u0026hellip;持久层的设计模式。。？？ http://docs.jboss.org/hibernate/orm/","tags":null,"title":"实训相关。。。。","type":"post","url":"/2016/07//","weight":0,"wordcount":69},{"author":null,"categories":["ACM"],"content":null,"date":1466749874,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1466749874,"objectID":"00e7624c3e2cd8136af7e6a24e23e6a6","permalink":"https://111qqz.github.io/2016/06/poj2342/","publishdate":"2016-06-24T06:31:14Z","readingtime":2,"relpermalink":"/2016/06/poj2342/","section":"post","summary":"题目链接 题意：n个人的上下级关系形成一棵树..每一个人有一个val（可正可负），要选若干个人参加一个party,要求是一个人和他的直接上级不","tags":["树形dp"],"title":"poj 2342  Anniversary party (基础树形dp)","type":"post","url":"/2016/06/poj2342/","weight":0,"wordcount":578},{"author":null,"categories":null,"content":null,"date":1466279014,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1466279014,"objectID":"","permalink":"https://111qqz.github.io/tags/geekos/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/geekos/","section":"tags","summary":"","tags":null,"title":"geekOS","type":"tags","url":"/tags/geekos/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1466279014,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1466279014,"objectID":"1d4021a9660738b2c32bcdb98cb6a465","permalink":"https://111qqz.github.io/2016/06/geekos-project-1-elf/","publishdate":"2016-06-18T19:43:34Z","readingtime":3,"relpermalink":"/2016/06/geekos-project-1-elf/","section":"post","summary":"一、目的 熟悉ELF文件格式，了解GeekOS系统如何将ELF格式的可执行程序装入到内存，建立内核进程并运行的实现技术。 二、流程 1、修改/ge","tags":["geekOS","linux"],"title":"geekos project 1 （ELF文件相关）","type":"post","url":"/2016/06/geekos-project-1-elf/","weight":0,"wordcount":1128},{"author":null,"categories":["其他"],"content":null,"date":1466243286,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1466243286,"objectID":"cec3a1b6da1b55e8c35d605179af23cb","permalink":"https://111qqz.github.io/2016/06/geek-os-project-0-/","publishdate":"2016-06-18T09:48:06Z","readingtime":2,"relpermalink":"/2016/06/geek-os-project-0-/","section":"post","summary":"现在我们环境已经搭好了，参考 geekos实验环境的搭建 在main.c中新加个函数，命名为projecto,函数的代码如下： /* * GeekOS C code entry point * Copyright","tags":["geekOS"],"title":"geek OS project 0 （下）","type":"post","url":"/2016/06/geek-os-project-0-/","weight":0,"wordcount":612},{"author":null,"categories":["其他"],"content":null,"date":1466238949,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1466238949,"objectID":"55d038de7e52522d3e40ee1018d0d590","permalink":"https://111qqz.github.io/2016/06/geekok-project0/","publishdate":"2016-06-18T08:35:49Z","readingtime":4,"relpermalink":"/2016/06/geekok-project0/","section":"post","summary":"apt-get install build-essential apt-get install bochs bochs-x nasm 此处下载的bochs应该是比较新的\u0026hellip;如果之后遇到 这个错误，建议安装比较老的nasm版本，比如2.08.02链接","tags":["geekOS"],"title":"geekok project0（上）（实验环境的搭建）","type":"post","url":"/2016/06/geekok-project0/","weight":0,"wordcount":1990},{"author":null,"categories":["其他"],"content":null,"date":1466136577,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1466136577,"objectID":"524c397c2aff234696bc1fc8563f09dc","permalink":"https://111qqz.github.io/2016/06/osgeek-os-/","publishdate":"2016-06-17T04:09:37Z","readingtime":2,"relpermalink":"/2016/06/osgeek-os-/","section":"post","summary":"参考了这篇博客 流程部分不再具体描述，可以参考上面的博客。 只详细给出我遇到的问题。 我的pc环境是：Linux 111qqz-ThinkPad-X200 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux linux mint 17.2","tags":["geekOS"],"title":"OS课设之geek os 非最终版","type":"post","url":"/2016/06/osgeek-os-/","weight":0,"wordcount":679},{"author":null,"categories":["ACM"],"content":null,"date":1465811312,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465811312,"objectID":"37e8b70ab32091c15386a70a2c5f77bf","permalink":"https://111qqz.github.io/2016/06/","publishdate":"2016-06-13T09:48:32Z","readingtime":5,"relpermalink":"/2016/06/","section":"post","summary":"noip初赛加强版既视感\u0026hellip; 自己手动整理的 *根据指令中所含操作数地址的数量可分为（4种）： 三地址指令 双地址指令 单地址指令 零地址指","tags":["计组"],"title":"华科软院计组概念复习","type":"post","url":"/2016/06//","weight":0,"wordcount":2280},{"author":null,"categories":null,"content":null,"date":1465811312,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1465811312,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%AE%A1%E7%BB%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%AE%A1%E7%BB%84/","section":"tags","summary":"","tags":null,"title":"计组","type":"tags","url":"/tags/%E8%AE%A1%E7%BB%84/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1465632064,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465632064,"objectID":"ef1ee74976ab1398d98031e93f738e3f","permalink":"https://111qqz.github.io/2016/06/kk-is-salty-fish/","publishdate":"2016-06-11T08:01:04Z","readingtime":1,"relpermalink":"/2016/06/kk-is-salty-fish/","section":"post","summary":"最近睡眠特别差\u0026hellip; 一睡能睡18个小时。。。醒了之后依旧头疼。。。 一直在做乱七八糟的梦\u0026hellip; 除了那种特别恶劣的噩梦\u0026he","tags":null,"title":"差不多是条咸鱼了","type":"post","url":"/2016/06/kk-is-salty-fish/","weight":0,"wordcount":255},{"author":null,"categories":["ACM"],"content":null,"date":1465402620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465402620,"objectID":"7e1b995915ae553d880ea52e84653ea5","permalink":"https://111qqz.github.io/2016/06/codeforces-660-c-hard-process-ruler/","publishdate":"2016-06-08T16:17:00Z","readingtime":1,"relpermalink":"/2016/06/codeforces-660-c-hard-process-ruler/","section":"post","summary":"cf660C solution:ruler.1A /* *********************************************** Author :111qqz Created Time :2016年06月08日 星期三 23时43分18秒 File Name :code/cf/problem/660C.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstdlib\u0026gt; #include \u0026lt;ctime\u0026gt; #define fst first #define sec second #define lson l,m,rt\u0026lt;\u0026lt;1","tags":["尺取法"],"title":"codeforces 660 C. Hard Process (ruler)","type":"post","url":"/2016/06/codeforces-660-c-hard-process-ruler/","weight":0,"wordcount":258},{"author":null,"categories":["ACM"],"content":null,"date":1465151826,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465151826,"objectID":"fe8c87e5c2ae520ebf12de60200d3891","permalink":"https://111qqz.github.io/2016/06/dp/","publishdate":"2016-06-05T18:37:06Z","readingtime":4,"relpermalink":"/2016/06/dp/","section":"post","summary":"树，一种十分优美的数据结构，因为它本身就具有的递归性，所以它和子树见能相互传递很多信息，还因为它作为被限制的图在上面可进行的操作更多，所以各","tags":null,"title":"（转）树形dp题目集","type":"post","url":"/2016/06/dp/","weight":0,"wordcount":1599},{"author":null,"categories":["ACM"],"content":null,"date":1465147245,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465147245,"objectID":"712ebe4bd270c3aceb91f795d2e32a06","permalink":"https://111qqz.github.io/2016/06/","publishdate":"2016-06-05T17:20:45Z","readingtime":1,"relpermalink":"/2016/06/","section":"post","summary":"学完了km..感觉匈牙利真是非常的。。easy\u0026hellip; 匈牙利算法学习链接 有一种题目会用1*2的小格子填充大的，问能不能填满之类的，可","tags":["匈牙利算法"],"title":"匈牙利算法总结","type":"post","url":"/2016/06//","weight":0,"wordcount":473},{"author":null,"categories":null,"content":null,"date":1465146479,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1465146479,"objectID":"","permalink":"https://111qqz.github.io/tags/km/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/km/","section":"tags","summary":"","tags":null,"title":"KM","type":"tags","url":"/tags/km/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1465146479,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465146479,"objectID":"afd05c91592beae524f2e477a809a9c5","permalink":"https://111qqz.github.io/2016/06/km/","publishdate":"2016-06-05T17:07:59Z","readingtime":1,"relpermalink":"/2016/06/km/","section":"post","summary":"km算法我的理解 刷了不到20道题。。。回来总结一发。。 如果题目求的是最小权值匹配，比较好的做法是将权值取取值，最后res再取负就好。需要注意","tags":["KM"],"title":"KM算法总结","type":"post","url":"/2016/06/km/","weight":0,"wordcount":470},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1465133706,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1465133706,"objectID":"4484afaae3545c65d021b4962bb8dba1","permalink":"https://111qqz.github.io/2016/06/20160605/","publishdate":"2016-06-05T13:35:06Z","readingtime":2,"relpermalink":"/2016/06/20160605/","section":"post","summary":"妈呀。。。6天之后两门考试。。。计组+OS\u0026hellip;害怕。。。。 小可开始刷神题了orz\u0026hellip; 一个只有40+人过的神级状压dp","tags":null,"title":"20160605随笔","type":"post","url":"/2016/06/20160605/","weight":0,"wordcount":896},{"author":null,"categories":["ACM"],"content":null,"date":1464954936,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464954936,"objectID":"a30cb0147a1a7aabeb63a3fdeea8408e","permalink":"https://111qqz.github.io/2016/06/hdu-3523/","publishdate":"2016-06-03T11:55:36Z","readingtime":2,"relpermalink":"/2016/06/hdu-3523/","section":"post","summary":"hdu 3523 题目链接 题意：有m个排列，每个排列有n个，然后要找一个长度为n的排列（1..n每个数字恰好出现一次），使得这个排列到其他m个排列的距离之","tags":["KM","二分图最佳匹配"],"title":"HDU 3523 Image copy detection (二分图最佳匹配，KM算法，题意杀)","type":"post","url":"/2016/06/hdu-3523/","weight":0,"wordcount":677},{"author":null,"categories":null,"content":null,"date":1464954936,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464954936,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E4%BD%B3%E5%8C%B9%E9%85%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E4%BD%B3%E5%8C%B9%E9%85%8D/","section":"tags","summary":"","tags":null,"title":"二分图最佳匹配","type":"tags","url":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E4%BD%B3%E5%8C%B9%E9%85%8D/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464946007,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464946007,"objectID":"a56ee6bb2486fa802cf9c9fa0e4f8d0c","permalink":"https://111qqz.github.io/2016/06/hdu-3315/","publishdate":"2016-06-03T09:26:47Z","readingtime":2,"relpermalink":"/2016/06/hdu-3315/","section":"post","summary":"hdu3315 题目链接 题意：两个人分别各有n个怪物。进行n场pk.每只怪物必须恰好进行一场pk.如果先手的第i只怪物赢，会获得v[i]的val,输会减少","tags":["KM算法","二分图最佳匹配"],"title":"hdu 3315 My Brute （二分图最佳匹配,KM算法）","type":"post","url":"/2016/06/hdu-3315/","weight":0,"wordcount":990},{"author":null,"categories":null,"content":null,"date":1464946007,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464946007,"objectID":"","permalink":"https://111qqz.github.io/tags/km%E7%AE%97%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/km%E7%AE%97%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"KM算法","type":"tags","url":"/tags/km%E7%AE%97%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464939410,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464939410,"objectID":"c66ca8147ce08d212fbc8136780b1446","permalink":"https://111qqz.github.io/2016/06/hdu-2853/","publishdate":"2016-06-03T07:36:50Z","readingtime":3,"relpermalink":"/2016/06/hdu-2853/","section":"post","summary":"hdu 2853题目链接 题意：n个公司，m个任务（m\u0026gt;=n),一个公司只能对应一个任务，一个任务也只能对应一个公司。给出一个n*m的mat,","tags":["KM","number theory","二分图最佳匹配"],"title":"hdu 2853 Assignment (二分图最佳匹配，KM算法+数论，做法太神)","type":"post","url":"/2016/06/hdu-2853/","weight":0,"wordcount":1474},{"author":null,"categories":["ACM"],"content":null,"date":1464905714,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464905714,"objectID":"475084eabc84b2e3671a3c38224bebf3","permalink":"https://111qqz.github.io/2016/06/hdu-2448/","publishdate":"2016-06-02T22:15:14Z","readingtime":2,"relpermalink":"/2016/06/hdu-2448/","section":"post","summary":"hdu2448 题目链接 题意：n个船n个港口，一个港口只能承接一个船，m个油田，给出n个船各自在哪个油田，然后给出m个油田之间的无相图，然后给出油田和港口","tags":["floyd","KM","二分图最佳匹配"],"title":"hdu 2448 Mining Station on the Sea (floyd+KM)","type":"post","url":"/2016/06/hdu-2448/","weight":0,"wordcount":896},{"author":null,"categories":["ACM"],"content":null,"date":1464892678,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464892678,"objectID":"3d67d28973d59b43d06dcf3434b1845c","permalink":"https://111qqz.github.io/2016/06/hdu-3718/","publishdate":"2016-06-02T18:37:58Z","readingtime":2,"relpermalink":"/2016/06/hdu-3718/","section":"post","summary":"hdu 3718题目链接 题意：东西分类作业，有n个东西,k组，m个学生，不同种类的东西用不同的字母表示，相同种类的用同一个字母表示。不同学生和标准","tags":["KM","二分图最佳匹配"],"title":"hdu 3718 Similarity (二分图最优匹配，KM算法)","type":"post","url":"/2016/06/hdu-3718/","weight":0,"wordcount":747},{"author":null,"categories":["ACM"],"content":null,"date":1464883408,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464883408,"objectID":"f005d966a56ea07ac8ad97348fe11cd8","permalink":"https://111qqz.github.io/2016/06/hdu-3722/","publishdate":"2016-06-02T16:03:28Z","readingtime":2,"relpermalink":"/2016/06/hdu-3722/","section":"post","summary":"hdu 3722题目链接 题意：n个串，a串放在b串前面的val值是“The score of sticking two cards is the longest common prefix of the second card and the reverse of the first card”.问如何放使得总的va","tags":["KM","二分图最佳匹配","拆点"],"title":"hdu 3722 Card Game (有向环覆盖，拆点，二分图最佳匹配，KM算法)","type":"post","url":"/2016/06/hdu-3722/","weight":0,"wordcount":646},{"author":null,"categories":null,"content":null,"date":1464883408,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464883408,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%8B%86%E7%82%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%8B%86%E7%82%B9/","section":"tags","summary":"","tags":null,"title":"拆点","type":"tags","url":"/tags/%E6%8B%86%E7%82%B9/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464880243,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464880243,"objectID":"4a8c3aa157a207deb2c83a0d7b0bf9bb","permalink":"https://111qqz.github.io/2016/06/hdu-3435/","publishdate":"2016-06-02T15:10:43Z","readingtime":2,"relpermalink":"/2016/06/hdu-3435/","section":"post","summary":"hdu 3435题目链接 题意：给你一张图，图上可能有多个哈密顿回路。叫你求出形成多个哈密顿回路的总距离最小值 思路：题意杀啊。。。什么鬼了。。。然后","tags":["KM","二分图最佳匹配","拆点"],"title":"hdu 3435 A new Graph Game (有向环覆盖，拆点，二分图最优匹配，KM算法)","type":"post","url":"/2016/06/hdu-3435/","weight":0,"wordcount":545},{"author":null,"categories":["ACM"],"content":null,"date":1464871466,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464871466,"objectID":"a3d61211985bda719b4a6c523559f8e1","permalink":"https://111qqz.github.io/2016/06/hdu-1853/","publishdate":"2016-06-02T12:44:26Z","readingtime":2,"relpermalink":"/2016/06/hdu-1853/","section":"post","summary":"hdu 1853 题目链接 题意：一个带权有向图，要求找出若干的环，满足每个点恰好在一个环里，并且环的权值和最小……问最小权值和。 思路：没有思路，不知道怎么","tags":["KM","二分图最佳匹配","拆点"],"title":"hdu 1853 Cyclic Tour (有向环覆盖，拆点，二分图最佳匹配，KM算法)","type":"post","url":"/2016/06/hdu-1853/","weight":0,"wordcount":604},{"author":null,"categories":["ACM"],"content":null,"date":1464867843,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464867843,"objectID":"366301cdf365a3a3a0750f94e0760856","permalink":"https://111qqz.github.io/2016/06/hdu-2813/","publishdate":"2016-06-02T11:44:03Z","readingtime":2,"relpermalink":"/2016/06/hdu-2813/","section":"post","summary":"hdu 2813 题目链接 题意：吕布有n个武将，曹操有m（m\u0026gt;=n）个武将。给出k个关系，为吕布的某个武将和曹操的某个武将pk后会受到的伤害。吕布要","tags":["KM","二分图最佳匹配"],"title":"hdu 2813 One fihgt one (二分图最优匹配，KM算法)","type":"post","url":"/2016/06/hdu-2813/","weight":0,"wordcount":546},{"author":null,"categories":["ACM"],"content":null,"date":1464865690,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464865690,"objectID":"adb54205fd57f831d37f9e2418a4bb53","permalink":"https://111qqz.github.io/2016/06/hdu-2282/","publishdate":"2016-06-02T11:08:10Z","readingtime":2,"relpermalink":"/2016/06/hdu-2282/","section":"post","summary":"hdu 2282 题目链接 题意：n个盒子围成一个圈，给出n个盒子中每个盒子中的巧克力个数，巧克力的总数不超过n，从一个盒子中移动一块巧克力到相邻的盒子里称","tags":["KM","二分图最佳匹配"],"title":"hdu 2282  Chocolate (二分图最优匹配,KM算法)","type":"post","url":"/2016/06/hdu-2282/","weight":0,"wordcount":633},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1464864621,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464864621,"objectID":"c29b8cd6d77ca7be11dae8cbd4967891","permalink":"https://111qqz.github.io/2016/06/kkkkk/","publishdate":"2016-06-02T10:50:21Z","readingtime":1,"relpermalink":"/2016/06/kkkkk/","section":"post","summary":"可可可可可？","tags":null,"title":"kkkkk?","type":"post","url":"/2016/06/kkkkk/","weight":0,"wordcount":6},{"author":null,"categories":["ACM"],"content":null,"date":1464786205,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464786205,"objectID":"8bce1f2acc2cbcd84caaae8e2b8bbfc4","permalink":"https://111qqz.github.io/2016/06/hdu-3395/","publishdate":"2016-06-01T13:03:25Z","readingtime":2,"relpermalink":"/2016/06/hdu-3395/","section":"post","summary":"hdu 3395题目链接 题意：鱼，一些鱼认为自己是汉子，然后他会去和他认为是妹子的鱼啪啪啪，然后被啪啪啪的妹子就会产卵？ 卵的val是它parent","tags":["KM","二分图最佳匹配"],"title":"hdu 3395 Special Fish (二分图最佳匹配，KM算法)","type":"post","url":"/2016/06/hdu-3395/","weight":0,"wordcount":673},{"author":null,"categories":["ACM"],"content":null,"date":1464784425,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464784425,"objectID":"343813b4d95d4a8931b57bac10dbd417","permalink":"https://111qqz.github.io/2016/06/hdu-2426/","publishdate":"2016-06-01T12:33:45Z","readingtime":2,"relpermalink":"/2016/06/hdu-2426/","section":"post","summary":"hdu 2426 题目链接 题意：n个学生，m个宿舍，每个学生住一个宿舍，然后n个学生给若干个宿舍打分，分数可正可0可负，学生不能住打的分为负的宿舍，或者没","tags":["KM","二分图最佳匹配"],"title":"hdu 2426 Interesting Housing Problem (二分图最佳匹配，km算法)","type":"post","url":"/2016/06/hdu-2426/","weight":0,"wordcount":649},{"author":null,"categories":["ACM"],"content":null,"date":1464780229,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464780229,"objectID":"e9527ed790248523c8a11227efd3de70","permalink":"https://111qqz.github.io/2016/06/hdu-1533/","publishdate":"2016-06-01T11:23:49Z","readingtime":3,"relpermalink":"/2016/06/hdu-1533/","section":"post","summary":"hdu 1533 题目链接 题意：给出一个n*m的maze，其中包含不超过一个人（用m表示），以及和人数相等的房子（用H表示），其他都是‘.’，表示可以经过","tags":["KM","二分图最佳匹配"],"title":"hdu 1533 Going Home (二分图最佳匹配，KM算法)","type":"post","url":"/2016/06/hdu-1533/","weight":0,"wordcount":1053},{"author":null,"categories":["ACM"],"content":null,"date":1464769831,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464769831,"objectID":"cf6c5904c905a2f1076b51eae971d728","permalink":"https://111qqz.github.io/2016/06/hdu-2255-km/","publishdate":"2016-06-01T08:30:31Z","readingtime":6,"relpermalink":"/2016/06/hdu-2255-km/","section":"post","summary":"hdu 2255 题目链接 题意：传说在遥远的地方有一个非常富裕的村落,有一天,村长决定进行制度改革：重新分配房子。 这可是一件大事,关系到人民的住房问题啊。","tags":["KM","二分图最佳匹配"],"title":"hdu 2255 奔小康赚大钱 (二分图最佳匹配，KM算法模板题）","type":"post","url":"/2016/06/hdu-2255--km/","weight":0,"wordcount":2984},{"author":null,"categories":["ACM"],"content":null,"date":1464616588,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464616588,"objectID":"2979dcdc6facb27a6d60e666fd026c44","permalink":"https://111qqz.github.io/2016/05/poj-3041/","publishdate":"2016-05-30T13:56:28Z","readingtime":2,"relpermalink":"/2016/05/poj-3041/","section":"post","summary":"poj 3041题目链接 题意：一个nn的网格中，有k个大小为11的小行星，现在可以用激光枪每次消灭一行的小行星或者消灭一列的小行星。问最少需要使用","tags":["匈牙利算法","最小顶点覆盖"],"title":"poj 3041 Asteroids (二分图的最小顶点覆盖，匈牙利算法)","type":"post","url":"/2016/05/poj-3041/","weight":0,"wordcount":510},{"author":null,"categories":null,"content":null,"date":1464616588,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464616588,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E9%A1%B6%E7%82%B9%E8%A6%86%E7%9B%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E9%A1%B6%E7%82%B9%E8%A6%86%E7%9B%96/","section":"tags","summary":"","tags":null,"title":"最小顶点覆盖","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E9%A1%B6%E7%82%B9%E8%A6%86%E7%9B%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464614739,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464614739,"objectID":"df6d96222aef344f888e99c6fb1225ab","permalink":"https://111qqz.github.io/2016/05/poj-1719/","publishdate":"2016-05-30T13:25:39Z","readingtime":2,"relpermalink":"/2016/05/poj-1719/","section":"post","summary":"poj1719题目链接 题意：射箭比赛，靶子是一个n*m的网格。网格的特点是没列只有两个白色，剩下的全是黑色。一共射m次，每列射一次，要求每行","tags":["匈牙利算法"],"title":"poj 1719 Shooting Contest (匈牙利算法)","type":"post","url":"/2016/05/poj-1719/","weight":0,"wordcount":608},{"author":null,"categories":["ACM"],"content":null,"date":1464586398,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464586398,"objectID":"6582cd2dda920c60ebf1e982658bf641","permalink":"https://111qqz.github.io/2016/05/hdu-4185/","publishdate":"2016-05-30T05:33:18Z","readingtime":2,"relpermalink":"/2016/05/hdu-4185/","section":"post","summary":"hdu 4185题目链接 题意：给出一个nn的字符maze,‘.’代表水，‘#’代表油田。 挖油的机器一次会挖两个相邻方块。要求是必须两块必须都是油，","tags":["匈牙利算法"],"title":"hdu 4185 Oil Skimming (二分图最大匹配，匈牙利算法)","type":"post","url":"/2016/05/hdu-4185/","weight":0,"wordcount":542},{"author":null,"categories":["ACM"],"content":null,"date":1464399293,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464399293,"objectID":"8d30548b69ce7247db896039061dc3f2","permalink":"https://111qqz.github.io/2016/05/hdu1068/","publishdate":"2016-05-28T01:34:53Z","readingtime":2,"relpermalink":"/2016/05/hdu1068/","section":"post","summary":"hdu 1068题目链接 题意：有n个同学。。给出同学之间的 爱慕关系。。。选出一个集合使得集合中的人没有爱慕关系。问能选出的最大集合是多少。 思路：没","tags":["匈牙利算法","最大独立集"],"title":"hdu 1068 Girls and Boys (二分图的最大独立集，匈牙利算法)","type":"post","url":"/2016/05/hdu1068/","weight":0,"wordcount":550},{"author":null,"categories":null,"content":null,"date":1464399293,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464399293,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%A4%A7%E7%8B%AC%E7%AB%8B%E9%9B%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%A4%A7%E7%8B%AC%E7%AB%8B%E9%9B%86/","section":"tags","summary":"","tags":null,"title":"最大独立集","type":"tags","url":"/tags/%E6%9C%80%E5%A4%A7%E7%8B%AC%E7%AB%8B%E9%9B%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464352687,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464352687,"objectID":"0b36a5408bd9f194fb7aff38af1a7ec7","permalink":"https://111qqz.github.io/2016/05/hdu-3225/","publishdate":"2016-05-27T12:38:07Z","readingtime":3,"relpermalink":"/2016/05/hdu-3225/","section":"post","summary":"hdu 3225题目链接 题意：给出一个n*m的矩阵。每个格子有一个数。每行1..n必须每个出现一次。每列1..n每个数最多出现一次。现在要添加一行","tags":["dfs","二分图匹配","剪枝","匈牙利算法"],"title":"hdu 3225 Flowers Placement （dfs+匈牙利算法剪枝，太神了）","type":"post","url":"/2016/05/hdu-3225/","weight":0,"wordcount":1080},{"author":null,"categories":null,"content":null,"date":1464352687,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464352687,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/","section":"tags","summary":"","tags":null,"title":"二分图匹配","type":"tags","url":"/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1464352687,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464352687,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%89%AA%E6%9E%9D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%89%AA%E6%9E%9D/","section":"tags","summary":"","tags":null,"title":"剪枝","type":"tags","url":"/tags/%E5%89%AA%E6%9E%9D/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464279648,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464279648,"objectID":"0d34917fe92b3e3da5667399f6e21c31","permalink":"https://111qqz.github.io/2016/05/poj1469/","publishdate":"2016-05-26T16:20:48Z","readingtime":1,"relpermalink":"/2016/05/poj1469/","section":"post","summary":"poj 1469 题目链接 题意：p个课程，n个学生，给出每个课程对应选取该课程的学生编号，问能否选出p个学生，使得和课程一一对应。 思路：一眼二分图最大匹配","tags":["匈牙利算法"],"title":"poj 1469 COURSES (匈牙利算法)","type":"post","url":"/2016/05/poj1469/","weight":0,"wordcount":412},{"author":null,"categories":["ACM"],"content":null,"date":1464277256,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464277256,"objectID":"6cf9c50a178892512a30f88648d0a196","permalink":"https://111qqz.github.io/2016/05/poj-1325-machine-schedule/","publishdate":"2016-05-26T15:40:56Z","readingtime":2,"relpermalink":"/2016/05/poj-1325-machine-schedule/","section":"post","summary":"poj 1325 题目链接 题意：有两台机器A和B,分别有n和m种工作模式。 现在有k个job,三元组（i,x,y),job i可以用A机器的x模式完成或者用B","tags":["二分图匹配","匈牙利算法","最小顶点覆盖"],"title":"poj 1325 Machine Schedule(二分图的最小顶点覆盖，匈牙利算法)","type":"post","url":"/2016/05/poj-1325-machine-schedule/","weight":0,"wordcount":819},{"author":null,"categories":["ACM"],"content":null,"date":1464267767,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464267767,"objectID":"f27d3b7d64a5ad20c1503c0893def4eb","permalink":"https://111qqz.github.io/2016/05/poj-1422/","publishdate":"2016-05-26T13:02:47Z","readingtime":1,"relpermalink":"/2016/05/poj-1422/","section":"post","summary":"poj 1422题目链接 题意+思路：DAG的最小路径覆盖。。。匈牙利算法。。。poj 2594的低配版。。 /* *********************************************** Author :111qqz Created Time :2016年05月26日 星期四","tags":["匈牙利算法","最小路径覆盖"],"title":"poj 1422 Air Raid (DAG的最小路径覆盖，匈牙利算法)","type":"post","url":"/2016/05/poj-1422/","weight":0,"wordcount":331},{"author":null,"categories":null,"content":null,"date":1464267767,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464267767,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E8%A6%86%E7%9B%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E8%A6%86%E7%9B%96/","section":"tags","summary":"","tags":null,"title":"最小路径覆盖","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E8%A6%86%E7%9B%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464266592,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464266592,"objectID":"c96085a4a6d26b8256f24979c0ba184f","permalink":"https://111qqz.github.io/2016/05/poj-2594/","publishdate":"2016-05-26T12:43:12Z","readingtime":1,"relpermalink":"/2016/05/poj-2594/","section":"post","summary":"poj 2594 题目链接 题意：一个DAG图，每个点有宝藏\u0026hellip;可以降落任意个机器人到任意点\u0026hellip;然后机器人可以沿着路径走，路过某个点","tags":["floyd","传递闭包","匈牙利算法","最小路径覆盖"],"title":"poj 2594 Treasure Exploration (DAG图最小路径覆盖变形，匈牙利算法+floyd求传递闭包)","type":"post","url":"/2016/05/poj-2594/","weight":0,"wordcount":485},{"author":null,"categories":["ACM"],"content":null,"date":1464261588,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464261588,"objectID":"f185a4f8192d656fc7eee302f61ac168","permalink":"https://111qqz.github.io/2016/05/poj2446/","publishdate":"2016-05-26T11:19:48Z","readingtime":2,"relpermalink":"/2016/05/poj2446/","section":"post","summary":"poj 2446 题目链接 题意：一个nm的矩形方格里，有k个坏点，然后问能否用12的矩形块将矩形方格填满。坏点不能填，小的矩形块不能重叠，不能超出边界。不","tags":["匈牙利算法"],"title":"poj 2446 Chessboard (匈牙利算法)","type":"post","url":"/2016/05/poj2446/","weight":0,"wordcount":882},{"author":null,"categories":["ACM"],"content":null,"date":1464170394,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464170394,"objectID":"c0270a9fc2d042afe67c46e6939c7330","permalink":"https://111qqz.github.io/2016/05/poj-1274-the-perfect-stall-/","publishdate":"2016-05-25T09:59:54Z","readingtime":1,"relpermalink":"/2016/05/poj-1274-the-perfect-stall-/","section":"post","summary":"poj 1274题目链接 裸的匈牙利。 /* *********************************************** Author :111qqz Created Time :2016年05月25日 星期三 17时49分22秒 File Name :code/poj/1274.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt;","tags":["二分图匹配","匈牙利算法"],"title":"poj 1274 The Perfect Stall （匈牙利算法）","type":"post","url":"/2016/05/poj-1274-the-perfect-stall-/","weight":0,"wordcount":292},{"author":null,"categories":["ACM"],"content":null,"date":1464169381,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464169381,"objectID":"364c20cb909fb24657512b2f3d3d8095","permalink":"https://111qqz.github.io/2016/05/hdu-2063/","publishdate":"2016-05-25T09:43:01Z","readingtime":2,"relpermalink":"/2016/05/hdu-2063/","section":"post","summary":"hdu2063题目链接 题意：求二分图最大匹配。 思路：匈牙利算法。 通过这三篇博客了解了相关概念，学习了匈牙利算法。 趣写算法系列之\u0026ndash;","tags":["二分图匹配","匈牙利算法"],"title":"hdu 2063 过山车 (匈牙利算法模板题)","type":"post","url":"/2016/05/hdu-2063/","weight":0,"wordcount":595},{"author":null,"categories":["ACM"],"content":null,"date":1464120872,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464120872,"objectID":"360169dd59b6566c4a85cd6343f6051a","permalink":"https://111qqz.github.io/2016/05/uva-10986/","publishdate":"2016-05-24T20:14:32Z","readingtime":1,"relpermalink":"/2016/05/uva-10986/","section":"post","summary":"uva10986题目链接 题意：裸的spfa. 思路：模板，1A. /* *********************************************** Author :111qqz Created Time :2016年05月25日 星期三 03时25分27秒 File Name :code/uva/10986.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt;","tags":["spfa"],"title":"uva 10986 Sending email (spfa)","type":"post","url":"/2016/05/uva-10986/","weight":0,"wordcount":298},{"author":null,"categories":["ACM"],"content":null,"date":1464119702,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464119702,"objectID":"cc21572eed7bcd78c5dddff3fc3dd225","permalink":"https://111qqz.github.io/2016/05/poj-2949-word-rings/","publishdate":"2016-05-24T19:55:02Z","readingtime":3,"relpermalink":"/2016/05/poj-2949-word-rings/","section":"post","summary":"poj2949 题目链接 题意：我们有 n 个 (n\u0026lt;=100000) 字符串,每个字符串都是由 a~z 的小写英文字 母组成的字符串。如果字符串 A 的结尾两个字符刚好与字符串 B 的开头两字符相 匹配","tags":["spfa"],"title":"poj 2949 Word Rings (spfa+栈优化)","type":"post","url":"/2016/05/poj-2949-word-rings/","weight":0,"wordcount":1141},{"author":null,"categories":["ACM"],"content":null,"date":1464106598,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464106598,"objectID":"a68e63919357e83032fa866b734b6a24","permalink":"https://111qqz.github.io/2016/05/poj-1860/","publishdate":"2016-05-24T16:16:38Z","readingtime":1,"relpermalink":"/2016/05/poj-1860/","section":"post","summary":"poj 1860 题目链接 题意：有n种货币，m个货币交易点，每个货币交易点只能是两种货币之间交换，给出两个方向的汇率和手续费。初始拥有数量v的货币s,问能","tags":["spfa","最长路"],"title":"poj 1860 Currency Exchange (spfa求最长路)","type":"post","url":"/2016/05/poj-1860/","weight":0,"wordcount":394},{"author":null,"categories":null,"content":null,"date":1464106598,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464106598,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E9%95%BF%E8%B7%AF/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E9%95%BF%E8%B7%AF/","section":"tags","summary":"","tags":null,"title":"最长路","type":"tags","url":"/tags/%E6%9C%80%E9%95%BF%E8%B7%AF/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1464094845,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464094845,"objectID":"3a7ef05923d8037de2abdc7107a144ca","permalink":"https://111qqz.github.io/2016/05/poj-1932/","publishdate":"2016-05-24T13:00:45Z","readingtime":2,"relpermalink":"/2016/05/poj-1932/","section":"post","summary":"poj1932题目链接 题意：初始在点1，有100点能量，然后每个点有一个能量值【-100,100】，经过某个点会加上这个点的能量值，问能否找","tags":["floyd","spfa","传递闭包","最长路"],"title":"poj 1932 XYZZY (floyd传递闭包+spfa求最长路)","type":"post","url":"/2016/05/poj-1932/","weight":0,"wordcount":989},{"author":null,"categories":["ACM"],"content":null,"date":1464089767,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1464089767,"objectID":"33a41799236a07bf70707ad67146d084","permalink":"https://111qqz.github.io/2016/05/poj-1511/","publishdate":"2016-05-24T11:36:07Z","readingtime":2,"relpermalink":"/2016/05/poj-1511/","section":"post","summary":"poj 1511 题目链接 题意：和那道奶牛的舞会类似，要求所有点到点1的距离和加上1点到所有点的距离和。 思路：正反存边建两次图，跑两次spfa. 然而用ve","tags":["spfa","链式前向星"],"title":"poj 1511 Invitation Cards (链式前向星存图+spfa)","type":"post","url":"/2016/05/poj-1511/","weight":0,"wordcount":555},{"author":null,"categories":null,"content":null,"date":1464089767,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1464089767,"objectID":"","permalink":"https://111qqz.github.io/tags/%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/","section":"tags","summary":"","tags":null,"title":"链式前向星","type":"tags","url":"/tags/%E9%93%BE%E5%BC%8F%E5%89%8D%E5%90%91%E6%98%9F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1463922589,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463922589,"objectID":"87c8c579ab1c48a589d6b46bceb840a0","permalink":"https://111qqz.github.io/2016/05/bzoj-1614/","publishdate":"2016-05-22T13:09:49Z","readingtime":3,"relpermalink":"/2016/05/bzoj-1614/","section":"post","summary":"1614: [Usaco2007 Jan]Telephone Lines架设电话线 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 1325 Solved: 570 [Submit][Status][Discuss] Description Farmer John打算将电话线引到自己的农场，但电信公司并不打算为他提供免费服务。于是，FJ必","tags":["binary search","spfa"],"title":"BZOJ 1614: [Usaco2007 Jan]Telephone Lines架设电话线 (二分+spfa)","type":"post","url":"/2016/05/bzoj-1614/","weight":0,"wordcount":1406},{"author":null,"categories":["ACM"],"content":null,"date":1463836197,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463836197,"objectID":"c9f3e745dbe2ce04e9228c50daba9c8e","permalink":"https://111qqz.github.io/2016/05/bzoj-1631/","publishdate":"2016-05-21T13:09:57Z","readingtime":2,"relpermalink":"/2016/05/bzoj-1631/","section":"post","summary":"1631: [Usaco2007 Feb]Cow Party Time Limit: 5 Sec Memory Limit: 64 MB Submit: 670 Solved: 493 [Submit][Status][Discuss] Description 农场有N(1≤N≤1000)个牛棚，每个牛棚都有1只奶牛要参加在X牛棚举行的奶牛派对．共有M(1≤M≤1","tags":["spfa","最短路"],"title":"BZOJ 1631: [Usaco2007 Feb]Cow Party (SPFA)","type":"post","url":"/2016/05/bzoj-1631/","weight":0,"wordcount":820},{"author":null,"categories":["ACM"],"content":null,"date":1463828994,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463828994,"objectID":"e5748fd9cd6d70b6f6c148d9fa0942ba","permalink":"https://111qqz.github.io/2016/05/hdu3790/","publishdate":"2016-05-21T11:09:54Z","readingtime":1,"relpermalink":"/2016/05/hdu3790/","section":"post","summary":"hdu 3790 题目链接 题意：给出n个点m条无向边，每条边有一个距离和一个花费。给出s,t。问从s到t的最短距离以及最短距离时的最小花费。当有多个距离最","tags":["spfa"],"title":"hdu 3790 最短路径问题 (spfa模板题)","type":"post","url":"/2016/05/hdu3790/","weight":0,"wordcount":399},{"author":null,"categories":["ACM"],"content":null,"date":1463819480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463819480,"objectID":"a7bbbd9445d2ba2a540d08efac148a5a","permalink":"https://111qqz.github.io/2016/05/zoj-3195/","publishdate":"2016-05-21T08:31:20Z","readingtime":1,"relpermalink":"/2016/05/zoj-3195/","section":"post","summary":"zoj 3195题目链接 题意：求树上三点的最短距离。。。 思路：两两求，和除以2. 因为忘记初始化p=0..WA了将近两个小时。。。？ 妈的智障。 /* *********************************************** Author","tags":["LCA","rmq"],"title":"zoj 3195 Design the city （lca,dfs+rmq）","type":"post","url":"/2016/05/zoj-3195/","weight":0,"wordcount":437},{"author":null,"categories":["ACM"],"content":null,"date":1463806702,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463806702,"objectID":"fb706c76b8791ad8877e084a503b9d70","permalink":"https://111qqz.github.io/2016/05/hdu-2874/","publishdate":"2016-05-21T04:58:22Z","readingtime":3,"relpermalink":"/2016/05/hdu-2874/","section":"post","summary":"hdu2874题目链接 题意：给一个森林，问两点的最短距离，或者输出两点不联通。 思路：最最重要的一点是:添加虚点！ 最最重要的一点是:添加虚点！","tags":["LCA","rmq","并查集","虚点"],"title":"hdu 2874 Connections between cities (添加虚点，并查集+LCA(rmq+dfs))","type":"post","url":"/2016/05/hdu-2874/","weight":0,"wordcount":1038},{"author":null,"categories":null,"content":null,"date":1463806702,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1463806702,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%99%9A%E7%82%B9/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%99%9A%E7%82%B9/","section":"tags","summary":"","tags":null,"title":"虚点","type":"tags","url":"/tags/%E8%99%9A%E7%82%B9/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1463743549,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463743549,"objectID":"ed80e4de88a671989482401e55b8a938","permalink":"https://111qqz.github.io/2016/05/poj-1986/","publishdate":"2016-05-20T11:25:49Z","readingtime":1,"relpermalink":"/2016/05/poj-1986/","section":"post","summary":"题目链接 题意：求树上两点的最短距离？ 思路： dis[i]表示点i到根节点的距离，那么任意两点u,v的最短距离d = dis[u]+dis[v]-2*dis[LCA(u,v)]. 只需要求出rmq+dfs的在","tags":["LCA","rmq"],"title":"poj 1986 Distance Queries (lca,在线做法dfs+rmq)","type":"post","url":"/2016/05/poj-1986/","weight":0,"wordcount":434},{"author":null,"categories":["ACM"],"content":null,"date":1463651076,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463651076,"objectID":"6c772d711f26152f06bf2b601d23cb8e","permalink":"https://111qqz.github.io/2016/05/hdu3530/","publishdate":"2016-05-19T09:44:36Z","readingtime":1,"relpermalink":"/2016/05/hdu3530/","section":"post","summary":"hdu 3530题目链接 题意：给出n个数，m,k，问最大的j-i+1,使得【i,j】间的最大值与最小值的差属于[m,k] 思路：rmq+尺取。 2A. /* ***********************************************","tags":["rmq","尺取法"],"title":"hdu 3530 Subsequence (尺取+rmq)","type":"post","url":"/2016/05/hdu3530/","weight":0,"wordcount":360},{"author":null,"categories":["ACM"],"content":null,"date":1463647325,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463647325,"objectID":"63a6481efbad9eb6dd5cffd7dda64809","permalink":"https://111qqz.github.io/2016/05/poj1470/","publishdate":"2016-05-19T08:42:05Z","readingtime":1,"relpermalink":"/2016/05/poj1470/","section":"post","summary":"poj1470题目链接 题意：求两点的lca. 思路：dfs+rmq. 读入技巧。 读入比较坑爹。。。 学会了一种新的读入技巧。 scanf(\u0026quot;%2s\u0026rdquo;,st); 表示读一个长度为2的","tags":["dfs","LCA","rmq"],"title":"poj 1470 Closest Common Ancestors (lca,rmq+dfs,读入技巧)","type":"post","url":"/2016/05/poj1470/","weight":0,"wordcount":496},{"author":null,"categories":["ACM"],"content":null,"date":1463643588,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463643588,"objectID":"7747c80fe7b04c7472473157d03c0657","permalink":"https://111qqz.github.io/2016/05/poj1330/","publishdate":"2016-05-19T07:39:48Z","readingtime":2,"relpermalink":"/2016/05/poj1330/","section":"post","summary":"poj1330题目链接 题意：给出一棵树，求两点的lca. 思路：将lca转化成rmq在线求解。 代码部分参考了：参考代码 感觉实现得很巧妙。。。 把","tags":["dfs","LCA","rmq"],"title":"poj 1330  Nearest Common Ancestors (lca,用dfs+rmq在线求解)","type":"post","url":"/2016/05/poj1330/","weight":0,"wordcount":508},{"author":null,"categories":["ACM"],"content":null,"date":1463576614,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463576614,"objectID":"b84202bc8f4cb9f96f6a758f6b8d54c0","permalink":"https://111qqz.github.io/2016/05/hdu4122/","publishdate":"2016-05-18T13:03:34Z","readingtime":3,"relpermalink":"/2016/05/hdu4122/","section":"post","summary":"hdu2142题目链接 题意：有n个订单和可以在m小时内制作月饼 接下来是n个订单的信息:需要在mon月,d日,year年,h小时交付订单r个月","tags":["rmq"],"title":"hdu 4122 Alice's mooncake shop(rmq)","type":"post","url":"/2016/05/hdu4122/","weight":0,"wordcount":1024},{"author":null,"categories":["ACM"],"content":null,"date":1463557668,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463557668,"objectID":"3fc2b829f53ce4769533e7037596e042","permalink":"https://111qqz.github.io/2016/05/poj3368/","publishdate":"2016-05-18T07:47:48Z","readingtime":2,"relpermalink":"/2016/05/poj3368/","section":"post","summary":"poj 3368 题目链接 题意：给出n个非减的数a[i],求区间[l,r]中出现次数最多的数的出现的次数。 思路：由于数列非减，那么相等的数一定相邻。很容易","tags":["brute force","rmq","分类讨论"],"title":"poj 3368 Frequent values （暴力+rmq，分类讨论）","type":"post","url":"/2016/05/poj3368/","weight":0,"wordcount":722},{"author":null,"categories":null,"content":null,"date":1463557668,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1463557668,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%88%86%E7%B1%BB%E8%AE%A8%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%88%86%E7%B1%BB%E8%AE%A8%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"分类讨论","type":"tags","url":"/tags/%E5%88%86%E7%B1%BB%E8%AE%A8%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1463550040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463550040,"objectID":"76566ccea14a882400022486cd15ff53","permalink":"https://111qqz.github.io/2016/05/poj2452/","publishdate":"2016-05-18T05:40:40Z","readingtime":2,"relpermalink":"/2016/05/poj2452/","section":"post","summary":"poj2452题目链接 题意：给你一组数a[n]，求满足a[i] \u0026lt; a[k] \u0026lt; a[j] (i \u0026lt;= k \u0026lt;= j)的最大的j-i。 思路：大概能想到是rmq，然后想出了一个错","tags":["binary search","rmq"],"title":"poj 2452 Sticks Problem (rmq+二分，需要返回最值位置)","type":"post","url":"/2016/05/poj2452/","weight":0,"wordcount":612},{"author":null,"categories":["ACM"],"content":null,"date":1463485168,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463485168,"objectID":"1ba8b45bfc98c70f4636d2bc97c77e7e","permalink":"https://111qqz.github.io/2016/05/hdu-3193/","publishdate":"2016-05-17T11:39:28Z","readingtime":1,"relpermalink":"/2016/05/hdu-3193/","section":"post","summary":"hdu3193题目链接 题意：给出n个price 和distance,找到一个集合，集合中的每对在全集中找不到比他price和distance都","tags":["思维题"],"title":"hdu 3193 find the hotel (思维题)","type":"post","url":"/2016/05/hdu-3193/","weight":0,"wordcount":362},{"author":null,"categories":["其他"],"content":null,"date":1463406256,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463406256,"objectID":"6cedc9a7a7d87ee395f706aba2160f14","permalink":"https://111qqz.github.io/2016/05/linux/","publishdate":"2016-05-16T13:44:16Z","readingtime":1,"relpermalink":"/2016/05/linux/","section":"post","summary":"首先先生成三个程序： $ g++ a+b.cpp -o a+b $ g++ a+b2.cpp -o a+b2 $ g++ make.cpp -o make 然后生成数据 $ ./make \u0026gt; in.txt 然后运行两个程序 $ ./a+b \u0026lt; in.txt \u0026gt; out.txt $ ./a+b2 \u0026lt; in.txt \u0026gt; ans.txt 最后对拍 $ diff out.txt ans.txt 输出的结果可以","tags":["对拍"],"title":"linux下的对拍写法","type":"post","url":"/2016/05/linux/","weight":0,"wordcount":117},{"author":null,"categories":null,"content":null,"date":1463406256,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1463406256,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AF%B9%E6%8B%8D/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AF%B9%E6%8B%8D/","section":"tags","summary":"","tags":null,"title":"对拍","type":"tags","url":"/tags/%E5%AF%B9%E6%8B%8D/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1463400393,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463400393,"objectID":"468050b662651fe0c233a4e6480fcc12","permalink":"https://111qqz.github.io/2016/05/loj1081/","publishdate":"2016-05-16T12:06:33Z","readingtime":1,"relpermalink":"/2016/05/loj1081/","section":"post","summary":"lightoj 1081 题目链接 题意：和上一道一样，但是由于size变成了500，如果按照之前的做法会tle + mle\u0026hellip; 很容易发现，由于是方阵，长宽是相等的，所以有一维","tags":["rmq"],"title":"lightoj 1081 Square Queries (二维rmq，降维)","type":"post","url":"/2016/05/loj1081/","weight":0,"wordcount":376},{"author":null,"categories":["ACM"],"content":null,"date":1463396494,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463396494,"objectID":"0f477c09246c3a31ce1a9ac7bf3a908f","permalink":"https://111qqz.github.io/2016/05/poj2019/","publishdate":"2016-05-16T11:01:34Z","readingtime":1,"relpermalink":"/2016/05/poj2019/","section":"post","summary":"poj2019题目链接 题意：给一个方阵，k个查询，每个查询求某个方阵的最大值和最小值之差。 思路：二维rmq.同时用到最大值和最小值的话可以把","tags":["rmq"],"title":"poj 2019 Cornfields (二维rmq)","type":"post","url":"/2016/05/poj2019/","weight":0,"wordcount":423},{"author":null,"categories":["ACM"],"content":null,"date":1463395385,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463395385,"objectID":"c34074aa70d0fda38089a547cb84dfc4","permalink":"https://111qqz.github.io/2016/05/hdu2888/","publishdate":"2016-05-16T10:43:05Z","readingtime":1,"relpermalink":"/2016/05/hdu2888/","section":"post","summary":"hdu2888题目链接 题意：问某个矩阵内的最大值，并且问最大值是否是在四个角中出现。 思路：二维rmq.需要注意数组稍微开大1就会MLE,因为","tags":["rmq"],"title":"hdu 2888 check corners (二维rmq模板题)","type":"post","url":"/2016/05/hdu2888/","weight":0,"wordcount":413},{"author":null,"categories":["ACM"],"content":null,"date":1463377238,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463377238,"objectID":"4bbb9ba2f560a28c3f3277bcee9015ea","permalink":"https://111qqz.github.io/2016/05/hdu3183/","publishdate":"2016-05-16T05:40:38Z","readingtime":1,"relpermalink":"/2016/05/hdu3183/","section":"post","summary":"hdu3183题目链接 题意：n位长的数字串（n\u0026lt;=1000),删掉m个（m\u0026lt;=n），使得剩下的数字串表示的数字最小。 忽略前导0.","tags":["brute force"],"title":"hdu 3183 A Magic Lamp ( 暴力)","type":"post","url":"/2016/05/hdu3183/","weight":0,"wordcount":399},{"author":null,"categories":["ACM"],"content":null,"date":1463319090,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1463319090,"objectID":"afb004ba67f4fbe79919c6fed3631afb","permalink":"https://111qqz.github.io/2016/05/bzoj1636/","publishdate":"2016-05-15T13:31:30Z","readingtime":2,"relpermalink":"/2016/05/bzoj1636/","section":"post","summary":"1636: [Usaco2007 Jan]Balanced Lineup Time Limit: 5 Sec Memory Limit: 64 MB Submit: 680 Solved: 493 [Submit][Status][Discuss] Description For the daily milking, Farmer John\u0026rsquo;s N cows (1 \u0026lt;= N \u0026lt;= 50,000) always line up in the same order. One day Farmer John decides to organize a game of Ultimate Frisbee with some of the cows. To keep things simple, he will take a contiguous range of cows from the milking","tags":["rmq"],"title":"BZOJ 1636: [Usaco2007 Jan]Balanced Lineup (RMQ模板题)","type":"post","url":"/2016/05/bzoj1636/","weight":0,"wordcount":972},{"author":null,"categories":["ACM"],"content":null,"date":1462886789,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1462886789,"objectID":"470ae706be33527ecb1fecc80629feef","permalink":"https://111qqz.github.io/2016/05/bzoj1689/","publishdate":"2016-05-10T13:26:29Z","readingtime":2,"relpermalink":"/2016/05/bzoj1689/","section":"post","summary":"1689: [Usaco2005 Open] Muddy roads 泥泞的路 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 311 Solved: 227 [Submit][Status][Discuss] Description Farmer John has a problem: the dirt road from his farm to town has suffered in the recent rainstorms and now contains (1 \u0026lt;= N \u0026lt;= 10,000) mud pools. Farmer John has a collection of wooden planks of length L that he can use to bridge these","tags":["模拟"],"title":"BZOJ 1689: [Usaco2005 Open] Muddy roads 泥泞的路 （模拟）","type":"post","url":"/2016/05/bzoj1689/","weight":0,"wordcount":739},{"author":null,"categories":["ACM"],"content":null,"date":1460984809,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460984809,"objectID":"22be37207de3aec5ae6e0d91405e1dcc","permalink":"https://111qqz.github.io/2016/04/hdu-4513/","publishdate":"2016-04-18T13:06:49Z","readingtime":1,"relpermalink":"/2016/04/hdu-4513/","section":"post","summary":"题目链接：hdu4513 题意：给出一个n的数的序列，求出一个最长的回文字串，并且满足从[l,mid]单调增（非严格单调，可以相等），[mid","tags":["manacher"],"title":"hdu 4513 吉哥系列故事——完美队形II (回文串,manacher)","type":"post","url":"/2016/04/hdu-4513/","weight":0,"wordcount":413},{"author":null,"categories":null,"content":null,"date":1460984809,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460984809,"objectID":"","permalink":"https://111qqz.github.io/tags/manacher/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/manacher/","section":"tags","summary":"","tags":null,"title":"manacher","type":"tags","url":"/tags/manacher/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460982475,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460982475,"objectID":"6d747feb355c6b1ba7f22e173c1171f0","permalink":"https://111qqz.github.io/2016/04/poj3294/","publishdate":"2016-04-18T12:27:55Z","readingtime":3,"relpermalink":"/2016/04/poj3294/","section":"post","summary":"poj 3294 题意：先做个简单替换，然后求替换后的字符串的最长回文串，以及这个最长回文串的开始和结束位置。 思路：manacher..需要注意的是，返回","tags":["manacher"],"title":"poj 3294 Girls' research (manacher,回文串)","type":"post","url":"/2016/04/poj3294/","weight":0,"wordcount":1095},{"author":null,"categories":["ACM"],"content":null,"date":1460969214,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460969214,"objectID":"7f689a2608712550550341fe024b9cc1","permalink":"https://111qqz.github.io/2016/04/poj-3974-palindrome-manacher/","publishdate":"2016-04-18T08:46:54Z","readingtime":1,"relpermalink":"/2016/04/poj-3974-palindrome-manacher/","section":"post","summary":"poj3974 题意：求最大长度的回文字串。 思路：manacher裸题，用来练习算法。 /* *********************************************** Author :111qqz Created Time :2016年04月18日 星期一 16时32分25秒 File Name :code/poj/3974.cpp ************************************************","tags":["manacher"],"title":"poj 3974 Palindrome (最长回文字串，manacher裸题)","type":"post","url":"/2016/04/poj-3974-palindrome-manacher/","weight":0,"wordcount":254},{"author":null,"categories":["ACM"],"content":null,"date":1460966027,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460966027,"objectID":"8ba24db040abe49954327204670207c8","permalink":"https://111qqz.github.io/2016/04/hdu-3068/","publishdate":"2016-04-18T07:53:47Z","readingtime":2,"relpermalink":"/2016/04/hdu-3068/","section":"post","summary":"题目链接 题意：求一个字符串中的最长回文串。 思路：昨天武大校赛遇到了一个manacher算法的题。。。我竟然听都没听过。。。 于是去学习了一发。","tags":["manacher"],"title":"hdu 3068 最长回文（O(n)求回文串，manacher算法模板题）","type":"post","url":"/2016/04/hdu-3068/","weight":0,"wordcount":876},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1460822419,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460822419,"objectID":"b2ba78ce1a3a9160b4abbf32d3e3ed1f","permalink":"https://111qqz.github.io/2016/04/20160416/","publishdate":"2016-04-16T16:00:19Z","readingtime":1,"relpermalink":"/2016/04/20160416/","section":"post","summary":"最近各种比赛各种滚粗。。。 武大。。。武科大。。。地大。。。还有在路上的华农以及我科校赛。。。 然而还有10天考试。 然而还有15天要搞定OS大作","tags":null,"title":"20160416","type":"post","url":"/2016/04/20160416/","weight":0,"wordcount":147},{"author":null,"categories":["ACM"],"content":null,"date":1460710190,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460710190,"objectID":"d4fa355cc869dc49251d70bfe6ab0518","permalink":"https://111qqz.github.io/2016/04/bzoj-1660-usaco2006-novbad-hair-day-/","publishdate":"2016-04-15T08:49:50Z","readingtime":0,"relpermalink":"/2016/04/bzoj-1660-usaco2006-novbad-hair-day-/","section":"post","summary":"","tags":["单调栈"],"title":"BZOJ 1660: [Usaco2006 Nov]Bad Hair Day 乱发节 (单调栈)","type":"post","url":"/2016/04/bzoj-1660-usaco2006-novbad-hair-day--/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460707679,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460707679,"objectID":"1e259d69a47e1b6b5f33f91f2e0d570f","permalink":"https://111qqz.github.io/2016/04/bzoj-1657-usaco2006-marmooo-/","publishdate":"2016-04-15T08:07:59Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1657-usaco2006-marmooo-/","section":"post","summary":"1657: [Usaco2006 Mar]Mooo 奶牛的歌声 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 634 Solved: 447 [Submit][Status][Discuss] Description Farmer John\u0026rsquo;s N (1 \u0026lt;= N \u0026lt;= 50,000) cows are standing in a very straight row and mooing. Each cow has a unique height h in the range 1..2,000,000,000 nanometers (FJ really is a stickler for precision). Each cow moos at some volume v in the range 1..10,000.","tags":["单调栈"],"title":"BZOJ 1657: [Usaco2006 Mar]Mooo 奶牛的歌声 (单调栈)","type":"post","url":"/2016/04/bzoj-1657-usaco2006-marmooo--/","weight":0,"wordcount":1021},{"author":null,"categories":null,"content":null,"date":1460705033,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460705033,"objectID":"","permalink":"https://111qqz.github.io/tags/bfs/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/bfs/","section":"tags","summary":"","tags":null,"title":"bfs","type":"tags","url":"/tags/bfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460705033,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460705033,"objectID":"3fa79d13f248c07280ee85e9f174c1db","permalink":"https://111qqz.github.io/2016/04/bzoj-1656/","publishdate":"2016-04-15T07:23:53Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1656/","section":"post","summary":"1656: [Usaco2006 Jan] The Grove 树木 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 143 Solved: 88 [Submit][Status][Discuss] Description The pasture contains a small, contiguous grove of trees that has no \u0026lsquo;holes\u0026rsquo; in the middle of the it. Bessie wonders: how far is it to walk around that grove and get back to my starting position? She\u0026rsquo;s just sure there is a way to do it by going","tags":["bfs","射线法","计算几何"],"title":"BZOJ 1656: [Usaco2006 Jan] The Grove 树木(神奇的bfs之射线法)","type":"post","url":"/2016/04/bzoj-1656/","weight":0,"wordcount":1101},{"author":null,"categories":null,"content":null,"date":1460705033,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460705033,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B0%84%E7%BA%BF%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B0%84%E7%BA%BF%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"射线法","type":"tags","url":"/tags/%E5%B0%84%E7%BA%BF%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460633965,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460633965,"objectID":"cd5075bc0146c60e65302b7fdb7a8a16","permalink":"https://111qqz.github.io/2016/04/bzoj-3407/","publishdate":"2016-04-14T11:39:25Z","readingtime":2,"relpermalink":"/2016/04/bzoj-3407/","section":"post","summary":"3407: [Usaco2009 Oct]Bessie\u0026rsquo;s Weight Problem 贝茜的体重问题 Time Limit: 3 Sec Memory Limit: 128 MB Submit: 88 Solved: 79 [Submit][Status][Discuss] Description 贝茜像她的诸多姊妹一样，因为从约翰的草地吃了太多美味的草而长出了太多的赘肉．所以约翰将她","tags":["01背包"],"title":"BZOJ 3407: [Usaco2009 Oct]Bessie's Weight Problem 贝茜的体重问题(01背包)","type":"post","url":"/2016/04/bzoj-3407/","weight":0,"wordcount":721},{"author":null,"categories":["ACM"],"content":null,"date":1460629708,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460629708,"objectID":"5acb81c45eb2026d92d776c366a266ae","permalink":"https://111qqz.github.io/2016/04/bzoj1655/","publishdate":"2016-04-14T10:28:28Z","readingtime":2,"relpermalink":"/2016/04/bzoj1655/","section":"post","summary":"1655: [Usaco2006 Jan] Dollar Dayz 奶牛商店 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 353 Solved: 190 [Submit][Status][Discuss] Description Farmer John goes to Dollar Days at The Cow Store and discovers an unlimited number of tools on sale. During his first visit, the tools are selling variously for $1, $2, and $3. Farmer John has exactly $5 to spend. He can buy 5 tools at $1","tags":["母函数","高精度"],"title":"BZOJ 1655: [Usaco2006 Jan] Dollar Dayz 奶牛商店 (母函数，高精度)","type":"post","url":"/2016/04/bzoj1655/","weight":0,"wordcount":701},{"author":null,"categories":null,"content":null,"date":1460629708,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460629708,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%AF%8D%E5%87%BD%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%AF%8D%E5%87%BD%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"母函数","type":"tags","url":"/tags/%E6%AF%8D%E5%87%BD%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460617947,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460617947,"objectID":"e7fcb2c2d369924e6b730fc2ec58dcea","permalink":"https://111qqz.github.io/2016/04/bzoj1653/","publishdate":"2016-04-14T07:12:27Z","readingtime":2,"relpermalink":"/2016/04/bzoj1653/","section":"post","summary":"1653: [Usaco2006 Feb]Backward Digit Sums Time Limit: 5 Sec Memory Limit: 64 MB Submit: 349 Solved: 258 [Submit][Status][Discuss] Description FJ and his cows enjoy playing a mental game. They write down the numbers from 1 to N (1 \u0026lt;= N \u0026lt;= 10) in a certain order and then sum adjacent numbers to produce a new list with one fewer number. They repeat this until only a single number is left.","tags":["brute force","stl"],"title":"BZOJ 1653: [Usaco2006 Feb]Backward Digit Sums(暴力)","type":"post","url":"/2016/04/bzoj1653/","weight":0,"wordcount":521},{"author":null,"categories":["其他"],"content":null,"date":1460549455,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460549455,"objectID":"ece0202bb31b8d38cf73227f98de3adc","permalink":"https://111qqz.github.io/2016/04/tmp/","publishdate":"2016-04-13T12:10:55Z","readingtime":1,"relpermalink":"/2016/04/tmp/","section":"post","summary":"#include \u0026lt;iostream\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;cstdio\u0026gt; using namespace std; const int N=1E4+7; int n,k,Q; int siz; int pos[N]; int sum[N]; int dis[N]; bool vis[N]; vector \u0026lt; pair\u0026lt;int,int\u0026gt; \u0026gt; edge[N]; struct node { int l,r; int id; bool operator \u0026lt; (node b)const { if (pos[l]==pos[b.l]) return r\u0026lt;b.r; return pos[l]\u0026lt;pos[b.l]; } }q[N]; void dfs( int u,int val) { vis[u] = true; dis[u+1] = val; int Siz","tags":null,"title":"tmp","type":"post","url":"/2016/04/tmp/","weight":0,"wordcount":187},{"author":null,"categories":["ACM"],"content":null,"date":1460464122,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460464122,"objectID":"09afff9a65d170a5ee1faab0e3b0b032","permalink":"https://111qqz.github.io/2016/04/hdu2586/","publishdate":"2016-04-12T12:28:42Z","readingtime":2,"relpermalink":"/2016/04/hdu2586/","section":"post","summary":"题目链接 题意：一棵树，给出n-1个边权，然后q组查询，每组查询询问两个点之间的距离。 思路： dfs跑出根到每个点的距离，设为dis[i] 那么u","tags":["LCA","Tarjan"],"title":"hdu 2586 How far away ？ (tarjan算法求LCA模板题)","type":"post","url":"/2016/04/hdu2586/","weight":0,"wordcount":759},{"author":null,"categories":null,"content":null,"date":1460464122,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460464122,"objectID":"","permalink":"https://111qqz.github.io/tags/tarjan/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tarjan/","section":"tags","summary":"","tags":null,"title":"Tarjan","type":"tags","url":"/tags/tarjan/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1460457319,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460457319,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9B%BE%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%BE%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"图论","type":"tags","url":"/tags/%E5%9B%BE%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460457319,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460457319,"objectID":"2a1326c2adc30f1bfd2d885f0ad30665","permalink":"https://111qqz.github.io/2016/04/","publishdate":"2016-04-12T10:35:19Z","readingtime":2,"relpermalink":"/2016/04/","section":"post","summary":"转载自： 原文链接 树边，前向边，后向边，横叉边，应该说，不是一个图本身有的概念，应该是图进行DFS时才有的概念。图进行DFS会得到一棵DFS树","tags":["图论"],"title":"树边，前向边，后向边，横叉边","type":"post","url":"/2016/04//","weight":0,"wordcount":727},{"author":null,"categories":["ACM"],"content":null,"date":1460428648,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460428648,"objectID":"6e50a80a657f8e21d1176f0c0459321a","permalink":"https://111qqz.github.io/2016/04/bzoj-1652/","publishdate":"2016-04-12T02:37:28Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1652/","section":"post","summary":"1652: [Usaco2006 Feb]Treats for the Cows Time Limit: 5 Sec Memory Limit: 64 MB Submit: 290 Solved: 226 [Submit][Status][Discuss] Description FJ has purchased N (1 \u0026lt;= N \u0026lt;= 2000) yummy treats for the cows who get money for giving vast amounts of milk. FJ sells one treat per day and wants to maximize the money he receives over a given period time. The treats are interesting for many reasons: *","tags":["区间dp"],"title":"BZOJ 1652: [Usaco2006 Feb]Treats for the Cows (区间dp)","type":"post","url":"/2016/04/bzoj-1652/","weight":0,"wordcount":1351},{"author":null,"categories":["ACM"],"content":null,"date":1460377918,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460377918,"objectID":"0468344078eed9775d4dfbcf0fd9ecd4","permalink":"https://111qqz.github.io/2016/04/bzoj1651/","publishdate":"2016-04-11T12:31:58Z","readingtime":2,"relpermalink":"/2016/04/bzoj1651/","section":"post","summary":"1651: [Usaco2006 Feb]Stall Reservations 专用牛棚 Time Limit: 10 Sec Memory Limit: 64 MB Submit: 700 Solved: 393 [Submit][Status][Discuss] Description Oh those picky N (1 \u0026lt;= N \u0026lt;= 50,000) cows! They are so picky that each one will only be milked over some precise time interval A..B (1 \u0026lt;= A \u0026lt;= B \u0026lt;= 1,000,000), which includes both times A and B. Obviously, FJ must create a reservation system","tags":["前缀和"],"title":"BZOJ 1651: [Usaco2006 Feb]Stall Reservations 专用牛棚 (前缀和)","type":"post","url":"/2016/04/bzoj1651/","weight":0,"wordcount":587},{"author":null,"categories":["ACM"],"content":null,"date":1460376422,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460376422,"objectID":"09ea32f9996af747b886e6920b3d40c0","permalink":"https://111qqz.github.io/2016/04/bzoj-1650/","publishdate":"2016-04-11T12:07:02Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1650/","section":"post","summary":"1650: [Usaco2006 Dec]River Hopscotch 跳石子 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 440 Solved: 290 [Submit][Status][Discuss] Description Every year the cows hold an event featuring a peculiar version of hopscotch that involves carefully jumping from rock to rock in a river. The excitement takes place on a long, straight river with a rock at the start and another rock at the end, L units away from","tags":["binary search"],"title":"BZOJ 1650: [Usaco2006 Dec]River Hopscotch 跳石子 (二分)","type":"post","url":"/2016/04/bzoj-1650/","weight":0,"wordcount":996},{"author":null,"categories":["ACM"],"content":null,"date":1460366392,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460366392,"objectID":"f3a75fb9b7349532632df793ca8856a8","permalink":"https://111qqz.github.io/2016/04/bzoj-1649/","publishdate":"2016-04-11T09:19:52Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1649/","section":"post","summary":"Time Limit: 5 Sec Memory Limit: 64 MB Submit: 504 Solved: 265 [Submit][Status][Discuss] Description The cows are building a roller coaster! They want your help to design as fun a roller coaster as possible, while keeping to the budget. The roller coaster will be built on a long linear stretch of land of length L (1 \u0026lt;= L \u0026lt;= 1,000). The roller coaster comprises a collection of some of the","tags":["01背包","dp"],"title":"BZOJ 1649: [Usaco2006 Dec]Cow Roller Coaster (dp，类似01背包)","type":"post","url":"/2016/04/bzoj-1649/","weight":0,"wordcount":1078},{"author":null,"categories":["ACM"],"content":null,"date":1460363785,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460363785,"objectID":"3d258ac480a053ad6b98a3a01b4cd50e","permalink":"https://111qqz.github.io/2016/04/bzoj-1648/","publishdate":"2016-04-11T08:36:25Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1648/","section":"post","summary":"1648: [Usaco2006 Dec]Cow Picnic 奶牛野餐 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 562 Solved: 352 [Submit][Status][Discuss] Description The cows are having a picnic! Each of Farmer John\u0026rsquo;s K (1 \u0026lt;= K \u0026lt;= 100) cows is grazing in one of N (1 \u0026lt;= N \u0026lt;= 1,000) pastures, conveniently numbered 1\u0026hellip;N. The pastures are connected by M (1 \u0026lt;= M \u0026lt;= 10,000) one-way paths (no path connects","tags":["dfs"],"title":"BZOJ 1648: [Usaco2006 Dec]Cow Picnic 奶牛野餐 (dfs)","type":"post","url":"/2016/04/bzoj-1648/","weight":0,"wordcount":874},{"author":null,"categories":["ACM"],"content":null,"date":1460293632,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460293632,"objectID":"8eb18124a84a328c5b0b311096030ef6","permalink":"https://111qqz.github.io/2016/04/bzoj-1646-usaco2007-opencatch-that-cow-bfs/","publishdate":"2016-04-10T13:07:12Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1646-usaco2007-opencatch-that-cow-bfs/","section":"post","summary":"1646: [Usaco2007 Open]Catch That Cow 抓住那只牛 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 915 Solved: 441 [Submit][Status][Discuss] Description Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point N (0 \u0026lt;= N \u0026lt;= 100,000) on a number line and the cow is at a point K (0 \u0026lt;= K \u0026lt;= 100,000)","tags":["bfs"],"title":"BZOJ 1646: [Usaco2007 Open]Catch That Cow 抓住那只牛 (BFS)","type":"post","url":"/2016/04/bzoj-1646-usaco2007-opencatch-that-cow--bfs/","weight":0,"wordcount":655},{"author":null,"categories":["ACM"],"content":null,"date":1460292106,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460292106,"objectID":"550d8b452a773190badfaef156fc14a6","permalink":"https://111qqz.github.io/2016/04/bzoj-1644-usaco2007-octobstacle-course-bfsdp/","publishdate":"2016-04-10T12:41:46Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1644-usaco2007-octobstacle-course-bfsdp/","section":"post","summary":"1644: [Usaco2007 Oct]Obstacle Course 障碍训练课 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 451 Solved: 226 [Submit][Status][Discuss] Description 考虑一个 N x N (1 \u0026lt;= N \u0026lt;= 100)的有1个个方格组成的正方形牧场。有些方格是奶牛们不能踏上的，它们","tags":["bfs","dp"],"title":"BZOJ 1644: [Usaco2007 Oct]Obstacle Course 障碍训练课 (BFS,DP)","type":"post","url":"/2016/04/bzoj-1644-usaco2007-octobstacle-course--bfsdp/","weight":0,"wordcount":921},{"author":null,"categories":["ACM"],"content":null,"date":1460278702,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460278702,"objectID":"07a3f9a35537c5083344011de908b33b","permalink":"https://111qqz.github.io/2016/04/bzoj-1643-usaco2007-octbessies-secret-pasture-/","publishdate":"2016-04-10T08:58:22Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1643-usaco2007-octbessies-secret-pasture-/","section":"post","summary":"1643: [Usaco2007 Oct]Bessie\u0026rsquo;s Secret Pasture 贝茜的秘密草坪 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 330 Solved: 278 [Submit][Status][Discuss] Description 农夫约翰已经从他的牧场中取得了数不清块数的正方形草皮，草皮的边长总是整数（有时农夫约翰割","tags":["母函数"],"title":"BZOJ 1643: [Usaco2007 Oct]Bessie's Secret Pasture 贝茜的秘密草坪(母函数)","type":"post","url":"/2016/04/bzoj-1643-usaco2007-octbessies-secret-pasture-/","weight":0,"wordcount":653},{"author":null,"categories":["ACM"],"content":null,"date":1460277095,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460277095,"objectID":"c478734bdb458cd061e41378990a66ea","permalink":"https://111qqz.github.io/2016/04/bzoj1642/","publishdate":"2016-04-10T08:31:35Z","readingtime":2,"relpermalink":"/2016/04/bzoj1642/","section":"post","summary":"Time Limit: 5 Sec Memory Limit: 64 MB Submit: 667 Solved: 389 [Submit][Status][Discuss] Description 贝茜是一只非常努力工作的奶牛，她总是专注于提高自己的产量。为了产更多的奶，她预计好了接下来的N (1 ≤ N ≤ 1,000","tags":["LIS"],"title":"BZOJ 1642: [Usaco2007 Nov]Milking Time 挤奶时间 (dp,类似LIS)","type":"post","url":"/2016/04/bzoj1642/","weight":0,"wordcount":739},{"author":null,"categories":["ACM"],"content":null,"date":1460223706,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460223706,"objectID":"5c5fbd9cc9a491e210c33b538ea29704","permalink":"https://111qqz.github.io/2016/04/bzoj-1641-usaco2007-novcow-hurdles-floyd/","publishdate":"2016-04-09T17:41:46Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1641-usaco2007-novcow-hurdles-floyd/","section":"post","summary":"1641: [Usaco2007 Nov]Cow Hurdles 奶牛跨栏 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 531 Solved: 344 [Submit][Status][Discuss] Description Farmer John 想让她的奶牛准备郡级跳跃比赛，贝茜和她的伙伴们正在练习跨栏。她们很累，所以她们想消耗最少的能","tags":["floyd"],"title":"BZOJ 1641: [Usaco2007 Nov]Cow Hurdles 奶牛跨栏 (floyd)","type":"post","url":"/2016/04/bzoj-1641-usaco2007-novcow-hurdles--floyd/","weight":0,"wordcount":804},{"author":null,"categories":["ACM"],"content":null,"date":1460204978,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460204978,"objectID":"86ab21134ee658e17cf3f51cd85f05b4","permalink":"https://111qqz.github.io/2016/04/bzoj-1640/","publishdate":"2016-04-09T12:29:38Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1640/","section":"post","summary":"1640: [Usaco2007 Nov]Best Cow Line 队列变换 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 710 Solved: 373 [Submit][Status][Discuss] Description FJ打算带着他可爱的N (1 ≤ N ≤ 2,000)头奶牛去参加”年度最佳老农”的比赛.在比赛中,每个农","tags":["greedy"],"title":"BZOJ 1640/1692 : [Usaco2007 Nov]Best Cow Line 队列变换 (贪心)","type":"post","url":"/2016/04/bzoj-1640/","weight":0,"wordcount":1397},{"author":null,"categories":["ACM"],"content":null,"date":1460103070,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460103070,"objectID":"cf5a43b16004b119dbe773b84f984ba2","permalink":"https://111qqz.github.io/2016/04/bzoj-1639/","publishdate":"2016-04-08T08:11:10Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1639/","section":"post","summary":"1639: [Usaco2007 Mar]Monthly Expense 月度开支 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 767 Solved: 381 [Submit][Status][Discuss] Description Farmer John是一个令人惊讶的会计学天才，他已经明白了他可能会花光他的钱，这些钱本来是要维持农场每个","tags":["binary search"],"title":"BZOJ 1639: [Usaco2007 Mar]Monthly Expense 月度开支 (二分)","type":"post","url":"/2016/04/bzoj-1639/","weight":0,"wordcount":960},{"author":null,"categories":["ACM"],"content":null,"date":1460098797,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460098797,"objectID":"5f299cd0793f9bd7e1a4046818c6042c","permalink":"https://111qqz.github.io/2016/04/bzoj-1637/","publishdate":"2016-04-08T06:59:57Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1637/","section":"post","summary":"1637: [Usaco2007 Mar]Balanced Lineup Time Limit: 5 Sec Memory Limit: 64 MB Submit: 503 Solved: 336 [Submit][Status][Discuss] Description Farmer John 决定给他的奶牛们照一张合影，他让 N (1 ≤ N ≤ 50,000) 头奶牛站成一条直线，每头牛都有它的坐标(范围: 0..1,","tags":["乱搞","前缀和"],"title":"BZOJ 1637: [Usaco2007 Mar]Balanced Lineup (前缀和乱搞)","type":"post","url":"/2016/04/bzoj-1637/","weight":0,"wordcount":1251},{"author":null,"categories":["ACM"],"content":null,"date":1460045940,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460045940,"objectID":"b65fa690985b9a464a7c83c2d005978f","permalink":"https://111qqz.github.io/2016/04/bzoj-1635/","publishdate":"2016-04-07T16:19:00Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1635/","section":"post","summary":"1635: [Usaco2007 Jan]Tallest Cow 最高的牛 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 472 Solved: 278 [Submit][Status][Discuss] Description FJ\u0026rsquo;s N (1 \u0026lt;= N \u0026lt;= 10,000) cows conveniently indexed 1..N are standing in a line. Each cow has a positive integer height (which is a bit of secret). You are told only the height H (1 \u0026lt;= H \u0026lt;= 1,000,000) of the tallest cow along with the","tags":["前缀和","差分序列"],"title":"BZOJ 1635: [Usaco2007 Jan]Tallest Cow 最高的牛 (差分序列（前缀和的逆）)","type":"post","url":"/2016/04/bzoj-1635/","weight":0,"wordcount":791},{"author":null,"categories":null,"content":null,"date":1460045940,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1460045940,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B7%AE%E5%88%86%E5%BA%8F%E5%88%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B7%AE%E5%88%86%E5%BA%8F%E5%88%97/","section":"tags","summary":"","tags":null,"title":"差分序列","type":"tags","url":"/tags/%E5%B7%AE%E5%88%86%E5%BA%8F%E5%88%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1460008369,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1460008369,"objectID":"be042d6e1d3a39a8f9988c0b049ba3ea","permalink":"https://111qqz.github.io/2016/04/bzoj1634/","publishdate":"2016-04-07T05:52:49Z","readingtime":2,"relpermalink":"/2016/04/bzoj1634/","section":"post","summary":"1634: [Usaco2007 Jan]Protecting the Flowers 护花 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 605 Solved: 383 [Submit][Status][Discuss] Description Farmer John went to cut some wood and left N (2 \u0026lt;= N \u0026lt;= 100,000) cows eating the grass, as usual. When he returned, he found to his horror that the cows were in his garden eating his beautiful flowers. Wanting to minimize the subsequent damage, FJ decided to","tags":["greedy"],"title":"BZOJ 1634: [Usaco2007 Jan]Protecting the Flowers 护花(贪心)","type":"post","url":"/2016/04/bzoj1634/","weight":0,"wordcount":829},{"author":null,"categories":["ACM"],"content":null,"date":1459957033,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459957033,"objectID":"ccfab5f17181f281396d789f98df1760","permalink":"https://111qqz.github.io/2016/04/bzoj-1632/","publishdate":"2016-04-06T15:37:13Z","readingtime":4,"relpermalink":"/2016/04/bzoj-1632/","section":"post","summary":"1632: [Usaco2007 Feb]Lilypad Pond Time Limit: 5 Sec Memory Limit: 64 MB Submit: 496 Solved: 153 [Submit][Status][Discuss] Description Farmer John 建造了一个美丽的池塘，用于让他的牛们审美和锻炼。这个长方形的池子被分割成了 M 行和 N 列( 1 ≤ M ≤ 30 ; 1","tags":["bfs","dp","计数问题"],"title":"BZOJ 1632: [Usaco2007 Feb]Lilypad Pond (BFS,dp)","type":"post","url":"/2016/04/bzoj-1632/","weight":0,"wordcount":1573},{"author":null,"categories":["ACM"],"content":null,"date":1459769292,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459769292,"objectID":"1a340727d243f27fd407ff16d741698e","permalink":"https://111qqz.github.io/2016/04/bzoj1630/","publishdate":"2016-04-04T11:28:12Z","readingtime":4,"relpermalink":"/2016/04/bzoj1630/","section":"post","summary":"2023: [Usaco2005 Nov]Ant Counting 数蚂蚁 Time Limit: 4 Sec Memory Limit: 64 MB Submit: 149 Solved: 85 [Submit][Status][Discuss] Description 有一天，贝茜无聊地坐在蚂蚁洞前看蚂蚁们进进出出地搬运食物．很快贝茜发现有些蚂蚁长得几乎一模一样，于","tags":["母函数"],"title":"BZOJ 1630/2023: [Usaco2005 Nov]Ant Counting 数蚂蚁  （母函数）","type":"post","url":"/2016/04/bzoj1630/","weight":0,"wordcount":1535},{"author":null,"categories":["ACM"],"content":null,"date":1459762075,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459762075,"objectID":"d733177ffc9e4906a5165036dc6e6ebd","permalink":"https://111qqz.github.io/2016/04/bzoj1629/","publishdate":"2016-04-04T09:27:55Z","readingtime":2,"relpermalink":"/2016/04/bzoj1629/","section":"post","summary":"1629: [Usaco2007 Demo]Cow Acrobats Time Limit: 5 Sec Memory Limit: 64 MB Submit: 771 Solved: 398 [Submit][Status][Discuss] Description Farmer John\u0026rsquo;s N (1 \u0026lt;= N \u0026lt;= 50,000) cows (numbered 1..N) are planning to run away and join the circus. Their hoofed feet prevent them from tightrope walking and swinging from the trapeze (and their last attempt at firing a cow out of a cannon met with a dismal failure). Thus, they","tags":["greedy"],"title":"BZOJ 1629: [Usaco2007 Demo]Cow Acrobats (贪心)","type":"post","url":"/2016/04/bzoj1629/","weight":0,"wordcount":764},{"author":null,"categories":["ACM"],"content":null,"date":1459759658,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459759658,"objectID":"4090a7a4aaaec1cfb48b7c1c1a727ae3","permalink":"https://111qqz.github.io/2016/04/bzoj1628/","publishdate":"2016-04-04T08:47:38Z","readingtime":1,"relpermalink":"/2016/04/bzoj1628/","section":"post","summary":"1628: [Usaco2007 Demo]City skyline Time Limit: 5 Sec Memory Limit: 64 MB Submit: 396 Solved: 317 [Submit][Status][Discuss] Description Input 第一行给出N，W 第二行到第N+1行:每行给出二个整数x,y，输入的x严格递增，并且第一个x总是1 Output 输出","tags":["单调栈"],"title":"BZOJ 1628: [Usaco2007 Demo]City skyline (单调栈)","type":"post","url":"/2016/04/bzoj1628/","weight":0,"wordcount":463},{"author":null,"categories":["ACM"],"content":null,"date":1459753206,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459753206,"objectID":"c90a336b0ae12441ef6a9730dfaea6c9","permalink":"https://111qqz.github.io/2016/04/bzoj1627/","publishdate":"2016-04-04T07:00:06Z","readingtime":3,"relpermalink":"/2016/04/bzoj1627/","section":"post","summary":"1627: [Usaco2007 Dec]穿越泥地 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 624 Solved: 411 [Submit][Status][Discuss] Description 清早6：00，Farmer John就离开了他的屋子，开始了他的例行工作：为贝茜挤奶。前一天晚","tags":["bfs"],"title":"BZOJ 1627: [Usaco2007 Dec]穿越泥地 (BFS)","type":"post","url":"/2016/04/bzoj1627/","weight":0,"wordcount":1063},{"author":null,"categories":["ACM"],"content":null,"date":1459752018,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459752018,"objectID":"3c366af0e79db051ac2959618157a124","permalink":"https://111qqz.github.io/2016/04/bzoj1626/","publishdate":"2016-04-04T06:40:18Z","readingtime":3,"relpermalink":"/2016/04/bzoj1626/","section":"post","summary":"1626: [Usaco2007 Dec]Building Roads 修建道路 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 1362 Solved: 541 [Submit][Status][Discuss] Description Farmer John最近得到了一些新的农场，他想新修一些道路使得他的所有农场可以经过原有的或是新修的道路互","tags":["最小生成树"],"title":"BZOJ 1626: [Usaco2007 Dec]Building Roads 修建道路 (MST)","type":"post","url":"/2016/04/bzoj1626/","weight":0,"wordcount":1087},{"author":null,"categories":null,"content":null,"date":1459752018,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1459752018,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","section":"tags","summary":"","tags":null,"title":"最小生成树","type":"tags","url":"/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1459710437,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459710437,"objectID":"34aeb84250858a657ed23deb183fe979","permalink":"https://111qqz.github.io/2016/04/bzoj1624/","publishdate":"2016-04-03T19:07:17Z","readingtime":2,"relpermalink":"/2016/04/bzoj1624/","section":"post","summary":"1624: [Usaco2008 Open] Clear And Present Danger 寻宝之路 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 507 Solved: 345 [Submit][Status][Discuss] Description 农夫约翰正驾驶一条小艇在牛勒比海上航行． 海上有N(1≤N≤100)个岛屿，用1到N编号．约","tags":["floyd"],"title":"BZOJ 1624: [Usaco2008 Open] Clear And Present Danger 寻宝之路 (Floyd)","type":"post","url":"/2016/04/bzoj1624/","weight":0,"wordcount":762},{"author":null,"categories":["ACM"],"content":null,"date":1459709096,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459709096,"objectID":"4a2fba93047b286883fb89665bfd2813","permalink":"https://111qqz.github.io/2016/04/bzoj1623/","publishdate":"2016-04-03T18:44:56Z","readingtime":2,"relpermalink":"/2016/04/bzoj1623/","section":"post","summary":"1623: [Usaco2008 Open]Cow Cars 奶牛飞车 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 386 Solved: 266 [Submit][Status][Discuss] Description 编号为1到N的N只奶牛正各自驾着车打算在牛德比亚的高速公路上飞驰．高速公路有M(1≤M≤N)条车","tags":["greedy"],"title":"BZOJ 1623: [Usaco2008 Open]Cow Cars 奶牛飞车 (贪心)","type":"post","url":"/2016/04/bzoj1623/","weight":0,"wordcount":761},{"author":null,"categories":["ACM"],"content":null,"date":1459707790,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459707790,"objectID":"7ebce815a64354251cd6aeb44182922a","permalink":"https://111qqz.github.io/2016/04/bzoj1622/","publishdate":"2016-04-03T18:23:10Z","readingtime":2,"relpermalink":"/2016/04/bzoj1622/","section":"post","summary":"1622: [Usaco2008 Open]Word Power 名字的能量 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 462 Solved: 228 [Submit][Status][Discuss] Description 约翰想要计算他那N(1≤N≤1000)只奶牛的名字的能量．每只奶牛的名字由不超过1000个字待","tags":["brute force"],"title":"BZOJ 1622: [Usaco2008 Open]Word Power 名字的能量 (暴力)","type":"post","url":"/2016/04/bzoj1622/","weight":0,"wordcount":752},{"author":null,"categories":["ACM"],"content":null,"date":1459706315,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459706315,"objectID":"ee2f40dcdc8a7dc1d54d772619b79c8f","permalink":"https://111qqz.github.io/2016/04/bzoj1621/","publishdate":"2016-04-03T17:58:35Z","readingtime":2,"relpermalink":"/2016/04/bzoj1621/","section":"post","summary":"1621: [Usaco2008 Open]Roads Around The Farm分岔路口 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 698 Solved: 513 [Submit][Status][Discuss] Description 约翰的N(1≤N≤1,000,000,000)只奶牛要出发去探索牧场四周的土地．她们将","tags":["dfs"],"title":"BZOJ1621: [Usaco2008 Open]Roads Around The Farm分岔路口 (DFS)","type":"post","url":"/2016/04/bzoj1621/","weight":0,"wordcount":564},{"author":null,"categories":["ACM"],"content":null,"date":1459705442,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459705442,"objectID":"3e0ac9c82cda38e0f246591b65b7257a","permalink":"https://111qqz.github.io/2016/04/bzoj-1620/","publishdate":"2016-04-03T17:44:02Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1620/","section":"post","summary":"1620: [Usaco2008 Nov]Time Management 时间管理 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 636 Solved: 387 [Submit][Status][Discuss] Description Ever the maturing businessman, Farmer John realizes that he must manage his time effectively. He has N jobs conveniently numbered 1..N (1 \u0026lt;= N \u0026lt;= 1,000) to accomplish (like milking the cows, cleaning the barn, mending the fences, and so on). To manage his time effectively, he has","tags":["greedy"],"title":"BZOJ 1620: [Usaco2008 Nov]Time Management 时间管理 (贪心)","type":"post","url":"/2016/04/bzoj-1620/","weight":0,"wordcount":595},{"author":null,"categories":["ACM"],"content":null,"date":1459704184,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459704184,"objectID":"e1be43ffd00677e48a4d02abd75277fe","permalink":"https://111qqz.github.io/2016/04/bzoj1619-usaco2008-novguarding-the-farm-bfs/","publishdate":"2016-04-03T17:23:04Z","readingtime":4,"relpermalink":"/2016/04/bzoj1619-usaco2008-novguarding-the-farm-bfs/","section":"post","summary":"1619: [Usaco2008 Nov]Guarding the Farm 保卫牧场 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 661 Solved: 292 [Submit][Status][Discuss] Description The farm has many hills upon which Farmer John would like to place guards to ensure the safety of his valuable milk-cows. He wonders how many guards he will need if he wishes to put one on top of each hill. He has a map supplied as","tags":["bfs","dfs"],"title":"BZOJ1619: [Usaco2008 Nov]Guarding the Farm 保卫牧场 （BFS）","type":"post","url":"/2016/04/bzoj1619-usaco2008-novguarding-the-farm--bfs/","weight":0,"wordcount":1976},{"author":null,"categories":["ACM"],"content":null,"date":1459684385,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459684385,"objectID":"48581276c957bb301ab5e11489419fd9","permalink":"https://111qqz.github.io/2016/04/bzoj-1618-usaco2008-novbuying-hay-/","publishdate":"2016-04-03T11:53:05Z","readingtime":2,"relpermalink":"/2016/04/bzoj-1618-usaco2008-novbuying-hay-/","section":"post","summary":"1618: [Usaco2008 Nov]Buying Hay 购买干草 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 906 Solved: 456 [Submit][Status][Discuss] Description 约翰的干草库存已经告罄，他打算为奶牛们采购日(1≤日≤50000)磅干草． 他知道N(1≤N≤10","tags":["dp","完全背包"],"title":"BZOJ 1618: [Usaco2008 Nov]Buying Hay 购买干草 (完全背包)","type":"post","url":"/2016/04/bzoj-1618-usaco2008-novbuying-hay--/","weight":0,"wordcount":504},{"author":null,"categories":null,"content":null,"date":1459684385,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1459684385,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/","section":"tags","summary":"","tags":null,"title":"完全背包","type":"tags","url":"/tags/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1459683282,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459683282,"objectID":"c497332d1839904e9e6001a29110c8e7","permalink":"https://111qqz.github.io/2016/04/bzoj1617/","publishdate":"2016-04-03T11:34:42Z","readingtime":3,"relpermalink":"/2016/04/bzoj1617/","section":"post","summary":"1617: [Usaco2008 Mar]River Crossing渡河问题 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 837 Solved: 606 [Submit][Status][Discuss] Description Farmer John以及他的N(1 \u0026lt;= N \u0026lt;= 2,500)头奶牛打算过一条河，但他们所有的渡河工具","tags":["dp"],"title":"BZOJ 1617: [Usaco2008 Mar]River Crossing渡河问题 (DP)","type":"post","url":"/2016/04/bzoj1617/","weight":0,"wordcount":1168},{"author":null,"categories":["ACM"],"content":null,"date":1459669938,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459669938,"objectID":"ee65205da4ac43c44fd6da5614adee9d","permalink":"https://111qqz.github.io/2016/04/bzoj1616/","publishdate":"2016-04-03T07:52:18Z","readingtime":3,"relpermalink":"/2016/04/bzoj1616/","section":"post","summary":"1616: [Usaco2008 Mar]Cow Travelling游荡的奶牛 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 1012 Solved: 553 [Submit][Status][Discuss] Description 奶牛们在被划分成N行M列(2 \u0026lt;= N \u0026lt;= 100; 2 \u0026lt;= M \u0026lt;= 100)的草地上游走，试图找到整","tags":["dp"],"title":"BZOJ 1616: [Usaco2008 Mar]Cow Travelling游荡的奶牛(DP)","type":"post","url":"/2016/04/bzoj1616/","weight":0,"wordcount":1384},{"author":null,"categories":["ACM"],"content":null,"date":1459590096,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459590096,"objectID":"447a8cc9d5bee4b0ba177748fb8ab780","permalink":"https://111qqz.github.io/2016/04/bzoj1613/","publishdate":"2016-04-02T09:41:36Z","readingtime":3,"relpermalink":"/2016/04/bzoj1613/","section":"post","summary":"1613: [Usaco2007 Jan]Running贝茜的晨练计划 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 1468 Solved: 706 [Submit][Status][Discuss] Description 奶牛们打算通过锻炼来培养自己的运动细胞，作为其中的一员，贝茜选择的运动方","tags":["dp"],"title":"BZOJ 1613: [Usaco2007 Jan]Running贝茜的晨练计划 (dp)","type":"post","url":"/2016/04/bzoj1613/","weight":0,"wordcount":1131},{"author":null,"categories":["ACM"],"content":null,"date":1459583710,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459583710,"objectID":"30d9f69c28c04c4292682f3907d5dc6b","permalink":"https://111qqz.github.io/2016/04/bzoj1612/","publishdate":"2016-04-02T07:55:10Z","readingtime":2,"relpermalink":"/2016/04/bzoj1612/","section":"post","summary":"1612: [Usaco2008 Jan]Cow Contest奶牛的比赛 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 900 Solved: 597 [Submit][Status][Discuss] Description FJ的N(1 \u0026lt;= N \u0026lt;= 100)头奶牛们最近参加了场程序设计竞赛:)。在赛场上，奶牛们按","tags":["floyd","传递闭包"],"title":"BZOJ 1612: [Usaco2008 Jan]Cow Contest奶牛的比赛(floyd,传递闭包)","type":"post","url":"/2016/04/bzoj1612/","weight":0,"wordcount":943},{"author":null,"categories":["ACM"],"content":null,"date":1459580798,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459580798,"objectID":"c82673a16ad560f03aa984cf4f82e864","permalink":"https://111qqz.github.io/2016/04/bzoj-1611/","publishdate":"2016-04-02T07:06:38Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1611/","section":"post","summary":"1611: [Usaco2008 Feb]Meteor Shower流星雨 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 1239 Solved: 537 [Submit][Status][Discuss] Description 去年偶们湖南遭受N年不遇到冰冻灾害，现在芙蓉哥哥则听说另一个骇人听闻的消息： 一场流星雨即","tags":["bfs"],"title":"BZOJ 1611: [Usaco2008 Feb]Meteor Shower流星雨 (BFS)","type":"post","url":"/2016/04/bzoj-1611/","weight":0,"wordcount":1321},{"author":null,"categories":["ACM"],"content":null,"date":1459516614,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459516614,"objectID":"774c736df11969b101eea400ffad7fc8","permalink":"https://111qqz.github.io/2016/04/hdu1950/","publishdate":"2016-04-01T13:16:54Z","readingtime":1,"relpermalink":"/2016/04/hdu1950/","section":"post","summary":"题目链接 题意：有两跟柱子并排竖直放置，每根柱子有n个结点，从上往下标号1..n， 两根柱子间的结点间要连线，给出计划连接的情况。a[i]表示左","tags":["LIS"],"title":"hdu 1950 Bridging signals (LIS)","type":"post","url":"/2016/04/hdu1950/","weight":0,"wordcount":409},{"author":null,"categories":["ACM"],"content":null,"date":1459513933,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459513933,"objectID":"1b545b31e36b8ba0ad0768387514f157","permalink":"https://111qqz.github.io/2016/04/bzoj-1609/","publishdate":"2016-04-01T12:32:13Z","readingtime":3,"relpermalink":"/2016/04/bzoj-1609/","section":"post","summary":"1609: [Usaco2008 Feb]Eating Together麻烦的聚餐 Time Limit: 10 Sec Memory Limit: 64 MB Submit: 1282 Solved: 766 [Submit][Status][Discuss] Description 为了避免餐厅过分拥挤，FJ要求奶牛们分3批就餐。每天晚饭前，奶牛们都会在餐厅前排","tags":["LIS"],"title":"BZOJ 1609: [Usaco2008 Feb]Eating Together麻烦的聚餐(LIS nlogn解法)","type":"post","url":"/2016/04/bzoj-1609/","weight":0,"wordcount":1162},{"author":null,"categories":["ACM"],"content":null,"date":1459512941,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459512941,"objectID":"18528f7eafbc2ac74188c1191d72725b","permalink":"https://111qqz.github.io/2016/04/nlogn/","publishdate":"2016-04-01T12:15:41Z","readingtime":2,"relpermalink":"/2016/04/nlogn/","section":"post","summary":"首先回顾一下n^2的做法。 状态转移方程为dp[i] =max(1,dp[j]) (1=\u0026lt;j\u0026lt;=i-1\u0026amp;\u0026amp;a[i]\u0026gt;a[j]) for ( int i = 1 ; i \u0026lt;= n ; i++) cin\u0026gt;\u0026gt;a[i]; for ( int i = 1 ; i \u0026lt;= n ; i++) { dp[i] = 1; for ( int j = 1 ; j \u0026lt; i ; j++) { if","tags":["dp","LIS"],"title":"最长上升子序列nlogn解法","type":"post","url":"/2016/04/nlogn/","weight":0,"wordcount":792},{"author":null,"categories":["ACM"],"content":null,"date":1459430551,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459430551,"objectID":"ab7516949547e9f251bb0608b2fef27f","permalink":"https://111qqz.github.io/2016/03/bzoj1599/","publishdate":"2016-03-31T13:22:31Z","readingtime":2,"relpermalink":"/2016/03/bzoj1599/","section":"post","summary":"1599: [Usaco2008 Oct]笨重的石子 Time Limit: 10 Sec Memory Limit: 162 MB Submit: 886 Solved: 614 [Submit][Status][Discuss] Description 贝西喜欢棋盘游戏和角色扮演类游戏所以她说服Farmer John把她带到玩具店，在那里，她购","tags":["brute force"],"title":"bzoj 1599: [Usaco2008 Oct]笨重的石子 (暴力)","type":"post","url":"/2016/03/bzoj1599/","weight":0,"wordcount":579},{"author":null,"categories":["ACM"],"content":null,"date":1459429827,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459429827,"objectID":"b45271f3564a1f92d892986d4856be3b","permalink":"https://111qqz.github.io/2016/03/bzoj1603/","publishdate":"2016-03-31T13:10:27Z","readingtime":2,"relpermalink":"/2016/03/bzoj1603/","section":"post","summary":"Time Limit: 5 Sec Memory Limit: 64 MB Submit: 774 Solved: 593 [Submit][Status][Discuss] Description Farmer John有一个过时的打谷机（收割小麦），它需要带子来带动。发动机驱动轮1总是顺时针旋转的，用来带动转轮2，转轮","tags":["模拟"],"title":"bzoj1603: [Usaco2008 Oct]打谷机 (纱布题)","type":"post","url":"/2016/03/bzoj1603/","weight":0,"wordcount":552},{"author":null,"categories":["ACM"],"content":null,"date":1459429047,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459429047,"objectID":"d46473eb494e45fee0afa26cff46434a","permalink":"https://111qqz.github.io/2016/03/bzoj1602/","publishdate":"2016-03-31T12:57:27Z","readingtime":2,"relpermalink":"/2016/03/bzoj1602/","section":"post","summary":"Description N头牛（2\u0026lt;=n\u0026lt;=1000）别人被标记为1到n，在同样被标记1到n的n块土地上吃草，第i头牛在第i块牧场吃草。 这n块土地被n","tags":["bfs"],"title":"bzoj 1602: [Usaco2008 Oct]牧场行走 (bfs,优先队列)","type":"post","url":"/2016/03/bzoj1602/","weight":0,"wordcount":686},{"author":null,"categories":["ACM"],"content":null,"date":1459426623,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459426623,"objectID":"2909a680d4fa8c2dd17cbe2afefcfc08","permalink":"https://111qqz.github.io/2016/03/bzoj-1601-usaco2008-oct-/","publishdate":"2016-03-31T12:17:03Z","readingtime":2,"relpermalink":"/2016/03/bzoj-1601-usaco2008-oct-/","section":"post","summary":"1601: [Usaco2008 Oct]灌水 Time Limit: 5 Sec Memory Limit: 162 MB Submit: 1624 Solved: 1059 [Submit][Status][Discuss] Description Farmer John已经决定把水灌到他的n(1\u0026lt;=n\u0026lt;=300)块农田，农田被数字1到n标记。","tags":["最小生成树"],"title":"bzoj 1601: [Usaco2008 Oct]灌水 (最小生成树)","type":"post","url":"/2016/03/bzoj-1601-usaco2008-oct-/","weight":0,"wordcount":948},{"author":null,"categories":["ACM"],"content":null,"date":1459422769,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459422769,"objectID":"ff323a19a5a6d65a7bc44e9161913e9a","permalink":"https://111qqz.github.io/2016/03/bzoj1600-usaco2008-oct-/","publishdate":"2016-03-31T11:12:49Z","readingtime":2,"relpermalink":"/2016/03/bzoj1600-usaco2008-oct-/","section":"post","summary":"勤奋的Farmer John想要建造一个四面的栅栏来关住牛们。他有一块长为n（4\u0026lt;=n\u0026lt;=2500）的木板，他想把这块本板切成4块","tags":["排列组合"],"title":"bzoj1600  [Usaco2008 Oct]建造栅栏 （排列组合）","type":"post","url":"/2016/03/bzoj1600-usaco2008-oct-/","weight":0,"wordcount":820},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1459419214,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459419214,"objectID":"e44b3fed1f133df4d7e0c588c308006d","permalink":"https://111qqz.github.io/2016/03/just-start-bzoj/","publishdate":"2016-03-31T10:13:34Z","readingtime":1,"relpermalink":"/2016/03/just-start-bzoj/","section":"post","summary":"。。。。天天划水 药丸 妈的智障。","tags":null,"title":"快开始刷bzoj啊喂","type":"post","url":"/2016/03/just-start-bzoj/","weight":0,"wordcount":15},{"author":null,"categories":["ACM"],"content":null,"date":1459419034,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459419034,"objectID":"be40f38bffa1148d9ecb0d557bb886fb","permalink":"https://111qqz.github.io/2016/03/bc-74-div1-1001-hdu-5636-shortest-path-floyd/","publishdate":"2016-03-31T10:10:34Z","readingtime":2,"relpermalink":"/2016/03/bc-74-div1-1001-hdu-5636-shortest-path-floyd/","section":"post","summary":"题目链接 题意：有一条n个节点的链，节点i和节点j的距离为abs(i-j) 现在新增加三条边，距离也都为1，然后给出m个询问，每组询问给出两个点","tags":["floyd","图论"],"title":"bc #74 div1 1001 || hdu 5636 Shortest Path (floyd？)","type":"post","url":"/2016/03/bc-74-div1-1001-hdu-5636-shortest-path-floyd/","weight":0,"wordcount":520},{"author":null,"categories":["ACM"],"content":null,"date":1459414943,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459414943,"objectID":"73642960ada71c0e976910c74fe12b4a","permalink":"https://111qqz.github.io/2016/03/codeforces-346-div-2-d-bicycle-race-/","publishdate":"2016-03-31T09:02:23Z","readingtime":1,"relpermalink":"/2016/03/codeforces-346-div-2-d-bicycle-race-/","section":"post","summary":"题目链接 题意：给出n+1个点，每次由i点到i+1点，每段线段之间保证不同向或者反向，第一个点和最后一个点保证重合。路径围城的封闭图形中间都是","tags":["math","思维题","计算几何"],"title":"codeforces #346 div 2 D. Bicycle Race (思维，计算几何，公式)","type":"post","url":"/2016/03/codeforces-346-div-2-d-bicycle-race-/","weight":0,"wordcount":355},{"author":null,"categories":["ACM"],"content":null,"date":1459413419,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459413419,"objectID":"9fae2e94bebbbd2c2feba7228f7be83a","permalink":"https://111qqz.github.io/2016/03/codeforces-346-div-2-c-tanya-and-toys-/","publishdate":"2016-03-31T08:36:59Z","readingtime":2,"relpermalink":"/2016/03/codeforces-346-div-2-c-tanya-and-toys-/","section":"post","summary":"题目链接 题意:有1E9个礼物，第i个礼物价钱是i,然后现在已经有n个不重复的礼物，a[i],m元钱，想尽可能多得买不同种类的礼物，还能买多少","tags":["brute force","set","乱搞"],"title":"codeforces #346 div 2 C. Tanya and Toys (暴力乱搞)","type":"post","url":"/2016/03/codeforces-346-div-2-c-tanya-and-toys-/","weight":0,"wordcount":526},{"author":null,"categories":["ACM"],"content":null,"date":1459412839,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459412839,"objectID":"47611e30112dc4dcde13ac76c3556e6c","permalink":"https://111qqz.github.io/2016/03/codeforces-346-div-2-b-qualifying-contest-/","publishdate":"2016-03-31T08:27:19Z","readingtime":1,"relpermalink":"/2016/03/codeforces-346-div-2-b-qualifying-contest-/","section":"post","summary":"题目链接 题意：给出选手个数n，下面n行每个选手的信息“名字 区域编号 分数”.保证每个区域至少两个选手。问每个区域能否唯一确定一支二人的队伍（尽","tags":["sortings"],"title":"codeforces #346 div 2 B. Qualifying Contest (排序)","type":"post","url":"/2016/03/codeforces-346-div-2-b-qualifying-contest-/","weight":0,"wordcount":480},{"author":null,"categories":null,"content":null,"date":1459412839,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1459412839,"objectID":"","permalink":"https://111qqz.github.io/tags/sortings/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/sortings/","section":"tags","summary":"","tags":null,"title":"sortings","type":"tags","url":"/tags/sortings/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1459410336,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459410336,"objectID":"4dd57fce7430b5652c886ead6c14f4e7","permalink":"https://111qqz.github.io/2016/03/codeforces-346-div-2-a-round-house/","publishdate":"2016-03-31T07:45:36Z","readingtime":1,"relpermalink":"/2016/03/codeforces-346-div-2-a-round-house/","section":"post","summary":"题目链接 水题 乱搞。 /* *********************************************** Author :111qqz Created Time :2016年03月30日 星期三 23时59分47秒 File Name :code/cf/#346/A.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstdlib\u0026gt; #include \u0026lt;ctime\u0026gt; #define fst","tags":null,"title":"codeforces #346 div 2 A. Round House","type":"post","url":"/2016/03/codeforces-346-div-2-a-round-house/","weight":0,"wordcount":145},{"author":null,"categories":["ACM"],"content":null,"date":1459408825,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459408825,"objectID":"a72e9187bb043a826e17f94185d5cf4c","permalink":"https://111qqz.github.io/2016/03/484b/","publishdate":"2016-03-31T07:20:25Z","readingtime":1,"relpermalink":"/2016/03/484b/","section":"post","summary":"题目链接 题意：给出n个元素的序列，求出最大的a[i]%a[j] (i\u0026gt;=j) 思路：没思路。。。。 题解也没有特别懂。。。感觉和筛法有点类似。 不过学到了一个","tags":["乱搞"],"title":"codeforces 484 B Maximum Value (暴力乱搞)","type":"post","url":"/2016/03/484b/","weight":0,"wordcount":377},{"author":null,"categories":["ACM"],"content":null,"date":1459404696,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459404696,"objectID":"584072a65c54cae3190f3512747261cf","permalink":"https://111qqz.github.io/2016/03/cf652b/","publishdate":"2016-03-31T06:11:36Z","readingtime":1,"relpermalink":"/2016/03/cf652b/","section":"post","summary":"题目链接 题意：给出n个元素的序列，问能否得到一个新的序列，使得奇数位置非递减排列，偶数位数非递增排列。 思路：感觉一定可以啊。。。排序以后直接","tags":["构造"],"title":"codeforces 652 B. z-sort (简单构造)","type":"post","url":"/2016/03/cf652b/","weight":0,"wordcount":275},{"author":null,"categories":["ACM"],"content":null,"date":1459403772,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459403772,"objectID":"1f727e175a946c5e2826aea0eb28a804","permalink":"https://111qqz.github.io/2016/03/cf334b/","publishdate":"2016-03-31T05:56:12Z","readingtime":1,"relpermalink":"/2016/03/cf334b/","section":"post","summary":"题目链接 题意：给出8个点，问能否构成一个8元素集合，使得x1/* *********************************************** Author :111qqz Created Time :2016年03月31日 星期四 13时39分27秒 File Name :code/cf/problem/334B.cpp ************************************************ */ #include #include #include #include","tags":["brute force"],"title":"codeforces 334 B. Eight Point Sets (暴力)","type":"post","url":"/2016/03/cf334b/","weight":0,"wordcount":184},{"author":null,"categories":["ACM"],"content":null,"date":1459402419,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459402419,"objectID":"bf399c24f498f5ed0007107e0721dc32","permalink":"https://111qqz.github.io/2016/03/cf137c/","publishdate":"2016-03-31T05:33:39Z","readingtime":1,"relpermalink":"/2016/03/cf137c/","section":"post","summary":"题目链接 题意：给出n个时间的开始和截止时间，保证没有两个时间的开始或者截止时间相同，问有多少个时间被包含在其他事件中。即aj \u0026lt; ai and bi \u0026lt; bj. 思路","tags":["greedy","sortings"],"title":"codeforces 137 C. History (sorting,贪心)","type":"post","url":"/2016/03/cf137c/","weight":0,"wordcount":315},{"author":null,"categories":["ACM"],"content":null,"date":1459401201,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459401201,"objectID":"ab045773fb1e73af335bd4192f45166b","permalink":"https://111qqz.github.io/2016/03/cf274a/","publishdate":"2016-03-31T05:13:21Z","readingtime":1,"relpermalink":"/2016/03/cf274a/","section":"post","summary":"题目链接 题意：给出n个互不相同的元素和k,构成一个集合，使得集合中不存在两个元素满足y=kx,问能构成这样的集合的最大size是多少。 思路：","tags":["set"],"title":"codeforces 274 A. k-Multiple Free Set (set的妙用)","type":"post","url":"/2016/03/cf274a/","weight":0,"wordcount":308},{"author":null,"categories":["ACM"],"content":null,"date":1459351499,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459351499,"objectID":"7e46c39b49e1e1fea3deddf488f0befd","permalink":"https://111qqz.github.io/2016/03/cf617e-2/","publishdate":"2016-03-30T15:24:59Z","readingtime":1,"relpermalink":"/2016/03/cf617e-2/","section":"post","summary":"题目链接 题意：有n天的旅行，但是只剩下了m天的旅行记录，记录格式为d[i],h[d[i]]，表示第i个记录是第d[i]天的，高度为h[d[i","tags":["binary search"],"title":"codeforces 617  C. Tourist's Notes (二分)","type":"post","url":"/2016/03/cf617e-2/","weight":0,"wordcount":488},{"author":null,"categories":["ACM"],"content":null,"date":1459168660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459168660,"objectID":"8c1b2f7357de646596deea60034bab49","permalink":"https://111qqz.github.io/2016/03/hdu5652/","publishdate":"2016-03-28T12:37:40Z","readingtime":4,"relpermalink":"/2016/03/hdu5652/","section":"post","summary":"题目链接 题意：没图不好描述，有中文题面中文题面，直接看吧。 思路：据说这道题有三种做法。 当时比赛一种都不会。 先说一种：做法是把格子看成点，可以","tags":["bfs","二分","动态连通性","图论","并查集"],"title":"bc #77 ||hdu 5652 India and China Origins (图的动态连通性问题，并查集or 二分+bfs验证连通性)","type":"post","url":"/2016/03/hdu5652/","weight":0,"wordcount":1518},{"author":null,"categories":null,"content":null,"date":1459168660,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1459168660,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8A%A8%E6%80%81%E8%BF%9E%E9%80%9A%E6%80%A7/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8A%A8%E6%80%81%E8%BF%9E%E9%80%9A%E6%80%A7/","section":"tags","summary":"","tags":null,"title":"动态连通性","type":"tags","url":"/tags/%E5%8A%A8%E6%80%81%E8%BF%9E%E9%80%9A%E6%80%A7/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1459046078,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459046078,"objectID":"7b1dd187d592f5b19a29264b735c8e45","permalink":"https://111qqz.github.io/2016/03/hdu5650/","publishdate":"2016-03-27T02:34:38Z","readingtime":1,"relpermalink":"/2016/03/hdu5650/","section":"post","summary":"题目链接 題意：已知一个包含 nn 个元素的正整数集合 SS，设 f(S)f(S) 为集合 SS 中所有元素的异或(XOR)的结果。 如：S={1,2,3}, 则 f(S) = 0f(S)=","tags":["水"],"title":"bc #77 div 2 1001 ||hdu 5650 so easy (傻逼题)","type":"post","url":"/2016/03/hdu5650/","weight":0,"wordcount":325},{"author":null,"categories":["ACM"],"content":null,"date":1459046007,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1459046007,"objectID":"f1f214b9b96877da0adaaba0174fdb82","permalink":"https://111qqz.github.io/2016/03/hdu-5651/","publishdate":"2016-03-27T02:33:27Z","readingtime":2,"relpermalink":"/2016/03/hdu-5651/","section":"post","summary":"题目链接 题意；给出一个字符串，只由小写字母组成，可以任意排列，但是不能减少字符，问最多能得到多少个回文串，答案9+7 思路：排列组合题。 首先考","tags":["排列组合","逆元"],"title":"bc #77 div 2 B ||hdu 5651 xiaoxin juju needs help (排列组合，逆元)","type":"post","url":"/2016/03/hdu-5651/","weight":0,"wordcount":773},{"author":null,"categories":["ACM"],"content":null,"date":1458801671,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458801671,"objectID":"d8a0bb56667a1d705e9d6d3a0fb10ffc","permalink":"https://111qqz.github.io/2016/03/codeforces-120-div-2-virtual-participation/","publishdate":"2016-03-24T06:41:11Z","readingtime":2,"relpermalink":"/2016/03/codeforces-120-div-2-virtual-participation/","section":"post","summary":"比赛链接 两题QAQ A：7分钟1A 有n个大人m个小孩乘公交车，票价每人一元，一个大人最多免费带一个小孩，没有大人陪同的小孩不能乘车。 问是否有解","tags":null,"title":"codeforces #120 div 2 (Virtual Participation)","type":"post","url":"/2016/03/codeforces-120-div-2-virtual-participation/","weight":0,"wordcount":853},{"author":null,"categories":["ACM"],"content":null,"date":1458720965,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458720965,"objectID":"7e2cae3d79f509227a4cf584a0009eda","permalink":"https://111qqz.github.io/2016/03/hdu5646/","publishdate":"2016-03-23T08:16:05Z","readingtime":2,"relpermalink":"/2016/03/hdu5646/","section":"post","summary":"题目链接 题意：将正整数n(n\u0026lt;=1E9)，拆分成k个（k\u0026lt;=1E9）个**互不相等的正整数，**并且使得k个正整数的乘积最大。如","tags":["greedy"],"title":"hdu 5646 ||bc #76 div 2 (贪心)","type":"post","url":"/2016/03/hdu5646/","weight":0,"wordcount":792},{"author":null,"categories":["ACM"],"content":null,"date":1458647119,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458647119,"objectID":"8c2bf8e61b6641d25040a1d666d67f6d","permalink":"https://111qqz.github.io/2016/03/hdu5645/","publishdate":"2016-03-22T11:45:19Z","readingtime":1,"relpermalink":"/2016/03/hdu5645/","section":"post","summary":"题目链接 题意：n（n\u0026lt;=300）个球，每个球上标有一个标号(a[i]\u0026lt;=300),从中拿一个，不放回，再拿一个，问第一个球上的数","tags":["概率"],"title":"hdu 5645 DZY Loves Balls （古典概型）","type":"post","url":"/2016/03/hdu5645/","weight":0,"wordcount":417},{"author":null,"categories":["ACM"],"content":null,"date":1458642484,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458642484,"objectID":"20d9965cf4137e08a6dbf89074469ef1","permalink":"https://111qqz.github.io/2016/03/cf615b/","publishdate":"2016-03-22T10:28:04Z","readingtime":1,"relpermalink":"/2016/03/cf615b/","section":"post","summary":"题目链接 题意：给出n个点，m条边，定义一条路径的价值为【路径长度*(路径终点的度)】，求最大价值。 思路：一月份的时候写过一个回溯。。。TLE","tags":["dp","基础图论"],"title":"codeforces #338 div2 B || 615B  Longtail Hedgehog","type":"post","url":"/2016/03/cf615b/","weight":0,"wordcount":398},{"author":null,"categories":null,"content":null,"date":1458642484,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1458642484,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9F%BA%E7%A1%80%E5%9B%BE%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9F%BA%E7%A1%80%E5%9B%BE%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"基础图论","type":"tags","url":"/tags/%E5%9F%BA%E7%A1%80%E5%9B%BE%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1458572500,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458572500,"objectID":"ac7caa7494d6d1c61cdd473269b057d9","permalink":"https://111qqz.github.io/2016/03/20160321/","publishdate":"2016-03-21T15:01:40Z","readingtime":1,"relpermalink":"/2016/03/20160321/","section":"post","summary":"博客坏了两天。。。有点sad. 现在手头还有几篇题解没写完。。。然而要断电了。。明天再写。。。 os实验真是日了狗了。。。其实我已经拿小黑做好了","tags":null,"title":"20160321生活杂感","type":"post","url":"/2016/03/20160321/","weight":0,"wordcount":160},{"author":null,"categories":["ACM"],"content":null,"date":1458572126,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458572126,"objectID":"af28faddd1807fd233197cdbf91a47ae","permalink":"https://111qqz.github.io/2016/03/cf330b/","publishdate":"2016-03-21T14:55:26Z","readingtime":1,"relpermalink":"/2016/03/cf330b/","section":"post","summary":"题目链接 题意：n个点，m（m\u0026lt;n/2）条不能走的边，问最少连多少条边，使得任何两个点之间的距离最多为2. 输出最少的边数和连接的哪些边。","tags":["图论基础"],"title":"codeforces 330 B. Road Construction （图论基础）","type":"post","url":"/2016/03/cf330b/","weight":0,"wordcount":463},{"author":null,"categories":null,"content":null,"date":1458572126,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1458572126,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%9B%BE%E8%AE%BA%E5%9F%BA%E7%A1%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%9B%BE%E8%AE%BA%E5%9F%BA%E7%A1%80/","section":"tags","summary":"","tags":null,"title":"图论基础","type":"tags","url":"/tags/%E5%9B%BE%E8%AE%BA%E5%9F%BA%E7%A1%80/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1458571603,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458571603,"objectID":"e8055faa0385a0c7c7b5b01ec769843c","permalink":"https://111qqz.github.io/2016/03/cf645c/","publishdate":"2016-03-21T14:46:43Z","readingtime":1,"relpermalink":"/2016/03/cf645c/","section":"post","summary":"题目链接 题意：给出n和k,给出一个长度为n的字符串表示房间的占用情况（0表示没占用，1表示已占用），从n个房间中找出k+1个，使得k+1中的","tags":null,"title":"codeforces croc 2016 C. Enduring Exodus","type":"post","url":"/2016/03/cf645c/","weight":0,"wordcount":410},{"author":null,"categories":["ACM"],"content":null,"date":1458571272,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458571272,"objectID":"f6d7e316865268ec595ce2a0d09e83af","permalink":"https://111qqz.github.io/2016/03/cf645b/","publishdate":"2016-03-21T14:41:12Z","readingtime":1,"relpermalink":"/2016/03/cf645b/","section":"post","summary":"题目链接 题意：长度为n的初始为1，2,3\u0026hellip;n的序列，最多进行k次两个数交换，变换后的序列中最懂能有多少逆序对。 思路：贪心得想。","tags":["greedy"],"title":"codeforces croc 2016 B. Mischievous Mess Makers (贪心)","type":"post","url":"/2016/03/cf645b/","weight":0,"wordcount":256},{"author":null,"categories":["ACM"],"content":null,"date":1458571009,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458571009,"objectID":"0c99bd431abca9684546e2b1cb963c22","permalink":"https://111qqz.github.io/2016/03/cf645a/","publishdate":"2016-03-21T14:36:49Z","readingtime":1,"relpermalink":"/2016/03/cf645a/","section":"post","summary":"题目链接 题意：2×2的格子，有三个位置分别放”A“ \u0026ldquo;B\u0026rdquo; \u0026ldquo;C\u0026rdquo; ，一个位置为空。只有和空位相邻位置上的字母能移动到空位。没有其他移动规则。现在给出两个","tags":["brute force"],"title":"codeforces croc2016 A. Amity Assessment (暴力)","type":"post","url":"/2016/03/cf645a/","weight":0,"wordcount":306},{"author":null,"categories":["ACM"],"content":null,"date":1458284765,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458284765,"objectID":"1273e714092ce7f75195c24aedf6ce7c","permalink":"https://111qqz.github.io/2016/03/ural1057/","publishdate":"2016-03-18T07:06:05Z","readingtime":2,"relpermalink":"/2016/03/ural1057/","section":"post","summary":"题目链接 题意：设条件A为一个数恰好是k个互不相同的b的整数次幂的和，问某一个区间内满足条件A的数的个数是有多少个。 Example. Let _X_=15, _Y_=20, _K_=2, _B_=2. By this example 3 numbers are the","tags":["dp","数位dp"],"title":"ural 1057. Amount of Degrees (b进制数位dp)","type":"post","url":"/2016/03/ural1057/","weight":0,"wordcount":539},{"author":null,"categories":["ACM"],"content":null,"date":1458264726,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458264726,"objectID":"b8e42559704e46667db0925672c90dc4","permalink":"https://111qqz.github.io/2016/03/hdu4734/","publishdate":"2016-03-18T01:32:06Z","readingtime":3,"relpermalink":"/2016/03/hdu4734/","section":"post","summary":"题目链接s 题意：将一个10进制数x按照2进制展开后得到的值设为f(x)\u0026hellip;现在给出a,b（10^9）问【0，b】中满足f[x]\u0026","tags":["dp","数位dp"],"title":"hdu 4734  F(x) (数位dp)","type":"post","url":"/2016/03/hdu4734/","weight":0,"wordcount":1035},{"author":null,"categories":["ACM"],"content":null,"date":1458218147,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458218147,"objectID":"ef0727dcd553954b0bc7d144cd89a55c","permalink":"https://111qqz.github.io/2016/03/hdu5642/","publishdate":"2016-03-17T12:35:47Z","readingtime":1,"relpermalink":"/2016/03/hdu5642/","section":"post","summary":"hdu5642题目链接 题意：问长度为n的仅由26个小写字母组成的合法字符串有多少个。如果某个字符连续出现四次或以上，则这个字符串为非法。否则","tags":["dp","数位dp"],"title":"bc #75 C || hdu 5642 King's Order （数位dp）","type":"post","url":"/2016/03/hdu5642/","weight":0,"wordcount":281},{"author":null,"categories":["ACM"],"content":null,"date":1458215191,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458215191,"objectID":"b1941e3ba3a17e4c50cc2b6f0a5b3b38","permalink":"https://111qqz.github.io/2016/03/hdu-3709-balanced-number-dp/","publishdate":"2016-03-17T11:46:31Z","readingtime":3,"relpermalink":"/2016/03/hdu-3709-balanced-number-dp/","section":"post","summary":"题目链接 题意：找到某区间中平衡数的个数。所谓平衡数是指，存在某个位置，值得两边的力矩相等。举个例子。。比如14326，如果把4作为中间。。那","tags":["dp","数位dp"],"title":"hdu 3709 Balanced Number (数位dp)","type":"post","url":"/2016/03/hdu-3709-balanced-number-dp/","weight":0,"wordcount":1009},{"author":null,"categories":["ACM"],"content":null,"date":1458204674,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458204674,"objectID":"e32c2aff1f1ab0ab6672de2ffd46e9e4","permalink":"https://111qqz.github.io/2016/03/poj3252/","publishdate":"2016-03-17T08:51:14Z","readingtime":1,"relpermalink":"/2016/03/poj3252/","section":"post","summary":"题目链接 题意：问某区间中，round number 的个数是多少。所谓round number,当且仅当一个数的二进制表示中，‘0’的个数大于等于‘1’的个","tags":["dp","数位dp"],"title":"poj3252 Round Numbers (不允许前导0的二进制数位dp)","type":"post","url":"/2016/03/poj3252/","weight":0,"wordcount":471},{"author":null,"categories":["ACM"],"content":null,"date":1458201335,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458201335,"objectID":"583c57f5c6eb5b3088be94014eefe230","permalink":"https://111qqz.github.io/2016/03/hdu4507/","publishdate":"2016-03-17T07:55:35Z","readingtime":4,"relpermalink":"/2016/03/hdu4507/","section":"post","summary":"题目链接 题意：如果一个整数符合下面3个条件之一，那么我们就说这个整数和7有关—— 1、整数中某一位是7； 2、整数的每一位加起来的和是7的整数倍","tags":["dp","数位dp"],"title":"hdu 4507  吉哥系列故事——恨7不成妻 (返回平方和的数位dp)","type":"post","url":"/2016/03/hdu4507/","weight":0,"wordcount":1514},{"author":null,"categories":["ACM"],"content":null,"date":1458094988,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458094988,"objectID":"dc83efec7143274b5a72c280332eb13f","permalink":"https://111qqz.github.io/2016/03/hdu3652/","publishdate":"2016-03-16T02:23:08Z","readingtime":2,"relpermalink":"/2016/03/hdu3652/","section":"post","summary":"题目链接 题意：给出n,问[1,n]中，满足包含“13”且这个数（不是各位的和）能被13整除的数的个数。 思路：依然是数位dp..不过有一个小t","tags":["dp","数位dp"],"title":"hdu  3652 B-number (带整除的数位dp )","type":"post","url":"/2016/03/hdu3652/","weight":0,"wordcount":596},{"author":null,"categories":["ACM"],"content":null,"date":1458091047,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458091047,"objectID":"c1fb85cd9413a3a5e00999da433f2b96","permalink":"https://111qqz.github.io/2016/03/hdu4722/","publishdate":"2016-03-16T01:17:27Z","readingtime":1,"relpermalink":"/2016/03/hdu4722/","section":"post","summary":"题目链接 题意：求一个区间内所有位数字之和能被10整除的数的个数。 思路：数位dp，dfs要一个参数记录从最高位到现在的pos位置的数字之和的结","tags":["dp","数位dp"],"title":"hdu 4722 good numbers (带整除的数位dp)","type":"post","url":"/2016/03/hdu4722/","weight":0,"wordcount":418},{"author":null,"categories":["ACM"],"content":null,"date":1458047113,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458047113,"objectID":"c3cec3fa022707a585a94ef4e090e4a6","permalink":"https://111qqz.github.io/2016/03/bzoj1026/","publishdate":"2016-03-15T13:05:13Z","readingtime":2,"relpermalink":"/2016/03/bzoj1026/","section":"post","summary":"题目链接 题意：不含前导零且相邻两个数字之差至少为2的正整数被称为windy数。 windy想知道，在A和B之间，包括A和B，总共有多少个win","tags":["dp","数位dp"],"title":"bzoj 1026 windy数(数位dp入门题)","type":"post","url":"/2016/03/bzoj1026/","weight":0,"wordcount":695},{"author":null,"categories":["ACM"],"content":null,"date":1458042499,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458042499,"objectID":"3332c2245174c41ab9937dff7de19ffb","permalink":"https://111qqz.github.io/2016/03/hdu3555/","publishdate":"2016-03-15T11:48:19Z","readingtime":1,"relpermalink":"/2016/03/hdu3555/","section":"post","summary":"题目链接 题意:问从1到n的所有数中，有多少个数含有数字串“49” 思路：和上一道不要62很像，但是由于是要统计有49的，但是有49的情况实在太","tags":["dp","数位dp"],"title":"hdu 3555 Bomb （数位dp入门题）","type":"post","url":"/2016/03/hdu3555/","weight":0,"wordcount":352},{"author":null,"categories":["ACM"],"content":null,"date":1458041263,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1458041263,"objectID":"7ee025b26798421c545b3ce4d1f4a43b","permalink":"https://111qqz.github.io/2016/03/hdu-2089/","publishdate":"2016-03-15T11:27:43Z","readingtime":2,"relpermalink":"/2016/03/hdu-2089/","section":"post","summary":"题目链接 题意：问区间[n,m]中，不含数字4，也不含数字串“62”的所有数的个数。 思路：可以转化成求区间[0,x] 第一次接触数位dp,参考了","tags":["dp","数位dp"],"title":"hdu 2089 不要62 （数位dp模板题，附带详细解释）","type":"post","url":"/2016/03/hdu-2089/","weight":0,"wordcount":900},{"author":null,"categories":["ACM"],"content":null,"date":1457427414,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457427414,"objectID":"dd48a9b22f85857fd40dfb7267c73f41","permalink":"https://111qqz.github.io/2016/03/codeforces-345-div-2-c-watchmen-/","publishdate":"2016-03-08T08:56:54Z","readingtime":1,"relpermalink":"/2016/03/codeforces-345-div-2-c-watchmen-/","section":"post","summary":"题目链接 题意：求曼哈顿距离和平方根距离相等的点的对数？ 思路：化简发现是绝对值乘积等于0，容斥搞搞。 /* *********************************************** Author :111qqz Created Time :2016年03月07日 星期一","tags":["容斥原理"],"title":"codeforces #345 div 2 C. Watchmen (容斥)","type":"post","url":"/2016/03/codeforces-345-div-2-c-watchmen-/","weight":0,"wordcount":332},{"author":null,"categories":null,"content":null,"date":1457427414,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1457427414,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/","section":"tags","summary":"","tags":null,"title":"容斥原理","type":"tags","url":"/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1457426435,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457426435,"objectID":"df0a17c454b24f419e3e55d6f5be5836","permalink":"https://111qqz.github.io/2016/03/cf651b/","publishdate":"2016-03-08T08:40:35Z","readingtime":1,"relpermalink":"/2016/03/cf651b/","section":"post","summary":"题目链接 题意：给出一个数列，按照最好的策略排序使得a[i+1]\u0026gt;a[i]的对数尽可能多，问最多的对数是多少。 思路：类似计数排序？ /* *********************************************** Author","tags":["brute force"],"title":"codeforces #345 div 2 B. Beautiful Paintings （暴力）","type":"post","url":"/2016/03/cf651b/","weight":0,"wordcount":309},{"author":null,"categories":["ACM"],"content":null,"date":1457425894,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457425894,"objectID":"0fe18673a0664db37de176431c4ca772","permalink":"https://111qqz.github.io/2016/03/cf651a/","publishdate":"2016-03-08T08:31:34Z","readingtime":1,"relpermalink":"/2016/03/cf651a/","section":"post","summary":"题目链接 题意：两个手柄？ 初始的电量给出，只有一个充电器，每经过一秒，充着电的手柄电量增加1，没有充电的手柄电量减少2，允许电量充到0以上，当","tags":["d","greedy"],"title":"codeforces #345 div2 A. Joysticks (贪心)","type":"post","url":"/2016/03/cf651a/","weight":0,"wordcount":328},{"author":null,"categories":null,"content":null,"date":1457425894,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1457425894,"objectID":"","permalink":"https://111qqz.github.io/tags/d/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/d/","section":"tags","summary":"","tags":null,"title":"d","type":"tags","url":"/tags/d/","weight":0,"wordcount":0},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1457196928,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457196928,"objectID":"4331bdaed129454a8d8f8cf6eef5093b","permalink":"https://111qqz.github.io/2016/03/thatkk/","publishdate":"2016-03-05T16:55:28Z","readingtime":1,"relpermalink":"/2016/03/thatkk/","section":"post","summary":"一年过去了。 现在看到小可，内心却依然无法平静\u0026hellip; 强装镇定得打个招呼已经是我的极限了orz 其实还是觉得很可惜\u0026hellip;曾经的","tags":null,"title":"thatkk","type":"post","url":"/2016/03/thatkk/","weight":0,"wordcount":192},{"author":null,"categories":["ACM"],"content":null,"date":1457092425,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457092425,"objectID":"5bade6963bc1f87c49939d8d961ca860","permalink":"https://111qqz.github.io/2016/03/hdu5631/","publishdate":"2016-03-04T11:53:45Z","readingtime":2,"relpermalink":"/2016/03/hdu5631/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5631 题意;给出一张n个点n+1（n\u0026lt;=100）条边的无向图，现在删除若干条边（至少一条边），问删完之后图依然联通的方案数。 思路：分析可知","tags":["图论","并查集","连通性"],"title":"bc #73 B || hdu 5631 Rikka with Graph （并查集判断无向图的连通性）","type":"post","url":"/2016/03/hdu5631/","weight":0,"wordcount":799},{"author":null,"categories":["ACM"],"content":null,"date":1457009600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457009600,"objectID":"17f6a6ce5c69ce56097761770bcb1e8e","permalink":"https://111qqz.github.io/2016/03/hdu5630/","publishdate":"2016-03-03T12:53:20Z","readingtime":1,"relpermalink":"/2016/03/hdu5630/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5630 题意：nm的棋盘，相邻格子的颜色相反，每次可以翻转一个任意大小矩形的格子，问最少需要翻转多少次使得棋盘的nm个格子颜色相同。（翻转的意思是","tags":["brute force","math"],"title":"hdu 5630  Rikka with Chess （暴力 ，计数问题）","type":"post","url":"/2016/03/hdu5630/","weight":0,"wordcount":264},{"author":null,"categories":["ACM"],"content":null,"date":1457008019,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457008019,"objectID":"7f49b28fccf817887d585f01ad339760","permalink":"https://111qqz.github.io/2016/03/hdu4451/","publishdate":"2016-03-03T12:26:59Z","readingtime":1,"relpermalink":"/2016/03/hdu4451/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4451 题意：N clothes, M pants and K shoes，然后给出p个不合法的搭配，形式是“clothes x pants y” or “pants y shoes z”.” 问有多少种合法的方案。 思路","tags":["思维题","组合数学","计数问题"],"title":"hdu 4451 Dressing (计数，思维题)","type":"post","url":"/2016/03/hdu4451/","weight":0,"wordcount":438},{"author":null,"categories":["ACM"],"content":null,"date":1457005832,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1457005832,"objectID":"aed4468eff709967a479775e5cb05029","permalink":"https://111qqz.github.io/2016/03/hdu3929/","publishdate":"2016-03-03T11:50:32Z","readingtime":1,"relpermalink":"/2016/03/hdu3929/","section":"post","summary":"题意：F(x) = (1+x)^a1 + (1+x)^a2 + … + (1+x)^am，求系数是奇数的项的个数。 思路：解题报告 涉及到的由lucas定理得到的推论的证明lucas定理证","tags":["lucas定理","容斥原理"],"title":"hdu 3929  Big Coefficients (递归形式的容斥原理+lucas定理的结论)","type":"post","url":"/2016/03/hdu3929/","weight":0,"wordcount":401},{"author":null,"categories":null,"content":null,"date":1457005832,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1457005832,"objectID":"","permalink":"https://111qqz.github.io/tags/lucas%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/lucas%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"lucas定理","type":"tags","url":"/tags/lucas%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1456990232,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456990232,"objectID":"9aa8169cdb71e44908e0f5127c875c2e","permalink":"https://111qqz.github.io/2016/03/","publishdate":"2016-03-03T07:30:32Z","readingtime":1,"relpermalink":"/2016/03/","section":"post","summary":"指数型母函数网上的资料不是很多，推荐毛杰明的09年国家集训队论文《母函数的性质及应用》 以及Richard A.Brualdi 所著的《组合数学》的第七章来看\u0026h","tags":["母函数"],"title":"指数型母函数总结","type":"post","url":"/2016/03//","weight":0,"wordcount":425},{"author":null,"categories":["ACM"],"content":null,"date":1456926111,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456926111,"objectID":"933786df4607e3e605439d51ec78e6ed","permalink":"https://111qqz.github.io/2016/03/cf451e/","publishdate":"2016-03-02T13:41:51Z","readingtime":2,"relpermalink":"/2016/03/cf451e/","section":"post","summary":"http://codeforces.com/problemset/problem/451/E 题意;有n个花坛，要选s支花，每个花坛有f[i]支花，同一个花坛的花颜色相同，不同花坛的花颜色不同，问说可以有多少种组合。 思路：典型的母函","tags":["lucas定理","二项式定理","母函数","泰勒展开"],"title":"codeforces 451E  Devu and Flowers (指数型母函数)","type":"post","url":"/2016/03/cf451e/","weight":0,"wordcount":839},{"author":null,"categories":null,"content":null,"date":1456926111,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1456926111,"objectID":"","permalink":"https://111qqz.github.io/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86/","section":"tags","summary":"","tags":null,"title":"二项式定理","type":"tags","url":"/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%AE%9A%E7%90%86/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1456926111,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1456926111,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%B3%B0%E5%8B%92%E5%B1%95%E5%BC%80/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B3%B0%E5%8B%92%E5%B1%95%E5%BC%80/","section":"tags","summary":"","tags":null,"title":"泰勒展开","type":"tags","url":"/tags/%E6%B3%B0%E5%8B%92%E5%B1%95%E5%BC%80/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1456919621,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456919621,"objectID":"21c53b06f2853c51a9c7d774da380afe","permalink":"https://111qqz.github.io/2016/03/poj1322chocolate/","publishdate":"2016-03-02T11:53:41Z","readingtime":3,"relpermalink":"/2016/03/poj1322chocolate/","section":"post","summary":"http://poj.org/problem?id=1322 题意： 思路：别看n,m很大。。。但是想一下。。m显然不可能大于c(如果大于c，那么根据抽屉原理，至少存在一种巧克力大于一个，然而大于一个就","tags":["母函数","组合数学"],"title":"poj 1322 chocolate (指数型母函数 )","type":"post","url":"/2016/03/poj1322chocolate/","weight":0,"wordcount":1024},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1456915986,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456915986,"objectID":"50f9505de6f82ee07f90d62a138c273e","permalink":"https://111qqz.github.io/2016/03/no-way-to-go/","publishdate":"2016-03-02T10:53:06Z","readingtime":1,"relpermalink":"/2016/03/no-way-to-go/","section":"post","summary":"。。。 醒来，发现，四面都是山。。。 每座山上都写着“线段树”三个字\u0026hellip;. 不把线段树的lazy标记搞掉根本没法继续搞数据结构啊喂\u0026h","tags":null,"title":"无路可走了。。。","type":"post","url":"/2016/03/no-way-to-go/","weight":0,"wordcount":99},{"author":null,"categories":["ACM"],"content":null,"date":1456751160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456751160,"objectID":"d2871ddd9a69282c8c359411a8cfa961","permalink":"https://111qqz.github.io/2016/02/poj2356/","publishdate":"2016-02-29T13:06:00Z","readingtime":1,"relpermalink":"/2016/02/poj2356/","section":"post","summary":"http://poj.org/problem?id=2356 题意：有n个数，从中选取若干个（1..n），和能被n整除。问是否有解，无解输出0，有解的话，输出个数以及选择的ai 由抽屉原理可知一定有解：","tags":["number theory","剩余系","抽屉原理"],"title":"poj 2356 Find a multiple (剩余类，抽屉原理)","type":"post","url":"/2016/02/poj2356/","weight":0,"wordcount":391},{"author":null,"categories":["ACM"],"content":null,"date":1456750311,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456750311,"objectID":"f9775f953efccfd3792884d334cc344c","permalink":"https://111qqz.github.io/2016/02/hdu1205/","publishdate":"2016-02-29T12:51:51Z","readingtime":1,"relpermalink":"/2016/02/hdu1205/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1205 题意：有n种糖果，第i种糖果有a[i]个，相邻两次不能吃一样的糖果，问能否有办法吃完所有糖果\u0026hellip; 思路：如果第i种糖果有k个的话","tags":["math","抽屉原理"],"title":"hdu 1205  吃糖果 （鸽笼原理）","type":"post","url":"/2016/02/hdu1205/","weight":0,"wordcount":343},{"author":null,"categories":["ACM"],"content":null,"date":1456747253,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456747253,"objectID":"8db08bfb7aa5e26453ba33ef7df0b8b3","permalink":"https://111qqz.github.io/2016/02/hdu1796/","publishdate":"2016-02-29T12:00:53Z","readingtime":3,"relpermalink":"/2016/02/hdu1796/","section":"post","summary":"hdu1796 题意：给出n（\u0026lt;=2^31）以及m(\u0026lt;=10)个元素组成的无重复元素集合，集合元素0\u0026lt;=a[i]\u0026lt;=20,问有多少","tags":["math","容斥原理"],"title":"hdu 1796  How many integers can you find (容斥原理)","type":"post","url":"/2016/02/hdu1796/","weight":0,"wordcount":1114},{"author":null,"categories":["ACM"],"content":null,"date":1456743649,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456743649,"objectID":"67adad065a25067e52e8d5327b138520","permalink":"https://111qqz.github.io/2016/02/hdu4336/","publishdate":"2016-02-29T11:00:49Z","readingtime":2,"relpermalink":"/2016/02/hdu4336/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4336 题意：有n种卡片，买一包干脆面得到第i种卡片的概率是p[i],每包干脆面最多有一张卡片，问收集齐所有卡片要买的干脆面的包数的数学期望。 思路","tags":["math","容斥原理","概率"],"title":"hdu 4336 Card Collector (2012多校 #4) （容斥原理模板题）","type":"post","url":"/2016/02/hdu4336/","weight":0,"wordcount":781},{"author":null,"categories":["ACM"],"content":null,"date":1456641428,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456641428,"objectID":"54247d846c266c9619e6cc13b2a4a49f","permalink":"https://111qqz.github.io/2016/02/poj-3734/","publishdate":"2016-02-28T06:37:08Z","readingtime":1,"relpermalink":"/2016/02/poj-3734/","section":"post","summary":"http://poj.org/problem?id=3734 题意+思路同******hdu2065红色病毒解题报告 /* *********************************************** Author :111qqz Created Time :2016年02月27日 星期六 16时39分53秒 File Name :code/poj/3734.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include","tags":["math","母函数","泰勒展开"],"title":"poj 3734 Blocks (指数型母函数，泰勒级数展开)","type":"post","url":"/2016/02/poj-3734/","weight":0,"wordcount":197},{"author":null,"categories":["ACM"],"content":null,"date":1456640811,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456640811,"objectID":"0dceee6b8bc99c46cf6798adf9ab29b6","permalink":"https://111qqz.github.io/2016/02/hdu2065/","publishdate":"2016-02-28T06:26:51Z","readingtime":2,"relpermalink":"/2016/02/hdu2065/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2065 题意：a,b,c,d四种元素，a,c只能出现偶数次（包括0次），b,d没有限制，问n个（2^64）个元素有多少种不同的组合。 思路：指数型母","tags":["math","母函数","泰勒展开"],"title":"hdu 2065 \"红色病毒\"问题 (指数型母函数，泰勒级数展开)","type":"post","url":"/2016/02/hdu2065/","weight":0,"wordcount":700},{"author":null,"categories":["ACM"],"content":null,"date":1456598159,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456598159,"objectID":"1acbbb7975e439f9513b78e97b17f6c4","permalink":"https://111qqz.github.io/2016/02/bzoj1610/","publishdate":"2016-02-27T18:35:59Z","readingtime":1,"relpermalink":"/2016/02/bzoj1610/","section":"post","summary":"http://www.lydsy.com/JudgeOnline/problem.php?id=1610 题意：给出n个点，问有多少条直线，这些之间之间都不平行。 思路：求斜率（注意考虑斜率不存在），看有多少种斜率。 妈蛋。。。。斜率不存在是横坐标","tags":["计算几何"],"title":"bzoj 1610   [Usaco2008 Feb]Line连线游戏 (计算几何)","type":"post","url":"/2016/02/bzoj1610/","weight":0,"wordcount":434},{"author":null,"categories":["ACM"],"content":null,"date":1456594218,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456594218,"objectID":"312581c15ad0e837ee27eb24b281be1a","permalink":"https://111qqz.github.io/2016/02/bzoj1607/","publishdate":"2016-02-27T17:30:18Z","readingtime":1,"relpermalink":"/2016/02/bzoj1607/","section":"post","summary":"http://www.lydsy.com/JudgeOnline/problem.php?id=1607 题意：n个数，求对于每个数来说，其他n-1个数中是它约数的数的个数。 思路：类似筛法，从小到大处理，数i对其所有倍数的数的答案有cnt[i]","tags":["math","筛法"],"title":"bzoj 1607 [Usaco2008 Dec]Patting Heads 轻拍牛头 （筛法）","type":"post","url":"/2016/02/bzoj1607/","weight":0,"wordcount":355},{"author":null,"categories":null,"content":null,"date":1456594218,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1456594218,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%AD%9B%E6%B3%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AD%9B%E6%B3%95/","section":"tags","summary":"","tags":null,"title":"筛法","type":"tags","url":"/tags/%E7%AD%9B%E6%B3%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1456575122,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456575122,"objectID":"560b0d061c7ea8132a9e7210af61d1ff","permalink":"https://111qqz.github.io/2016/02/hdu1521/","publishdate":"2016-02-27T12:12:02Z","readingtime":1,"relpermalink":"/2016/02/hdu1521/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1521 题意：有n种物品，并且知道每种物品的数量。要求从中选出m件物品的排列数。例如有两种物品A,B，并且数量都是1，从中选2件物品，则排列有\u0026q","tags":["母函数"],"title":"hdu 1521 排列组合 （指数型母函数模板题）","type":"post","url":"/2016/02/hdu1521/","weight":0,"wordcount":453},{"author":null,"categories":["ACM"],"content":null,"date":1456565904,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456565904,"objectID":"e6d5892779d5b35b1ea9538a8ebf1e41","permalink":"https://111qqz.github.io/2016/02/","publishdate":"2016-02-27T09:38:24Z","readingtime":3,"relpermalink":"/2016/02/","section":"post","summary":"从这里母函数（Generating function）详解学习了普通型母函数 #include \u0026lt;iostream\u0026gt; using namespace std; // Author: Tanky Woo // www.wutianqi.com const int _max = 10001; // c1是保存各项质量砝码可以组合的","tags":["母函数"],"title":"普通型母函数总结","type":"post","url":"/2016/02//","weight":0,"wordcount":1373},{"author":null,"categories":["ACM"],"content":null,"date":1456561684,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456561684,"objectID":"e55af8c385f96667ee1d297bfd6c4f99","permalink":"https://111qqz.github.io/2016/02/hdu1284/","publishdate":"2016-02-27T08:28:04Z","readingtime":1,"relpermalink":"/2016/02/hdu1284/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1284 题意：有1分，2分，3分的钱若干，问组成n（n\u0026lt;=32767）分钱的方案数。 思路：母函数. 需要注意的是多组数据。每次都搞会TLE，可","tags":["母函数"],"title":"hdu 1284 铅笔兑换问题（母函数）","type":"post","url":"/2016/02/hdu1284/","weight":0,"wordcount":351},{"author":null,"categories":["ACM"],"content":null,"date":1456560558,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456560558,"objectID":"bb4dd631e50e9d8f9c486d3798036b97","permalink":"https://111qqz.github.io/2016/02/hdu2082/","publishdate":"2016-02-27T08:09:18Z","readingtime":1,"relpermalink":"/2016/02/hdu2082/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2082 题意：26个字母，第i个字母有x[i]个，价值为i.问能组成多少个价值不超过50的单词（注意这里的单词只考虑字母的组成，不考虑字母之间的顺","tags":["母函数"],"title":"hdu 2082 找单词 （母函数）","type":"post","url":"/2016/02/hdu2082/","weight":0,"wordcount":347},{"author":null,"categories":["ACM"],"content":null,"date":1456559634,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456559634,"objectID":"65e97f1e89aba27b8e32c0f3afa7c19b","permalink":"https://111qqz.github.io/2016/02/hdu5616/","publishdate":"2016-02-27T07:53:54Z","readingtime":1,"relpermalink":"/2016/02/hdu5616/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5616 题意：有n个（n\u0026lt;=20）砝码，第i个重量为w[i],给出m个查询，每个查询一个重量，问这个重量能否被称量出。 思路：暴力（没美感），","tags":["母函数"],"title":"BC #70  B || hdu 5616  Jam's balance （母函数）","type":"post","url":"/2016/02/hdu5616/","weight":0,"wordcount":372},{"author":null,"categories":["ACM"],"content":null,"date":1456558181,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456558181,"objectID":"a7fd6053532152cbbf5f03bb6daff1b4","permalink":"https://111qqz.github.io/2016/02/hdu2152/","publishdate":"2016-02-27T07:29:41Z","readingtime":1,"relpermalink":"/2016/02/hdu2152/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2152 题意：中文题目，大概是说有n（\u0026lt;=100）种水果，第i种至少拿l[i]个，最多拿r[i]个，现在挑选m种水果组成一个果盘，问方案数。","tags":["母函数"],"title":"hdu 2152 Fruit (母函数)","type":"post","url":"/2016/02/hdu2152/","weight":0,"wordcount":402},{"author":null,"categories":["ACM"],"content":null,"date":1456557164,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456557164,"objectID":"36c5552f5c36cd4d436acd746a2e46ca","permalink":"https://111qqz.github.io/2016/02/hdu2069/","publishdate":"2016-02-27T07:12:44Z","readingtime":1,"relpermalink":"/2016/02/hdu2069/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2069 题意：有1,5,10,25,50面值的硬币若干，问组成n元钱有多少种不同的方案。一个额外的要求是硬币的总是不能超过100.（那句 your program should be able","tags":["母函数"],"title":"hdu 2069  Coin Change(母函数)","type":"post","url":"/2016/02/hdu2069/","weight":0,"wordcount":500},{"author":null,"categories":["ACM"],"content":null,"date":1456483089,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456483089,"objectID":"46197d0a1907b5e7cc064e28bde08306","permalink":"https://111qqz.github.io/2016/02/hdu1709/","publishdate":"2016-02-26T10:38:09Z","readingtime":1,"relpermalink":"/2016/02/hdu1709/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1709 题意：有n个砝码，第i个的重量为w[i]，问从1到sum(所有砝码的重量之和)那些重量无法称量。（所有质量都是整数） 思路：母函数。 一个砝码","tags":["母函数"],"title":"hdu 1709 The Balance (母函数)","type":"post","url":"/2016/02/hdu1709/","weight":0,"wordcount":423},{"author":null,"categories":["ACM"],"content":null,"date":1456475996,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456475996,"objectID":"56cd8f85661a07e86a4a2077a8a6bfeb","permalink":"https://111qqz.github.io/2016/02/hdu-2189-512-/","publishdate":"2016-02-26T08:39:56Z","readingtime":1,"relpermalink":"/2016/02/hdu-2189-512-/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2189 题意：n个人可以分成若干组，每组人数都为素数，问有多少种分法。 思路：母函数。先预处理素数，记得多处理一点\u0026hellip; /* *********************************************** Author :111qqz Created Time :20","tags":["母函数"],"title":"hdu 2189  悼念512汶川大地震遇难同胞——来生一起走 (母函数)","type":"post","url":"/2016/02/hdu-2189-512--/","weight":0,"wordcount":350},{"author":null,"categories":["ACM"],"content":null,"date":1456411759,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456411759,"objectID":"4189e4aa6ee9608b3692c40d242bbe30","permalink":"https://111qqz.github.io/2016/02/hdu1085/","publishdate":"2016-02-25T14:49:19Z","readingtime":1,"relpermalink":"/2016/02/hdu1085/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1085 题意;一元的钱有num_1张，2元的钱有num_2张，5元的钱有num_5张，问最小的不能组成的钱是多少。 思路：有限个个数的母函数，并且不","tags":["母函数"],"title":"hdu 1085  Holding Bin-Laden Captive! （母函数）","type":"post","url":"/2016/02/hdu1085/","weight":0,"wordcount":466},{"author":null,"categories":["ACM"],"content":null,"date":1456410252,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456410252,"objectID":"9fd7e8e7e73c94613489ce425fbddda7","permalink":"https://111qqz.github.io/2016/02/hdu1398/","publishdate":"2016-02-25T14:24:12Z","readingtime":1,"relpermalink":"/2016/02/hdu1398/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1398 题意：所有的货币都是平方数，比如1,4,9\u0026hellip;问凑出n块钱有多少种办法。 思路：母函数。 /* *********************************************** Author :111qqz Created Time :2016年02月25日 星期","tags":["母函数"],"title":"hdu 1398 Square Coins (母函数裸题)","type":"post","url":"/2016/02/hdu1398/","weight":0,"wordcount":268},{"author":null,"categories":["ACM"],"content":null,"date":1456409627,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456409627,"objectID":"36f8dbd0849cf00baf2469ef80154885","permalink":"https://111qqz.github.io/2016/02/hdu1028/","publishdate":"2016-02-25T14:13:47Z","readingtime":2,"relpermalink":"/2016/02/hdu1028/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1028 题意：求整数拆分数。 思路：母函数模板题。关于母函数的学习：http://www.cnblogs.com/syxchina/archive/","tags":["母函数","组合数学"],"title":"hdu 1028 Ignatius and the Princess III（整数拆分，母函数模板题）","type":"post","url":"/2016/02/hdu1028/","weight":0,"wordcount":571},{"author":null,"categories":["ACM"],"content":null,"date":1456332232,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456332232,"objectID":"caf95bbddbf5f47dc817b78019f67150","permalink":"https://111qqz.github.io/2016/02/poj2926/","publishdate":"2016-02-24T16:43:52Z","readingtime":1,"relpermalink":"/2016/02/poj2926/","section":"post","summary":"http://poj.org/problem?id=2926 题意：给出n(1E5)个五维空间内的坐标\u0026hellip;问最远的两个点距离多少。 思路：拆点即可。去绝对值。可以由二维空间推广到k维空间。一","tags":["拆点","曼哈顿距离"],"title":"poj 2926 Requirements （五维曼哈顿距离变换【拆点】）","type":"post","url":"/2016/02/poj2926/","weight":0,"wordcount":279},{"author":null,"categories":["ACM"],"content":null,"date":1456329416,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456329416,"objectID":"f45196cddc54cbe6d55c56a32bea3f56","permalink":"https://111qqz.github.io/2016/02/hdu5626/","publishdate":"2016-02-24T15:56:56Z","readingtime":1,"relpermalink":"/2016/02/hdu5626/","section":"post","summary":"http://acm.split.hdu.edu.cn/showproblem.php?pid=5626 题意：给出n（1E6）个点的二维坐标，问距离最远的两个点的距离是多少。 思路：对曼哈顿距离进行变换。 先看曼哈顿距离的定义 |x1−x2|+|y","tags":["拆点","曼哈顿距离"],"title":"hdu 5626 Clarke and points (曼哈顿距离变换，拆点)","type":"post","url":"/2016/02/hdu5626/","weight":0,"wordcount":473},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1456321031,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456321031,"objectID":"6591cdee497f8ca92539244b7fe56c2f","permalink":"https://111qqz.github.io/2016/02/finally-get-bzoj-vip/","publishdate":"2016-02-24T13:37:11Z","readingtime":1,"relpermalink":"/2016/02/finally-get-bzoj-vip/","section":"post","summary":"本打算和队友一起买一个。。。 结果站长看到id填的学校是华科的。。然后买一送一，感动到cry\u0026hellip; 所以结果是400元我和队友一人一个","tags":null,"title":"买了bzoj权限号","type":"post","url":"/2016/02/finally-get-bzoj-vip/","weight":0,"wordcount":96},{"author":null,"categories":["ACM"],"content":null,"date":1456319221,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456319221,"objectID":"7716ec1e16f6b48cb05947ae569f3de1","permalink":"https://111qqz.github.io/2016/02/bzoj1604/","publishdate":"2016-02-24T13:07:01Z","readingtime":3,"relpermalink":"/2016/02/bzoj1604/","section":"post","summary":"http://www.lydsy.com/JudgeOnline/problem.php?id=1604 题意：了解奶牛们的人都知道，奶牛喜欢成群结队．观察约翰的N(1≤N≤100000)只奶牛，你会发现她们已经结成了几个“群”．每只奶牛在吃草","tags":["map","set","并查集","拆点","曼哈顿距离"],"title":"bzoj 1604: [Usaco2008 Open]Cow Neighborhoods 奶牛的邻居 (曼哈顿距离的转化【拆点】+set+并查集)","type":"post","url":"/2016/02/bzoj1604/","weight":0,"wordcount":1321},{"author":null,"categories":null,"content":null,"date":1456319221,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1456319221,"objectID":"","permalink":"https://111qqz.github.io/tags/map/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/map/","section":"tags","summary":"","tags":null,"title":"map","type":"tags","url":"/tags/map/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1456132435,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456132435,"objectID":"bf4a95464e6dfd27e0fdf87b93bb15df","permalink":"https://111qqz.github.io/2016/02/nthu-10925-advanced-heap-sort/","publishdate":"2016-02-22T09:13:55Z","readingtime":1,"relpermalink":"/2016/02/nthu-10925-advanced-heap-sort/","section":"post","summary":"http://140.114.86.238/problem/10925/ Description 有兩個序列S1和S2，各有N個元素。當我們在S1,S2各取一個數字時，總共會有NN這麼多可能的”和”(sum)。請找出這NN這麼多和裡最","tags":["greedy"],"title":"nthu 10925 - Advanced Heap Sort","type":"post","url":"/2016/02/nthu-10925-advanced-heap-sort/","weight":0,"wordcount":500},{"author":null,"categories":["ACM"],"content":null,"date":1456024911,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1456024911,"objectID":"7eb299fb62e3d963684c496178b71b11","permalink":"https://111qqz.github.io/2016/02/hdu1575/","publishdate":"2016-02-21T03:21:51Z","readingtime":1,"relpermalink":"/2016/02/hdu1575/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1575 题意：A为一方阵，求(A^k)73得到的矩阵的主对角线的和。 思路：矩阵快速幂。模板题。 /* *********************************************** Author :111qqz Created Time :2016年02月21日 星期日 10时28","tags":["快速幂","矩阵"],"title":"hdu 1575 Tr A （矩阵快速幂模板题）","type":"post","url":"/2016/02/hdu1575/","weight":0,"wordcount":355},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1455999159,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455999159,"objectID":"97b37441612c579eb549efbddf0c3908","permalink":"https://111qqz.github.io/2016/02/to-do-list/","publishdate":"2016-02-20T20:12:39Z","readingtime":6,"relpermalink":"/2016/02/to-do-list/","section":"post","summary":"* 《程序员的自我修养—链接、装载与库》 * 了解多线程编程的通用做法，包括如何结束一个while(true)的循环等（tbb.abort()或者","tags":null,"title":"To do list","type":"post","url":"/2016/02/to-do-list/","weight":0,"wordcount":2608},{"author":null,"categories":["ACM"],"content":null,"date":1455994375,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455994375,"objectID":"45fcc7af45d99f0d4d0475d8007d6d25","permalink":"https://111qqz.github.io/2016/02/bzoj2002/","publishdate":"2016-02-20T18:52:55Z","readingtime":1,"relpermalink":"/2016/02/bzoj2002/","section":"post","summary":"http://www.lydsy.com/JudgeOnline/problem.php?id=2002 题意+思路： 同codeforces 13 E holes. /* *********************************************** Author :111qqz Created Time :2016年02月21日 星期日 02时29分39秒 File Name :code/bzoj/2002.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt;","tags":["分块"],"title":"bzoj2002: [Hnoi2010]Bounce 弹飞绵羊 (分块)","type":"post","url":"/2016/02/bzoj2002/","weight":0,"wordcount":308},{"author":null,"categories":["ACM"],"content":null,"date":1455991819,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455991819,"objectID":"8abec85f7e5a682ff1516fa16a544f85","permalink":"https://111qqz.github.io/2016/02/cf13e/","publishdate":"2016-02-20T18:10:19Z","readingtime":2,"relpermalink":"/2016/02/cf13e/","section":"post","summary":"http://codeforces.com/problemset/problem/13/E 题意：给你n个洞，进入某个洞后会跑到另一个洞，到了另一个洞之后又可能会继续到下一个洞，问你从一个洞进去，钻了几个洞才会出来，在哪个洞出来 n","tags":["分块"],"title":"codeforces 13 E. Holes (分块)","type":"post","url":"/2016/02/cf13e/","weight":0,"wordcount":603},{"author":null,"categories":["ACM"],"content":null,"date":1455973169,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455973169,"objectID":"8874d87c5128f203418f1d9ca3d22671","permalink":"https://111qqz.github.io/2016/02/cf613b/","publishdate":"2016-02-20T12:59:29Z","readingtime":2,"relpermalink":"/2016/02/cf613b/","section":"post","summary":"http://codeforces.com/contest/613/problem/B 题意：有n个技能，初始每个技能的level为a[i]，每个技能最大level为A(不妨称为满级技能)，设满级技能个数为maxnum,最小的","tags":["binary search","greedy"],"title":"codeforces #339 div2 D","type":"post","url":"/2016/02/cf613b/","weight":0,"wordcount":737},{"author":null,"categories":["ACM"],"content":null,"date":1455939195,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455939195,"objectID":"d689c8815189fabe5bd3746c599e4fde","permalink":"https://111qqz.github.io/2016/02/bzoj3289/","publishdate":"2016-02-20T03:33:15Z","readingtime":1,"relpermalink":"/2016/02/bzoj3289/","section":"post","summary":"http://www.lydsy.com/JudgeOnline/problem.php?id=3289 题意：中文题目，简单来说就是求某一区间内的逆序对数。 思路：逆序对数想到树状数组。不过写莫队转移的时候没弄明白。。。。大概是树状数组理解的还","tags":["树状数组","莫队算法"],"title":"BZOJ 3289  Mato的文件管理 (莫队算法套树状数组)","type":"post","url":"/2016/02/bzoj3289/","weight":0,"wordcount":493},{"author":null,"categories":["ACM"],"content":null,"date":1455867081,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455867081,"objectID":"3586b959d23a8326baf80a4393476893","permalink":"https://111qqz.github.io/2016/02/","publishdate":"2016-02-19T07:31:21Z","readingtime":2,"relpermalink":"/2016/02/","section":"post","summary":"1.Problems which you are asked to answer some queries about the sum of a part of elements (without modify queries). Solution of all of this problems are the same. You just need to know how to solve one of them. Example : You are asked some queries on an array _a_1, _a_2, \u0026hellip;a, n. Each query give you numbers l and r and you should print a__l + a__l +","tags":["前缀和"],"title":"前缀和问题总结","type":"post","url":"/2016/02//","weight":0,"wordcount":717},{"author":null,"categories":["ACM"],"content":null,"date":1455865518,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455865518,"objectID":"9c47fda29117dec8c4323171494eba01","permalink":"https://111qqz.github.io/2016/02/hdu5416/","publishdate":"2016-02-19T07:05:18Z","readingtime":2,"relpermalink":"/2016/02/hdu5416/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5416 题意：给出一棵树（n\u0026lt;=1E5），定义二元函数函数f(u,v) (u可以等于v)表示节点u到节点v经过的路径的权值的异或和。给出q组查","tags":["dfs","前缀和"],"title":"hdu 5416 CRB and Tree ( 2015 多校 #10 )","type":"post","url":"/2016/02/hdu5416/","weight":0,"wordcount":535},{"author":null,"categories":["ACM"],"content":null,"date":1455860145,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455860145,"objectID":"fe3b037e2fe924eb94b5167472ca8a7a","permalink":"https://111qqz.github.io/2016/02/hdu5327/","publishdate":"2016-02-19T05:35:45Z","readingtime":1,"relpermalink":"/2016/02/hdu5327/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5327 题意：问给出的区间[a,b]中有多少个美丽数，美丽数的定义是所有数字都不相同，如123是，100不是，333也不是。 思路：预处理1..10","tags":["前缀和"],"title":"hdu 5327 Olympiad （2015  多校 #4 ）","type":"post","url":"/2016/02/hdu5327/","weight":0,"wordcount":340},{"author":null,"categories":["ACM"],"content":null,"date":1455786190,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455786190,"objectID":"1c557aa04112c2e6cd7718d29dc8edb3","permalink":"https://111qqz.github.io/2016/02/zoj3693/","publishdate":"2016-02-18T09:03:10Z","readingtime":1,"relpermalink":"/2016/02/zoj3693/","section":"post","summary":"http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=3693 题意： n+2个人取吃饭，每人w元，每k个人可以少付一个人的钱，问最后两个教练每人要付多少钱。 思路：贪心。坑点在读题。。选手n个人，不要忘记","tags":["greedy"],"title":"zoj 3693  Happy Great BG","type":"post","url":"/2016/02/zoj3693/","weight":0,"wordcount":255},{"author":null,"categories":["ACM"],"content":null,"date":1455777544,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455777544,"objectID":"1155d3d64e94156378eb03045d94038a","permalink":"https://111qqz.github.io/2016/02/cf373c/","publishdate":"2016-02-18T06:39:04Z","readingtime":1,"relpermalink":"/2016/02/cf373c/","section":"post","summary":"http://codeforces.com/contest/373/problem/C 题意：n个袋鼠，每个袋鼠的size为a[i],一只袋鼠的size至少是另一只两倍时才能将它装下，被装下的袋鼠不能再装别的袋鼠且不能被看见。","tags":["greedy"],"title":"codeforces 373 C. Counting Kangaroos is Fun","type":"post","url":"/2016/02/cf373c/","weight":0,"wordcount":284},{"author":null,"categories":["ACM"],"content":null,"date":1455737958,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455737958,"objectID":"f1c08879ec86e998976d098cc0281d3d","permalink":"https://111qqz.github.io/2016/02/hdu4638/","publishdate":"2016-02-17T19:39:18Z","readingtime":2,"relpermalink":"/2016/02/hdu4638/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4638 题意：给定一个序列，序列由1-N个元素全排列而成，求任意区间连续的段数。例如序列2,3,5,6,9就是三段(2, 3) (5, 6)(9)。 思路：增加","tags":["分块","莫队算法"],"title":"hdu 4638 Group","type":"post","url":"/2016/02/hdu4638/","weight":0,"wordcount":674},{"author":null,"categories":["ACM"],"content":null,"date":1455724452,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455724452,"objectID":"36e2ddb570fd6b6cc91e83979059c538","permalink":"https://111qqz.github.io/2016/02/cf614c/","publishdate":"2016-02-17T15:54:12Z","readingtime":1,"relpermalink":"/2016/02/cf614c/","section":"post","summary":"http://codeforces.com/contest/614/problem/C 题意：给一个多边形和多边形外一定点，多边形绕定点旋转，问多边形扫过的面积。 思路：简单计算几何，找到多边形距离定点的最大和最小距离R和r,答","tags":["计算几何"],"title":"codeforces #339 div 2 C. Peter and Snow Blower","type":"post","url":"/2016/02/cf614c/","weight":0,"wordcount":462},{"author":null,"categories":["ACM"],"content":null,"date":1455700831,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455700831,"objectID":"64ecf982480ddda2617882384cc95a70","permalink":"https://111qqz.github.io/2016/02/","publishdate":"2016-02-17T09:20:31Z","readingtime":1,"relpermalink":"/2016/02/","section":"post","summary":"写了几道莫队，总结下。 目前只会区间莫队。。树上莫队以后再补。 莫队算法学习 说说我自己的理解： 莫队算法是一类用来处理离线静态区间问题的算法。 必须","tags":["莫队算法"],"title":"莫队算法总结","type":"post","url":"/2016/02//","weight":0,"wordcount":234},{"author":null,"categories":["ACM"],"content":null,"date":1455700664,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455700664,"objectID":"531522ddaf8780882863f0df2bc9db6b","permalink":"https://111qqz.github.io/2016/02/nbut1457/","publishdate":"2016-02-17T09:17:44Z","readingtime":1,"relpermalink":"/2016/02/nbut1457/","section":"post","summary":"https://ac.2333.moe/Problem/view.xhtml?id=1457 题意：求一段区间内数字个数的立方和。 思路：由于一共才1E5,而数字1E9,所以先离散化，再莫队，类似小z的袜子。 注意 ：%lld会WA,要用","tags":null,"title":"nbut 1457 Sona","type":"post","url":"/2016/02/nbut1457/","weight":0,"wordcount":454},{"author":null,"categories":["ACM"],"content":null,"date":1455694445,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455694445,"objectID":"3a76ddfae97ed39c72c49b8777a345b0","permalink":"https://111qqz.github.io/2016/02/hdu5145/","publishdate":"2016-02-17T07:34:05Z","readingtime":2,"relpermalink":"/2016/02/hdu5145/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5145 题意：有n个女孩，编号1..n,第i个女孩在第a[i]个教室,m次访问，每次访问编号[L,R]的女孩，处于同一个教室的女孩一次只能访问一个","tags":["组合数学","莫队算法","计数问题","逆元"],"title":"hdu 5145 NPY and girls","type":"post","url":"/2016/02/hdu5145/","weight":0,"wordcount":755},{"author":null,"categories":["ACM"],"content":null,"date":1455539557,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455539557,"objectID":"9821d1393df595e398883c14a8fb1169","permalink":"https://111qqz.github.io/2016/02/cf617e/","publishdate":"2016-02-15T12:32:37Z","readingtime":2,"relpermalink":"/2016/02/cf617e/","section":"post","summary":"http://codeforces.com/contest/617/problem/E 题意：给出n个数，m个查询，每个查询给定l,r，问在区间【l,r】内，有多少对i,j,满足i^(i+1)^(i+2)^\u0026hellip;^j","tags":["前缀和","莫队算法"],"title":"codeforces #340 div 2 E XOR and Favorite Number","type":"post","url":"/2016/02/cf617e/","weight":0,"wordcount":882},{"author":null,"categories":["ACM"],"content":null,"date":1455526710,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455526710,"objectID":"376d4fb610bcc38371638a0b515e5458","permalink":"https://111qqz.github.io/2016/02/hdu5213/","publishdate":"2016-02-15T08:58:30Z","readingtime":2,"relpermalink":"/2016/02/hdu5213/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5213 题意：n个数，m个查询，每个查询由4个数l1,r1,l2,r2构成，询问分别从[l1,r1]和[l2,r2]中各取一个数，和为给定的常数k","tags":["分块","容斥原理","莫队算法"],"title":"hdu 5213 lucky （莫队算法）","type":"post","url":"/2016/02/hdu5213/","weight":0,"wordcount":842},{"author":null,"categories":["ACM"],"content":null,"date":1455384442,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455384442,"objectID":"24fa4ff268ce950e6523eed70c22f511","permalink":"https://111qqz.github.io/2016/02/codeforces-220-b-little-elephant-and-array/","publishdate":"2016-02-13T17:27:22Z","readingtime":2,"relpermalink":"/2016/02/codeforces-220-b-little-elephant-and-array/","section":"post","summary":"http://codeforces.com/contest/220/problem/B 题意：n个数，m个查询区间，对于每一个区间[l,r]输出区间中cnt[x]==x的数的个数。 思路：首先，a[i]很大。。。但是n最大才1e","tags":["分块","莫队算法"],"title":"codeforces 220 B. Little Elephant and Array","type":"post","url":"/2016/02/codeforces-220-b-little-elephant-and-array/","weight":0,"wordcount":511},{"author":null,"categories":["ACM"],"content":null,"date":1455379162,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455379162,"objectID":"7e6e0ae36dec8e6f9c602c6ceb41165b","permalink":"https://111qqz.github.io/2016/02/cf86d/","publishdate":"2016-02-13T15:59:22Z","readingtime":1,"relpermalink":"/2016/02/cf86d/","section":"post","summary":"http://codeforces.com/problemset/problem/86/D 题意：Ks为区间内s的数目，求区间[L,R]之间所有KsKss的和 思路：莫队算法，和小z的袜子差不多。不明白第一次tle#54是什么情况。","tags":["分块","莫队算法"],"title":"codeforces 86 D. Powerful array  （莫队算法）","type":"post","url":"/2016/02/cf86d/","weight":0,"wordcount":469},{"author":null,"categories":["ACM"],"content":null,"date":1455094264,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1455094264,"objectID":"2009a94e1af8a3ada2f76938e8c26085","permalink":"https://111qqz.github.io/2016/02/bzoj-2038/","publishdate":"2016-02-10T08:51:04Z","readingtime":3,"relpermalink":"/2016/02/bzoj-2038/","section":"post","summary":"2038: [2009国家集训队]小Z的袜子(hose) Time Limit: 20 Sec Memory Limit: 259 MB Submit: 5327 Solved: 2461 [Submit][Status][Discuss] Description 作为一个生活散漫的人，小Z每天早上都要耗费很久从一堆五颜六色的袜子","tags":["分块","莫队算法"],"title":"（莫队算法的学习）bzoj 2038  [2009国家集训队]小Z的袜子(hose)","type":"post","url":"/2016/02/bzoj-2038/","weight":0,"wordcount":1392},{"author":null,"categories":["ACM"],"content":null,"date":1454934502,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454934502,"objectID":"c454d5a72d9689991e58c8b3bbb3311a","permalink":"https://111qqz.github.io/2016/02/cf625d/","publishdate":"2016-02-08T12:28:22Z","readingtime":1,"relpermalink":"/2016/02/cf625d/","section":"post","summary":"http://codeforces.com/contest/625/problem/D 题意：问能否找到一个s,满足s+s的反转=k 思路：如果是回文数。。。那么显然满足。除以2就可以得到答案。 如果不是回文数。。那么考虑进位的情","tags":["构造"],"title":"codeforces #342 div 2 D. Finals in arithmetic","type":"post","url":"/2016/02/cf625d/","weight":0,"wordcount":451},{"author":null,"categories":["ACM"],"content":null,"date":1454922281,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454922281,"objectID":"fa5817c8845b8f27e10c805572d3f8e2","permalink":"https://111qqz.github.io/2016/02/cf621e/","publishdate":"2016-02-08T09:04:41Z","readingtime":1,"relpermalink":"/2016/02/cf621e/","section":"post","summary":"http://codeforces.com/problemset/problem/621/E 题意：有b组数，每组数均有n个且相同。你必须在每组选一个数，组成一个新数sum，使得sum % x == k，问方案数 % (1e9+7)。 思路：数位d","tags":["dp","快速幂","数位dp","矩阵"],"title":"codeforces #341 div 2 E. Wet Shark and Blocks  (数位dp+矩阵加速)","type":"post","url":"/2016/02/cf621e/","weight":0,"wordcount":493},{"author":null,"categories":["ACM"],"content":null,"date":1454877867,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454877867,"objectID":"255ad02a066bd9786e68da828120e164","permalink":"https://111qqz.github.io/2016/02/cf621d/","publishdate":"2016-02-07T20:44:27Z","readingtime":2,"relpermalink":"/2016/02/cf621d/","section":"post","summary":"http://codeforces.com/contest/621/problem/D 题意：给出12个式子，问哪个最大。 思路：主要记住两个。一个是比较指数形式的数一个常用办法是取对数，同时要考虑是否能取对数，分情况讨论对于不","tags":["math"],"title":"codeforces #341 div 2 D. Rat Kwesh and Cheese","type":"post","url":"/2016/02/cf621d/","weight":0,"wordcount":842},{"author":null,"categories":["ACM"],"content":null,"date":1454844724,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454844724,"objectID":"bc8eaa8b56ced8a1d72b25b35c1e4631","permalink":"https://111qqz.github.io/2016/02/cf625c/","publishdate":"2016-02-07T11:32:04Z","readingtime":1,"relpermalink":"/2016/02/cf625c/","section":"post","summary":"http://codeforces.com/contest/625/problem/C 题意：构造一个矩阵。。满足三个条件。。。 思路：简单构造。。。看代码把。。。。 /* *********************************************** Author :111qqz Created Time :2016年02月07日 星期日 17时49分15秒 File","tags":["构造"],"title":"codeforces #342 div 2 C. K-special Tables","type":"post","url":"/2016/02/cf625c/","weight":0,"wordcount":287},{"author":null,"categories":["ACM"],"content":null,"date":1454844477,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454844477,"objectID":"a9de052e2ca0617eb9a52324a962b81c","permalink":"https://111qqz.github.io/2016/02/cf625b/","publishdate":"2016-02-07T11:27:57Z","readingtime":1,"relpermalink":"/2016/02/cf625b/","section":"post","summary":"http://codeforces.com/contest/625/problem/B 题意：给出两个字符串，问要替换掉多少个字符才能使得前者中不包含后者。 思路：直接搞\u0026hellip;找到一个把收尾替换成‘#’,然后下次从该位","tags":["字符串"],"title":"codeforces #342 div 2 B. War of the Corporations","type":"post","url":"/2016/02/cf625b/","weight":0,"wordcount":236},{"author":null,"categories":null,"content":null,"date":1454844477,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1454844477,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/","section":"tags","summary":"","tags":null,"title":"字符串","type":"tags","url":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1454844247,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454844247,"objectID":"1bc81b2563607db13e5e790fb923f279","permalink":"https://111qqz.github.io/2016/02/codeforces-342-div-2-a-guest-from-the-past/","publishdate":"2016-02-07T11:24:07Z","readingtime":1,"relpermalink":"/2016/02/codeforces-342-div-2-a-guest-from-the-past/","section":"post","summary":"http://codeforces.com/contest/625/problem/A 题意：有n块钱，塑料瓶饮料a元一瓶，玻璃瓶饮料b元一瓶，退还玻璃瓶可以得到c元。问最多能买多少瓶饮料。 思路：贪心。如果塑料瓶比玻璃瓶的实际","tags":["math"],"title":"codeforces #342 div 2 A. Guest From the Past","type":"post","url":"/2016/02/codeforces-342-div-2-a-guest-from-the-past/","weight":0,"wordcount":274},{"author":null,"categories":["ACM"],"content":null,"date":1454528078,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454528078,"objectID":"5eb2b67c3edd01402c427981cdf726d5","permalink":"https://111qqz.github.io/2016/02/cf148d/","publishdate":"2016-02-03T19:34:38Z","readingtime":2,"relpermalink":"/2016/02/cf148d/","section":"post","summary":"http://codeforces.com/problemset/problem/148/D 题意：盒子里有w只白老鼠，b只黑老鼠，公主和魔王轮流取（公主先），先取到白老鼠的人获胜。魔王每次取完以后，盒子中的老鼠会因为吓尿了跑掉一只","tags":["dp","概率"],"title":"codeforces 148 D. Bag of mice","type":"post","url":"/2016/02/cf148d/","weight":0,"wordcount":502},{"author":null,"categories":["ACM"],"content":null,"date":1454496196,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454496196,"objectID":"185e5fad998c7f2d142fd9bc3c873c6a","permalink":"https://111qqz.github.io/2016/02/codeforces-107-b-basketball-team/","publishdate":"2016-02-03T10:43:16Z","readingtime":2,"relpermalink":"/2016/02/codeforces-107-b-basketball-team/","section":"post","summary":"http://codeforces.com/problemset/problem/107/B 题意：有m个部门，每个部分s[i]个人，HW在第h部门，现在要从这m个部门中挑选包括HW在内的n个人去参加比赛，问被挑选的人中有HW的队友","tags":["math","概率"],"title":"codeforces 107 B. Basketball Team","type":"post","url":"/2016/02/codeforces-107-b-basketball-team/","weight":0,"wordcount":578},{"author":null,"categories":["ACM"],"content":null,"date":1454401247,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454401247,"objectID":"3b0e7c6f5d0d95f16107d9594cbc7b75","permalink":"https://111qqz.github.io/2016/02/cf518/","publishdate":"2016-02-02T08:20:47Z","readingtime":1,"relpermalink":"/2016/02/cf518/","section":"post","summary":"http://codeforces.com/problemset/problem/518/D 题意：有n个人排队上一个电梯。。。在某一秒内，队首的人有p的概率上电梯，1-p的概率不动。每个人只有在队首的位置才可以上电梯（也就是每一秒","tags":["dp","概率"],"title":"codeforces 518  D. Ilya and Escalator","type":"post","url":"/2016/02/cf518/","weight":0,"wordcount":462},{"author":null,"categories":["ACM"],"content":null,"date":1454394603,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454394603,"objectID":"32fa4a90af649fa03d8093f7261cc345","permalink":"https://111qqz.github.io/2016/02/cf312b/","publishdate":"2016-02-02T06:30:03Z","readingtime":2,"relpermalink":"/2016/02/cf312b/","section":"post","summary":"http://codeforces.com/problemset/problem/312/B 题意：两个人比赛射箭，先射的人射中的概率是a/b,后射的人射中的概率是c/d,问先射的人赢的概率。 思路：应该叫条件概率。。。？ 不过我们可以","tags":["math","概率"],"title":"codeforces 312 B. Archer","type":"post","url":"/2016/02/cf312b/","weight":0,"wordcount":527},{"author":null,"categories":["ACM"],"content":null,"date":1454363439,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454363439,"objectID":"1e6b20867dbfc3cc0969c3e97643f1c6","permalink":"https://111qqz.github.io/2016/02/cf543a/","publishdate":"2016-02-01T21:50:39Z","readingtime":1,"relpermalink":"/2016/02/cf543a/","section":"post","summary":"http://codeforces.com/problemset/problem/453/A 题意：m面筛子，每面点数出现的概率相同，连续投掷n次，问出现的最大值的数学期望。 思路：手写样例。。。发现答案为。。。记得把（1/m）^n放","tags":["math","概率"],"title":"codeforces 453 A. Little Pony and Expected Maximum","type":"post","url":"/2016/02/cf543a/","weight":0,"wordcount":352},{"author":null,"categories":["ACM"],"content":null,"date":1454357278,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454357278,"objectID":"5e5c37f37c6f8a5f2609b3769ac50803","permalink":"https://111qqz.github.io/2016/02/cf476b/","publishdate":"2016-02-01T20:07:58Z","readingtime":2,"relpermalink":"/2016/02/cf476b/","section":"post","summary":"http://codeforces.com/problemset/problem/476/B 题意：给出两个长度相等-且不超过10的字符串，串1只包含‘-’,\u0026lsquo;+‘。按照‘+’为1，‘-’为-1累加可以得到一个值。串2还","tags":["math","概率"],"title":"codeforces 476 B. Dreamoon and WiFi","type":"post","url":"/2016/02/cf476b/","weight":0,"wordcount":506},{"author":null,"categories":["ACM"],"content":null,"date":1454331374,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454331374,"objectID":"cd1706af2145c651ba00ce65c916e304","permalink":"https://111qqz.github.io/2016/02/cf621a/","publishdate":"2016-02-01T12:56:14Z","readingtime":1,"relpermalink":"/2016/02/cf621a/","section":"post","summary":"http://codeforces.com/contest/621/problem/A A. Wet Shark and Odd and Even time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today, Wet Shark is given n integers. Using any of these integers no more than once, Wet Shark wants to get maximum possible even (divisible by 2) sum. Please, calculate this value for Wet Shark. Note, that if Wet Shark uses no integers from","tags":["brute force"],"title":"codeforces #341 div2 A. Die Roll","type":"post","url":"/2016/02/cf621a/","weight":0,"wordcount":439},{"author":null,"categories":["ACM"],"content":null,"date":1454331183,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454331183,"objectID":"09d592214ab6ebedaa22e295d9dc5a00","permalink":"https://111qqz.github.io/2016/02/cf621b/","publishdate":"2016-02-01T12:53:03Z","readingtime":2,"relpermalink":"/2016/02/cf621b/","section":"post","summary":"http://codeforces.com/contest/621/problem/B B. Wet Shark and Bishops time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Today, Wet Shark is given n bishops on a 1000 by 1000 grid. Both rows and columns of the grid are numbered from 1 to 1000. Rows are numbered from top to bottom, while columns are numbered from left to right. Wet Shark thinks that two","tags":["brute force"],"title":"codeforces #341 div 2 B. Wet Shark and Bishops","type":"post","url":"/2016/02/cf621b/","weight":0,"wordcount":558},{"author":null,"categories":["ACM"],"content":null,"date":1454327749,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454327749,"objectID":"f44c28456ed7d121de8a08ac2ede4d8a","permalink":"https://111qqz.github.io/2016/02/cf341/","publishdate":"2016-02-01T11:55:49Z","readingtime":3,"relpermalink":"/2016/02/cf341/","section":"post","summary":"http://codeforces.com/contest/621/problem/C C. Wet Shark and Flowers time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output There are n sharks who grow flowers for Wet Shark. They are all sitting around the table, such that sharks i and i + 1 are neighbours for all i from 1 to n - 1. Sharks n and 1 are neighbours too. Each shark will","tags":["math","概率"],"title":"codeforces #341 div2  C. Wet Shark and Flowers","type":"post","url":"/2016/02/cf341/","weight":0,"wordcount":1358},{"author":null,"categories":["ACM"],"content":null,"date":1454071981,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1454071981,"objectID":"5dc78974de800587b407837364c15806","permalink":"https://111qqz.github.io/2016/01/uva10916/","publishdate":"2016-01-29T12:53:01Z","readingtime":1,"relpermalink":"/2016/01/uva10916/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=1857 题意：计算最大的n,满足n!/* *********************************************** Author :111qqz Created Time :2016年01月29日 星期五 19时49分25秒 File Name :code/uva/10916.cpp ************************************************ */ #include #include #include #include #include #include #include #include #include #include #include #include #define fst first #define sec second #define","tags":["log","math"],"title":"uva 10916  Factstone Benchmark","type":"post","url":"/2016/01/uva10916/","weight":0,"wordcount":295},{"author":null,"categories":["ACM"],"content":null,"date":1453986551,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453986551,"objectID":"ec2c64ed7a7686673659239c6d1b8282","permalink":"https://111qqz.github.io/2016/01/uva107/","publishdate":"2016-01-28T13:09:11Z","readingtime":1,"relpermalink":"/2016/01/uva107/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid=8\u0026amp;page=show_problem\u0026amp;problem=43 题意：其实就是给了两个式子。。。(N+1)^h=a,N^h=b,a,b已知，然后求关于N的两个式子.。。 思路：数学上这个方程貌似不可解。。","tags":["math"],"title":"uva 107 The Cat in the Hat","type":"post","url":"/2016/01/uva107/","weight":0,"wordcount":387},{"author":null,"categories":["ACM"],"content":null,"date":1453986194,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453986194,"objectID":"e2ed14fb1e5c8b35b9961a6e834d38b3","permalink":"https://111qqz.github.io/2016/01/uva846/","publishdate":"2016-01-28T13:03:14Z","readingtime":2,"relpermalink":"/2016/01/uva846/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=787 题意：从x增加到y，第一步和最后一步步长只能是1，其他步一定可以是上一步减一，和上一步相等，或者上一步步长加一，三种情况，且步长恒为正。问","tags":["math"],"title":"uva 846 Steps","type":"post","url":"/2016/01/uva846/","weight":0,"wordcount":684},{"author":null,"categories":["ACM"],"content":null,"date":1453986168,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453986168,"objectID":"342550544c018ac61a94c3ce72732ed0","permalink":"https://111qqz.github.io/2016/01/uva-10025/","publishdate":"2016-01-28T13:02:48Z","readingtime":1,"relpermalink":"/2016/01/uva-10025/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid=8\u0026amp;page=show_problem\u0026amp;problem=966 题意：?1?2?3?4\u0026hellip;?n=k,把每个?替换成+或者-，找到最小的n使得式子成立。 题意：这道题最关键的一点是。如果s1=1","tags":["math"],"title":"uva 10025 The ? 1 ? 2 ? ... ? n = k problem","type":"post","url":"/2016/01/uva-10025/","weight":0,"wordcount":380},{"author":null,"categories":["ACM"],"content":null,"date":1453922161,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453922161,"objectID":"c4fa9370431f233927bc72f31b7c293a","permalink":"https://111qqz.github.io/2016/01/uva113/","publishdate":"2016-01-27T19:16:01Z","readingtime":1,"relpermalink":"/2016/01/uva113/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=49 题意：求p开n次方。保证结果为整数。 思路：p最大10的101次方。。。double最大10的308次方。。因为肯定是整数。。不存在精度问题","tags":["math"],"title":"uva 113  Power of Cryptography","type":"post","url":"/2016/01/uva113/","weight":0,"wordcount":226},{"author":null,"categories":["ACM"],"content":null,"date":1453904024,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453904024,"objectID":"2f787b9f279d80aaf9a2d90d5f47e0c8","permalink":"https://111qqz.github.io/2016/01/uva10785/","publishdate":"2016-01-27T14:13:44Z","readingtime":2,"relpermalink":"/2016/01/uva10785/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=1726 题意：给出26个大写字母的权值，要求构造一个长度为n（n不超过210）的字符串。并且满足奇数位置只能放元音字母，偶数位置只能放辅音字母，且","tags":["greedy","字符串","构造"],"title":"uva 10785 The Mad Numerologist","type":"post","url":"/2016/01/uva10785/","weight":0,"wordcount":639},{"author":null,"categories":["ACM"],"content":null,"date":1453895862,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453895862,"objectID":"4c44df52df9b69eebd70430f878a758f","permalink":"https://111qqz.github.io/2016/01/uva10194/","publishdate":"2016-01-27T11:57:42Z","readingtime":2,"relpermalink":"/2016/01/uva10194/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=1135 题意：给出球队的名字和比赛的信息，得出stanging 思路：字符串处理。需要注意的是多组数据记得初始化多次，以及比较字典序的时候team n","tags":["字符串"],"title":"uva 10194 Football (aka Soccer)","type":"post","url":"/2016/01/uva10194/","weight":0,"wordcount":621},{"author":null,"categories":["ACM"],"content":null,"date":1453713596,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453713596,"objectID":"2ed32c14be058ebdbe41bc8d1a023257","permalink":"https://111qqz.github.io/2016/01/uva156/","publishdate":"2016-01-25T09:19:56Z","readingtime":2,"relpermalink":"/2016/01/uva156/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid=8\u0026amp;page=show_problem\u0026amp;problem=92 题意：给出一段文字，包含若干个单词，以\u0026rsquo;#\u0026lsquo;结束。按照字典序输出所有的ananagrams。所谓ananagram","tags":["hash","stl","字符串"],"title":"uva 156 - Ananagrams","type":"post","url":"/2016/01/uva156/","weight":0,"wordcount":793},{"author":null,"categories":["ACM"],"content":null,"date":1453702197,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453702197,"objectID":"9977e6bf94fd5936ccd66f281f439e8e","permalink":"https://111qqz.github.io/2016/01/uva120/","publishdate":"2016-01-25T06:09:57Z","readingtime":2,"relpermalink":"/2016/01/uva120/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=56 题意：给出一个长度为n的序列（无重复元素），询问经过多少次flip(i)操作，使得序列升序排列。定义flip(i)为将1到n-i+1的元素","tags":["brute force","离散化"],"title":"uva 120   Stacks of Flapjacks","type":"post","url":"/2016/01/uva120/","weight":0,"wordcount":522},{"author":null,"categories":["ACM"],"content":null,"date":1453637675,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453637675,"objectID":"4528d5f5834ae8e4f323cd061a08e7f1","permalink":"https://111qqz.github.io/2016/01/uva409/","publishdate":"2016-01-24T12:14:35Z","readingtime":2,"relpermalink":"/2016/01/uva409/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=350 题意：给出k个key word,e个借口\u0026hellip;找出包含key word最多的借口，即为最坏的借口。匹配补区分大小写\u0026amp;\u0026amp","tags":["字符串"],"title":"uva 409 - Excuses, Excuses!","type":"post","url":"/2016/01/uva409/","weight":0,"wordcount":505},{"author":null,"categories":["ACM"],"content":null,"date":1453560663,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453560663,"objectID":"7580c64662a54ba8bb0b61a0c0419cd5","permalink":"https://111qqz.github.io/2016/01/hdu5610/","publishdate":"2016-01-23T14:51:03Z","readingtime":1,"relpermalink":"/2016/01/hdu5610/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5610 题意：有重量为a,b两种铁圈每种无限多个\u0026hellip;能能否组成一个重量为c且平衡杠铃（中间的杆的重量忽略不计） a,b,c都是整数。 思路","tags":null,"title":"hdu 5610 ||BC #69 div2 1001 Baby Ming and Weight lifting","type":"post","url":"/2016/01/hdu5610/","weight":0,"wordcount":360},{"author":null,"categories":["ACM"],"content":null,"date":1453560206,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453560206,"objectID":"a8f2b9669bb3a19c26fa7fce6f1fa860","permalink":"https://111qqz.github.io/2016/01/hdu5611/","publishdate":"2016-01-23T14:43:26Z","readingtime":2,"relpermalink":"/2016/01/hdu5611/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5611 题意：给出n个电话号码（长度为11的字符串），满足特殊条件的价格为a，否则为b.特殊条件为最后5位数字一样，最后5位严格递增或者严格递减，","tags":["字符串","模拟"],"title":"hdu 5611 || BC #69 div2 1002 Baby Ming and phone number","type":"post","url":"/2016/01/hdu5611/","weight":0,"wordcount":651},{"author":null,"categories":["ACM"],"content":null,"date":1453446874,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453446874,"objectID":"0bd347a5e2e2a77dd177033e4ca4c7cd","permalink":"https://111qqz.github.io/2016/01/uva537/","publishdate":"2016-01-22T07:14:34Z","readingtime":2,"relpermalink":"/2016/01/uva537/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=478 题意：给出一段文字。。其中包含了 P,U,I（功率，电压，电流）中的两个。。求第三个。 思路：字符串处理。。第一次用vim复制整段代码。。命令","tags":["字符串"],"title":"uva 537 Artificial Intelligence?","type":"post","url":"/2016/01/uva537/","weight":0,"wordcount":746},{"author":null,"categories":["ACM"],"content":null,"date":1453397074,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453397074,"objectID":"df16d4625ed16baf6cab32ee4ca8af22","permalink":"https://111qqz.github.io/2016/01/uva-10010-wheres-waldorf/","publishdate":"2016-01-21T17:24:34Z","readingtime":2,"relpermalink":"/2016/01/uva-10010-wheres-waldorf/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid=8\u0026amp;page=show_problem\u0026amp;problem=951 题意：给出一个由大小写字母组成的二维maze\u0026hellip;给出k个询问。每个询问一个单词。问能否在maze中找到这个单词。不区分大小写。","tags":["字符串"],"title":"uva 10010  - Where's Waldorf?","type":"post","url":"/2016/01/uva-10010-wheres-waldorf/","weight":0,"wordcount":853},{"author":null,"categories":["ACM"],"content":null,"date":1453358002,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453358002,"objectID":"77581e611473dc6ed9044c3fa84e562d","permalink":"https://111qqz.github.io/2016/01/uva152/","publishdate":"2016-01-21T06:33:22Z","readingtime":2,"relpermalink":"/2016/01/uva152/","section":"post","summary":"题意：题意：给你一组三维空间中的点，每个点到其它点都有个距离，其中有个最小距离，如果这个最小距离小于10，就将对应的距离的点个数加１，最后输","tags":["水"],"title":"uva 152 Tree's a Crowd","type":"post","url":"/2016/01/uva152/","weight":0,"wordcount":511},{"author":null,"categories":["ACM"],"content":null,"date":1453305201,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453305201,"objectID":"42be0059c26d4b652151456007d51f2c","permalink":"https://111qqz.github.io/2016/01/uva-401-palindromes/","publishdate":"2016-01-20T15:53:21Z","readingtime":2,"relpermalink":"/2016/01/uva-401-palindromes/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid=8\u0026amp;category=96\u0026amp;page=show_problem\u0026amp;problem=342 题意：问一个字符串是不是回文串，是不是镜像串。镜像串的意思是。。从镜子里看还一样。。给定了一些存在镜像的字母和数字。。 思路：回文串的判断用","tags":["回文串","字符串"],"title":"uva 401 Palindromes","type":"post","url":"/2016/01/uva-401-palindromes/","weight":0,"wordcount":509},{"author":null,"categories":["ACM"],"content":null,"date":1453290452,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453290452,"objectID":"36e70bd0a813125cd64aec134abf8091","permalink":"https://111qqz.github.io/2016/01/uva10420/","publishdate":"2016-01-20T11:47:32Z","readingtime":1,"relpermalink":"/2016/01/uva10420/","section":"post","summary":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=1361 题意：给n个带空格的字符串，第一个单词是国家，统计每个国家的字符串的个数。 思路：getline函数。。。find函数。。。substr函数","tags":["map","字符串"],"title":"uva 10420 - List of Conquests","type":"post","url":"/2016/01/uva10420/","weight":0,"wordcount":251},{"author":null,"categories":["其他"],"content":null,"date":1453273681,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453273681,"objectID":"8a41373984672ceaedf44fc31993d295","permalink":"https://111qqz.github.io/2016/01/nyoj-505-/","publishdate":"2016-01-20T07:08:01Z","readingtime":1,"relpermalink":"/2016/01/nyoj-505-/","section":"post","summary":"http://acm.nyist.net/JudgeOnline/problem.php?pid=509 题意：中文题目。。。 思路：快速筛即可。。。妈蛋。。。这个oj不能用宏编译==。。。然后一直TLE\u0026hellip;去掉了就好了。。sad /* ***********************************************","tags":["数论"],"title":"NYOJ 505 因子和阶乘","type":"post","url":"/2016/01/nyoj-505-/","weight":0,"wordcount":344},{"author":null,"categories":null,"content":null,"date":1453273681,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1453273681,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E8%AE%BA/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E8%AE%BA/","section":"tags","summary":"","tags":null,"title":"数论","type":"tags","url":"/tags/%E6%95%B0%E8%AE%BA/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1453267786,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1453267786,"objectID":"74b94d0aa71c5724480f8a88a185ad74","permalink":"https://111qqz.github.io/2016/01/poj1350/","publishdate":"2016-01-20T05:29:46Z","readingtime":1,"relpermalink":"/2016/01/poj1350/","section":"post","summary":"http://poj.org/problem?id=1350 题意：6174问题。。。一个四位数。。四个数字重排。。。最大的减去最小的得到新的数字。最后一定能得到6174或者0.除非这个四位数的四个数","tags":null,"title":"poj 1350 Cabric Number Problem","type":"post","url":"/2016/01/poj1350/","weight":0,"wordcount":360},{"author":null,"categories":["c++"],"content":null,"date":1452495304,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1452495304,"objectID":"33adf69e61922a04cfc170b3c2d157bf","permalink":"https://111qqz.github.io/2016/01/cstatic/","publishdate":"2016-01-11T06:55:04Z","readingtime":1,"relpermalink":"/2016/01/cstatic/","section":"post","summary":"一般有两个 static int a; int b; void func(void) { static int c=0; int d; } 在这里，a与b都是全局变量，二者的区别是，b可以被别的文件使用，a只能在本文件中使用，这是static","tags":null,"title":"c语言中static的作用","type":"post","url":"/2016/01/cstatic/","weight":0,"wordcount":183},{"author":null,"categories":["ACM"],"content":null,"date":1451742290,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451742290,"objectID":"6acf1d4b4aaa32cd18c2ea20d68e9255","permalink":"https://111qqz.github.io/2016/01/hdoj5606/","publishdate":"2016-01-02T13:44:50Z","readingtime":2,"relpermalink":"/2016/01/hdoj5606/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5606 题意：一棵树，边权为0或者1，问对于每个点，距离它最近的点（包括自身）的个数是多少。输出将所有点的答案异或后的值。 思路：由于包括自身，自己","tags":["dfs","tree","图论"],"title":"hdoj 5606 ||bc #68 div 2 B tree","type":"post","url":"/2016/01/hdoj5606/","weight":0,"wordcount":525},{"author":null,"categories":null,"content":null,"date":1451742290,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451742290,"objectID":"","permalink":"https://111qqz.github.io/tags/tree/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tree/","section":"tags","summary":"","tags":null,"title":"tree","type":"tags","url":"/tags/tree/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1451741803,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451741803,"objectID":"ce3cbadba2ab8d808e90e79f83480b6d","permalink":"https://111qqz.github.io/2016/01/hdoj5605/","publishdate":"2016-01-02T13:36:43Z","readingtime":1,"relpermalink":"/2016/01/hdoj5605/","section":"post","summary":"题意：geometry Accepts: 324 Submissions: 622 Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/65536 K (Java/Others) 问题描述 在平面直角坐标系上有一个点PP, 他的坐标是(x, y)(x,y). 有一条直线y = kx + by=kx+b","tags":["math"],"title":"hdoj 5605 || bc #68 div 2 1001 geometry","type":"post","url":"/2016/01/hdoj5605/","weight":0,"wordcount":318},{"author":null,"categories":["ACM"],"content":null,"date":1451653592,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451653592,"objectID":"92411120c20e71763a9841ab4d1f796a","permalink":"https://111qqz.github.io/2016/01/codeforces-goodbye-2015-a-new-year-and-days/","publishdate":"2016-01-01T13:06:32Z","readingtime":1,"relpermalink":"/2016/01/codeforces-goodbye-2015-a-new-year-and-days/","section":"post","summary":"http://codeforces.com/contest/611/problem/A 题意：两种查询，一种是 x of week,x为1.。7,对应输出2016年星期x有多少天。另一种为x of month ，对应输出2016年至少有x天的月份有多","tags":["水题"],"title":"codeforces goodbye 2015 A. New Year and Days","type":"post","url":"/2016/01/codeforces-goodbye-2015-a-new-year-and-days/","weight":0,"wordcount":160},{"author":null,"categories":null,"content":null,"date":1451653592,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451653592,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%B0%B4%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%B0%B4%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"水题","type":"tags","url":"/tags/%E6%B0%B4%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1451653402,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451653402,"objectID":"11ad567268487846aff8128b5991b008","permalink":"https://111qqz.github.io/2016/01/cf611b/","publishdate":"2016-01-01T13:03:22Z","readingtime":2,"relpermalink":"/2016/01/cf611b/","section":"post","summary":"http://codeforces.com/contest/611/problem/B 题意：问a到b（1E18），二进制表示中只有一个0的数有多少个。 思路：这么大的数。。。不是有循环节就是math problems. UD:20160318讲道","tags":["dp","math","number theory","位运算","数位dp"],"title":"cf 611 B ||codeforces goodbye 2015 B. New Year and Old Property (数学或者数位dp)","type":"post","url":"/2016/01/cf611b/","weight":0,"wordcount":634},{"author":null,"categories":["ACM"],"content":null,"date":1451653039,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451653039,"objectID":"457480fe0f43f87ae9e93b0fed76883a","permalink":"https://111qqz.github.io/2016/01/cf611a/","publishdate":"2016-01-01T12:57:19Z","readingtime":1,"relpermalink":"/2016/01/cf611a/","section":"post","summary":"http://codeforces.com/contest/611/problem/C 题意：给出一个n*m的地图，.表示可以空，#表示墙。一个东西需要占两个相邻的格子，问给定一个矩形，放一个东西的方案数。 思路：q很大。。应该","tags":["前缀和","模拟"],"title":"cf 611 A||codeforces goodbye 2015 C. New Year and Domino","type":"post","url":"/2016/01/cf611a/","weight":0,"wordcount":405},{"author":null,"categories":["ACM"],"content":null,"date":1451483251,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451483251,"objectID":"0d722767d9a0055fa10db845312e7b0b","permalink":"https://111qqz.github.io/2015/12/cf22c/","publishdate":"2015-12-30T13:47:31Z","readingtime":2,"relpermalink":"/2015/12/cf22c/","section":"post","summary":"http://codeforces.com/contest/22/problem/C 题意：要求用n个点m条边构造一个不允许有重边的图，满足当去掉点v的时候，剩下的n-1个不联通。如果有答案输出任意，没答案输出-1. 思路：首","tags":["图论","构造"],"title":"codeforces 22  C. System Administrator","type":"post","url":"/2015/12/cf22c/","weight":0,"wordcount":679},{"author":null,"categories":["ACM"],"content":null,"date":1451478435,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451478435,"objectID":"cb716db6a683538a13053d1f63097a4e","permalink":"https://111qqz.github.io/2015/12/cf29c/","publishdate":"2015-12-30T12:27:15Z","readingtime":1,"relpermalink":"/2015/12/cf29c/","section":"post","summary":"http://codeforces.com/contest/29/problem/C 题意：给出n个边的关系，保证可以构成一条链。正向或者反向输出这个链。 思路：由于下标很大(1E9)，而关系个数只有1E5..需要离散化。。而","tags":["dfs","map","stl","vector","离散化"],"title":"codeforces 29 C. Mail Stamps","type":"post","url":"/2015/12/cf29c/","weight":0,"wordcount":357},{"author":null,"categories":["ACM"],"content":null,"date":1451399718,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451399718,"objectID":"9dd1fa4da9aa8748243f55505f74c88d","permalink":"https://111qqz.github.io/2015/12/cf31c/","publishdate":"2015-12-29T14:35:18Z","readingtime":2,"relpermalink":"/2015/12/cf31c/","section":"post","summary":"http://codeforces.com/problemset/problem/31/C 题意：给出n个借用教室的时间安排，可能会有冲突。要求恰好去掉一个时间安排使得剩下的时间安排不冲突。问多多少种方案。 思路：首先一个直觉是。。","tags":["模拟"],"title":"codeforces 31 C. Schedule","type":"post","url":"/2015/12/cf31c/","weight":0,"wordcount":751},{"author":null,"categories":["ACM"],"content":null,"date":1451390766,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451390766,"objectID":"675ea3d90aaf546494d5469388bb75ab","permalink":"https://111qqz.github.io/2015/12/cf27c/","publishdate":"2015-12-29T12:06:06Z","readingtime":2,"relpermalink":"/2015/12/cf27c/","section":"post","summary":"http://codeforces.com/contest/27/problem/C 题意：给出一个序列，问是否存在一个disordered的子序列。。输出长度并输出组成子序列的下表（1..n）。如果有多组，输出任意一组。 d","tags":["brute force"],"title":"codeforces 27 C. Unordered Subsequence","type":"post","url":"/2015/12/cf27c/","weight":0,"wordcount":619},{"author":null,"categories":["ACM"],"content":null,"date":1451386499,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451386499,"objectID":"777542a62af3129283d235489fa61ab5","permalink":"https://111qqz.github.io/2015/12/codeforces-30-c-shooting-gallery/","publishdate":"2015-12-29T10:54:59Z","readingtime":1,"relpermalink":"/2015/12/codeforces-30-c-shooting-gallery/","section":"post","summary":"http://codeforces.com/contest/30/problem/C 题意：给出n个target在一个二维平面上。给出每个target的坐标，出现的时间，以及击中的概率。target出现之后就会瞬间消失，枪移","tags":["dp","概率","路径dp"],"title":"codeforces 30 C. Shooting Gallery","type":"post","url":"/2015/12/codeforces-30-c-shooting-gallery/","weight":0,"wordcount":375},{"author":null,"categories":null,"content":null,"date":1451386499,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451386499,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B7%AF%E5%BE%84dp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B7%AF%E5%BE%84dp/","section":"tags","summary":"","tags":null,"title":"路径dp","type":"tags","url":"/tags/%E8%B7%AF%E5%BE%84dp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1451381397,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451381397,"objectID":"d6df6393ae7236a7a4cc859a25275e31","permalink":"https://111qqz.github.io/2015/12/codeforces-14-c-four-segments/","publishdate":"2015-12-29T09:29:57Z","readingtime":1,"relpermalink":"/2015/12/codeforces-14-c-four-segments/","section":"post","summary":"http://codeforces.com/problemset/problem/14/C 题意：给出四条边的坐标，问能否形成一个边与坐标轴平行的矩形。边可能退化成点。 思路：首先第一步，检查有没有边退化成点以及是否有不平行的边。 第","tags":["细节题","计算几何"],"title":"codeforces 14 C. Four Segments","type":"post","url":"/2015/12/codeforces-14-c-four-segments/","weight":0,"wordcount":382},{"author":null,"categories":null,"content":null,"date":1451381397,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451381397,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%BB%86%E8%8A%82%E9%A2%98/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%BB%86%E8%8A%82%E9%A2%98/","section":"tags","summary":"","tags":null,"title":"细节题","type":"tags","url":"/tags/%E7%BB%86%E8%8A%82%E9%A2%98/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1451377365,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451377365,"objectID":"013a79161a20634bfacb6433a037fa21","permalink":"https://111qqz.github.io/2015/12/cf18c/","publishdate":"2015-12-29T08:22:45Z","readingtime":1,"relpermalink":"/2015/12/cf18c/","section":"post","summary":"http://codeforces.com/contest/18/problem/C 题意：将一个序列分成两个非空的部分，保证和相等，问有多少种方法。 思路：做过一个三部分的。。。两部分直接一个前缀和就好了把。。。有一个需要注","tags":["前缀和"],"title":"codeforces 18 C. Stripe","type":"post","url":"/2015/12/cf18c/","weight":0,"wordcount":288},{"author":null,"categories":["ACM"],"content":null,"date":1451376319,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451376319,"objectID":"864925b8a989bbd13550cdf04a3c517c","permalink":"https://111qqz.github.io/2015/12/cf12c/","publishdate":"2015-12-29T08:05:19Z","readingtime":1,"relpermalink":"/2015/12/cf12c/","section":"post","summary":"http://codeforces.com/contest/12/problem/C 题意：有n个价格价格，m个要买的东西（可能有相同的种类，设为k种），把n个标签中拿出k个给个贴上。。。问最大价钱和最少价钱分别是多少。 思路","tags":["greedy","map","stl"],"title":"codeforces 12 C. Fruits","type":"post","url":"/2015/12/cf12c/","weight":0,"wordcount":382},{"author":null,"categories":["ACM"],"content":null,"date":1451366466,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451366466,"objectID":"92ec478a6d33e94e7be069d946a2a1a5","permalink":"https://111qqz.github.io/2015/12/codeforces-16-c-monitor/","publishdate":"2015-12-29T05:21:06Z","readingtime":1,"relpermalink":"/2015/12/codeforces-16-c-monitor/","section":"post","summary":"http://codeforces.com/contest/16/problem/C 题意：给定长宽a,b和分辨率x:y,注意分辨率x:y未必是最简比。问将现有的size裁剪成比例为x:y，使得面积最大的长宽是多少。 思路：可","tags":["gcd","数论"],"title":"codeforces 16 C. Monitor","type":"post","url":"/2015/12/codeforces-16-c-monitor/","weight":0,"wordcount":390},{"author":null,"categories":null,"content":null,"date":1451306765,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451306765,"objectID":"","permalink":"https://111qqz.github.io/tags/gedit/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/gedit/","section":"tags","summary":"","tags":null,"title":"gedit","type":"tags","url":"/tags/gedit/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1451306765,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451306765,"objectID":"","permalink":"https://111qqz.github.io/tags/linux-mint/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/linux-mint/","section":"tags","summary":"","tags":null,"title":"linux mint","type":"tags","url":"/tags/linux-mint/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1451306765,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451306765,"objectID":"7442a40fdf1997fee202ecfe3afe3fa8","permalink":"https://111qqz.github.io/2015/12/linux-mint-gedit-/","publishdate":"2015-12-28T12:46:05Z","readingtime":1,"relpermalink":"/2015/12/linux-mint-gedit-/","section":"post","summary":"gconftool-2 --set --type=list --list-type=string /apps/gedit-2/preferences/encodings/auto_detected \u0026quot;[UTF-8,CURRENT,GB18030,ISO-8859-15,UTF-16]\u0026quot;","tags":["gedit","linux mint"],"title":"linux mint  gedit 中文乱码","type":"post","url":"/2015/12/linux-mint-gedit-/","weight":0,"wordcount":6},{"author":null,"categories":null,"content":null,"date":1451290623,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1451290623,"objectID":"","permalink":"https://111qqz.github.io/tags/jdk/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/jdk/","section":"tags","summary":"","tags":null,"title":"jdk","type":"tags","url":"/tags/jdk/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1451290623,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451290623,"objectID":"da36ccb683e2ef47504117598d03e846","permalink":"https://111qqz.github.io/2015/12/linux-mint-oracle-jdk-/","publishdate":"2015-12-28T08:17:03Z","readingtime":1,"relpermalink":"/2015/12/linux-mint-oracle-jdk-/","section":"post","summary":"Open up the Terminal (Alt + F2 \u0026gt; Terminal). Remove OpenJDK installation. sudo apt-get update \u0026amp;\u0026amp; apt-get remove openjdk* Download Oracle JDK from here. You are looking for a linux version with tar.gz extension. Also choose the right version from 32-bit (x86) and 64bit (x64) one. Change directory into one with downloaded tarball. In my case $HOME/Downloads. cd ~/Downloads Extract tarball. Replace with a name of dowloaded file. (just press","tags":["jdk"],"title":"在linux mint 上安装 Oracle JDK 的方法","type":"post","url":"/2015/12/linux-mint--oracle-jdk-/","weight":0,"wordcount":153},{"author":null,"categories":["ACM"],"content":null,"date":1451210130,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451210130,"objectID":"c66b7fc2b469d63b00fd00068c37ff6e","permalink":"https://111qqz.github.io/2015/12/cf612c/","publishdate":"2015-12-27T09:55:30Z","readingtime":1,"relpermalink":"/2015/12/cf612c/","section":"post","summary":"http://codeforces.com/contest/612/problem/C 题意：其实就是栈的基本操作。。水题。 /* *********************************************** Author :111qqz Created Time :2015年12月25日 星期五 22时58分50秒 File Name :code/cf/edu4/C.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt;","tags":["水题"],"title":"codeforces 612 C. Replace To Make Regular Bracket Sequence","type":"post","url":"/2015/12/cf612c/","weight":0,"wordcount":287},{"author":null,"categories":["ACM"],"content":null,"date":1451210003,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451210003,"objectID":"2b78201db1dfaf85e859971aaa093852","permalink":"https://111qqz.github.io/2015/12/cf612b/","publishdate":"2015-12-27T09:53:23Z","readingtime":1,"relpermalink":"/2015/12/cf612b/","section":"post","summary":"http://codeforces.com/contest/612/problem/B 水。 /* *********************************************** Author :111qqz Created Time :2015年12月25日 星期五 22时58分38秒 File Name :code/cf/edu4/B.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstdlib\u0026gt; #include \u0026lt;ctime\u0026gt; #define fst first #define sec second #define lson","tags":["水题"],"title":"codeforces 612 B. HDD is Outdated Technology","type":"post","url":"/2015/12/cf612b/","weight":0,"wordcount":194},{"author":null,"categories":["ACM"],"content":null,"date":1451209577,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451209577,"objectID":"3d591c4c12ac686c4636c6696dbe0854","permalink":"https://111qqz.github.io/2015/12/cf612a/","publishdate":"2015-12-27T09:46:17Z","readingtime":1,"relpermalink":"/2015/12/cf612a/","section":"post","summary":"http://codeforces.com/contest/612/problem/A 水题\u0026hellip;直接枚举就好。 /* *********************************************** Author :111qqz Created Time :2015年12月25日 星期五 22时58分26秒 File Name :code/cf/edu4/A.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include","tags":["brute force","字符串","水题"],"title":"codeforces 612 A. The Text Splitting","type":"post","url":"/2015/12/cf612a/","weight":0,"wordcount":266},{"author":null,"categories":["ACM"],"content":null,"date":1451209044,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451209044,"objectID":"7a1cb9aece9974486d94fd584cf79de3","permalink":"https://111qqz.github.io/2015/12/cf612d/","publishdate":"2015-12-27T09:37:24Z","readingtime":1,"relpermalink":"/2015/12/cf612d/","section":"post","summary":"http://codeforces.com/contest/612/problem/D 题意：给出n个线段信息，每个线段以l,r的形式给出。给定k。要求从作到右给出至少有k个线段覆盖的区间的信息。并使得区间数目尽可能少。 思路：","tags":["sortings"],"title":"codeforces 612 D. The Union of k-Segments","type":"post","url":"/2015/12/cf612d/","weight":0,"wordcount":482},{"author":null,"categories":["ACM"],"content":null,"date":1451051586,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451051586,"objectID":"483a9c8c3a4adc84e5f0b14e1dbbec0b","permalink":"https://111qqz.github.io/2015/12/cf327a/","publishdate":"2015-12-25T13:53:06Z","readingtime":1,"relpermalink":"/2015/12/cf327a/","section":"post","summary":"http://codeforces.com/contest/327/problem/A 题意：给定一段序列，只由0,1组成。要求选一段非空区间，做翻转操作（0变1,1变0），问变完之后1最多能有多少。 思路：最后的1个个数=初始","tags":["dp","最大连续区间和"],"title":"codeforces #327 A. Flipping Game","type":"post","url":"/2015/12/cf327a/","weight":0,"wordcount":386},{"author":null,"categories":["ACM"],"content":null,"date":1451040785,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1451040785,"objectID":"25e57e2d04ee2cab459f3ee7c27f67f8","permalink":"https://111qqz.github.io/2015/12/codeforces-456-c-boredom/","publishdate":"2015-12-25T10:53:05Z","readingtime":1,"relpermalink":"/2015/12/codeforces-456-c-boredom/","section":"post","summary":"http://codeforces.com/contest/456/problem/C 题意：给出n(1E5)个数（1E5），每次可以选一个数a[k]并删掉a[k],a[k]-1,a[k]+1得到a[k]分，问最多能得到的分数","tags":["dp"],"title":"codeforces 456 C. Boredom","type":"post","url":"/2015/12/codeforces-456-c-boredom/","weight":0,"wordcount":425},{"author":null,"categories":["ACM"],"content":null,"date":1450896748,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450896748,"objectID":"009390f6c6a8652e60f0fa15e10613f9","permalink":"https://111qqz.github.io/2015/12/cf608b/","publishdate":"2015-12-23T18:52:28Z","readingtime":1,"relpermalink":"/2015/12/cf608b/","section":"post","summary":"http://codeforces.com/contest/608/problem/B 题意：给定两个字符串a,b，问b中的每个连续的长度为a的子串与a的哈密顿距离的和是多少。哈密顿距离是对应位置的字符的差的绝对值的和。由于是","tags":["前缀和"],"title":"codeforces #336 div 2 B. Hamming Distance Sum","type":"post","url":"/2015/12/cf608b/","weight":0,"wordcount":357},{"author":null,"categories":["ACM"],"content":null,"date":1450896483,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450896483,"objectID":"8f357d52d8b7cb237a489f39c57891f8","permalink":"https://111qqz.github.io/2015/12/cf608a/","publishdate":"2015-12-23T18:48:03Z","readingtime":1,"relpermalink":"/2015/12/cf608a/","section":"post","summary":"http://codeforces.com/contest/608/problem/A 题意：一个电梯，从s到0层，单项，给出n个人，每个人在某时间出现在某层，问要花多长时间把所有人运到0。初始电梯在s，每下一层话费时间1，上","tags":["brute force"],"title":"codeforces #336 div 2 A. Saitama Destroys Hotel","type":"post","url":"/2015/12/cf608a/","weight":0,"wordcount":433},{"author":null,"categories":["ACM"],"content":null,"date":1450861038,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450861038,"objectID":"8452a4b668e3dd284fd2bf6bb1126298","permalink":"https://111qqz.github.io/2015/12/cf559d/","publishdate":"2015-12-23T08:57:18Z","readingtime":2,"relpermalink":"/2015/12/cf559d/","section":"post","summary":"http://codeforces.com/contest/599/problem/D 题意：给出总的方格数x，问有多少种不同尺寸的矩形满足题意，输出方案数和长宽（3,5和5,3算两种） 思路：比赛的时候gg了。。其实稍微在纸上","tags":["math","set","stl"],"title":"codeforces #332 div 2 D. Spongebob and Squares","type":"post","url":"/2015/12/cf559d/","weight":0,"wordcount":548},{"author":null,"categories":["ACM"],"content":null,"date":1450851144,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450851144,"objectID":"d98c21371c19c917cd656ab47513d295","permalink":"https://111qqz.github.io/2015/12/codeforces-333-div-2-d-lipshitz-sequence/","publishdate":"2015-12-23T06:12:24Z","readingtime":3,"relpermalink":"/2015/12/codeforces-333-div-2-d-lipshitz-sequence/","section":"post","summary":"http://codeforces.com/contest/602/problem/D 题意：见题目描述。 思路：我们很容易发现，l[h]函数其实就是在求区间斜率的最大值。哦不对，是斜率的绝对值的最大值。而且一个显而易见的结论是","tags":["math"],"title":"codeforces #333 div 2 D. Lipshitz Sequence","type":"post","url":"/2015/12/codeforces-333-div-2-d-lipshitz-sequence/","weight":0,"wordcount":1150},{"author":null,"categories":["ACM"],"content":null,"date":1450774878,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450774878,"objectID":"43f7f4c770a0a64294a1dd7444fbdb01","permalink":"https://111qqz.github.io/2015/12/cf602c/","publishdate":"2015-12-22T09:01:18Z","readingtime":2,"relpermalink":"/2015/12/cf602c/","section":"post","summary":"http://codeforces.com/problemset/problem/602/C 题意：给出n个城镇，m条双向铁路，对于任意不同的x,y，如果x,y之间没有铁路，那么一定有双向公路。train只能走铁路，bus只能走公路","tags":["图论","最短路"],"title":"codeforces #333 div 2 C. The Two Routes","type":"post","url":"/2015/12/cf602c/","weight":0,"wordcount":741},{"author":null,"categories":["ACM"],"content":null,"date":1450771469,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450771469,"objectID":"53bd45e7e8ea559cb3ee379f6b614701","permalink":"https://111qqz.github.io/2015/12/cf602b/","publishdate":"2015-12-22T08:04:29Z","readingtime":2,"relpermalink":"/2015/12/cf602b/","section":"post","summary":"http://codeforces.com/contest/602/problem/B 题意：给定n个数，问最大连续区间长度，满足这段区间内最大值和最小值的差的绝对值小于等于1. 思路：尺取+set。尺取法，由于要时刻得到一段区","tags":["set","stl"],"title":"codeforces #333 div 2B. Approximating a Constant Range","type":"post","url":"/2015/12/cf602b/","weight":0,"wordcount":629},{"author":null,"categories":["ACM"],"content":null,"date":1450766216,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450766216,"objectID":"91732fb209cb3dd3a4f57a0f1b225972","permalink":"https://111qqz.github.io/2015/12/cf603e/","publishdate":"2015-12-22T06:36:56Z","readingtime":1,"relpermalink":"/2015/12/cf603e/","section":"post","summary":"http://codeforces.com/contest/604/problem/E 题意：有两个人做游戏，游戏规则如下： 有n堆石子，每次可以对一堆石子进行操作，如果当前石子是偶数，那么可以选择将这2*x个石子分成k堆石子数","tags":["grundy","博弈论"],"title":"codeforces #334 div 2 E. Lieges of Legendre","type":"post","url":"/2015/12/cf603e/","weight":0,"wordcount":344},{"author":null,"categories":null,"content":null,"date":1450766216,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1450766216,"objectID":"","permalink":"https://111qqz.github.io/tags/grundy/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/grundy/","section":"tags","summary":"","tags":null,"title":"grundy","type":"tags","url":"/tags/grundy/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1450760972,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450760972,"objectID":"c631a46f5c52d7ce85b205da26746215","permalink":"https://111qqz.github.io/2015/12/cf604d/","publishdate":"2015-12-22T05:09:32Z","readingtime":1,"relpermalink":"/2015/12/cf604d/","section":"post","summary":"http://codeforces.com/contest/604/problem/D 题意：一个恒等式 f(kx%p)=kf(x)%p ,k,p为常数，且满足x对于定义域为0..p-1的p的整数，值域也在0..p-1范围（不一定一一对应）。问满足题意的f有","tags":["dfs","组合数学","计数问题"],"title":"codeforces #334 div 2 D.Moodular Arithmetic","type":"post","url":"/2015/12/cf604d/","weight":0,"wordcount":460},{"author":null,"categories":["ACM"],"content":null,"date":1450706345,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450706345,"objectID":"9e807d91d31d54005242b0e6107aeadc","permalink":"https://111qqz.github.io/2015/12/hdu-1221-rectangle-and-circle/","publishdate":"2015-12-21T13:59:05Z","readingtime":1,"relpermalink":"/2015/12/hdu-1221-rectangle-and-circle/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1221 题意：问圆和矩形是否相交 思路：主要特殊的包含情况，然后判断与线段相交。 /* *********************************************** Author :111qqz Created Time :2015年12月21日 星期一 21时38分22秒 File Name :code/hdu/rr1221.cpp ************************************************","tags":["计算几何"],"title":"hdu 1221 Rectangle and Circle","type":"post","url":"/2015/12/hdu-1221-rectangle-and-circle/","weight":0,"wordcount":204},{"author":null,"categories":["ACM"],"content":null,"date":1450516732,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450516732,"objectID":"e3971ca28223108145cb560101840b82","permalink":"https://111qqz.github.io/2015/12/poj3687/","publishdate":"2015-12-19T09:18:52Z","readingtime":1,"relpermalink":"/2015/12/poj3687/","section":"post","summary":"http://poj.org/problem?id=3687 题意：给定几个标签球的重量大小关系，求每个球是第几重的(即每个球在所有球的重量中由小到大排名是多少)。 （输出是每个球第几重，而不是几号球比","tags":["stl","优先队列","图论","拓扑排序"],"title":"poj 3687 Labeling Balls","type":"post","url":"/2015/12/poj3687/","weight":0,"wordcount":414},{"author":null,"categories":["ACM"],"content":null,"date":1450362178,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450362178,"objectID":"a16258833864fba032680f95f91d3ee4","permalink":"https://111qqz.github.io/2015/12/poj3660/","publishdate":"2015-12-17T14:22:58Z","readingtime":1,"relpermalink":"/2015/12/poj3660/","section":"post","summary":"http://poj.org/problem?id=3660 题意：给定n个奶牛，m个奶牛的关系，a,b表示a比b强\u0026hellip;问能确定多少个奶牛的排名。 思路：最重要的一点是。。能确定奶牛i的排名","tags":["floyd","传递闭包","图论"],"title":"poj 3660 Cow Contest (floyd,传递闭包)","type":"post","url":"/2015/12/poj3660/","weight":0,"wordcount":442},{"author":null,"categories":["ACM"],"content":null,"date":1450358665,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450358665,"objectID":"f18f8faf9e894aba389606ab274f6343","permalink":"https://111qqz.github.io/2015/12/hdu2647/","publishdate":"2015-12-17T13:24:25Z","readingtime":2,"relpermalink":"/2015/12/hdu2647/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2647 题意：老板要给很多员工发奖金， 但是部分员工有个虚伪心态， 认为自己的奖金必须比某些人高才心理平衡； 但是老板很人道， 想满足所有人的要求， 并且很","tags":["图论","拓扑排序"],"title":"hdu 2647  rewards","type":"post","url":"/2015/12/hdu2647/","weight":0,"wordcount":716},{"author":null,"categories":["ACM"],"content":null,"date":1450352922,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450352922,"objectID":"6fa62e14a33b42a931d88eaf4693fdae","permalink":"https://111qqz.github.io/2015/12/hdoj3342/","publishdate":"2015-12-17T11:48:42Z","readingtime":1,"relpermalink":"/2015/12/hdoj3342/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=3342 裸题。 注意有重边。 /* *********************************************** Author :111qqz Created Time :2015年12月17日 星期四 19时29分00秒 File Name :code/hdoj/3342.cpp ************************************************ */ #include \u0026lt;cstdio\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;algorithm\u0026gt; #include \u0026lt;vector\u0026gt; #include \u0026lt;queue\u0026gt; #include \u0026lt;set\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstdlib\u0026gt; #include \u0026lt;ctime\u0026gt; #define","tags":["图论","拓扑排序"],"title":"hdu 3342 Legal or Not","type":"post","url":"/2015/12/hdoj3342/","weight":0,"wordcount":240},{"author":null,"categories":["ACM"],"content":null,"date":1450342982,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450342982,"objectID":"e626e914cd5101fcc0c293270e966aa5","permalink":"https://111qqz.github.io/2015/12/hdoj2795/","publishdate":"2015-12-17T09:03:02Z","readingtime":1,"relpermalink":"/2015/12/hdoj2795/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=2795 题意：一个尺寸为wh的方格。要按顺序放放n个尺寸为1wi的纸条。问每一个纸条回被放在哪里。如果有多个，放在最上面（编号小） 思路：把没横行能","tags":["线段树"],"title":"hdoj 2795 Billboard","type":"post","url":"/2015/12/hdoj2795/","weight":0,"wordcount":417},{"author":null,"categories":["ACM"],"content":null,"date":1450185890,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450185890,"objectID":"fc0c8d81cbfbf640c3ce9e10ca88c31a","permalink":"https://111qqz.github.io/2015/12/cf466c/","publishdate":"2015-12-15T13:24:50Z","readingtime":2,"relpermalink":"/2015/12/cf466c/","section":"post","summary":"http://codeforces.com/problemset/problem/466/C 题意：给定一个序列。要将序列分成三个非零的连续部分，使得三部分的和相等。问有多少中分法。 思路：首先可以知道，如果是序列的和不为3的倍数，那","tags":["brute force","数据结构"],"title":"codeforces 466 C. Number of Ways","type":"post","url":"/2015/12/cf466c/","weight":0,"wordcount":835},{"author":null,"categories":null,"content":null,"date":1450185890,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1450185890,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"tags","summary":"","tags":null,"title":"数据结构","type":"tags","url":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1450182212,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450182212,"objectID":"fd0cbd175dcab664af875345bab44f0f","permalink":"https://111qqz.github.io/2015/12/cf279b/","publishdate":"2015-12-15T12:23:32Z","readingtime":1,"relpermalink":"/2015/12/cf279b/","section":"post","summary":"http://codeforces.com/problemset/problem/279/B 题意：给定一个序列，问一段连续的序列的和小于等于t的最长的序列的长度。 思路：尺取法。三个月前学习的了。 /* *********************************************** Author :111qqz Created Time :2015年12月15日","tags":["尺取法"],"title":"codeforces 279 B books","type":"post","url":"/2015/12/cf279b/","weight":0,"wordcount":256},{"author":null,"categories":["ACM"],"content":null,"date":1450169557,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450169557,"objectID":"fb866c1af8ff52ee9509cdba9446542d","permalink":"https://111qqz.github.io/2015/12/hdoj4391/","publishdate":"2015-12-15T08:52:37Z","readingtime":2,"relpermalink":"/2015/12/hdoj4391/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=4391 题意：有 n 个点，每个点有一种颜色（可能相同），两种操作：1、将区间 [a,b] 染成颜色 c ; 2、询问区间 [a,b] 中颜色为 c 的点有多少个。 思路：因为颜色种类很","tags":["hash","stl","分块"],"title":"hdoj4391 Paint The Wall","type":"post","url":"/2015/12/hdoj4391/","weight":0,"wordcount":558},{"author":null,"categories":["ACM"],"content":null,"date":1450158954,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450158954,"objectID":"9e9e33b0f74c405dbec88ec96dd5b081","permalink":"https://111qqz.github.io/2015/12/hdoj1754/","publishdate":"2015-12-15T05:55:54Z","readingtime":2,"relpermalink":"/2015/12/hdoj1754/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1754 题意：给定一个区间，有m组操作，操作可以是改变单点，或者查询区间最大值。对于每组查询，输出。 思路：分块。这篇博客说得很不错。http://","tags":["分块","数据结构"],"title":"hdoj 1754 I hate it","type":"post","url":"/2015/12/hdoj1754/","weight":0,"wordcount":504},{"author":null,"categories":["其他"],"content":null,"date":1450090401,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450090401,"objectID":"447f2a770c6959618369dba0563f6ee9","permalink":"https://111qqz.github.io/2015/12/cf519c/","publishdate":"2015-12-14T10:53:21Z","readingtime":1,"relpermalink":"/2015/12/cf519c/","section":"post","summary":"http://codeforces.com/problemset/problem/519/C 题意：两种组队方式，3人一组，1个大牛+2个蒟蒻或者1个蒟蒻+2个大牛。给定大牛和蒟蒻的个数。问最多能组多少队。 思路：线性规划。设两种队分","tags":null,"title":"codeforces 519 C. A and B and Team Training","type":"post","url":"/2015/12/cf519c/","weight":0,"wordcount":250},{"author":null,"categories":["ACM"],"content":null,"date":1450075468,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450075468,"objectID":"7732c466aaf100aeb2faf33bf035b9c1","permalink":"https://111qqz.github.io/2015/12/cf552a/","publishdate":"2015-12-14T06:44:28Z","readingtime":1,"relpermalink":"/2015/12/cf552a/","section":"post","summary":"http://codeforces.com/problemset/problem/552/A 题意：一个100*100的网格。然后给n个矩形。每个格子中填上包含这个格子的矩形的个数。最后问所有格子的和。 思路：树状数组搞得\u0026helli","tags":["brute force","math","树状数组"],"title":"codeforces 522 A. Vanya and Table","type":"post","url":"/2015/12/cf552a/","weight":0,"wordcount":421},{"author":null,"categories":["ACM"],"content":null,"date":1450071187,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1450071187,"objectID":"3b44cf61292e3a45746a34b51cebe296","permalink":"https://111qqz.github.io/2015/12/cf1b/","publishdate":"2015-12-14T05:33:07Z","readingtime":1,"relpermalink":"/2015/12/cf1b/","section":"post","summary":"http://codeforces.com/problemset/problem/1/B 题意：给出了两种表格的表示方法。要求互相转化。 思路：直接模拟即可。注意和一般的进制转化不同的是，26进制对应的是1到26而不是0到25，所","tags":["模拟"],"title":"codeforces 1 B. Spreadsheets","type":"post","url":"/2015/12/cf1b/","weight":0,"wordcount":493},{"author":null,"categories":["ACM"],"content":null,"date":1449824925,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449824925,"objectID":"4797ab299104e0ff282f3fd8b23e9063","permalink":"https://111qqz.github.io/2015/12/codeforces-526-b-om-nom-and-dark-park/","publishdate":"2015-12-11T09:08:45Z","readingtime":1,"relpermalink":"/2015/12/codeforces-526-b-om-nom-and-dark-park/","section":"post","summary":"http://codeforces.com/contest/526/problem/B 题意：有一棵完全二叉树。每条边上有一定数量的路灯。问最少需要添加多少个路灯。使得根节点道叶子节点的每一条路径上的路灯数量一样。 思路：同叶子","tags":["greedy","tree"],"title":"codeforces 526 B Om Nom and Dark Park","type":"post","url":"/2015/12/codeforces-526-b-om-nom-and-dark-park/","weight":0,"wordcount":253},{"author":null,"categories":["ACM"],"content":null,"date":1449816234,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449816234,"objectID":"417f98476130b3a5ed7d64cef72c4186","permalink":"https://111qqz.github.io/2015/12/cf-574b/","publishdate":"2015-12-11T06:43:54Z","readingtime":1,"relpermalink":"/2015/12/cf-574b/","section":"post","summary":"http://codeforces.com/problemset/problem/574/B 题意：给定一个无相图。选出三个点，使得这三个点之间互相有边相连，且三个点的度数之和最小。 思路：暴力出奇迹。复杂度o(n2+n*m) /* *********************************************** Author :111qqz","tags":["brute force","图论"],"title":"codeforces 574B Bear and Three Musketeers","type":"post","url":"/2015/12/cf-574b/","weight":0,"wordcount":280},{"author":null,"categories":["ACM"],"content":null,"date":1449667637,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449667637,"objectID":"efb72daa7ba6f82d9f53813c9feec16d","permalink":"https://111qqz.github.io/2015/12/cf510c/","publishdate":"2015-12-09T13:27:17Z","readingtime":2,"relpermalink":"/2015/12/cf510c/","section":"post","summary":"http://codeforces.com/contest/510/problem/C 题意：给定n个字符串。问是否存在一种字母顺序，使得这n个字符串的顺序满足字典序（自定义的）。如果有多种顺序，输出字典序（标准的）最小的。 思","tags":["图论","拓扑排序"],"title":"codeforces 510 C. Fox And Names","type":"post","url":"/2015/12/cf510c/","weight":0,"wordcount":631},{"author":null,"categories":["ACM"],"content":null,"date":1449657515,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449657515,"objectID":"b45906eb2d284f7b47aa1fc1ad3af7db","permalink":"https://111qqz.github.io/2015/12/hdu2094/","publishdate":"2015-12-09T10:38:35Z","readingtime":1,"relpermalink":"/2015/12/hdu2094/","section":"post","summary":"题意：给定n组u关系。每组表示a战胜b。。问根据这些关系能否确定冠军。 思路：如果a战胜b就从a连一条指向b的边。那么能确定冠军的条件就变成了","tags":["图论","拓扑排序"],"title":"hdu 2094 产生冠军","type":"post","url":"/2015/12/hdu2094/","weight":0,"wordcount":379},{"author":null,"categories":["ACM"],"content":null,"date":1449579966,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449579966,"objectID":"7d742ab93d34b8840dd5df64bb7e421a","permalink":"https://111qqz.github.io/2015/12/hdoj1285/","publishdate":"2015-12-08T13:06:06Z","readingtime":2,"relpermalink":"/2015/12/hdoj1285/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1285 题意： 有N个比赛队（1\u0026lt;=N\u0026lt;=500），编号依次为1，2，3，。。。。，N进行比赛，比赛结束后，裁判委员会要将所有参赛队伍从","tags":["优先队列","图论","拓扑排序"],"title":"hdoj 1285 确定比赛名次","type":"post","url":"/2015/12/hdoj1285/","weight":0,"wordcount":539},{"author":null,"categories":["ACM"],"content":null,"date":1449569204,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449569204,"objectID":"c53b33754acf951b8337e033fc1576bf","permalink":"https://111qqz.github.io/2015/12/cf596b/","publishdate":"2015-12-08T10:06:44Z","readingtime":1,"relpermalink":"/2015/12/cf596b/","section":"post","summary":"http://codeforces.com/problemset/problem/596/B 题意：初始序列全为0，问经过多少次变换，能变成序列b。一次变换是指，选定一个i，从i一直到最后每个元素都增加1，或者每个元素都减少1. 思路","tags":["greedy"],"title":"cf 596 B. Wilbur and Array","type":"post","url":"/2015/12/cf596b/","weight":0,"wordcount":347},{"author":null,"categories":["ACM"],"content":null,"date":1449567869,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449567869,"objectID":"30d3225b9547c8fe34b005db68a9f8bd","permalink":"https://111qqz.github.io/2015/12/cf600c/","publishdate":"2015-12-08T09:44:29Z","readingtime":2,"relpermalink":"/2015/12/cf600c/","section":"post","summary":"http://codeforces.com/problemset/problem/600/C 题意：给定一个字符串。要求用最少的变换得到一个回文串。且在变换次数相同时要字典序最小的。输出变换后的字符串。 思路：对不能构成会文串有影响的","tags":["greedy","构造"],"title":"codeforces 600 C. Make Palindrome","type":"post","url":"/2015/12/cf600c/","weight":0,"wordcount":649},{"author":null,"categories":["ACM"],"content":null,"date":1449457873,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449457873,"objectID":"3b208a53bbf13dc99f0f00c86fa43fbb","permalink":"https://111qqz.github.io/2015/12/cf505b/","publishdate":"2015-12-07T03:11:13Z","readingtime":1,"relpermalink":"/2015/12/cf505b/","section":"post","summary":"http://codeforces.com/contest/505/problem/B 题意；给一个图，边有颜色。给q个查询，每个查询一对点x,y。问只经过某种颜色的边使得x能到y颜色数目。 思路：存颜色的时候卡了下。。本来打算","tags":["brute force","dfs"],"title":"codeforces 505 B. Mr. Kitayuta's Colorful Graph","type":"post","url":"/2015/12/cf505b/","weight":0,"wordcount":445},{"author":null,"categories":["ACM"],"content":null,"date":1449452306,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449452306,"objectID":"35cd078fd7f0dda7764bde64ba82f48a","permalink":"https://111qqz.github.io/2015/12/cf475b/","publishdate":"2015-12-07T01:38:26Z","readingtime":1,"relpermalink":"/2015/12/cf475b/","section":"post","summary":"http://codeforces.com/problemset/status 题意：n行m列的道路网络。共n*m条道路。每条道路都是单向的.问从任何一个路口出发能否到达其他的任何一个路口。 思路：需要注意的是。我从A点","tags":["brute force","dfs"],"title":"codeforces 475 B. Strongly Connected City","type":"post","url":"/2015/12/cf475b/","weight":0,"wordcount":474},{"author":null,"categories":["ACM"],"content":null,"date":1449405966,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449405966,"objectID":"608e80dba6be0f71e4f23e9cafe9eefa","permalink":"https://111qqz.github.io/2015/12/158b/","publishdate":"2015-12-06T12:46:06Z","readingtime":1,"relpermalink":"/2015/12/158b/","section":"post","summary":"http://codeforces.com/problemset/problem/158/B 题意：n组人，每组有si个（1\u0026lt;=si\u0026lt;=4），每辆车能装4个人。问最少需要多少辆车装下所有人并且保证同一组的人在一辆车里。 思","tags":["greedy","模拟"],"title":"codeforces 158 B. Taxi","type":"post","url":"/2015/12/158b/","weight":0,"wordcount":361},{"author":null,"categories":["ACM"],"content":null,"date":1449385827,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449385827,"objectID":"40b56f7e48d81a939973253d984d8078","permalink":"https://111qqz.github.io/2015/12/cf510b/","publishdate":"2015-12-06T07:10:27Z","readingtime":1,"relpermalink":"/2015/12/cf510b/","section":"post","summary":"http://codeforces.com/contest/510/problem/B 题意：给定一个maze,用不同的字母代表不同的颜色。问能否找到一个颜色相同的环（失少四个点组成） 思路：dfs一遍，如果遇到之前已经访问过的","tags":["dfs"],"title":"codeforces 510 B. Fox And Two Dots","type":"post","url":"/2015/12/cf510b/","weight":0,"wordcount":491},{"author":null,"categories":["ACM"],"content":null,"date":1449322116,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449322116,"objectID":"3b79b6f1918f1d53199b61d05e609cf8","permalink":"https://111qqz.github.io/2015/12/cf277a/","publishdate":"2015-12-05T13:28:36Z","readingtime":1,"relpermalink":"/2015/12/cf277a/","section":"post","summary":"http://codeforces.com/contest/277/problem/A 题意：有n个人，每个人会一定数目的语言（可能为0），一个人学一门语言的代价为1，人和人之间沟通可以通过任意个中间人翻译。问最少的代价使得这","tags":["dfs","tree"],"title":"codeforces 277 A. Learning Languages","type":"post","url":"/2015/12/cf277a/","weight":0,"wordcount":467},{"author":null,"categories":["ACM"],"content":null,"date":1449318890,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449318890,"objectID":"e6be1730b48bcd51c1bfd0d4c1d70115","permalink":"https://111qqz.github.io/2015/12/cf217a/","publishdate":"2015-12-05T12:34:50Z","readingtime":1,"relpermalink":"/2015/12/cf217a/","section":"post","summary":"http://codeforces.com/problemset/problem/217/A 题意：有n个雪漂（那是啥？，从某个雪漂出发走直线，只有到达另一个雪飘才能停下来。问最少需要添加多少个雪漂，才能使得可以到达任何一个雪漂。 思","tags":["dfs","tree"],"title":"codeforces 217A ice skating","type":"post","url":"/2015/12/cf217a/","weight":0,"wordcount":421},{"author":null,"categories":["ACM"],"content":null,"date":1449311171,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449311171,"objectID":"90f2a4ddfcbbab10b3b7699c8f590d9f","permalink":"https://111qqz.github.io/2015/12/cf445b/","publishdate":"2015-12-05T10:26:11Z","readingtime":1,"relpermalink":"/2015/12/cf445b/","section":"post","summary":"http://codeforces.com/contest/445/problem/B 题意：一共有n种化学药品。m对关系，每对关系表示为x,y表示x和y相互反应。初始容器的danger值为1，当向容器中加入一个化学药品A,如","tags":["dfs","tree"],"title":"codeforces 445 B. DZY Loves Chemistry","type":"post","url":"/2015/12/cf445b/","weight":0,"wordcount":486},{"author":null,"categories":["ACM"],"content":null,"date":1449306496,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449306496,"objectID":"04b281bfd86cae43432383718f1ef296","permalink":"https://111qqz.github.io/2015/12/cf522a/","publishdate":"2015-12-05T09:08:16Z","readingtime":1,"relpermalink":"/2015/12/cf522a/","section":"post","summary":"http://codeforces.com/problemset/problem/522/A 题意：给定某条消息的传播路径。问最远传播的距离。。 思路：其实就是问树的深度。。直接dfs就行了。。 存的时候用map\u0026lt;string,v","tags":["dfs","map"],"title":"codeforces 522 A. Reposts","type":"post","url":"/2015/12/cf522a/","weight":0,"wordcount":318},{"author":null,"categories":["ACM"],"content":null,"date":1449300909,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449300909,"objectID":"473b7c40f8a58ce6276a6b87834de2f2","permalink":"https://111qqz.github.io/2015/12/cf500b/","publishdate":"2015-12-05T07:35:09Z","readingtime":1,"relpermalink":"/2015/12/cf500b/","section":"post","summary":"http://codeforces.com/contest/500/problem/B 题意：给定一个1至n的数的一种排列。给定一个n*n的矩阵，a[i][j]==0代表pi,pj不可以交换，a[i][j]为1代表p[i],p","tags":["floyd"],"title":"codeforces 500 B. New Year Permutation","type":"post","url":"/2015/12/cf500b/","weight":0,"wordcount":453},{"author":null,"categories":["ACM"],"content":null,"date":1449297280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449297280,"objectID":"584cc22f3d6707670b6e971df63893a7","permalink":"https://111qqz.github.io/2015/12/cf377a/","publishdate":"2015-12-05T06:34:40Z","readingtime":2,"relpermalink":"/2015/12/cf377a/","section":"post","summary":"http://codeforces.com/contest/377/problem/A 题意：给定一个n*m的maze. ‘.’代表空，‘#’代表墙。要求构造一种方案，使得将k个空格填成墙壁后不影响当前的连通性（即没有被填充的空","tags":["dfs","构造"],"title":"codeforces 377 A maze","type":"post","url":"/2015/12/cf377a/","weight":0,"wordcount":564},{"author":null,"categories":["ACM"],"content":null,"date":1449288156,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449288156,"objectID":"39a53dce352d688a30f1ccdc4f65701c","permalink":"https://111qqz.github.io/2015/12/cf129b/","publishdate":"2015-12-05T04:02:36Z","readingtime":1,"relpermalink":"/2015/12/cf129b/","section":"post","summary":"http://codeforces.com/contest/129/problem/B 题意：n个点。m条边。每一次会将图中度为1的点加入到等待队列中。然后一起删掉，记为一次操作。当删掉一个点的时候，与它相连的边也全部删掉。问","tags":["图论"],"title":"codeforces 129 B. Students and Shoelaces","type":"post","url":"/2015/12/cf129b/","weight":0,"wordcount":494},{"author":null,"categories":["ACM"],"content":null,"date":1449283203,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449283203,"objectID":"da1c335d9ac80f49d06d9f49464d4db6","permalink":"https://111qqz.github.io/2015/12/cf580c/","publishdate":"2015-12-05T02:40:03Z","readingtime":1,"relpermalink":"/2015/12/cf580c/","section":"post","summary":"http://codeforces.com/contest/580/problem/C 题意：给出一棵树。每个叶子节点上有一个饭店。某些节点上有cat.现在问从根节点出发可以到达多少个饭店，保证在到达饭店的路径中补连续遇到m个","tags":["dfs","tree"],"title":"codeforces 580 C. Kefa and Park","type":"post","url":"/2015/12/cf580c/","weight":0,"wordcount":340},{"author":null,"categories":["ACM"],"content":null,"date":1449280590,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449280590,"objectID":"96d903391903f930c93ae24abf638e3a","permalink":"https://111qqz.github.io/2015/12/cf115a/","publishdate":"2015-12-05T01:56:30Z","readingtime":1,"relpermalink":"/2015/12/cf115a/","section":"post","summary":"http://codeforces.com/problemset/problem/115/A 题意：给出n个人之间的上级下级关系。问如何分得最少的组，使得没一组中的人不存在上下级关系。 思路：用树的观点来考虑会很容易。可以看成给了一棵","tags":["dfs","tree"],"title":"codeforces 115A A. Party","type":"post","url":"/2015/12/cf115a/","weight":0,"wordcount":320},{"author":null,"categories":["ACM"],"content":null,"date":1449235505,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449235505,"objectID":"654055f425d733e2305fa6ae966e1206","permalink":"https://111qqz.github.io/2015/12/codeforces-327-b-rebranding/","publishdate":"2015-12-04T13:25:05Z","readingtime":1,"relpermalink":"/2015/12/codeforces-327-b-rebranding/","section":"post","summary":"http://codeforces.com/contest/591/problem/B 题意：给定一个字符串。给出m组替换。对于某一组替换，给出x,y。将字符串中所有的字符x换成y，所有的字符y换成x. 字符串仅包含英文小写字母","tags":["字符串"],"title":"codeforces #327 B Rebranding","type":"post","url":"/2015/12/codeforces-327-b-rebranding/","weight":0,"wordcount":372},{"author":null,"categories":["ACM"],"content":null,"date":1449235098,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449235098,"objectID":"d19d7c75752a534a9b5b64ee5848d851","permalink":"https://111qqz.github.io/2015/12/codeforces-327-a-wizards-duel/","publishdate":"2015-12-04T13:18:18Z","readingtime":1,"relpermalink":"/2015/12/codeforces-327-a-wizards-duel/","section":"post","summary":"题意：一个长度为l的走廊。两个人站在两端点。互相向对方发射某种魔法。A的魔法速度为p米/秒，B的魔法速度为q米/s,魔法相遇以后会反射。反射","tags":["math"],"title":"codeforces #327 A. Wizards' Duel","type":"post","url":"/2015/12/codeforces-327-a-wizards-duel/","weight":0,"wordcount":277},{"author":null,"categories":["ACM"],"content":null,"date":1449217790,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449217790,"objectID":"47536807a04424110dbe25adf44280b0","permalink":"https://111qqz.github.io/2015/12/codeforces-edu1-d-igor-in-the-museum/","publishdate":"2015-12-04T08:29:50Z","readingtime":2,"relpermalink":"/2015/12/codeforces-edu1-d-igor-in-the-museum/","section":"post","summary":"http://codeforces.com/contest/598/problem/D 题意：给第一个地图。 ‘.’是能走的，‘’是不能走的。**每个‘.’和\u0026rsquo;\u0026lsquo;之间有一幅画，**给出k个起点，问对于每组","tags":["dfs","记忆化搜索"],"title":"codeforces edu1 D. Igor In the Museum","type":"post","url":"/2015/12/codeforces-edu1-d-igor-in-the-museum/","weight":0,"wordcount":589},{"author":null,"categories":["ACM"],"content":null,"date":1449212078,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449212078,"objectID":"c0428cb3af2724a59a904826d2d31b00","permalink":"https://111qqz.github.io/2015/12/codeforces-edu1-b-queries-on-a-string/","publishdate":"2015-12-04T06:54:38Z","readingtime":1,"relpermalink":"/2015/12/codeforces-edu1-b-queries-on-a-string/","section":"post","summary":"题意：给一个字符串（1E4），然后给m次操作（m\u0026lt;=300），每次操作是给定一个区间l,r，然后进行k次（k\u0026lt;=1E6）cycl","tags":["字符串"],"title":"codeforces edu1 B Queries on a String","type":"post","url":"/2015/12/codeforces-edu1-b-queries-on-a-string/","weight":0,"wordcount":461},{"author":null,"categories":["ACM"],"content":null,"date":1449209473,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449209473,"objectID":"ceb0266c65313c13671834c7e4428655","permalink":"https://111qqz.github.io/2015/12/codeforces-edu-1-a-tricky-sum/","publishdate":"2015-12-04T06:11:13Z","readingtime":1,"relpermalink":"/2015/12/codeforces-edu-1-a-tricky-sum/","section":"post","summary":"题意：求1+2+..+n的和。。但是对于是2的整数幂的项数。。符号是-。。 思路：可以先当做正数。(n+1)*n/2; 然后减去二倍的2的整数次","tags":null,"title":"codeforces #edu 1 A tricky sum","type":"post","url":"/2015/12/codeforces-edu-1-a-tricky-sum/","weight":0,"wordcount":461},{"author":null,"categories":["ACM"],"content":null,"date":1449139440,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449139440,"objectID":"0487cd4232bee8c59a5e676b172c53be","permalink":"https://111qqz.github.io/2015/12/","publishdate":"2015-12-03T10:44:00Z","readingtime":14,"relpermalink":"/2015/12/","section":"post","summary":"我经常看有人发帖问关于项目点子的事，也看到了很多回帖，我自己也回了一些常见的项目。不过我觉得只列出三两个是远远不够的，因此就收集并这个项目列","tags":null,"title":"有了这个列表，程序员不愁没练手的小项目了","type":"post","url":"/2015/12//","weight":0,"wordcount":6793},{"author":null,"categories":["其他"],"content":null,"date":1449046478,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449046478,"objectID":"8e8a5aede09b3466ce9d9fd94d50b5e3","permalink":"https://111qqz.github.io/2015/12/codeforces-334-div-2-c-alternative-thinking/","publishdate":"2015-12-02T08:54:38Z","readingtime":1,"relpermalink":"/2015/12/codeforces-334-div-2-c-alternative-thinking/","section":"post","summary":"题意：给定一个01串。要进行一次变换：选一段连续的非空的字串，将这段串的0和1反转（0变成1,1变成0） 然后问能得到的最长的0,1交替的序列","tags":null,"title":"codeforces #334 div 2 C. Alternative Thinking","type":"post","url":"/2015/12/codeforces-334-div-2-c-alternative-thinking/","weight":0,"wordcount":474},{"author":null,"categories":["ACM"],"content":null,"date":1449044832,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449044832,"objectID":"4b87d5a12a0d73e5f3b22be68bf5b5ff","permalink":"https://111qqz.github.io/2015/12/codeforces-334-div-2-b-more-cowbell/","publishdate":"2015-12-02T08:27:12Z","readingtime":1,"relpermalink":"/2015/12/codeforces-334-div-2-b-more-cowbell/","section":"post","summary":"题意是说。给n个balls,k个箱子。保证（n\u0026lt;=2*k） 一个箱子中中最多放两个balls，size为两个balls的size之和。 所","tags":["greedy"],"title":"codeforces  #334 div 2 B. More Cowbell","type":"post","url":"/2015/12/codeforces-334-div-2-b-more-cowbell/","weight":0,"wordcount":400},{"author":null,"categories":null,"content":null,"date":1449043821,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1449043821,"objectID":"","permalink":"https://111qqz.github.io/tags/codeforces/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/codeforces/","section":"tags","summary":"","tags":null,"title":"codeforces","type":"tags","url":"/tags/codeforces/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1449043821,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1449043821,"objectID":"3edcc6d03ddd86c618f621d184694a3a","permalink":"https://111qqz.github.io/2015/12/cf604a/","publishdate":"2015-12-02T08:10:21Z","readingtime":1,"relpermalink":"/2015/12/cf604a/","section":"post","summary":"题意是说，给定一个计算规则，求最终分数。 又傻逼了QAQ 遇到double类型一定要小心小心小心！ 虽然我觉得0.3*x一定是整数..这样子应该没","tags":["codeforces"],"title":"codeforces #334 div2 A. Uncowed Forces","type":"post","url":"/2015/12/cf604a/","weight":0,"wordcount":300},{"author":null,"categories":["ACM"],"content":null,"date":1448953778,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448953778,"objectID":"5e8aa91b3b5ea2b2c2fa21fc2fd4db81","permalink":"https://111qqz.github.io/2015/12/vimacm-icpckuangbin/","publishdate":"2015-12-01T07:09:38Z","readingtime":3,"relpermalink":"/2015/12/vimacm-icpckuangbin/","section":"post","summary":"vim在ACM/ICPC中的使用 Posted on 2014年11月22日 by kuangbin Vim大法好！ 应大家的要求，写一篇博客来介绍下vim在ACM中的简单使用。 写本","tags":["vim"],"title":"vim在acm-icpc中的配置（转自kuangbin巨巨）","type":"post","url":"/2015/12/vimacm-icpckuangbin/","weight":0,"wordcount":1478},{"author":null,"categories":["其他"],"content":null,"date":1448953459,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448953459,"objectID":"4c8675473f0158c38eca891a80de7e64","permalink":"https://111qqz.github.io/2015/12/test/","publishdate":"2015-12-01T07:04:19Z","readingtime":5,"relpermalink":"/2015/12/test/","section":"post","summary":"应大家的要求，写一篇博客来介绍下vim在ACM中的简单使用。 写本文的目的，只是为了给广大acmer一个入门vim的指导。不喜勿喷！ 不想看到的","tags":null,"title":"test","type":"post","url":"/2015/12/test/","weight":0,"wordcount":2014},{"author":null,"categories":null,"content":null,"date":1448904437,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1448904437,"objectID":"","permalink":"https://111qqz.github.io/tags/atom/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/atom/","section":"tags","summary":"","tags":null,"title":"atom","type":"tags","url":"/tags/atom/","weight":0,"wordcount":0},{"author":null,"categories":["其他"],"content":null,"date":1448904437,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448904437,"objectID":"e809d371839b97f2613a712cc55f6940","permalink":"https://111qqz.github.io/2015/12/atomlinux/","publishdate":"2015-11-30T17:27:17Z","readingtime":1,"relpermalink":"/2015/12/atomlinux/","section":"post","summary":"gyp info it worked if it ends with ok gyp info using node-gyp@2.0.2 gyp info using node@0.10.40 | linux | x64 gyp http GET https://atom.io/download/atom-shell/v0.34.0/node-v0.34.0.tar.gz gyp WARN install got an error, rolling back install gyp ERR! install error gyp ERR! stack Error: This is most likely not a problem with node-gyp or the package itself and gyp ERR! stack is related to network connectivity. In most cases you are behind","tags":["atom","linux"],"title":"atom在linux下安装插件失败的解决方案","type":"post","url":"/2015/12/atomlinux/","weight":0,"wordcount":272},{"author":null,"categories":["其他"],"content":null,"date":1448851459,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448851459,"objectID":"d7b0d28c7e1882a7749a03f615df01a6","permalink":"https://111qqz.github.io/2015/11/wordpress/","publishdate":"2015-11-30T02:44:19Z","readingtime":1,"relpermalink":"/2015/11/wordpress/","section":"post","summary":"终于解决了。 的确是权限问题。 但是由于初始化的时候，我错误的设置了数据库目录。应该为/alidata/www/serve/mysql ，而我设置","tags":null,"title":"wordpress无法创建目录/没有写权限的解决方案","type":"post","url":"/2015/11/wordpress/","weight":0,"wordcount":117},{"author":null,"categories":["其他"],"content":null,"date":1448795881,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448795881,"objectID":"9855dbf07236ff183c500cb18c5be181","permalink":"https://111qqz.github.io/2015/11/","publishdate":"2015-11-29T11:18:01Z","readingtime":1,"relpermalink":"/2015/11/","section":"post","summary":"然而不能上传\u0026hellip; 插件也是。在线安装也不可以。 google遍了只看到说是权限问题。 然而wp-content整个目录都已经chmod","tags":null,"title":"博客算是搭好了？","type":"post","url":"/2015/11//","weight":0,"wordcount":93},{"author":null,"categories":["其他"],"content":null,"date":1448784814,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448784814,"objectID":"773380287194db6dfd5f25170ba5d7dc","permalink":"https://111qqz.github.io/2015/11/hello-world/","publishdate":"2015-11-29T08:13:34Z","readingtime":1,"relpermalink":"/2015/11/hello-world/","section":"post","summary":"欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！","tags":null,"title":"世界，您好！","type":"post","url":"/2015/11/hello-world/","weight":0,"wordcount":39},{"author":null,"categories":["ACM"],"content":null,"date":1448762040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":8800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448762040,"objectID":"5617bd646b7e464996eb8f266a7197bf","permalink":"https://111qqz.github.io/2015/11/bykuangbin/","publishdate":"2015-11-29T01:54:00Z","readingtime":18,"relpermalink":"/2015/11/bykuangbin/","section":"post","summary":"从放暑假前周sir给我讲了一个用polya计数法和burnside定理做的题目（pku2409）后，突然觉得组合数学挺有意思，然后从那时起到","tags":null,"title":"数学专题 by kuangbin","type":"post","url":"/2015/11/bykuangbin/","weight":0,"wordcount":8788},{"author":null,"categories":["ACM"],"content":null,"date":1448290740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448290740,"objectID":"e57efda5b0f89e112006152c3b28b39a","permalink":"https://111qqz.github.io/2015/11/luckynumber/","publishdate":"2015-11-23T14:59:00Z","readingtime":1,"relpermalink":"/2015/11/luckynumber/","section":"post","summary":"https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge\u0026amp;Itemid;=8\u0026amp;page;=show_problem\u0026amp;problem;=4704 题目大意是说，定义一个数的lucky number是距离i最远的j且满足（a[i]\u0026lt;a[j] i\u0026lt;j）。 问对所有数最大的lucky","tags":["水题"],"title":"uva 6692 Lucky Number","type":"post","url":"/2015/11/luckynumber/","weight":0,"wordcount":352},{"author":null,"categories":["ACM"],"content":null,"date":1448047980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448047980,"objectID":"f7ec23fd0cef19aaaae8c726d617e470","permalink":"https://111qqz.github.io/2015/11/codeforces332div2c-dayatthebeach/","publishdate":"2015-11-20T19:33:00Z","readingtime":2,"relpermalink":"/2015/11/codeforces332div2c-dayatthebeach/","section":"post","summary":"C. Day at the Beach time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output One day Squidward, Spongebob and Patrick decided to go to the beach. Unfortunately, the weather was bad, so the friends were unable to ride waves. However, they decided to spent their time building sand castles. At the end of the day there were n castles built by","tags":null,"title":"codeforces #332 div 2 C. Day at the Beach","type":"post","url":"/2015/11/codeforces332div2c-dayatthebeach/","weight":0,"wordcount":973},{"author":null,"categories":["ACM"],"content":null,"date":1448047920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448047920,"objectID":"6bc3cf54730aa0ecba5790328bab9b2a","permalink":"https://111qqz.github.io/2015/11/codeforces332div2b-spongebobandjoke/","publishdate":"2015-11-20T19:32:00Z","readingtime":3,"relpermalink":"/2015/11/codeforces332div2b-spongebobandjoke/","section":"post","summary":"B. Spongebob and Joke time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output While Patrick was gone shopping, Spongebob decided to play a little trick on his friend. The naughty Sponge browsed through Patrick\u0026rsquo;s personal stuff and found a sequence _a_1, _a_2, \u0026hellip;, a__m of length m, consisting of integers from 1 to n, not necessarily distinct. Then he picked some","tags":null,"title":"codeforces #332 div 2 B. Spongebob and Joke","type":"post","url":"/2015/11/codeforces332div2b-spongebobandjoke/","weight":0,"wordcount":1192},{"author":null,"categories":["ACM"],"content":null,"date":1448047800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1448047800,"objectID":"b73bc5b53e93242fc8e4768e970b8567","permalink":"https://111qqz.github.io/2015/11/codeforces332div2a-patrickandshopping/","publishdate":"2015-11-20T19:30:00Z","readingtime":2,"relpermalink":"/2015/11/codeforces332div2a-patrickandshopping/","section":"post","summary":"\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 1\u0026lt;/span\u0026gt; #include \u0026lt;cstdio\u0026gt; \u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 2\u0026lt;/span\u0026gt; #include \u0026lt;iostream\u0026gt; \u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 3\u0026lt;/span\u0026gt; #include \u0026lt;cmath\u0026gt; \u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 4\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #0000ff;\u0026quot;\u0026gt;using\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #0000ff;\u0026quot;\u0026gt;namespace\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt; std; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 5\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #0000ff;\u0026quot;\u0026gt;long\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #0000ff;\u0026quot;\u0026gt;long\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt; d1,d2,d3; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 6\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #0000ff;\u0026quot;\u0026gt;int\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt; main() \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 7\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt;{ \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 8\u0026lt;/span\u0026gt; cin\u0026gt;\u0026gt;d1\u0026gt;\u0026gt;d2\u0026gt;\u0026gt;\u0026lt;span style=\u0026quot;color: #000000;\u0026quot;\u0026gt;d3; \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color:","tags":null,"title":"codeforces #332 div 2   A. Patrick and Shopping","type":"post","url":"/2015/11/codeforces332div2a-patrickandshopping/","weight":0,"wordcount":761},{"author":null,"categories":["随笔杂谈"],"content":null,"date":1447666680,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447666680,"objectID":"5597d489fd33d1559d2f8a08d086cf48","permalink":"https://111qqz.github.io/2015/11/2015-icpc-beijing-regional-onsite/","publishdate":"2015-11-16T09:38:00Z","readingtime":4,"relpermalink":"/2015/11/2015-icpc-beijing-regional-onsite/","section":"post","summary":"热身赛的时候发现没有codeblocks瞬间爆炸\u0026hellip;我从暑假开始用的vim还好\u0026hellip;不过两个队友平常用codebloc","tags":null,"title":"2015亚洲区域赛北京站总结","type":"post","url":"/2015/11/2015-icpc-beijing-regional-onsite/","weight":0,"wordcount":1876},{"author":null,"categories":["ACM"],"content":null,"date":1447246140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447246140,"objectID":"1f6c3eeee8f7f8b40932f6978b0237ee","permalink":"https://111qqz.github.io/2015/11/","publishdate":"2015-11-11T12:49:00Z","readingtime":4,"relpermalink":"/2015/11/","section":"post","summary":"c语言上机。。。。 c写的幻方。 \u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 1\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt;/*\u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt;************************************************************************ \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 2\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt; \u0026gt; File Name: code/class/7.c \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 3\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt; \u0026gt; Author: 111qqz \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 4\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt; \u0026gt; Email: rkz2013@126.com \u0026lt;/span\u0026gt;\u0026lt;span style=\u0026quot;color: #008080;\u0026quot;\u0026gt; 5\u0026lt;/span\u0026gt; \u0026lt;span style=\u0026quot;color: #008000;\u0026quot;\u0026gt; \u0026gt; Created Time: 2015年","tags":null,"title":"幻方....","type":"post","url":"/2015/11//","weight":0,"wordcount":1813},{"author":null,"categories":["ACM"],"content":null,"date":1447228680,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447228680,"objectID":"dba76214f3b9aae20f52ee18afd6b633","permalink":"https://111qqz.github.io/2015/11/codeforces320div2c-aproblemaboutpolyline/","publishdate":"2015-11-11T07:58:00Z","readingtime":3,"relpermalink":"/2015/11/codeforces320div2c-aproblemaboutpolyline/","section":"post","summary":"C. A Problem about Polyline time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There is a polyline going through points (0, 0) - (x, x) - (2_x_, 0) - (3_x_, _x_) - (4_x_, 0) - \u0026hellip; - (2_kx_, 0) - (2_kx_ + _x_, _x_) - \u0026hellip;. We know that the polyline passes through the point (a, b). Find minimum positive","tags":null,"title":"codeforces #320 div 2 C. A Problem about Polyline(计算几何？数学)","type":"post","url":"/2015/11/codeforces320div2c-aproblemaboutpolyline/","weight":0,"wordcount":1321},{"author":null,"categories":["ACM"],"content":null,"date":1447143120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447143120,"objectID":"5695eb2e63966a3690d74152dd1d35c3","permalink":"https://111qqz.github.io/2015/11/cf320b-findingteammember/","publishdate":"2015-11-10T08:12:00Z","readingtime":0,"relpermalink":"/2015/11/cf320b-findingteammember/","section":"post","summary":"","tags":null,"title":"cf #320 B. Finding Team Member（优先队列）","type":"post","url":"/2015/11/cf320b-findingteammember/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1447125720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447125720,"objectID":"128309d1cf535d02c950addd6bf68cd9","permalink":"https://111qqz.github.io/2015/11/poj1113wall/","publishdate":"2015-11-10T03:22:00Z","readingtime":0,"relpermalink":"/2015/11/poj1113wall/","section":"post","summary":"","tags":null,"title":"poj 1113 Wall (凸包模板题）","type":"post","url":"/2015/11/poj1113wall/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1447038540,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447038540,"objectID":"053c91272cf62b7b3d0a7393e009e586","permalink":"https://111qqz.github.io/2015/11/hdu3532maxangleatan2/","publishdate":"2015-11-09T03:09:00Z","readingtime":4,"relpermalink":"/2015/11/hdu3532maxangleatan2/","section":"post","summary":"Max Angle **Time Limit: 4000/2000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 678 Accepted Submission(s): 238 ** Problem Description Given many points in a plane, two players are playing an interesting game. Player1 selects one point A as the vertex of an angle. Then player2 selects other two points B and C. A, B and C are different with each other. Now they get an angle B-A-C. Player1","tags":null,"title":"hdu 3532 Max Angle(atan2的使用)","type":"post","url":"/2015/11/hdu3532maxangleatan2/","weight":0,"wordcount":1580},{"author":null,"categories":["ACM"],"content":null,"date":1447034340,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1447034340,"objectID":"9e16106188bd4b86d84df2b7f56f4586","permalink":"https://111qqz.github.io/2015/11/poj1106transmitters/","publishdate":"2015-11-09T01:59:00Z","readingtime":4,"relpermalink":"/2015/11/poj1106transmitters/","section":"post","summary":"Transmitters Description In a wireless network with multiple transmitters sending on the same frequencies, it is often a requirement that signals don\u0026rsquo;t overlap, or at least that they don\u0026rsquo;t conflict. One way of accomplishing this is to restrict a transmitter\u0026rsquo;s coverage area. This problem uses a shielded transmitter that only broadcasts in a semicircle. A transmitter T is located somewhere on a 1,000 square meter grid. It broadcasts in a","tags":null,"title":"poj 1106 Transmitters (计算几何，叉积||极角排序)","type":"post","url":"/2015/11/poj1106transmitters/","weight":0,"wordcount":1709},{"author":null,"categories":["ACM"],"content":null,"date":1446984540,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446984540,"objectID":"8b1c1ec0003936d2060e284ecff159cd","permalink":"https://111qqz.github.io/2015/11/poj2007scrambledpolygon/","publishdate":"2015-11-08T12:09:00Z","readingtime":0,"relpermalink":"/2015/11/poj2007scrambledpolygon/","section":"post","summary":"","tags":null,"title":"poj 2007 Scrambled Polygon （极角排序模板题）","type":"post","url":"/2015/11/poj2007scrambledpolygon/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446972960,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446972960,"objectID":"da8acb8e3897bb55cadb2e411ad5f0d2","permalink":"https://111qqz.github.io/2015/11/","publishdate":"2015-11-08T08:56:00Z","readingtime":1,"relpermalink":"/2015/11/","section":"post","summary":"20190211update:工作的时候看同事ocr的代码，发现有一段就是极角排序orz\u0026hellip;所以说算法还是有用的\u0026hellip;","tags":null,"title":"极角排序的几种常见的方式","type":"post","url":"/2015/11//","weight":0,"wordcount":349},{"author":null,"categories":["ACM"],"content":null,"date":1446968040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446968040,"objectID":"55a099f86d02d0fd1bb978dbf9aff592","permalink":"https://111qqz.github.io/2015/11/poj2318toys/","publishdate":"2015-11-08T07:34:00Z","readingtime":0,"relpermalink":"/2015/11/poj2318toys/","section":"post","summary":"","tags":null,"title":"poj 2318 TOYS (计算几何）","type":"post","url":"/2015/11/poj2318toys/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446967800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446967800,"objectID":"ea104ec63a8f4908f716822d2f71a5b3","permalink":"https://111qqz.github.io/2015/11/poj2074lineofsight/","publishdate":"2015-11-08T07:30:00Z","readingtime":0,"relpermalink":"/2015/11/poj2074lineofsight/","section":"post","summary":"","tags":null,"title":"poj 2074 Line of Sight (计算几何，细节题)","type":"post","url":"/2015/11/poj2074lineofsight/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446889740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446889740,"objectID":"e214bae2a451e03560c67d5a015c50f3","permalink":"https://111qqz.github.io/2015/11/poj2826aneasyproblem-easy/","publishdate":"2015-11-07T09:49:00Z","readingtime":0,"relpermalink":"/2015/11/poj2826aneasyproblem-easy/","section":"post","summary":"","tags":null,"title":"poj 2826 An Easy Problem?! (线段相交问题终极版...并不easy)","type":"post","url":"/2015/11/poj2826aneasyproblem-easy/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446795540,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446795540,"objectID":"0399162dc38d0323a4366581d5a04efd","permalink":"https://111qqz.github.io/2015/11/hdu3264open-airshoppingmalls/","publishdate":"2015-11-06T07:39:00Z","readingtime":0,"relpermalink":"/2015/11/hdu3264open-airshoppingmalls/","section":"post","summary":"","tags":null,"title":"hdu 3264 Open-air shopping malls(求圆相交的面积，二分）","type":"post","url":"/2015/11/hdu3264open-airshoppingmalls/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446792060,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446792060,"objectID":"d40cf37d76a4d88b51903dda5cc88123","permalink":"https://111qqz.github.io/2015/11/hdu1086a-youcansolveageometryproblemtoo/","publishdate":"2015-11-06T06:41:00Z","readingtime":3,"relpermalink":"/2015/11/hdu1086a-youcansolveageometryproblemtoo/","section":"post","summary":"A - You can Solve a Geometry Problem too **Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Many geometry（几何）problems were designed in the ACM/ICPC. And now, I also prepare a geometry problem for this final exam. According to the experience of many ACMers, geometry problems are always","tags":null,"title":"hdu 1086  A - You can Solve a Geometry Problem too （线段的规范相交\u0026\u0026非规范相交）","type":"post","url":"/2015/11/hdu1086a-youcansolveageometryproblemtoo/","weight":0,"wordcount":1394},{"author":null,"categories":["ACM"],"content":null,"date":1446788280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446788280,"objectID":"d45d2ae3139d0f4dafdc3f72b797b848","permalink":"https://111qqz.github.io/2015/11/hdoj2036/","publishdate":"2015-11-06T05:38:00Z","readingtime":3,"relpermalink":"/2015/11/hdoj2036/","section":"post","summary":"改革春风吹满地 **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 24179 Accepted Submission(s): 12504 ** Problem Description \u0026quot; 改革春风吹满地, 不会AC没关系; 实在不行回老家， 还有一亩三分地。 谢谢!（乐队奏乐）\u0026r","tags":null,"title":"hdoj 2036 (计算几何，叉积求面积)","type":"post","url":"/2015/11/hdoj2036/","weight":0,"wordcount":1341},{"author":null,"categories":["ACM"],"content":null,"date":1446782160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446782160,"objectID":"57cc8f09ee548905a51b19c9ee983ae6","permalink":"https://111qqz.github.io/2015/11/poj1269intersectinglines/","publishdate":"2015-11-06T03:56:00Z","readingtime":0,"relpermalink":"/2015/11/poj1269intersectinglines/","section":"post","summary":"","tags":null,"title":"poj 1269  Intersecting Lines (计算几何)","type":"post","url":"/2015/11/poj1269intersectinglines/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1446720840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446720840,"objectID":"c385504df61ff27eb26593f1ade7ebac","permalink":"https://111qqz.github.io/2015/11/codeforces329div2b-antonandlines/","publishdate":"2015-11-05T10:54:00Z","readingtime":3,"relpermalink":"/2015/11/codeforces329div2b-antonandlines/","section":"post","summary":"B. Anton and Lines time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The teacher gave Anton a large geometry homework, but he didn\u0026rsquo;t do it (as usual) as he participated in a regular round on Codeforces. In the task he was given a set of n lines defined by the equations y = k__i*x + b__i. It was necessary to","tags":null,"title":"codeforces #329 div 2 B. Anton and Lines(几何）","type":"post","url":"/2015/11/codeforces329div2b-antonandlines/","weight":0,"wordcount":1394},{"author":null,"categories":["ACM"],"content":null,"date":1446720120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446720120,"objectID":"7be6973413dedd534b5f239b5d7d1a6d","permalink":"https://111qqz.github.io/2015/11/codeforces329div2a-2char/","publishdate":"2015-11-05T10:42:00Z","readingtime":3,"relpermalink":"/2015/11/codeforces329div2a-2char/","section":"post","summary":"A. 2Char time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Andrew often reads articles in his favorite magazine 2Char. The main feature of these articles is that each of them uses at most two distinct letters. Andrew decided to send an article to the magazine, but as he hasn\u0026rsquo;t written any article, he just decided to take a random one","tags":null,"title":"codeforces #329 div 2 A. 2Char (暴力)","type":"post","url":"/2015/11/codeforces329div2a-2char/","weight":0,"wordcount":1490},{"author":null,"categories":["ACM"],"content":null,"date":1446040800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446040800,"objectID":"4ef7b8281b7a09247c05e14680ae5506","permalink":"https://111qqz.github.io/2015/10/hdu1394/","publishdate":"2015-10-28T14:00:00Z","readingtime":1,"relpermalink":"/2015/10/hdu1394/","section":"post","summary":"题目链接 题意： 这题是问一个长度为n的循环数组中，逆序对最少的个数。。。 我们可以先用树状数组求出初始的数列的逆序对。。。 然后其他的可以通过递推","tags":["树状数组","逆序对"],"title":"hdu 1394 Minimum Inversion Number (树状数组 逆序对)","type":"post","url":"/2015/10/hdu1394/","weight":0,"wordcount":371},{"author":null,"categories":["ACM"],"content":null,"date":1446038040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1446038040,"objectID":"022577315fae2d97be9dd4882eb82669","permalink":"https://111qqz.github.io/2015/10/hdu1754ihateit/","publishdate":"2015-10-28T13:14:00Z","readingtime":4,"relpermalink":"/2015/10/hdu1754ihateit/","section":"post","summary":"I Hate It **Time Limit: 9000/3000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 53991 Accepted Submission(s): 21180 ** Problem Description 很多学校流行一种比较的习惯。老师们很喜欢询问，从某某到某某当中，分数最高的是多少。 这让很多学生很","tags":null,"title":"hdu 1754 I Hate It (线段树)","type":"post","url":"/2015/10/hdu1754ihateit/","weight":0,"wordcount":1574},{"author":null,"categories":["ACM"],"content":null,"date":1445951400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445951400,"objectID":"9ee0733b15494ef952ad1011e4c83c2b","permalink":"https://111qqz.github.io/2015/10/codeforces589g-hiring/","publishdate":"2015-10-27T13:10:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces589g-hiring/","section":"post","summary":"","tags":null,"title":"codeforces 589 G - Hiring(模拟？)","type":"post","url":"/2015/10/codeforces589g-hiring/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445951040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445951040,"objectID":"0d50e900b56de1269e2034b0f8d0438e","permalink":"https://111qqz.github.io/2015/10/codeforces589h-touristguidedfs/","publishdate":"2015-10-27T13:04:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces589h-touristguidedfs/","section":"post","summary":"","tags":null,"title":"codeforces 589H - Tourist Guide（dfs）","type":"post","url":"/2015/10/codeforces589h-touristguidedfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445928840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445928840,"objectID":"e3a437b83de7d2bb67eaf44c989dec5e","permalink":"https://111qqz.github.io/2015/10/codeforces589b-layercake/","publishdate":"2015-10-27T06:54:00Z","readingtime":3,"relpermalink":"/2015/10/codeforces589b-layercake/","section":"post","summary":"B - Layer Cake **Time Limit:**6000MS **Memory Limit:**524288KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Practice CodeForces 589B Description Dasha decided to bake a big and tasty layer cake. In order to do that she went shopping and bought n rectangular cake layers. The length and the width of the i-th cake layer were a__i and b__i respectively, while the height of each cake layer was equal to one. From","tags":null,"title":"codeforces 589 B - Layer Cake","type":"post","url":"/2015/10/codeforces589b-layercake/","weight":0,"wordcount":1201},{"author":null,"categories":["ACM"],"content":null,"date":1445926380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445926380,"objectID":"106084ff9132f65fb7ef075f283ec297","permalink":"https://111qqz.github.io/2015/10/zoj3627f-treasurehuntii/","publishdate":"2015-10-27T06:13:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3627f-treasurehuntii/","section":"post","summary":"","tags":null,"title":"zoj 3627 F - Treasure Hunt II(贪心)","type":"post","url":"/2015/10/zoj3627f-treasurehuntii/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445925960,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445925960,"objectID":"174d0a9beca49bd6b45feb51f7b080a1","permalink":"https://111qqz.github.io/2015/10/zoj3629treasurehuntiv/","publishdate":"2015-10-27T06:06:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3629treasurehuntiv/","section":"post","summary":"","tags":null,"title":"zoj 3629 Treasure Hunt IV(找规律)","type":"post","url":"/2015/10/zoj3629treasurehuntiv/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445925720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445925720,"objectID":"8e9e35943be19174e5058463aaa4278c","permalink":"https://111qqz.github.io/2015/10/zoj3634bountyhunterdp/","publishdate":"2015-10-27T06:02:00Z","readingtime":4,"relpermalink":"/2015/10/zoj3634bountyhunterdp/","section":"post","summary":"M - Bounty hunter **Time Limit:**5000MS **Memory Limit:**65536KB 64bit IO Format:%lld \u0026amp; %llu Submit Status Description Bounty hunter is a hero who always moves along cities to earn money by his power. One day he decides to N cities one by one At the beginning ,Bounty hunter has X money and Y points of Attack force. At day 1, he will goes to city 1, then city 2 at day","tags":null,"title":"zoj 3634 Bounty hunter(dp，已经想明白)","type":"post","url":"/2015/10/zoj3634bountyhunterdp/","weight":0,"wordcount":1579},{"author":null,"categories":["ACM"],"content":null,"date":1445872440,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445872440,"objectID":"efbb4e631d445c2570b5c9beefa82f5f","permalink":"https://111qqz.github.io/2015/10/codeforcres589j-cleanerrobot/","publishdate":"2015-10-26T15:14:00Z","readingtime":0,"relpermalink":"/2015/10/codeforcres589j-cleanerrobot/","section":"post","summary":"","tags":null,"title":"codeforcres 589 J - Cleaner Robot(暴力)","type":"post","url":"/2015/10/codeforcres589j-cleanerrobot/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445871360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445871360,"objectID":"9a3c03e39aaf3aed46121f3013548806","permalink":"https://111qqz.github.io/2015/10/codeforces589i-lottery/","publishdate":"2015-10-26T14:56:00Z","readingtime":2,"relpermalink":"/2015/10/codeforces589i-lottery/","section":"post","summary":"I - Lottery **Time Limit:**2000MS **Memory Limit:**524288KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Practice CodeForces 589I Description Today Berland holds a lottery with a prize \u0026ndash; a huge sum of money! There are k persons, who attend the lottery. Each of them will receive a unique integer from 1 to k. The organizers bought n balls to organize the lottery, each of them is painted some color, the colors","tags":null,"title":"codeforces 589 I - Lottery(水）","type":"post","url":"/2015/10/codeforces589i-lottery/","weight":0,"wordcount":960},{"author":null,"categories":["ACM"],"content":null,"date":1445867700,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445867700,"objectID":"3f21055587d03b16932893b1458f802d","permalink":"https://111qqz.github.io/2015/10/codeforces589d-boulevard/","publishdate":"2015-10-26T13:55:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces589d-boulevard/","section":"post","summary":"","tags":null,"title":"codeforces 589 D - Boulevard","type":"post","url":"/2015/10/codeforces589d-boulevard/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445528460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445528460,"objectID":"c809ab6b6f86f5fdcf5fa1d510b6192c","permalink":"https://111qqz.github.io/2015/10/poj2253-froggerfloyd/","publishdate":"2015-10-22T15:41:00Z","readingtime":3,"relpermalink":"/2015/10/poj2253-froggerfloyd/","section":"post","summary":"A - Frogger **Time Limit:**1000MS **Memory Limit:**65536KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Freddy Frog is sitting on a stone in the middle of a lake. Suddenly he notices Fiona Frog who is sitting on another stone. He plans to visit her, but since the water is dirty and full of tourists\u0026rsquo; sunscreen, he wants to avoid swimming and instead reach her by jumping. Unfortunately Fiona\u0026rsquo;s stone is","tags":null,"title":"POJ 2253 - Frogger (floyd)","type":"post","url":"/2015/10/poj2253-froggerfloyd/","weight":0,"wordcount":1254},{"author":null,"categories":["ACM"],"content":null,"date":1445516220,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445516220,"objectID":"a498abb3bec7fc64c554aeaa831c48e8","permalink":"https://111qqz.github.io/2015/10/codeforces326div2a-duffandmeat/","publishdate":"2015-10-22T12:17:00Z","readingtime":2,"relpermalink":"/2015/10/codeforces326div2a-duffandmeat/","section":"post","summary":"A. Duff and Meat time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Duff is addicted to meat! Malek wants to keep her happy for n days. In order to be happy in i-th day, she needs to eat exactly a__i kilograms of meat. There is a big shop uptown and Malek wants to buy meat for her from there. In","tags":null,"title":"codeforces #326 div 2 A. Duff and Meat(水）","type":"post","url":"/2015/10/codeforces326div2a-duffandmeat/","weight":0,"wordcount":870},{"author":null,"categories":["ACM"],"content":null,"date":1445512320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445512320,"objectID":"48ec438aca8bc02bf53f5864b943acde","permalink":"https://111qqz.github.io/2015/10/zoj3633-alicespresentset/","publishdate":"2015-10-22T11:12:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3633-alicespresentset/","section":"post","summary":"","tags":null,"title":"zoj 3633  - Alice's present(暴力？set)","type":"post","url":"/2015/10/zoj3633-alicespresentset/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445482440,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445482440,"objectID":"3952d618ce928430492b7ae29ad586e0","permalink":"https://111qqz.github.io/2015/10/zoj3635cinemainakibak/","publishdate":"2015-10-22T02:54:00Z","readingtime":4,"relpermalink":"/2015/10/zoj3635cinemainakibak/","section":"post","summary":"Cinema in Akiba Cinema in Akiba (CIA) is a small but very popular cinema in Akihabara. Every night the cinema is full of people. The layout of CIA is very interesting, as there is only one row so that every audience can enjoy the wonderful movies without any annoyance by other audiences sitting in front of him/her. The ticket for CIA is strange, too. There are n seats in CIA","tags":null,"title":"zoj 3635  Cinema in Akiba (树状数组求第K大)","type":"post","url":"/2015/10/zoj3635cinemainakibak/","weight":0,"wordcount":1706},{"author":null,"categories":["ACM"],"content":null,"date":1445479320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445479320,"objectID":"9e425ef77106a935517cdc43347ea63e","permalink":"https://111qqz.github.io/2015/10/zoj3625d-geekscollection201510ac/","publishdate":"2015-10-22T02:02:00Z","readingtime":5,"relpermalink":"/2015/10/zoj3625d-geekscollection201510ac/","section":"post","summary":"D - Geek\u0026rsquo;s Collection **Time Limit:**2000MS **Memory Limit:**65536KB 64bit IO Format:%lld \u0026amp; %llu Submit Status Description The word geek is a slang term, with different meanings ranging from \u0026ldquo;a computer expert or enthusiast\u0026rdquo; to \u0026ldquo;a carnival performer who performs sensationally morbid or disgusting acts\u0026rdquo;, with a general pejorative meaning of \u0026ldquo;a peculiar or otherwise dislikable person, especially one who is perceived to be overly intellectual\u0026rdquo;. The definition of geek has","tags":null,"title":"zoj  3625 D - Geek's Collection(正项无穷级数，麦克劳林展开式，2015年10月AC)","type":"post","url":"/2015/10/zoj3625d-geekscollection201510ac/","weight":0,"wordcount":2032},{"author":null,"categories":["ACM"],"content":null,"date":1445298840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445298840,"objectID":"39f75f0d1f788cfb92238d6e0419d448","permalink":"https://111qqz.github.io/2015/10/zoj3624lucas/","publishdate":"2015-10-19T23:54:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3624lucas/","section":"post","summary":"","tags":null,"title":"zoj 3624(lucas定理)","type":"post","url":"/2015/10/zoj3624lucas/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445261280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445261280,"objectID":"d26cd4019c92605d20f23e775a5a156a","permalink":"https://111qqz.github.io/2015/10/zoj3631j-watashisbg/","publishdate":"2015-10-19T13:28:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3631j-watashisbg/","section":"post","summary":"","tags":null,"title":"zoj 3631  J - Watashi's BG (双向暴力)","type":"post","url":"/2015/10/zoj3631j-watashisbg/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445252160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445252160,"objectID":"94375768ab2c49d1185b0f4966dc997b","permalink":"https://111qqz.github.io/2015/10/51nod1106millerrabin-/","publishdate":"2015-10-19T10:56:00Z","readingtime":2,"relpermalink":"/2015/10/51nod1106millerrabin-/","section":"post","summary":"1106 质数检测基准时间限制：1 秒 空间限制：131072 KB 分值: 0 难度：基础题 收藏 关注 给出N个正整数，检测每个数是否为质数。如果是，输出\u0026quot","tags":null,"title":"51nod 1106 质数检测(miller rabin 素数测试.)","type":"post","url":"/2015/10/51nod1106millerrabin-/","weight":0,"wordcount":912},{"author":null,"categories":["ACM"],"content":null,"date":1445251620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445251620,"objectID":"7943a94798baea290b12f20b245f2af2","permalink":"https://111qqz.github.io/2015/10/51nod1001k/","publishdate":"2015-10-19T10:47:00Z","readingtime":0,"relpermalink":"/2015/10/51nod1001k/","section":"post","summary":"","tags":null,"title":"51nod 1001  数组中和等于k的数对（单调性优化）","type":"post","url":"/2015/10/51nod1001k/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445250300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445250300,"objectID":"5dba1577f752cc23253b33707b9978be","permalink":"https://111qqz.github.io/2015/10/zoj3623b-battleships/","publishdate":"2015-10-19T10:25:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3623b-battleships/","section":"post","summary":"","tags":null,"title":"zoj 3623  B - Battle Ships (完全背包？泛化背包？)","type":"post","url":"/2015/10/zoj3623b-battleships/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445232000,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445232000,"objectID":"7845a6b3f33859bcc38247ff35a287dc","permalink":"https://111qqz.github.io/2015/10/zoj3622magicnumber/","publishdate":"2015-10-19T05:20:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3622magicnumber/","section":"post","summary":"","tags":null,"title":"zoj 3622   Magic Number （构造？）","type":"post","url":"/2015/10/zoj3622magicnumber/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1445178120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1445178120,"objectID":"fda36d14be79159ffaf1de4aa3809dda","permalink":"https://111qqz.github.io/2015/10/zoj3903ant/","publishdate":"2015-10-18T14:22:00Z","readingtime":0,"relpermalink":"/2015/10/zoj3903ant/","section":"post","summary":"","tags":null,"title":"zoj 3903 Ant(推公式，逆元）","type":"post","url":"/2015/10/zoj3903ant/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1444626720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1444626720,"objectID":"8940feb5631920e757471f7493c5df96","permalink":"https://111qqz.github.io/2015/10/hdu2531catchhimbfs/","publishdate":"2015-10-12T05:12:00Z","readingtime":5,"relpermalink":"/2015/10/hdu2531catchhimbfs/","section":"post","summary":"Catch him **Time Limit: 5000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 664 Accepted Submission(s): 307 ** Problem Description 在美式足球中，四分卫负责指挥整只球队的进攻战术和跑位，以及给接球员传球的任务。四分卫是一只球队进攻","tags":null,"title":"hdu 2531 Catch him (bfs)","type":"post","url":"/2015/10/hdu2531catchhimbfs/","weight":0,"wordcount":2438},{"author":null,"categories":["ACM"],"content":null,"date":1444578780,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1444578780,"objectID":"73fa1a0b2302d7a12d1ec292219e12a7","permalink":"https://111qqz.github.io/2015/10/codeforces324div2a-olesyaandrodion/","publishdate":"2015-10-11T15:53:00Z","readingtime":2,"relpermalink":"/2015/10/codeforces324div2a-olesyaandrodion/","section":"post","summary":"A. Olesya and Rodion time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Olesya loves numbers consisting of n digits, and Rodion only likes numbers that are divisible by t. Find some number that satisfies both of them. Your task is: given the n and t print an integer strictly larger than zero consisting of n digits that is divisible by","tags":null,"title":"codeforces #324 div 2 A. Olesya and Rodion","type":"post","url":"/2015/10/codeforces324div2a-olesyaandrodion/","weight":0,"wordcount":790},{"author":null,"categories":["ACM"],"content":null,"date":1444045980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1444045980,"objectID":"4c043456b9a91a87b67fcb230d023da3","permalink":"https://111qqz.github.io/2015/10/51nod_learn_greedy_/","publishdate":"2015-10-05T11:53:00Z","readingtime":0,"relpermalink":"/2015/10/51nod_learn_greedy_/","section":"post","summary":"","tags":null,"title":"51nod_learn_greedy_独木舟问题","type":"post","url":"/2015/10/51nod_learn_greedy_/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1444044900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1444044900,"objectID":"5b7d1396d6c843ae6955f362619d5b3c","permalink":"https://111qqz.github.io/2015/10/51nod_learn_greedy_2/","publishdate":"2015-10-05T11:35:00Z","readingtime":3,"relpermalink":"/2015/10/51nod_learn_greedy_2/","section":"post","summary":"有若干个活动，第i个开始时间和结束时间是[Si,fi)，同一个教室安排的活动之间不能交叠，求要安排所有活动，最少需要几个教室？ 第一行一个正整","tags":null,"title":"51nod_learn_greedy_活动安排2","type":"post","url":"/2015/10/51nod_learn_greedy_2/","weight":0,"wordcount":1215},{"author":null,"categories":["ACM"],"content":null,"date":1444043400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1444043400,"objectID":"185fdd8f905969e27b0637c41040c21e","permalink":"https://111qqz.github.io/2015/10/hdu1240asteroidsbfs/","publishdate":"2015-10-05T11:10:00Z","readingtime":0,"relpermalink":"/2015/10/hdu1240asteroidsbfs/","section":"post","summary":"","tags":null,"title":"hdu 1240  Asteroids! (bfs)","type":"post","url":"/2015/10/hdu1240asteroidsbfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443951180,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443951180,"objectID":"5f73297609050d5ec004356746ff44c4","permalink":"https://111qqz.github.io/2015/10/hdu1072nightmarebfs/","publishdate":"2015-10-04T09:33:00Z","readingtime":0,"relpermalink":"/2015/10/hdu1072nightmarebfs/","section":"post","summary":"","tags":null,"title":"hdu 1072 Nightmare(bfs)","type":"post","url":"/2015/10/hdu1072nightmarebfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443947580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443947580,"objectID":"997a6a2a5191675d60638d737ba2402c","permalink":"https://111qqz.github.io/2015/10/codeforces323div2b-robotstask/","publishdate":"2015-10-04T08:33:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces323div2b-robotstask/","section":"post","summary":"","tags":null,"title":"codeforces #323 div 2 B. Robot's Task(又是暴力？","type":"post","url":"/2015/10/codeforces323div2b-robotstask/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443946980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443946980,"objectID":"9ddb1a4ae218c341dbd9be9db085470e","permalink":"https://111qqz.github.io/2015/10/codeforces323div2a-asphaltingroads/","publishdate":"2015-10-04T08:23:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces323div2a-asphaltingroads/","section":"post","summary":"","tags":null,"title":"codeforces #323 div 2 A. Asphalting Roads(暴力","type":"post","url":"/2015/10/codeforces323div2a-asphaltingroads/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443946560,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443946560,"objectID":"d414430af1e93c8d54812e7cfda34a6a","permalink":"https://111qqz.github.io/2015/10/codeforces323div2c-gcdtable/","publishdate":"2015-10-04T08:16:00Z","readingtime":5,"relpermalink":"/2015/10/codeforces323div2c-gcdtable/","section":"post","summary":"C. GCD Table time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output The GCD table G of size n × n for an array of positive integers a of length n is defined by formula Let us remind you that the greatest common divisor (GCD) of two positive integers x and y is the greatest integer that is divisor of both","tags":null,"title":"codeforces #323 div 2 C. GCD Table (暴力？)","type":"post","url":"/2015/10/codeforces323div2c-gcdtable/","weight":0,"wordcount":2496},{"author":null,"categories":["ACM"],"content":null,"date":1443899520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443899520,"objectID":"63aff96f72538ba027c5a8ae486e128d","permalink":"https://111qqz.github.io/2015/10/poj/","publishdate":"2015-10-03T19:12:00Z","readingtime":1,"relpermalink":"/2015/10/poj/","section":"post","summary":"sigh","tags":null,"title":"有一种板刷poj的冲动","type":"post","url":"/2015/10/poj/","weight":0,"wordcount":1},{"author":null,"categories":["ACM"],"content":null,"date":1443883440,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443883440,"objectID":"a9446386bfcbb265b8a6283452b57391","permalink":"https://111qqz.github.io/2015/10/hdu1242rescuebfs/","publishdate":"2015-10-03T14:44:00Z","readingtime":0,"relpermalink":"/2015/10/hdu1242rescuebfs/","section":"post","summary":"","tags":null,"title":"hdu 1242 Rescue(bfs+优先队列)","type":"post","url":"/2015/10/hdu1242rescuebfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443775740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443775740,"objectID":"ca3d49a69e1b21bca9b5ee6b9f65fb09","permalink":"https://111qqz.github.io/2015/10/hdu1195openthelockbfs/","publishdate":"2015-10-02T08:49:00Z","readingtime":0,"relpermalink":"/2015/10/hdu1195openthelockbfs/","section":"post","summary":"","tags":null,"title":"hdu 1195 Open the Lock(bfs)","type":"post","url":"/2015/10/hdu1195openthelockbfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443767400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443767400,"objectID":"186f94a1158dba27e75a98fb6b380e66","permalink":"https://111qqz.github.io/2015/10/","publishdate":"2015-10-02T06:30:00Z","readingtime":1,"relpermalink":"/2015/10/","section":"post","summary":"也许今年不该参赛的\u0026hellip;. 因为暑假才刚刚调整好心态\u0026hellip; 上学期基本废掉了\u0026hellip; 感觉就是虚得不行，什么都不会的感","tags":null,"title":"好虚啊.","type":"post","url":"/2015/10//","weight":0,"wordcount":122},{"author":null,"categories":["ACM"],"content":null,"date":1443766800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443766800,"objectID":"badfc23925d030bc989bb0062594b354","permalink":"https://111qqz.github.io/2015/10/hdu2102abfs/","publishdate":"2015-10-02T06:20:00Z","readingtime":0,"relpermalink":"/2015/10/hdu2102abfs/","section":"post","summary":"","tags":null,"title":"hdu 2102 A计划( bfs)","type":"post","url":"/2015/10/hdu2102abfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443703140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443703140,"objectID":"af3d0ec6be13291650ec2eb1aa0b669f","permalink":"https://111qqz.github.io/2015/10/poj1067hdu1527wythoffgame/","publishdate":"2015-10-01T12:39:00Z","readingtime":0,"relpermalink":"/2015/10/poj1067hdu1527wythoffgame/","section":"post","summary":"","tags":null,"title":"poj 1067||hdu 1527 取石子游戏（博弈论，Wythoff Game）","type":"post","url":"/2015/10/poj1067hdu1527wythoffgame/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443699600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443699600,"objectID":"a6123a6b0dc35f5a3e9fa35b77f3ed04","permalink":"https://111qqz.github.io/2015/10/codeforces306div2a-twosubstrings/","publishdate":"2015-10-01T11:40:00Z","readingtime":0,"relpermalink":"/2015/10/codeforces306div2a-twosubstrings/","section":"post","summary":"","tags":null,"title":"codeforces #306 div 2 A - Two Substrings(随便搞)","type":"post","url":"/2015/10/codeforces306div2a-twosubstrings/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443634860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443634860,"objectID":"71cce5d3759236212ecb817e1f59e64a","permalink":"https://111qqz.github.io/2015/09/codeforces322div2d-threelogos/","publishdate":"2015-09-30T17:41:00Z","readingtime":4,"relpermalink":"/2015/09/codeforces322div2d-threelogos/","section":"post","summary":"D. Three Logos time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Three companies decided to order a billboard with pictures of their logos. A billboard is a big square board. A logo of each company is a rectangle of a non-zero area. Advertisers will put up the ad only if it is possible to place all three logos on the","tags":["brute force"],"title":"codeforces #322 div 2　D. Three Logos (枚举)","type":"post","url":"/2015/09/codeforces322div2d-threelogos/","weight":0,"wordcount":1651},{"author":null,"categories":["ACM"],"content":null,"date":1443584220,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443584220,"objectID":"1ffc7901e648d8ae671ac97db6e92547","permalink":"https://111qqz.github.io/2015/09/hdu5481bestcoder57div2cdesiderium/","publishdate":"2015-09-30T03:37:00Z","readingtime":3,"relpermalink":"/2015/09/hdu5481bestcoder57div2cdesiderium/","section":"post","summary":"Desiderium **Time Limit: 4000/2000 MS (Java/Others) Memory Limit: 65536/65536 K (Java/Others) Total Submission(s): 427 Accepted Submission(s): 167 ** Problem Description There is a set of intervals, the size of this set is n. If we select a subset of this set with equal probability, how many the expected length of intervals\u0026rsquo; union of this subset is? We assume that the length of empty set\u0026rsquo;s union is 0, and we want","tags":["概率"],"title":"hdu 5481||bestcoder #57 div 2 C Desiderium (概率)","type":"post","url":"/2015/09/hdu5481bestcoder57div2cdesiderium/","weight":0,"wordcount":1078},{"author":null,"categories":["ACM"],"content":null,"date":1443580680,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443580680,"objectID":"2f583ed123f8f673fa59bf1bd8146216","permalink":"https://111qqz.github.io/2015/09/codeforces322div2c-developingskills/","publishdate":"2015-09-30T02:38:00Z","readingtime":3,"relpermalink":"/2015/09/codeforces322div2c-developingskills/","section":"post","summary":"time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Petya loves computer games. Finally a game that he\u0026rsquo;s been waiting for so long came out! The main character of this game has n different skills, each of which is characterized by an integer a__i from 0 to 100. The higher the number_a__i_ is, the higher is the _i_-th skill of the","tags":["乱搞"],"title":"codeforces #322 div 2 C. Developing Skills(乱搞)","type":"post","url":"/2015/09/codeforces322div2c-developingskills/","weight":0,"wordcount":1081},{"author":null,"categories":["ACM"],"content":null,"date":1443460020,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443460020,"objectID":"12a3a33a4b31199c2ef24e5a55178ed7","permalink":"https://111qqz.github.io/2015/09/codeforces322div2b-luxurioushouses/","publishdate":"2015-09-28T17:07:00Z","readingtime":2,"relpermalink":"/2015/09/codeforces322div2b-luxurioushouses/","section":"post","summary":"B. Luxurious Houses time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output The capital of Berland has n multifloor buildings. The architect who built up the capital was very creative, so all the houses were built in one row. Let\u0026rsquo;s enumerate all the houses from left to right, starting with one. A house is considered to be luxurious if the number","tags":null,"title":"codeforces #322 div 2 B. Luxurious Houses (思路)","type":"post","url":"/2015/09/codeforces322div2b-luxurioushouses/","weight":0,"wordcount":601},{"author":null,"categories":["ACM"],"content":null,"date":1443459900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443459900,"objectID":"32f1e1889d16d752f5566812531dd69a","permalink":"https://111qqz.github.io/2015/09/codeforces322div2a-vasyathehipster/","publishdate":"2015-09-28T17:05:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces322div2a-vasyathehipster/","section":"post","summary":"A. Vasya the Hipster time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output One day Vasya the Hipster decided to count how many socks he had. It turned out that he had a red socks and b blue socks. According to the latest fashion, hipsters should wear the socks of different colors: a red one on the left foot, a blue","tags":["水"],"title":"codeforces #322 div 2 A. Vasya the Hipster(纱布题)","type":"post","url":"/2015/09/codeforces322div2a-vasyathehipster/","weight":0,"wordcount":440},{"author":null,"categories":["ACM"],"content":null,"date":1443456240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443456240,"objectID":"5c407bf18533e64acbd812b9b52566e3","permalink":"https://111qqz.github.io/2015/09/codeforceshowtocomeupwiththesolutionstechniques/","publishdate":"2015-09-28T16:04:00Z","readingtime":2,"relpermalink":"/2015/09/codeforceshowtocomeupwiththesolutionstechniques/","section":"post","summary":"As I work with students I often face the situation when if a problem doesn\u0026rsquo;t seem clear to a student at the first sight, it makes them unable to solve it. Indeed, you always hear about specific methods and techniques. But you don\u0026rsquo;t hear about how to think in order to apply them. In this note I\u0026rsquo;ll try to sum up my experience of solving programming contest problems. However, some","tags":null,"title":"[转自codeforces] How to come up with the solutions: techniques","type":"post","url":"/2015/09/codeforceshowtocomeupwiththesolutionstechniques/","weight":0,"wordcount":893},{"author":null,"categories":["ACM"],"content":null,"date":1443435900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443435900,"objectID":"f88f23c5070b7309f922dbeb37cc6631","permalink":"https://111qqz.github.io/2015/09/uva489/","publishdate":"2015-09-28T10:25:00Z","readingtime":2,"relpermalink":"/2015/09/uva489/","section":"post","summary":"In ``Hangman Judge,\u0026rsquo;\u0026rsquo; you are to write a program that judges a series of Hangman games. For each game, the answer to the puzzle is given as well as the guesses. Rules are the same as the classic game of hangman, and are given as follows: 1. The contestant tries to solve to puzzle by guessing one letter at a time. 2. Every time a guess is correct, all the","tags":["水"],"title":"uva 489","type":"post","url":"/2015/09/uva489/","weight":0,"wordcount":637},{"author":null,"categories":["ACM"],"content":null,"date":1443288300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443288300,"objectID":"ca3d30472ab205eb8e1761cdb0369779","permalink":"https://111qqz.github.io/2015/09/hdoj5479/","publishdate":"2015-09-26T17:25:00Z","readingtime":1,"relpermalink":"/2015/09/hdoj5479/","section":"post","summary":"模拟． 直接搞\u0026hellip; 并不明白坑在哪里．．． 排在我前面被hack了１００多人\u0026hellip; /************************************************************************* \u0026gt; File Name: code/bc/#57/1001.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年09","tags":["模拟"],"title":"hdoj 5479 || bestcoder #57 div 2 A Scaena Felix(模拟)","type":"post","url":"/2015/09/hdoj5479/","weight":0,"wordcount":212},{"author":null,"categories":["ACM"],"content":null,"date":1443288000,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443288000,"objectID":"4d1d606584022de4579ae8bbd7671aa4","permalink":"https://111qqz.github.io/2015/09/hdu5480/","publishdate":"2015-09-26T17:20:00Z","readingtime":2,"relpermalink":"/2015/09/hdu5480/","section":"post","summary":"比较水． 唯一一点需要注意的是\u0026hellip; 可能有重复元素\u0026hellip; 因为我的思路是用两棵一维树状数组搞.. 每个点标记为1 然后看矩形的两","tags":["前缀和","树状数组"],"title":"hdu 5480|| bestcoder 　　＃５７　div 2　Conturbatio（前缀和｜｜树状数组）","type":"post","url":"/2015/09/hdu5480/","weight":0,"wordcount":519},{"author":null,"categories":["ACM"],"content":null,"date":1443192360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443192360,"objectID":"c3c568ec6b9f89686f028bf224232dd8","permalink":"https://111qqz.github.io/2015/09/codeforces321div2b-kefaandcompany/","publishdate":"2015-09-25T14:46:00Z","readingtime":2,"relpermalink":"/2015/09/codeforces321div2b-kefaandcompany/","section":"post","summary":"B. Kefa and Company time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Kefa wants to celebrate his first big salary by going to restaurant. However, he needs company. Kefa has n friends, each friend will agree to go to the restaurant if Kefa asks. Each friend is characterized by the amount of money he has and the friendship factor in","tags":["尺取法"],"title":"codeforces #321 div 2 B. Kefa and Company(尺取法)","type":"post","url":"/2015/09/codeforces321div2b-kefaandcompany/","weight":0,"wordcount":616},{"author":null,"categories":["ACM"],"content":null,"date":1443158820,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443158820,"objectID":"761a2a6138c0aa30fd029accd221aeda","permalink":"https://111qqz.github.io/2015/09/poj2739/","publishdate":"2015-09-25T05:27:00Z","readingtime":1,"relpermalink":"/2015/09/poj2739/","section":"post","summary":"一开始迷之wa\u0026hellip; 先找出素数下标的上界就可以A\u0026hellip; 然后纠结了２０分钟．．． 然后发现是预处理的素数少了一个素数．． 我预","tags":["尺取"],"title":"poj 2739  Sum of Consecutive Prime Numbers (尺取法)","type":"post","url":"/2015/09/poj2739/","weight":0,"wordcount":368},{"author":null,"categories":null,"content":null,"date":1443158820,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1443158820,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%B0%BA%E5%8F%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%B0%BA%E5%8F%96/","section":"tags","summary":"","tags":null,"title":"尺取","type":"tags","url":"/tags/%E5%B0%BA%E5%8F%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443115740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443115740,"objectID":"5db7d57e7a871da0195adf8e5185f804","permalink":"https://111qqz.github.io/2015/09/poj2100/","publishdate":"2015-09-24T17:29:00Z","readingtime":1,"relpermalink":"/2015/09/poj2100/","section":"post","summary":"不多说，直接代码。 /************************************************************************* \u0026gt; File Name: code/poj/2100.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年09月25日 星期五 00时42分49秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;stack\u0026gt; #include\u0026lt;cctype\u0026gt; #define y1 hust111qqz #define yn hez111qqz #define j1 cute111qqz #define","tags":["尺取"],"title":"poj 2100 Graveyard Design (two pointers ，尺取法)","type":"post","url":"/2015/09/poj2100/","weight":0,"wordcount":260},{"author":null,"categories":["ACM"],"content":null,"date":1443111960,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443111960,"objectID":"0515e6c72ab084719d624b16e73f7a64","permalink":"https://111qqz.github.io/2015/09/poj2566/","publishdate":"2015-09-24T16:26:00Z","readingtime":2,"relpermalink":"/2015/09/poj2566/","section":"post","summary":"题意 ：给定一个长度为n的区间．然后给k次询问，每次一个数t,求一个区间[l,r]使得这个区间和的绝对值最接近t 没办法直接尺取. 先预处理出来前","tags":["尺取法"],"title":"poj 2566 Bound Found (前缀和，尺取法（two pointer）)","type":"post","url":"/2015/09/poj2566/","weight":0,"wordcount":528},{"author":null,"categories":["ACM"],"content":null,"date":1443101820,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443101820,"objectID":"35dc0b8b8c57a8f2353646a46b983008","permalink":"https://111qqz.github.io/2015/09/poj3320jessicasreadingproblem/","publishdate":"2015-09-24T13:37:00Z","readingtime":3,"relpermalink":"/2015/09/poj3320jessicasreadingproblem/","section":"post","summary":"Jessica\u0026rsquo;s Reading Problem Description Jessica\u0026rsquo;s a very lovely girl wooed by lots of boys. Recently she has a problem. The final exam is coming, yet she has spent little time on it. If she wants to pass it, she has to master all ideas included in a very thick text book. The author of that text book, like other authors, is extremely fussy about the ideas, thus some ideas are","tags":["尺取法"],"title":"poj 3320 Jessica's Reading Problem (尺取法)","type":"post","url":"/2015/09/poj3320jessicasreadingproblem/","weight":0,"wordcount":1160},{"author":null,"categories":["ACM"],"content":null,"date":1443092520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443092520,"objectID":"cae6f12ff80170b392d83a61f51327a5","permalink":"https://111qqz.github.io/2015/09/","publishdate":"2015-09-24T11:02:00Z","readingtime":0,"relpermalink":"/2015/09/","section":"post","summary":"","tags":null,"title":"迟取法","type":"post","url":"/2015/09//","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1443007980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1443007980,"objectID":"032daa97c5a157b4855970f021304485","permalink":"https://111qqz.github.io/2015/09/poj2159/","publishdate":"2015-09-23T11:33:00Z","readingtime":1,"relpermalink":"/2015/09/poj2159/","section":"post","summary":"由于顺序是可以改变的． 所以考虑是否可以映射．只要存在字母对应出现的次数都相同．那么就可以通过映射得到． 具体是开一个数组记录每个字母出现的次数","tags":["水题"],"title":"poj 2159 Ancient Cipher(水)","type":"post","url":"/2015/09/poj2159/","weight":0,"wordcount":291},{"author":null,"categories":["ACM"],"content":null,"date":1442926020,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442926020,"objectID":"bc3412e141b37bdc8c8128b81ff346b5","permalink":"https://111qqz.github.io/2015/09/hdu1849/","publishdate":"2015-09-22T12:47:00Z","readingtime":3,"relpermalink":"/2015/09/hdu1849/","section":"post","summary":"Rabbit and Grass **Time Limit: 1000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 3058 Accepted Submission(s): 2261 ** Problem Description 大学时光是浪漫的，女生是浪漫的，圣诞更是浪漫的，但是Rabbit和Grass这两个大学女生在今年","tags":["nim游戏","sg函数","博弈论"],"title":"hdu 1849Rabbit and Grass(一维nim游戏,sg函数)","type":"post","url":"/2015/09/hdu1849/","weight":0,"wordcount":1205},{"author":null,"categories":["ACM"],"content":null,"date":1442924760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442924760,"objectID":"119a4932fe92372a81201993c5715d39","permalink":"https://111qqz.github.io/2015/09/hdu2149/","publishdate":"2015-09-22T12:26:00Z","readingtime":1,"relpermalink":"/2015/09/hdu2149/","section":"post","summary":"hdu 2149题目链接 题意＆思路：巴什博奕，点m是n点。。。然后往前画即可。。。 /************************************************************************* \u0026gt; File Name: code/hdu/2149.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年09月22日 星期二 20时1","tags":["博弈论","巴什博奕"],"title":"hdu 2149Public Sale(博弈论　巴什博奕)","type":"post","url":"/2015/09/hdu2149/","weight":0,"wordcount":179},{"author":null,"categories":["ACM"],"content":null,"date":1442924040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442924040,"objectID":"20d430e0bee92090a7b7e6720a9c15b7","permalink":"https://111qqz.github.io/2015/09/hdu2188/","publishdate":"2015-09-22T12:14:00Z","readingtime":1,"relpermalink":"/2015/09/hdu2188/","section":"post","summary":"题目链接：hdu 2188题目链接 题意＆思路：巴什博奕。。画n点p点。。。 /************************************************************************* \u0026gt; File Name: code/hdu/2188.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年09月22日 星期二 20时08分","tags":["博弈论","巴什博奕"],"title":"hdu 2188 悼念512汶川大地震遇难同胞——选拔志愿者 (巴什博奕)","type":"post","url":"/2015/09/hdu2188/","weight":0,"wordcount":162},{"author":null,"categories":["ACM"],"content":null,"date":1442918880,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":4600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442918880,"objectID":"6787680ea07b6573d14cb35e4229fc22","permalink":"https://111qqz.github.io/2015/09/acm/","publishdate":"2015-09-22T10:48:00Z","readingtime":10,"relpermalink":"/2015/09/acm/","section":"post","summary":"**序：**博弈是信息学和数学试题中常会出现的一种类型，算法灵活多变是其最大特点，而其中有一类试题更是完全无法用常见的博弈树来进行解答。 寻找","tags":null,"title":"acm博弈论","type":"post","url":"/2015/09/acm/","weight":0,"wordcount":4518},{"author":null,"categories":["ACM"],"content":null,"date":1442911740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442911740,"objectID":"8194f2fee51d8a37c2ec47104d513869","permalink":"https://111qqz.github.io/2015/09/uva1587/","publishdate":"2015-09-22T08:49:00Z","readingtime":1,"relpermalink":"/2015/09/uva1587/","section":"post","summary":"给６个矩形的长和宽（或者宽和长），问这六个矩形能否组成一个长方体． 思路比较简单，不过需要注意的地方有点多． 首先由于长和宽的顺序为止，所以要处","tags":null,"title":"uva 1587 Box（思路）","type":"post","url":"/2015/09/uva1587/","weight":0,"wordcount":460},{"author":null,"categories":["ACM"],"content":null,"date":1442892720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442892720,"objectID":"b3422afedd57c15f709c989c2964a112","permalink":"https://111qqz.github.io/2015/09/bestcoder56div2cclarkeandpuzzlenim/","publishdate":"2015-09-22T03:32:00Z","readingtime":1,"relpermalink":"/2015/09/bestcoder56div2cclarkeandpuzzlenim/","section":"post","summary":"比赛的时候没过．还以为是树状数组写残了． 但实际上是有自己不知道的东西． 这种博弈叫 nim游戏 所以这是一个二维的nim游戏． **nim游戏的性质","tags":["nim游戏","博弈论","树状数组"],"title":"bestcoder #56 div 2 C Clarke and puzzle (nim游戏　树状数组)","type":"post","url":"/2015/09/bestcoder56div2cclarkeandpuzzlenim/","weight":0,"wordcount":423},{"author":null,"categories":["ACM"],"content":null,"date":1442891160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442891160,"objectID":"63037f2bd8a0d5ee7a917550fb105997","permalink":"https://111qqz.github.io/2015/09/nim/","publishdate":"2015-09-22T03:06:00Z","readingtime":2,"relpermalink":"/2015/09/nim/","section":"post","summary":"假设有n堆石子，每堆石子的个数分别如下 a1, a2, a3, \u0026hellip; an 定义nim-sum为a1^a2^a3\u0026hellip;an 可以证明 1. 若a1^a2^a3\u0026hel","tags":null,"title":"nim遊戲的必勝策略（博弈論）","type":"post","url":"/2015/09/nim/","weight":0,"wordcount":740},{"author":null,"categories":["ACM"],"content":null,"date":1442890920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442890920,"objectID":"476b45d7991c6cac68eea3f1446d1196","permalink":"https://111qqz.github.io/2015/09/bestcoder56div2bclarkeandproblemdp/","publishdate":"2015-09-22T03:02:00Z","readingtime":1,"relpermalink":"/2015/09/bestcoder56div2bclarkeandproblemdp/","section":"post","summary":"果然dp還是弱項啊啊啊啊．． 不過比最開始的完全無從下手強了不少應該．．． 至少dp狀態表示相對了．．．．轉移方程沒想出來嗚嗚嗚 官方題解：设d(","tags":["dp"],"title":"bestcoder #56 div 2 B Clarke and problem(dp)","type":"post","url":"/2015/09/bestcoder56div2bclarkeandproblemdp/","weight":0,"wordcount":406},{"author":null,"categories":["ACM"],"content":null,"date":1442889540,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442889540,"objectID":"70550e1347dd439a6a63d91ca3697ed1","permalink":"https://111qqz.github.io/2015/09/bestcoder56div2aclarkeandminecraft/","publishdate":"2015-09-22T02:39:00Z","readingtime":1,"relpermalink":"/2015/09/bestcoder56div2aclarkeandminecraft/","section":"post","summary":"贪心．．尽量把一样的材料放在一起．．． 然后写蠢了．．妈蛋．．． 详情见代码 /************************************************************************* \u0026gt; File Name: code/bc/#56/1001.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年09月19日 星期六 18时55分","tags":["greedy"],"title":"best coder #56 div 2 A　Clarke and minecraft（贪心）","type":"post","url":"/2015/09/bestcoder56div2aclarkeandminecraft/","weight":0,"wordcount":254},{"author":null,"categories":["ACM"],"content":null,"date":1442590080,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442590080,"objectID":"5df9ad622466e656858366bb2dff0544","permalink":"https://111qqz.github.io/2015/09/codeforces320div2a-raisingbacteria/","publishdate":"2015-09-18T15:28:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces320div2a-raisingbacteria/","section":"post","summary":"x的二进制表示中1的个数即为答案． 原因是，每天晚上糖果数量翻倍，相当于左移１位,这时候二进制表示中1的数量不变 也就是说，二进制表示中的所有的","tags":["位运算"],"title":"codeforces #320 div 2A - Raising Bacteria (位运算）","type":"post","url":"/2015/09/codeforces320div2a-raisingbacteria/","weight":0,"wordcount":243},{"author":null,"categories":["ACM"],"content":null,"date":1442585760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442585760,"objectID":"68a4a09083fb5c7df6a2deff372b8b5a","permalink":"https://111qqz.github.io/2015/09/codeforces319div2ec-pointsonplane/","publishdate":"2015-09-18T14:16:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces319div2ec-pointsonplane/","section":"post","summary":"初识分快. 引一段题解： Let\u0026rsquo;s split rectangle 106 × 106 by vertical lines into 1000 rectangles 103 × 106. Let\u0026rsquo;s number them from left to right. We\u0026rsquo;re going to pass through points rectangle by rectangle. Inside the rectangle we\u0026rsquo;re going to pass the points in increasing order of y-coordinate if the number of rectangle is even and in decreasing if it\u0026rsquo;s odd. Let\u0026rsquo;s","tags":["分块"],"title":"codeforces #319 div 2 E C. Points on Plane (分块)","type":"post","url":"/2015/09/codeforces319div2ec-pointsonplane/","weight":0,"wordcount":413},{"author":null,"categories":["ACM"],"content":null,"date":1442580360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442580360,"objectID":"289ec0063f910d2cceab38e8b632ab4a","permalink":"https://111qqz.github.io/2015/09/codeforces319c-vasyaandpetyasgame/","publishdate":"2015-09-18T12:46:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces319c-vasyaandpetyasgame/","section":"post","summary":"因为每一个正整数可以唯一分解质因数\u0026hellip; 要看能猜多少次，只要知道不大于n的质因子数有多少个即可（相同的算多 由于n才是１０００．所以","tags":["math"],"title":"codeforces #319 C - Vasya and Petya's Game  (数学)","type":"post","url":"/2015/09/codeforces319c-vasyaandpetyasgame/","weight":0,"wordcount":327},{"author":null,"categories":["ACM"],"content":null,"date":1442373840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442373840,"objectID":"c2c1e5a7a522a3d508414cc7f8e88829","permalink":"https://111qqz.github.io/2015/09/codeforces319b-modulosumdp/","publishdate":"2015-09-16T03:24:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces319b-modulosumdp/","section":"post","summary":"背包还是理解的不够透彻．． 因为每次都是用那个一维形式的． 这道题的做法类似01背包. 此外还可以有一个优化\u0026hellip; 当n\u0026gt;m的时候．","tags":["01背包","dp","抽屉原理"],"title":"codeforces #319 B - Modulo Sum (抽屉原理，dp)","type":"post","url":"/2015/09/codeforces319b-modulosumdp/","weight":0,"wordcount":354},{"author":null,"categories":["ACM"],"content":null,"date":1442317140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442317140,"objectID":"0de4ce7fa39cc6036968b8d505457701","permalink":"https://111qqz.github.io/2015/09/uva1584circularsequence/","publishdate":"2015-09-15T11:39:00Z","readingtime":0,"relpermalink":"/2015/09/uva1584circularsequence/","section":"post","summary":"","tags":null,"title":"uva 1584  Circular Sequence (字符串处理)","type":"post","url":"/2015/09/uva1584circularsequence/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1442309280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442309280,"objectID":"227c6a4b2a468780b1891a016252b4f7","permalink":"https://111qqz.github.io/2015/09/uva1583b-digitgenerator/","publishdate":"2015-09-15T09:28:00Z","readingtime":0,"relpermalink":"/2015/09/uva1583b-digitgenerator/","section":"post","summary":"","tags":null,"title":"uva 1583 B - Digit Generator　(暴力)","type":"post","url":"/2015/09/uva1583b-digitgenerator/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1442309100,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442309100,"objectID":"ef18ddf6dfa12864082e9a32cf34838f","permalink":"https://111qqz.github.io/2015/09/uva340a-master-mindhints/","publishdate":"2015-09-15T09:25:00Z","readingtime":0,"relpermalink":"/2015/09/uva340a-master-mindhints/","section":"post","summary":"","tags":null,"title":"uva 340 A - Master-Mind Hints (暴力)","type":"post","url":"/2015/09/uva340a-master-mindhints/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1442233320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1442233320,"objectID":"998f82527ec3e3384ce5413d2a6656e3","permalink":"https://111qqz.github.io/2015/09/codeforces519aa-multiplicationtable/","publishdate":"2015-09-14T12:22:00Z","readingtime":1,"relpermalink":"/2015/09/codeforces519aa-multiplicationtable/","section":"post","summary":"A. Multiplication Table time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Let\u0026rsquo;s consider a table consisting of n rows and n columns. The cell located at the intersection of i-th row and j-th column contains number i × j. The rows and columns are numbered starting from 1. You are given a positive integer x. Your task is to count","tags":null,"title":"codeforces #519 A  A. Multiplication Table (暴力)","type":"post","url":"/2015/09/codeforces519aa-multiplicationtable/","weight":0,"wordcount":466},{"author":null,"categories":["ACM"],"content":null,"date":1441457640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1441457640,"objectID":"9a7329c087c6b03d7dfefbabe96489e9","permalink":"https://111qqz.github.io/2015/09/bc54aproblemofsorting/","publishdate":"2015-09-05T12:54:00Z","readingtime":0,"relpermalink":"/2015/09/bc54aproblemofsorting/","section":"post","summary":"","tags":null,"title":"bc #54  A problem of sorting","type":"post","url":"/2015/09/bc54aproblemofsorting/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1441207800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1441207800,"objectID":"bc3c681714658b660d6485ba710d95ab","permalink":"https://111qqz.github.io/2015/09/2015/","publishdate":"2015-09-02T15:30:00Z","readingtime":3,"relpermalink":"/2015/09/2015/","section":"post","summary":"其实不应该在博客上写这种心情流的东西。。。。。。 显得好矫情啊。。。。。 心里好烦。。。。 妈蛋。。。。 到底要怎么办怎么办怎么办 从来都处理不好感情","tags":null,"title":"心情流+2015暑假总结？+期望？","type":"post","url":"/2015/09/2015/","weight":0,"wordcount":1156},{"author":null,"categories":["ACM"],"content":null,"date":1440346800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440346800,"objectID":"a4da33da3f190302d07538add8ee03b4","permalink":"https://111qqz.github.io/2015/08/vimrc/","publishdate":"2015-08-23T16:20:00Z","readingtime":8,"relpermalink":"/2015/08/vimrc/","section":"post","summary":"map \u0026lt;F9\u0026gt; :call SaveInputData()\u0026lt;CR\u0026gt; func! SaveInputData() exec \u0026quot;tabnew\u0026quot; exec 'normal \u0026quot;+gP' exec \u0026quot;w! code/in.txt\u0026quot; endfunc \u0026quot;colorscheme torte \u0026quot; colorscheme murphy colorscheme elflord \u0026quot; colorscheme molokai \u0026quot;colorscheme elisex \u0026quot;colorscheme colorer \u0026quot;colorscheme blacklight \u0026quot;colorscheme blue \u0026quot;colorscheme darkblue \u0026quot;colorscheme evening \u0026quot;colorscheme shine \u0026quot;set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936 \u0026quot;set termencoding=utf-8 \u0026quot;set encoding=utf-8 \u0026quot;set fileencodings=ucs-bom,utf-8,cp936 \u0026quot;set fileencoding=utf-8 \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot; 显示相关 \u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot;\u0026quot; \u0026quot;set shortmess=atI \u0026quot; 启动的时候不显示那个援","tags":null,"title":"vimrc备份","type":"post","url":"/2015/08/vimrc/","weight":0,"wordcount":3860},{"author":null,"categories":["ACM"],"content":null,"date":1440317580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440317580,"objectID":"dcdab2cda551797eb306ca32fcb52497","permalink":"https://111qqz.github.io/2015/08/codeforces317div2b-orderbook/","publishdate":"2015-08-23T08:13:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces317div2b-orderbook/","section":"post","summary":"B. Order Book time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output In this task you need to process a set of stock exchange orders and use them to create order book. An order is an instruction of some participant to buy or sell stocks on stock exchange. The order number i has price p__i, direction d__i \u0026ndash; buy or sell,","tags":["模拟"],"title":"codeforces # 317 div 2 B. Order Book（模拟）","type":"post","url":"/2015/08/codeforces317div2b-orderbook/","weight":0,"wordcount":934},{"author":null,"categories":["ACM"],"content":null,"date":1440317160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440317160,"objectID":"087dec2b0827c2115e3aacee9fd99842","permalink":"https://111qqz.github.io/2015/08/codeforces317div2a-arrays/","publishdate":"2015-08-23T08:06:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces317div2a-arrays/","section":"post","summary":"应该３分钟过的题。。。 结果花了８分钟。。。ssssad /************************************************************************* \u0026gt; File Name: code/cf/#317/A.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月23日 星期日 00时29分47秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt;","tags":["水题"],"title":"codeforces #317 div2 A. Arrays (水)","type":"post","url":"/2015/08/codeforces317div2a-arrays/","weight":0,"wordcount":172},{"author":null,"categories":["ACM"],"content":null,"date":1440256740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440256740,"objectID":"6cc51594c0058e0f8bac21a2606b3665","permalink":"https://111qqz.github.io/2015/08/hdoj5417/","publishdate":"2015-08-22T15:19:00Z","readingtime":1,"relpermalink":"/2015/08/hdoj5417/","section":"post","summary":"傻逼模拟题 我做了半小时\u0026hellip;. sssssad /************************************************************************* \u0026gt; File Name: code/bc/#52/1001.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月22日 星期六 18时51分44秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt;","tags":["模拟"],"title":"bc #52 div 2 A ||hdoj5417 Victor and Machine (模拟)","type":"post","url":"/2015/08/hdoj5417/","weight":0,"wordcount":208},{"author":null,"categories":["ACM"],"content":null,"date":1440256140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440256140,"objectID":"728889675e3cf7ec1473f332064479cc","permalink":"https://111qqz.github.io/2015/08/hdoj5418/","publishdate":"2015-08-22T15:09:00Z","readingtime":2,"relpermalink":"/2015/08/hdoj5418/","section":"post","summary":"比赛的时候一看,tsp么 前些天好像刚写过一个clean robot什么的 然后发现n才16,而m很大.. 应该有很多重复的. 那么我们取油费最少的.","tags":["tsp","状压dp"],"title":"bc #52 div 2 B || hdoj 5418 Victor and World(tsp问题,状压dp)","type":"post","url":"/2015/08/hdoj5418/","weight":0,"wordcount":590},{"author":null,"categories":null,"content":null,"date":1440256140,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1440256140,"objectID":"","permalink":"https://111qqz.github.io/tags/tsp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/tsp/","section":"tags","summary":"","tags":null,"title":"tsp","type":"tags","url":"/tags/tsp/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1440256140,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1440256140,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%8A%B6%E5%8E%8Bdp/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%8A%B6%E5%8E%8Bdp/","section":"tags","summary":"","tags":null,"title":"状压dp","type":"tags","url":"/tags/%E7%8A%B6%E5%8E%8Bdp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1440240060,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440240060,"objectID":"826adc92a3aea2d251a262e6a88be284","permalink":"https://111qqz.github.io/2015/08/acmoj/","publishdate":"2015-08-22T10:41:00Z","readingtime":1,"relpermalink":"/2015/08/acmoj/","section":"post","summary":"int main() { int a,b; #ifndef ONLINE_JUDGE freopen(\u0026quot;in.txt\u0026quot;,\u0026quot;r\u0026quot;,stdin); #endif // int a,b; while (scanf(\u0026quot;%d%d\u0026quot;,\u0026amp;a,\u0026amp;b)!=EOF){ cout\u0026lt;\u0026lt;a+b\u0026lt;\u0026lt;endl; } #ifndef ONLINE_JUDGE fclose(stdin); #endif return 0; } 这样写比较爽 交OJ什么都不用改 ，妈妈再也不用担心我累死在输入样例＆调试上了。。。","tags":null,"title":"acm输出输出技巧（提交oj不需要改变）","type":"post","url":"/2015/08/acmoj/","weight":0,"wordcount":63},{"author":null,"categories":["ACM"],"content":null,"date":1440238380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":6500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440238380,"objectID":"7b7ce44d265a53e79dfd8f0a52a1b55c","permalink":"https://111qqz.github.io/2015/08/acm/","publishdate":"2015-08-22T10:13:00Z","readingtime":13,"relpermalink":"/2015/08/acm/","section":"post","summary":"关于ACM的输入输出（一） 写给第一次参加现场赛的同学们 一般来说ACM的现场赛会规定输入输出 或者是文件输入标准输出 也可能是文件输入文件输出 如果","tags":null,"title":"关于ACM的输入输出（一）","type":"post","url":"/2015/08/acm/","weight":0,"wordcount":6451},{"author":null,"categories":["ACM"],"content":null,"date":1440225780,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440225780,"objectID":"14df7735eadee2f2fb77e525fad2af6f","permalink":"https://111qqz.github.io/2015/08/poj2909/","publishdate":"2015-08-22T06:43:00Z","readingtime":1,"relpermalink":"/2015/08/poj2909/","section":"post","summary":"水题 写一遍的目的是。。。复习一下快速筛的写法 喵呜 /************************************************************************* \u0026gt; File Name: code/poj/2909.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月22日 星期六 14时25分34秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt;","tags":["number theory","快速筛"],"title":"poj 2909 Goldbach's Conjecture （哥德巴赫猜想）","type":"post","url":"/2015/08/poj2909/","weight":0,"wordcount":209},{"author":null,"categories":null,"content":null,"date":1440225780,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1440225780,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%BF%AB%E9%80%9F%E7%AD%9B/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%BF%AB%E9%80%9F%E7%AD%9B/","section":"tags","summary":"","tags":null,"title":"快速筛","type":"tags","url":"/tags/%E5%BF%AB%E9%80%9F%E7%AD%9B/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1440224280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440224280,"objectID":"1588523c2ad0eca390f7f5ad84761f2f","permalink":"https://111qqz.github.io/2015/08/poj1305/","publishdate":"2015-08-22T06:18:00Z","readingtime":2,"relpermalink":"/2015/08/poj1305/","section":"post","summary":"题意是说，能构造多少本元勾股数和勾股数，要求构造的数\u0026lt;=n 所谓本元勾股数，就是三个勾股数没有公因数，两两互质。 由本元勾股数扩大k倍，就","tags":["number theory","构造"],"title":"poj 1305 (毕达哥拉斯三元组，构造勾股数)","type":"post","url":"/2015/08/poj1305/","weight":0,"wordcount":977},{"author":null,"categories":["ACM"],"content":null,"date":1440199620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440199620,"objectID":"653e498b6d34722b168c9032738eb22f","permalink":"https://111qqz.github.io/2015/08/poj/","publishdate":"2015-08-21T23:27:00Z","readingtime":5,"relpermalink":"/2015/08/poj/","section":"post","summary":"转载自：http://www.cnblogs.com/vongang/archive/2013/03/10/2952978.html POJ【","tags":null,"title":"POJ【数论/组合/博弈论】题目列表","type":"post","url":"/2015/08/poj/","weight":0,"wordcount":2141},{"author":null,"categories":["ACM"],"content":null,"date":1440135360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440135360,"objectID":"2ad7b47468c156c498514ce792517aa7","permalink":"https://111qqz.github.io/2015/08/poj3370halloweentreats/","publishdate":"2015-08-21T05:36:00Z","readingtime":2,"relpermalink":"/2015/08/poj3370halloweentreats/","section":"post","summary":"昨天那道签到的数学题没搞出来不开心. 是时候刷一波数学了 这题题意是说,从n个数中任选m个,使得m个的和为c的倍数. 如果有解,输出选的数的下标,","tags":["number theory","剩余系","抽屉原理"],"title":"poj 3370 Halloween treats (剩余类,抽屉原理)","type":"post","url":"/2015/08/poj3370halloweentreats/","weight":0,"wordcount":796},{"author":null,"categories":["ACM"],"content":null,"date":1440100620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440100620,"objectID":"fb75750f8a6101ae0b4cc7f4fc0bd465","permalink":"https://111qqz.github.io/2015/08/poj3846/","publishdate":"2015-08-20T19:57:00Z","readingtime":2,"relpermalink":"/2015/08/poj3846/","section":"post","summary":"比赛的时候以为是贪心\u0026hellip; 想了好久. 不过最后没敢写,因为没办法证明正确性,只是直觉== 最后剩下的时间给队友改另一道题了.. 果然明智","tags":["dp"],"title":"HUST team contest #E A Mountain Road||poj 3846 (dp)","type":"post","url":"/2015/08/poj3846/","weight":0,"wordcount":771},{"author":null,"categories":["ACM"],"content":null,"date":1440100080,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440100080,"objectID":"4409290dcf4452bb29c0ba9fe87a9950","permalink":"https://111qqz.github.io/2015/08/0x3f3f3f3f-/","publishdate":"2015-08-20T19:48:00Z","readingtime":3,"relpermalink":"/2015/08/0x3f3f3f3f-/","section":"post","summary":"如果问题中各数据的范围明确，那么无穷大的设定不是问题，在不明确的情况下，很多程序员都取0x7fffffff作为无穷大，因为这是32-bit i","tags":null,"title":"0x3f3f3f3f...编程中无穷大常量的设置技巧","type":"post","url":"/2015/08/0x3f3f3f3f-/","weight":0,"wordcount":1371},{"author":null,"categories":["ACM"],"content":null,"date":1440090660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440090660,"objectID":"5e77d53e31ff011a921143f6a34f8efe","permalink":"https://111qqz.github.io/2015/08/poj3844/","publishdate":"2015-08-20T17:11:00Z","readingtime":2,"relpermalink":"/2015/08/poj3844/","section":"post","summary":"算是签到帖，竟然卡住了。 我数学还是太差了。。 然后去找题解。。竟然看不懂！ 我数学真的有这么差嘛。。。 然后多亏了队友 @zcy 妹子的讲解。。 其实很好理解","tags":["抽屉原理","组合数学"],"title":"HUST team contest #2 C Divisible Subsequences ||poj 3844 (剩余类)","type":"post","url":"/2015/08/poj3844/","weight":0,"wordcount":624},{"author":null,"categories":["ACM"],"content":null,"date":1440084480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440084480,"objectID":"1be66f2dba9f2475a336e6c0255d4e62","permalink":"https://111qqz.github.io/2015/08/poj3842/","publishdate":"2015-08-20T15:28:00Z","readingtime":2,"relpermalink":"/2015/08/poj3842/","section":"post","summary":"蠢了。 这道题显然可以搜。。 然后自己搜索的姿势果然还是不怎么地。。 最后是蔡大神过掉的。 他的思路是枚举素数，然后把素数的各位拆开，看这些数字是否","tags":["brute force","快速筛"],"title":"HUST team contest #2 A An Industrial Spy ||poj 3842 (筛)","type":"post","url":"/2015/08/poj3842/","weight":0,"wordcount":843},{"author":null,"categories":["ACM"],"content":null,"date":1440083820,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440083820,"objectID":"a07cfb18eba4f33e12fd650b679c55f7","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-20T15:17:00Z","readingtime":3,"relpermalink":"/2015/08/","section":"post","summary":"TAG 素数 数论 素数总是一个比较常涉及到的内容，掌握求素数的方法是一项基本功。 基本原则就是题目如果只需要判断少量数字是否为素数，直接枚举因子2 。。","tags":null,"title":"筛法求素数（转载）","type":"post","url":"/2015/08//","weight":0,"wordcount":1462},{"author":null,"categories":["ACM"],"content":null,"date":1440076740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1440076740,"objectID":"87704b8ff31f1bb25b9bf0868cf47f6d","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-20T13:19:00Z","readingtime":1,"relpermalink":"/2015/08/","section":"post","summary":"。","tags":null,"title":".虚","type":"post","url":"/2015/08//","weight":0,"wordcount":1},{"author":null,"categories":["ACM"],"content":null,"date":1439897760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439897760,"objectID":"bd059c2629439263464ebc038e68576b","permalink":"https://111qqz.github.io/2015/08/codeforces560e-geraldandgiantchessdplucasmodpp/","publishdate":"2015-08-18T11:36:00Z","readingtime":3,"relpermalink":"/2015/08/codeforces560e-geraldandgiantchessdplucasmodpp/","section":"post","summary":"dp方程想错了.果然还是欠练啊. 如果我们不考虑坏点,那么从 (0,0)到(x,y)的方案数是c(x+y,x)或者c(x+y,y) 因为有坏点的存","tags":["dp","lucas定理","计数问题"],"title":"codeforces 560 E. Gerald and Giant Chess (dp+lucas定理,求大组合数 mod p,p为质数)","type":"post","url":"/2015/08/codeforces560e-geraldandgiantchessdplucasmodpp/","weight":0,"wordcount":1423},{"author":null,"categories":["ACM"],"content":null,"date":1439774640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439774640,"objectID":"014b27f988892acea874e352caac68b9","permalink":"https://111qqz.github.io/2015/08/codeforces560d-equivalentstrings/","publishdate":"2015-08-17T01:24:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces560d-equivalentstrings/","section":"post","summary":"问两个长度相同的字符串是否等价． 相等的条件是，两个字符串相等，或者两个偶数长度（因为要分成长度相同的两段，所以一定是偶数长度才可分）字符串平","tags":["分治"],"title":"codeforces 560 D. Equivalent Strings(分治)","type":"post","url":"/2015/08/codeforces560d-equivalentstrings/","weight":0,"wordcount":378},{"author":null,"categories":["ACM"],"content":null,"date":1439767680,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439767680,"objectID":"9e3b24c7e8ebfa6ebef4bfacecb8af59","permalink":"https://111qqz.github.io/2015/08/codeforces560c-geraldshexagon/","publishdate":"2015-08-16T23:28:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces560c-geraldshexagon/","section":"post","summary":"题意：给定一个六边形的六条边的长，问能分割成多少个单位正三角形． 分割不好办，那我们就反着来，先补成一个包含这个六边形的正三角形． 对于边长为a","tags":["思维题","计算几何"],"title":"codeforces 560 C. Gerald's Hexagon (思维，几何)","type":"post","url":"/2015/08/codeforces560c-geraldshexagon/","weight":0,"wordcount":395},{"author":null,"categories":["ACM"],"content":null,"date":1439765580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439765580,"objectID":"fb9041c82fd9e32994bd27cf471f7b0d","permalink":"https://111qqz.github.io/2015/08/codeforces560b-geraldisintoart/","publishdate":"2015-08-16T22:53:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces560b-geraldisintoart/","section":"post","summary":"/************************************************************************* \u0026gt; File Name: code/cf/#313/B.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: Wed 22 Jul 2015 09:52:54 PM CST ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;stack\u0026gt; #define y0 abc111qqz #define y1 hust111qqz #define yn hez111qqz #define j1 cute111qqz #define tm crazy111qqz #define lr dying111qqz using namespace std; #define REP(i, n) for (int i=0;i\u0026lt;int(n);++i) typedef long long LL; typedef unsigned long long ULL;","tags":["模拟"],"title":"codeforces 560 B. Gerald is into Art　（模拟）","type":"post","url":"/2015/08/codeforces560b-geraldisintoart/","weight":0,"wordcount":107},{"author":null,"categories":["ACM"],"content":null,"date":1439757240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439757240,"objectID":"7198701e8fcead0f1606eca7912b5590","permalink":"https://111qqz.github.io/2015/08/codeforces520b-twobuttonsbfs/","publishdate":"2015-08-16T20:34:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces520b-twobuttonsbfs/","section":"post","summary":"做过一道类似的题 因为是问最短，很容易想到是bfs 对于点x，可以到达点x-1,和点2*x 需要注意的是上界限。 并不是max(m,n) 因为可能先达","tags":["bfs"],"title":"codeforces 520 B. Two Buttons  (bfs)","type":"post","url":"/2015/08/codeforces520b-twobuttonsbfs/","weight":0,"wordcount":276},{"author":null,"categories":["ACM"],"content":null,"date":1439756100,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439756100,"objectID":"36867203f600588210d3f9ec2ea5d17d","permalink":"https://111qqz.github.io/2015/08/codeforces520a-pangram/","publishdate":"2015-08-16T20:15:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces520a-pangram/","section":"post","summary":"给一个字符串，问这个字符串中是否26个字母都出现过（大小写只出现一个就算出现过） 开个布尔数组，扫一遍即可。 嘛，做两道水题放松下== 反正也是要","tags":["brute force"],"title":"codeforces 520 A. Pangram (暴力)","type":"post","url":"/2015/08/codeforces520a-pangram/","weight":0,"wordcount":229},{"author":null,"categories":["ACM"],"content":null,"date":1439753580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439753580,"objectID":"ac397f690f909e334970b5f66c438fd5","permalink":"https://111qqz.github.io/2015/08/csdn/","publishdate":"2015-08-16T19:33:00Z","readingtime":1,"relpermalink":"/2015/08/csdn/","section":"post","summary":"将博客搬至CSDN","tags":null,"title":"将博客搬至CSDN","type":"post","url":"/2015/08/csdn/","weight":0,"wordcount":9},{"author":null,"categories":["ACM"],"content":null,"date":1439753160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439753160,"objectID":"68cc4e75631d25546e0f93f96f0d186d","permalink":"https://111qqz.github.io/2015/08/codeforces567epresidentandroadstarjan/","publishdate":"2015-08-16T19:26:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces567epresidentandroadstarjan/","section":"post","summary":"题意是说，给定一个有向图，对于每一条边，问是否是s到t的最短路上一定会经过的边． 如果是就输出yes 如果不是，问能否通过减少这条边的权值（减少","tags":["dijkstra","stl","Tarjan"],"title":"codeforces 567 E President and Roads (优先队列＋迪杰斯特拉＋tarjan)","type":"post","url":"/2015/08/codeforces567epresidentandroadstarjan/","weight":0,"wordcount":636},{"author":null,"categories":["ACM"],"content":null,"date":1439708940,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439708940,"objectID":"945dfefb602daee46f88b7d0f5782694","permalink":"https://111qqz.github.io/2015/08/codeforces567f/","publishdate":"2015-08-16T07:09:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces567f/","section":"post","summary":"很容易看出来是dp 我们左右一起，一对一对放． 对于每一对，有三种方法，分别是两左，一左一右，两右． 初始区间长度为２n，每次放完后缩小区间长度 ，","tags":["dp"],"title":"codeforces 567 F. Mausoleum (dp)","type":"post","url":"/2015/08/codeforces567f/","weight":0,"wordcount":643},{"author":null,"categories":["ACM"],"content":null,"date":1439703900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439703900,"objectID":"6e94454df40aab3c6f00e2220c378438","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-16T05:45:00Z","readingtime":1,"relpermalink":"/2015/08/","section":"post","summary":"基础的搜索BFS和DFS,自己找题切吧\u0026hellip; 高级搜索的题集就在下面,自己看着办吧\u0026hellip; **努力爆搜,努力剪枝吧~~~**","tags":null,"title":"高级搜索专题","type":"post","url":"/2015/08//","weight":0,"wordcount":299},{"author":null,"categories":["ACM"],"content":null,"date":1439669760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439669760,"objectID":"b821e372682eced7a6a203783737bbc5","permalink":"https://111qqz.github.io/2015/08/poj2688/","publishdate":"2015-08-15T20:16:00Z","readingtime":1,"relpermalink":"/2015/08/poj2688/","section":"post","summary":"＿＿＿＿＿＿ 好蠢，竟然没看出来这道题的不同之处，以为就是个搜 然后样例什么的都过了．．． 结果显然wa\u0026hellip; 然后才发现，这道题应该是t","tags":["bfs","dfs","tsp"],"title":"poj 2688 Cleaning Robot (tsp问题)","type":"post","url":"/2015/08/poj2688/","weight":0,"wordcount":432},{"author":null,"categories":["ACM"],"content":null,"date":1439658120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439658120,"objectID":"0d71f94f4d91209188adad4b1883fb8c","permalink":"https://111qqz.github.io/2015/08/codeforces314/","publishdate":"2015-08-15T17:02:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces314/","section":"post","summary":"比赛的时候没搞出来，really sad. 其实这题很容易啊．．．． 首先，对于lie 的判断应该基于能放的船的个数． 能放的船的个数是随着射的点数的增加而","tags":["模拟"],"title":"codeforces 314 D   One-Dimensional Battle Ships (模拟)","type":"post","url":"/2015/08/codeforces314/","weight":0,"wordcount":767},{"author":null,"categories":null,"content":null,"date":1439622600,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1439622600,"objectID":"","permalink":"https://111qqz.github.io/tags/2-sat/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/2-sat/","section":"tags","summary":"","tags":null,"title":"2-sat","type":"tags","url":"/tags/2-sat/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439622600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439622600,"objectID":"3d8dc96565376bd40ef2913f1d97cdf4","permalink":"https://111qqz.github.io/2015/08/codeforces569e/","publishdate":"2015-08-15T07:10:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces569e/","section":"post","summary":"/************************************************************************* \u0026gt; File Name: code/cf/#315/E.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月15日 星期六 13时48分36秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;stack\u0026gt; #define y0 abc111qqz #define y1 hust111qqz #define yn hez111qqz #define j1 cute111qqz #define tm crazy111qqz #define lr dying111qqz using namespace","tags":["2-sat"],"title":"codeforces 569 E. New Language (2-sat)","type":"post","url":"/2015/08/codeforces569e/","weight":0,"wordcount":910},{"author":null,"categories":["ACM"],"content":null,"date":1439614740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439614740,"objectID":"25a3520a3dc4480cc27dcb6b946d2460","permalink":"https://111qqz.github.io/2015/08/2-satkuangbin/","publishdate":"2015-08-15T04:59:00Z","readingtime":5,"relpermalink":"/2015/08/2-satkuangbin/","section":"post","summary":"【2-SAT问题】 现有一个由N个布尔值组成的序列A，给出一些限制关系，比如A[x] AND A[y]=0、A[x] OR A[y] OR A[z]=1等，要确定A[0","tags":null,"title":"【2-SAT问题】（转自kuangbin的博客）","type":"post","url":"/2015/08/2-satkuangbin/","weight":0,"wordcount":2359},{"author":null,"categories":["ACM"],"content":null,"date":1439590800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439590800,"objectID":"babaa84945c0413776aa42b1ff55350c","permalink":"https://111qqz.github.io/2015/08/codeforces569d/","publishdate":"2015-08-14T22:20:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces569d/","section":"post","summary":"D. Symmetric and Transitive time limit per test 1.5 seconds memory limit per test 256 megabytes input standard input output standard output Little Johnny has recently learned about set theory. Now he is studying binary relations. You\u0026rsquo;ve probably heard the term \u0026ldquo;equivalence relation\u0026rdquo;. These relations are very important in many areas of mathematics. For example, the equality of the two numbers is an equivalence relation. A set ρ of pairs","tags":["第二类斯特林数","组合数学","贝尔数"],"title":"codeforces 569 D. Symmetric and Transitive  (组合数学　第二类斯特林数　贝尔数)","type":"post","url":"/2015/08/codeforces569d/","weight":0,"wordcount":754},{"author":null,"categories":null,"content":null,"date":1439590800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1439590800,"objectID":"","permalink":"https://111qqz.github.io/tags/%E7%AC%AC%E4%BA%8C%E7%B1%BB%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E7%AC%AC%E4%BA%8C%E7%B1%BB%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"第二类斯特林数","type":"tags","url":"/tags/%E7%AC%AC%E4%BA%8C%E7%B1%BB%E6%96%AF%E7%89%B9%E6%9E%97%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":1439590800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1439590800,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B4%9D%E5%B0%94%E6%95%B0/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B4%9D%E5%B0%94%E6%95%B0/","section":"tags","summary":"","tags":null,"title":"贝尔数","type":"tags","url":"/tags/%E8%B4%9D%E5%B0%94%E6%95%B0/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439589240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439589240,"objectID":"1ff306d4e71af766008a8561a05c7d70","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-14T21:54:00Z","readingtime":1,"relpermalink":"/2015/08/","section":"post","summary":"http://baike.baidu.com/link?url=nsN1-rcs3Gs0jNurWLSDk6AJ9jmhl_3pfkQmYK7vZoe7BsoTij48Si3It9XeNM4uA7gST-1ITQsAx0bv5si9_q","tags":null,"title":"斯特林数","type":"post","url":"/2015/08//","weight":0,"wordcount":1},{"author":null,"categories":["ACM"],"content":null,"date":1439589180,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439589180,"objectID":"9cd85a580388e8166bf1d856b9f16fd8","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-14T21:53:00Z","readingtime":2,"relpermalink":"/2015/08/","section":"post","summary":"http://baike.baidu.com/link?url=kw5Kxe3nSvRJR0TpJUpMrORcQL8fyZFpJlT9_o0RlGYOy0bKFobabPPSj3LxGfy7o1qGVycrYK4Iags3hMFq0a 在组合数合里，贝尔数给出了集合划分的数目，以数学家埃里克·坦普尔·贝尔（Eric Temple Bell）命名，是组合数学中的一组整数数列。[1] 以B0","tags":["组合数学","贝尔数"],"title":"贝尔数(集合的划分数目)","type":"post","url":"/2015/08//","weight":0,"wordcount":773},{"author":null,"categories":["ACM"],"content":null,"date":1439588460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439588460,"objectID":"e1b8febfd363e99081c5c066b5a5922a","permalink":"https://111qqz.github.io/2015/08/codeforces569/","publishdate":"2015-08-14T21:41:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces569/","section":"post","summary":"先预处理出来比小于等于n的素数的个数和回文数的个数\u0026hellip; 素数不筛竟然也可以过 然后暴力就好. 需要注意的是,比值并不单调,找最大的n,","tags":["brute force"],"title":"codeforces 569 C  Primes or Palindromes? (暴力)","type":"post","url":"/2015/08/codeforces569/","weight":0,"wordcount":401},{"author":null,"categories":["ACM"],"content":null,"date":1439584380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439584380,"objectID":"12eb4c1d539e3092ec7b6c8d20c60637","permalink":"https://111qqz.github.io/2015/08/codeforces570e-pigandpalindromesdp/","publishdate":"2015-08-14T20:33:00Z","readingtime":2,"relpermalink":"/2015/08/codeforces570e-pigandpalindromesdp/","section":"post","summary":"比赛的时候想到了是dp搞\u0026hellip; 不过dp废\u0026hellip;.. 可能更多的是心理上\u0026hellip; 这道题并不怎么难想,但是以觉得是dp","tags":["dp"],"title":"codeforces 570 E. Pig and Palindromes (dp)","type":"post","url":"/2015/08/codeforces570e-pigandpalindromesdp/","weight":0,"wordcount":871},{"author":null,"categories":["ACM"],"content":null,"date":1439581800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439581800,"objectID":"9efd1adefb8aa7fb2c82da7c994ca7d7","permalink":"https://111qqz.github.io/2015/08/codeforces570d-treerequestsdfs/","publishdate":"2015-08-14T19:50:00Z","readingtime":1,"relpermalink":"/2015/08/codeforces570d-treerequestsdfs/","section":"post","summary":"因为字母的排列顺序是任意的,所以判断能否形成回文串的条件就成了出现次数为奇数的字母的个数是否大于1个,如果是,那么一定不能形成回文串,否则一","tags":["dfs序"],"title":"codeforces 570 D. Tree Requests (dfs序)","type":"post","url":"/2015/08/codeforces570d-treerequestsdfs/","weight":0,"wordcount":277},{"author":null,"categories":null,"content":null,"date":1439581800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1439581800,"objectID":"","permalink":"https://111qqz.github.io/tags/dfs%E5%BA%8F/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/dfs%E5%BA%8F/","section":"tags","summary":"","tags":null,"title":"dfs序","type":"tags","url":"/tags/dfs%E5%BA%8F/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439559060,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439559060,"objectID":"d88294d244af6350dfd7b8f8a05543e0","permalink":"https://111qqz.github.io/2015/08/poj2157mazebfs/","publishdate":"2015-08-14T13:31:00Z","readingtime":0,"relpermalink":"/2015/08/poj2157mazebfs/","section":"post","summary":"","tags":null,"title":"poj 2157 Maze (bfs)","type":"post","url":"/2015/08/poj2157mazebfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439506500,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439506500,"objectID":"0d69130976bc590ae336d6c909f81b6f","permalink":"https://111qqz.github.io/2015/08/cf570c-replacement/","publishdate":"2015-08-13T22:55:00Z","readingtime":2,"relpermalink":"/2015/08/cf570c-replacement/","section":"post","summary":"C. Replacement time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Daniel has a string s, consisting of lowercase English letters and period signs (characters \u0026lsquo;.'). Let\u0026rsquo;s define the operation of replacement as the following sequence of steps: find a substring \u0026ldquo;..\u0026rdquo; (two consecutive periods) in string s, of all occurrences of the substring let\u0026rsquo;s choose the first one, and replace","tags":null,"title":"cf 570 C. Replacement (暴力)","type":"post","url":"/2015/08/cf570c-replacement/","weight":0,"wordcount":920},{"author":null,"categories":["ACM"],"content":null,"date":1439506380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439506380,"objectID":"eaa6a11c71a34c0620eb0a9e7c06cea7","permalink":"https://111qqz.github.io/2015/08/cf570bb-simplegame/","publishdate":"2015-08-13T22:53:00Z","readingtime":0,"relpermalink":"/2015/08/cf570bb-simplegame/","section":"post","summary":"","tags":null,"title":"cf 570B B. Simple Game(构造)","type":"post","url":"/2015/08/cf570bb-simplegame/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439505960,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439505960,"objectID":"d6b95a3f89873a3448932ccd91e7192d","permalink":"https://111qqz.github.io/2015/08/cf570a-elections/","publishdate":"2015-08-13T22:46:00Z","readingtime":0,"relpermalink":"/2015/08/cf570a-elections/","section":"post","summary":"","tags":null,"title":"cf 570 A. Elections","type":"post","url":"/2015/08/cf570a-elections/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439470500,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439470500,"objectID":"42a4d2253bc4eb2b8ffaa4ad24edacf6","permalink":"https://111qqz.github.io/2015/08/hdu1429bfs/","publishdate":"2015-08-13T12:55:00Z","readingtime":0,"relpermalink":"/2015/08/hdu1429bfs/","section":"post","summary":"","tags":null,"title":"hdu 1429胜利大逃亡(续) (bfs+状态压缩)","type":"post","url":"/2015/08/hdu1429bfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439385060,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439385060,"objectID":"649c2f53a30e7ed68c89a0a40f6abbb2","permalink":"https://111qqz.github.io/2015/08/fibonaccinumbersratiothehardversion/","publishdate":"2015-08-12T13:11:00Z","readingtime":0,"relpermalink":"/2015/08/fibonaccinumbersratiothehardversion/","section":"post","summary":"","tags":null,"title":"Fibonacci number’s ratio (the hard version)","type":"post","url":"/2015/08/fibonaccinumbersratiothehardversion/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439353380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439353380,"objectID":"e783500dcefebf8a2d647478dde82912","permalink":"https://111qqz.github.io/2015/08/cf569b-inventory/","publishdate":"2015-08-12T04:23:00Z","readingtime":0,"relpermalink":"/2015/08/cf569b-inventory/","section":"post","summary":"","tags":null,"title":"cf 569B. Inventory （模拟？）","type":"post","url":"/2015/08/cf569b-inventory/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439353200,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439353200,"objectID":"db76437f1491a0d91acc859dc0824e70","permalink":"https://111qqz.github.io/2015/08/cf569a-music/","publishdate":"2015-08-12T04:20:00Z","readingtime":0,"relpermalink":"/2015/08/cf569a-music/","section":"post","summary":"","tags":null,"title":"cf 569A. Music (暴力)","type":"post","url":"/2015/08/cf569a-music/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439307840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439307840,"objectID":"42ea13d0d5645a16639bf3d51a77e54e","permalink":"https://111qqz.github.io/2015/08/lightoj1066-gatheringfoodbfs/","publishdate":"2015-08-11T15:44:00Z","readingtime":0,"relpermalink":"/2015/08/lightoj1066-gatheringfoodbfs/","section":"post","summary":"","tags":null,"title":"light oj 1066- Gathering Food (bfs)","type":"post","url":"/2015/08/lightoj1066-gatheringfoodbfs/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439288340,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439288340,"objectID":"64db867f913e72a708fd4c7fae6cf071","permalink":"https://111qqz.github.io/2015/08/hdu4630nopainnogame/","publishdate":"2015-08-11T10:19:00Z","readingtime":0,"relpermalink":"/2015/08/hdu4630nopainnogame/","section":"post","summary":"","tags":null,"title":"hdu 4630 No Pain No Game(树状数组）","type":"post","url":"/2015/08/hdu4630nopainnogame/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439123340,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439123340,"objectID":"1c546947efb6ad7cd1e5f5abb80e92cd","permalink":"https://111qqz.github.io/2015/08/whust0-2jjailbreakac/","publishdate":"2015-08-09T12:29:00Z","readingtime":0,"relpermalink":"/2015/08/whust0-2jjailbreakac/","section":"post","summary":"","tags":null,"title":"whust #0.2 J Jailbreak (未AC)","type":"post","url":"/2015/08/whust0-2jjailbreakac/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439121300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439121300,"objectID":"30d6f51a615bbac8fec3508515c57e2d","permalink":"https://111qqz.github.io/2015/08/whust0-2iincognito/","publishdate":"2015-08-09T11:55:00Z","readingtime":0,"relpermalink":"/2015/08/whust0-2iincognito/","section":"post","summary":"","tags":null,"title":"whust #0.2 I Incognito","type":"post","url":"/2015/08/whust0-2iincognito/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439107980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439107980,"objectID":"42bf07bc612dca37cdde14f627ac77d3","permalink":"https://111qqz.github.io/2015/08/whust0-1i-laughingoutloud/","publishdate":"2015-08-09T08:13:00Z","readingtime":0,"relpermalink":"/2015/08/whust0-1i-laughingoutloud/","section":"post","summary":"","tags":null,"title":"whust #0.1 I - Laughing Out Loud","type":"post","url":"/2015/08/whust0-1i-laughingoutloud/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439106900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439106900,"objectID":"4e87390621509f74918eb451480a5317","permalink":"https://111qqz.github.io/2015/08/hdu5365bc501002run/","publishdate":"2015-08-09T07:55:00Z","readingtime":0,"relpermalink":"/2015/08/hdu5365bc501002run/","section":"post","summary":"","tags":null,"title":"hdu 5365 (bc #50 1002 )Run","type":"post","url":"/2015/08/hdu5365bc501002run/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439105640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439105640,"objectID":"4c89cabc97cd539e8d3e3052b56708d9","permalink":"https://111qqz.github.io/2015/08/hdu5366bc501003themookjong/","publishdate":"2015-08-09T07:34:00Z","readingtime":0,"relpermalink":"/2015/08/hdu5366bc501003themookjong/","section":"post","summary":"","tags":null,"title":"hdu 5366 (bc #50 1003)  The mook jong","type":"post","url":"/2015/08/hdu5366bc501003themookjong/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1439105520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1439105520,"objectID":"2f72b728997dfe9dc916693182ddf87c","permalink":"https://111qqz.github.io/2015/08/hdu5364bc501001distributionmoney/","publishdate":"2015-08-09T07:32:00Z","readingtime":0,"relpermalink":"/2015/08/hdu5364bc501001distributionmoney/","section":"post","summary":"","tags":null,"title":"hdu 5364 (bc#50 1001)  Distribution money","type":"post","url":"/2015/08/hdu5364bc501001distributionmoney/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438979880,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438979880,"objectID":"1781976383012fb5b019cf406e874058","permalink":"https://111qqz.github.io/2015/08/","publishdate":"2015-08-07T20:38:00Z","readingtime":1,"relpermalink":"/2015/08/","section":"post","summary":"啊啊啊，为什么这么弱 啥都不会呜呜呜 肿么办肿么办肿么办 不会的好多啊。。。。。 啊啊啊","tags":null,"title":"啥都不会肿么办","type":"post","url":"/2015/08//","weight":0,"wordcount":40},{"author":null,"categories":["ACM"],"content":null,"date":1438973220,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438973220,"objectID":"5020d9ddbe8558ca741e3bf229a6e42b","permalink":"https://111qqz.github.io/2015/08/hdu3874necklace/","publishdate":"2015-08-07T18:47:00Z","readingtime":0,"relpermalink":"/2015/08/hdu3874necklace/","section":"post","summary":"","tags":null,"title":"hdu 3874 Necklace (树状数组+离线操作)","type":"post","url":"/2015/08/hdu3874necklace/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438972920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438972920,"objectID":"43d4e5589bc21166d7ff3f84309d987a","permalink":"https://111qqz.github.io/2015/08/hdu3333/","publishdate":"2015-08-07T18:42:00Z","readingtime":3,"relpermalink":"/2015/08/hdu3333/","section":"post","summary":"题目链接 喵呜，离散树状数组。 这道题由于相同的值加和的时候只算一次，所以比较伤脑筋== 怎么办呢？ 我们发现对于一个值，由于相同的只算一次，所以在","tags":["树状数组","线段树"],"title":"hdu 3333 Turing Tree (求区间中不相同数的和，离线+线段树/树状数组)","type":"post","url":"/2015/08/hdu3333/","weight":0,"wordcount":1312},{"author":null,"categories":["ACM"],"content":null,"date":1438943040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438943040,"objectID":"68f3ecd57abc649d3f39c4068f258288","permalink":"https://111qqz.github.io/2015/08/201551007mzlssimpleproblem/","publishdate":"2015-08-07T10:24:00Z","readingtime":0,"relpermalink":"/2015/08/201551007mzlssimpleproblem/","section":"post","summary":"","tags":null,"title":"2015 多校 #5 1007 MZL's simple problem","type":"post","url":"/2015/08/201551007mzlssimpleproblem/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438942800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438942800,"objectID":"2573e4e5c5fbf4af352636d5ea9ffd64","permalink":"https://111qqz.github.io/2015/08/201551005mzlschemistry/","publishdate":"2015-08-07T10:20:00Z","readingtime":0,"relpermalink":"/2015/08/201551005mzlschemistry/","section":"post","summary":"","tags":null,"title":"2015 多校 #5 1005 MZL's chemistry","type":"post","url":"/2015/08/201551005mzlschemistry/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438942620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438942620,"objectID":"ce5dddda3ba01b56272134e4d9380c45","permalink":"https://111qqz.github.io/2015/08/201551002mzlsxor/","publishdate":"2015-08-07T10:17:00Z","readingtime":0,"relpermalink":"/2015/08/201551002mzlsxor/","section":"post","summary":"","tags":null,"title":"2015多校 #5 1002 MZL's xor","type":"post","url":"/2015/08/201551002mzlsxor/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438936080,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438936080,"objectID":"05dfe14d7b6eea2ba3f56afd457a1f92","permalink":"https://111qqz.github.io/2015/08/hdu4267poj3468asimpleproblemwithintegers/","publishdate":"2015-08-07T08:28:00Z","readingtime":0,"relpermalink":"/2015/08/hdu4267poj3468asimpleproblemwithintegers/","section":"post","summary":"","tags":null,"title":"hdu 4267/poj 3468  A Simple Problem with Integers （分状态的树状数组）","type":"post","url":"/2015/08/hdu4267poj3468asimpleproblemwithintegers/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438928400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438928400,"objectID":"a332d7d5a7c8f08386465eacb886231c","permalink":"https://111qqz.github.io/2015/08/hdu3584/","publishdate":"2015-08-07T06:20:00Z","readingtime":1,"relpermalink":"/2015/08/hdu3584/","section":"post","summary":"三维树状数组 容斥那里注意一下。 多组数据因为忘记清空c数组而wa了1次，细心！ /************************************************************************* \u0026gt; File Name: code/hdu/3584.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月07日 星期五 14时0","tags":["树状数组"],"title":"hdu 3584 Cube  （三维树状数组，更新区间，查询单点）","type":"post","url":"/2015/08/hdu3584/","weight":0,"wordcount":342},{"author":null,"categories":["ACM"],"content":null,"date":1438886460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438886460,"objectID":"6dee4f9f6ee29dda072cc4567db50732","permalink":"https://111qqz.github.io/2015/08/poj2155/","publishdate":"2015-08-06T18:41:00Z","readingtime":1,"relpermalink":"/2015/08/poj2155/","section":"post","summary":"1 和上一道类似，也是更新区间，查询单点。 用到了容斥原理。 /************************************************************************* \u0026gt; File Name: code/poj/2155.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月07日 星期五 00时42分38秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt;","tags":["树状数组"],"title":"poj 2155- Matrix (树状数组，二维，更新区间，查询单点)","type":"post","url":"/2015/08/poj2155/","weight":0,"wordcount":366},{"author":null,"categories":["ACM"],"content":null,"date":1438885980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438885980,"objectID":"245d2a6cada8a7bd1d18563e54a19746","permalink":"https://111qqz.github.io/2015/08/hdu1556/","publishdate":"2015-08-06T18:33:00Z","readingtime":2,"relpermalink":"/2015/08/hdu1556/","section":"post","summary":"这道题和之前做的树状数组略有不同。 以前的都是更新单点，查询区间，这次反了过来。 做法差不多。 如果更新区间【x,y】增加１ 那么只要 update (x,1),update (y+1,-1) 问单点的","tags":["树状数组"],"title":"hdu 1556Color the ball （树状数组，更新区间，查询单点）","type":"post","url":"/2015/08/hdu1556/","weight":0,"wordcount":543},{"author":null,"categories":["ACM"],"content":null,"date":1438852140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438852140,"objectID":"76339a6c124fad994c8c919959df2258","permalink":"https://111qqz.github.io/2015/08/sgu180/","publishdate":"2015-08-06T09:09:00Z","readingtime":1,"relpermalink":"/2015/08/sgu180/","section":"post","summary":"Inversions **Time Limit:**250MS **Memory Limit:**4096KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description 180. Inversions time limit per test: 0.25 sec. memory limit per test: 4096 KB input: standard output: standard There are N integers (1\u0026lt;=N\u0026lt;=65537) A1, A2,.. AN (0\u0026lt;=Ai\u0026lt;=10^9). You need to find amount of such pairs (i, j) that 1\u0026lt;=iA[j]. Input The first line of the input contains the number N. The second line contains N numbers A1\u0026hellip;AN.","tags":["树状数组","离散化"],"title":"sgu 180 - Inversions （离散化+树状数组）","type":"post","url":"/2015/08/sgu180/","weight":0,"wordcount":446},{"author":null,"categories":["ACM"],"content":null,"date":1438849200,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438849200,"objectID":"7f45fcb883623061906182a9dd409d76","permalink":"https://111qqz.github.io/2015/08/poj1195mobilephones/","publishdate":"2015-08-06T08:20:00Z","readingtime":0,"relpermalink":"/2015/08/poj1195mobilephones/","section":"post","summary":"","tags":null,"title":"poj 1195 Mobile phones （二维树状数组）","type":"post","url":"/2015/08/poj1195mobilephones/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438846140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438846140,"objectID":"66824bfb4c47aeabe5d263d0a019c920","permalink":"https://111qqz.github.io/2015/08/cf567c-geometricprogression/","publishdate":"2015-08-06T07:29:00Z","readingtime":0,"relpermalink":"/2015/08/cf567c-geometricprogression/","section":"post","summary":"","tags":null,"title":"cf 567 C. Geometric Progression","type":"post","url":"/2015/08/cf567c-geometricprogression/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438802160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438802160,"objectID":"0b9febb870fe4c48ee4bb1ef27e076ca","permalink":"https://111qqz.github.io/2015/08/sssssad/","publishdate":"2015-08-05T19:16:00Z","readingtime":1,"relpermalink":"/2015/08/sssssad/","section":"post","summary":"依然对算法，对acm充满热情。 只是比赛，组队赛。 心里满满的都是阴影，再也没有什么热情与感动。 连起队名这种事情我都不愿意想了。 起得再棒有什么用","tags":null,"title":"sssssad","type":"post","url":"/2015/08/sssssad/","weight":0,"wordcount":319},{"author":null,"categories":["ACM"],"content":null,"date":1438801200,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438801200,"objectID":"03ffd97bfa9c3d4db51b5d5c5697a5e4","permalink":"https://111qqz.github.io/2015/08/cf314b-berlandnationallibrary/","publishdate":"2015-08-05T19:00:00Z","readingtime":1,"relpermalink":"/2015/08/cf314b-berlandnationallibrary/","section":"post","summary":"给出一个图书馆人员进出情况，问图书馆满足题意的最小容量是多少。 注意在初始之前图书馆里面可能就有人了，也就是说不是所有进入图书馆的人都会被给出","tags":["模拟"],"title":"cf #314  B. Berland National Library (模拟)","type":"post","url":"/2015/08/cf314b-berlandnationallibrary/","weight":0,"wordcount":393},{"author":null,"categories":["ACM"],"content":null,"date":1438800660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438800660,"objectID":"68275635c0a1518a3d98b60f82bcdcb4","permalink":"https://111qqz.github.io/2015/08/cf314a/","publishdate":"2015-08-05T18:51:00Z","readingtime":1,"relpermalink":"/2015/08/cf314a/","section":"post","summary":"给一个有序序列，问对于没一个数，和它相差最少和最多的数的位置。 /************************************************************************* \u0026gt; File Name: code/cf/#314/A.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月06日 星期四 00时01分51秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt;","tags":["brute force"],"title":"codeforces #314 A. Lineland Mail","type":"post","url":"/2015/08/cf314a/","weight":0,"wordcount":184},{"author":null,"categories":["ACM"],"content":null,"date":1438788960,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438788960,"objectID":"d18dc4b02b843b86cc68ea6f4086727b","permalink":"https://111qqz.github.io/2015/08/hdu5305/","publishdate":"2015-08-05T15:36:00Z","readingtime":1,"relpermalink":"/2015/08/hdu5305/","section":"post","summary":"dfs 1A /************************************************************************* \u0026gt; File Name: code/whust/#9/K.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年08月05日 星期三 15时02分30秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;stack\u0026gt; #define y0 abc111qqz #define y1 hust111qqz #define yn hez111qqz #define j1 cute111qqz #define tm crazy111qqz #define lr dying111qqz","tags":["dfs"],"title":"hdu 5305 Friends　（dfs）","type":"post","url":"/2015/08/hdu5305/","weight":0,"wordcount":253},{"author":null,"categories":["ACM"],"content":null,"date":1438693980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438693980,"objectID":"048c141845b37b8388e08f6fe0012a01","permalink":"https://111qqz.github.io/2015/08/poj2299/","publishdate":"2015-08-04T13:13:00Z","readingtime":2,"relpermalink":"/2015/08/poj2299/","section":"post","summary":"这道题可以总结的地方不少。 １：对于一组乱序数列，每次只能交换相邻元素，达到有序交换的次数就是原数列中你逆序对的个数。 cf上好像总喜欢出这个题","tags":["树状数组","离散化"],"title":"poj 2299 Ultra-QuickSort  （树状数组＋离散化）","type":"post","url":"/2015/08/poj2299/","weight":0,"wordcount":540},{"author":null,"categories":["ACM"],"content":null,"date":1438661280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438661280,"objectID":"66251a26f6f840bb297013e5d8f0050f","permalink":"https://111qqz.github.io/2015/08/poj3067japan/","publishdate":"2015-08-04T04:08:00Z","readingtime":0,"relpermalink":"/2015/08/poj3067japan/","section":"post","summary":"","tags":null,"title":"poj 3067 Japan（树状数组）","type":"post","url":"/2015/08/poj3067japan/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438630320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438630320,"objectID":"38f91edc8092a473fc738ec559e70c9a","permalink":"https://111qqz.github.io/2015/08/poj2481/","publishdate":"2015-08-03T19:32:00Z","readingtime":3,"relpermalink":"/2015/08/poj2481/","section":"post","summary":"poj 2481 题目链接 题意：给定n个区间，问对于每个区间，有多少个区间真包含该区间（真包含的意思是说，两个区间不能完全重合） 思路： 需要注意的是star","tags":["树状数组","线段树"],"title":"poj 2481 Cows(树状数组||线段树)","type":"post","url":"/2015/08/poj2481/","weight":0,"wordcount":1436},{"author":null,"categories":["ACM"],"content":null,"date":1438622940,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438622940,"objectID":"f69184274b7af6c0caed2d51993de9ae","permalink":"https://111qqz.github.io/2015/08/poj2352/","publishdate":"2015-08-03T17:29:00Z","readingtime":2,"relpermalink":"/2015/08/poj2352/","section":"post","summary":"poj 2352题目链接 题意：给出n个星星的位置，一个星星的level定义为其左下角（不严格）星星的数量。 要求统计0到n-1 level的星星各有多","tags":["树状数组","线段树"],"title":"poj 2352 Stars （树状数组||线段树）","type":"post","url":"/2015/08/poj2352/","weight":0,"wordcount":939},{"author":null,"categories":["ACM"],"content":null,"date":1438587300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438587300,"objectID":"894bebe8548d7c4f2d056316974d9ef9","permalink":"https://111qqz.github.io/2015/08/hdu4349/","publishdate":"2015-08-03T07:35:00Z","readingtime":0,"relpermalink":"/2015/08/hdu4349/","section":"post","summary":"","tags":null,"title":"hdu 4349","type":"post","url":"/2015/08/hdu4349/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438512240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438512240,"objectID":"dabd22dcb5f7610745571ec8f50a5f30","permalink":"https://111qqz.github.io/2015/08/cf309aa-kyoyaandphotobooks/","publishdate":"2015-08-02T10:44:00Z","readingtime":0,"relpermalink":"/2015/08/cf309aa-kyoyaandphotobooks/","section":"post","summary":"","tags":null,"title":"cf #309a A - Kyoya and Photobooks","type":"post","url":"/2015/08/cf309aa-kyoyaandphotobooks/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438399260,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438399260,"objectID":"d7f7a3e5d5ff2e2b3cc19e6804b4688d","permalink":"https://111qqz.github.io/2015/08/hdu5234bc42chappybirthdaydp/","publishdate":"2015-08-01T03:21:00Z","readingtime":0,"relpermalink":"/2015/08/hdu5234bc42chappybirthdaydp/","section":"post","summary":"","tags":null,"title":"hdu 5234 (bc #42 C)Happy birthday(dp)","type":"post","url":"/2015/08/hdu5234bc42chappybirthdaydp/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438395120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438395120,"objectID":"22ac6cb2727552813b3566db10d6b22d","permalink":"https://111qqz.github.io/2015/08/hdu4022/","publishdate":"2015-08-01T02:12:00Z","readingtime":1,"relpermalink":"/2015/08/hdu4022/","section":"post","summary":"wa了两次，原因是在同一个点可能有多个基地。。。 所以用set 是错误的，应该用multiset 然后因为这道题看到了map+set实现离散化的另","tags":["离散化"],"title":"hdu 4022 Bombing (离散化)","type":"post","url":"/2015/08/hdu4022/","weight":0,"wordcount":287},{"author":null,"categories":["ACM"],"content":null,"date":1438373760,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438373760,"objectID":"4032f10560924433dd78a82cef221c93","permalink":"https://111qqz.github.io/2015/07/hdoj2436/","publishdate":"2015-07-31T20:16:00Z","readingtime":2,"relpermalink":"/2015/07/hdoj2436/","section":"post","summary":"Collision Detection **Time Limit: 5000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 1207 Accepted Submission(s): 367 ** Problem Description In physical simulations, video games and computational geometry, collision detection involves algorithms for checking for collision, i.e. intersection, of two given objects. Collision detection algorithms are a basic component of 3D video games. Without them, characters could go through walls and other obstacles. Here comes an interesting problem, given","tags":["计算几何"],"title":"hdoj 2436 Collision Detection","type":"post","url":"/2015/07/hdoj2436/","weight":0,"wordcount":784},{"author":null,"categories":["ACM"],"content":null,"date":1438369500,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438369500,"objectID":"912634452e324497d46d0b72d0e44904","permalink":"https://111qqz.github.io/2015/07/","publishdate":"2015-07-31T19:05:00Z","readingtime":1,"relpermalink":"/2015/07/","section":"post","summary":"题意： n棵树依次排好，每棵树都有一个高度，树的顶端有一只鸟。 猎人会打M枪，每一枪都能从高度为X的树上打下一只鸟，问每一枪打下的鸟是从 编号多少","tags":null,"title":"离散化的三种方法（转载）","type":"post","url":"/2015/07//","weight":0,"wordcount":395},{"author":null,"categories":["ACM"],"content":null,"date":1438369440,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438369440,"objectID":"3cbd699881c156ecb87f924bbd7d83f5","permalink":"https://111qqz.github.io/2015/07/hdu5233/","publishdate":"2015-07-31T19:04:00Z","readingtime":2,"relpermalink":"/2015/07/hdu5233/","section":"post","summary":"Gunner II **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/65536 K (Java/Others) Total Submission(s): 1433 Accepted Submission(s): 540 ** Problem Description Long long ago, there was a gunner whose name is Jack. He likes to go hunting very much. One day he go to the grove. There are n birds and n trees. The i-th bird stands on the top of the i-th tree. The trees stand in straight line","tags":["离散化"],"title":"hdu 5233  Gunner II (bc #42 B)  （离散化）","type":"post","url":"/2015/07/hdu5233/","weight":0,"wordcount":797},{"author":null,"categories":["ACM"],"content":null,"date":1438333800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438333800,"objectID":"038e712393a9c908d7af799f548e37a5","permalink":"https://111qqz.github.io/2015/07/hdu5265/","publishdate":"2015-07-31T09:10:00Z","readingtime":2,"relpermalink":"/2015/07/hdu5265/","section":"post","summary":"pog loves szh II **Time Limit: 4000/2000 MS (Java/Others) Memory Limit: 65536/65536 K (Java/Others) Total Submission(s): 2115 Accepted Submission(s): 609 ** Problem Description Pog and Szh are playing games.There is a sequence with n numbers, Pog will choose a number A from the sequence. Szh will choose an another number named B from the rest in the sequence. Then the score will be (A+B) mod p.They hope to get the","tags":["单调性优化"],"title":"bc #43(hdu 5265) pog loves szh II  （单调性优化）","type":"post","url":"/2015/07/hdu5265/","weight":0,"wordcount":591},{"author":null,"categories":null,"content":null,"date":1438333800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1438333800,"objectID":"","permalink":"https://111qqz.github.io/tags/%E5%8D%95%E8%B0%83%E6%80%A7%E4%BC%98%E5%8C%96/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E5%8D%95%E8%B0%83%E6%80%A7%E4%BC%98%E5%8C%96/","section":"tags","summary":"","tags":null,"title":"单调性优化","type":"tags","url":"/tags/%E5%8D%95%E8%B0%83%E6%80%A7%E4%BC%98%E5%8C%96/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1438262340,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438262340,"objectID":"f57399c16edf06c5ababb430346475e2","permalink":"https://111qqz.github.io/2015/07/sgu455/","publishdate":"2015-07-30T13:19:00Z","readingtime":2,"relpermalink":"/2015/07/sgu455/","section":"post","summary":"455. Sequence analysis Time limit per test: 1 second(s) Memory limit: 4096 kilobytes input: standard output: standard _Due to the slow \u0026lsquo;mod\u0026rsquo; and \u0026lsquo;div\u0026rsquo; operations with int64 type, all Delphi solutions for the problem 455 (Sequence analysis) run much slower than the same code written in C++ or Java. We do not guarantee that Delphi solution exists. _ You are given a sequence of signed 64-bit integers defined as follows:","tags":["floyd 判圈"],"title":"sgu 455. Sequence analysis （floyd 判圈算法，O(1)空间复杂度求循环节）","type":"post","url":"/2015/07/sgu455/","weight":0,"wordcount":729},{"author":null,"categories":["ACM"],"content":null,"date":1438257840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438257840,"objectID":"fe913f6a9460b468b37b8f79bf9adbc6","permalink":"https://111qqz.github.io/2015/07/sgu463/","publishdate":"2015-07-30T12:04:00Z","readingtime":2,"relpermalink":"/2015/07/sgu463/","section":"post","summary":"K - Walking around Berhattan **Time Limit:**250MS **Memory Limit:**65536KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Practice SGU 463 Description As you probably know, Berhattan is a district of Berland\u0026rsquo;s largest city and it consists of equal square blocks. There are n block lines in the east-west direction and m block lines in the south-north direction. The map shows Berhattan as a rectangle with n rows and _m_columns, so there","tags":["模拟"],"title":"sgu 463  - Walking around Berhattan","type":"post","url":"/2015/07/sgu463/","weight":0,"wordcount":919},{"author":null,"categories":["ACM"],"content":null,"date":1438257720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438257720,"objectID":"b7b245459fd58493c2bb096512a31a44","permalink":"https://111qqz.github.io/2015/07/sgu456/","publishdate":"2015-07-30T12:02:00Z","readingtime":2,"relpermalink":"/2015/07/sgu456/","section":"post","summary":"D - Annuity Payment Scheme **Time Limit:**500MS **Memory Limit:**65536KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Practice SGU 456 Description At the peak of the Global Economic Crisis BerBank offered an unprecedented credit program. The offering was so attractive that Vitaly decided to try it. He took a loan of s burles for m months with the interest rate of p percent. Vitaly has to follow the scheme of annuity","tags":null,"title":"SGU 456 Annuity Payment Scheme","type":"post","url":"/2015/07/sgu456/","weight":0,"wordcount":558},{"author":null,"categories":["ACM"],"content":null,"date":1438177860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438177860,"objectID":"f0d8d62c14611977ed2e80031b824a61","permalink":"https://111qqz.github.io/2015/07/spojamr10fcookiespiles/","publishdate":"2015-07-29T13:51:00Z","readingtime":1,"relpermalink":"/2015/07/spojamr10fcookiespiles/","section":"post","summary":"AMR10F - Cookies Piles no tags The kids in my son\u0026rsquo;s kindergarten made Christmas cookies with their teacher, and piled them up in columns. They then arranged the columns so that the tops of the columns, going from shortest to tallest, were in a nice straight ramp. The cookies were all of uniform size. Given that there were A cookies in the shortest pile, that the difference in height between","tags":null,"title":"SPOJ AMR10F Cookies Piles","type":"post","url":"/2015/07/spojamr10fcookiespiles/","weight":0,"wordcount":298},{"author":null,"categories":["ACM"],"content":null,"date":1438174980,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438174980,"objectID":"4ad9b4729dd39ebfa9923d451a76caaf","permalink":"https://111qqz.github.io/2015/07/poj2823/","publishdate":"2015-07-29T13:03:00Z","readingtime":4,"relpermalink":"/2015/07/poj2823/","section":"post","summary":"Sliding Window Description An array of size n ≤ 106 is given to you. There is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves rightwards by one position. Following is an example: The array is [1 3 -1 -3 5 3 6","tags":["单调队列"],"title":"poj 2823 Sliding Window (单调队列)","type":"post","url":"/2015/07/poj2823/","weight":0,"wordcount":1776},{"author":null,"categories":["ACM"],"content":null,"date":1438151280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438151280,"objectID":"45c002da3aa46d3bef3d83a9000591da","permalink":"https://111qqz.github.io/2015/07/bc45a-dylanslovesnumbershdu5272/","publishdate":"2015-07-29T06:28:00Z","readingtime":1,"relpermalink":"/2015/07/bc45a-dylanslovesnumbershdu5272/","section":"post","summary":"快要炸了.. tle成狗 因为是tle,看了下自己没有写cin cout,估计就是算法的问题\u0026hellip; 我是先存了二进制的每一位到数组,然后扫","tags":["brute force"],"title":"(bc #45) A - Dylans loves numbers (hdu 5272)","type":"post","url":"/2015/07/bc45a-dylanslovesnumbershdu5272/","weight":0,"wordcount":494},{"author":null,"categories":["ACM"],"content":null,"date":1438116300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438116300,"objectID":"a462ae1395b887ebe0edf8f88c6d5345","permalink":"https://111qqz.github.io/2015/07/cf442c/","publishdate":"2015-07-28T20:45:00Z","readingtime":1,"relpermalink":"/2015/07/cf442c/","section":"post","summary":"C. Artem and Array time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Artem has an array of n positive integers. Artem decided to play with it. The game consists of n moves. Each move goes like this. Artem chooses some element of the array and removes it. For that, he gets min(a, b) points, where a and b are numbers","tags":["单调栈"],"title":"codeforces 442C. Artem and Array","type":"post","url":"/2015/07/cf442c/","weight":0,"wordcount":422},{"author":null,"categories":["ACM"],"content":null,"date":1438107480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438107480,"objectID":"df972088800b6696363de87705d0341c","permalink":"https://111qqz.github.io/2015/07/cf442b/","publishdate":"2015-07-28T18:18:00Z","readingtime":2,"relpermalink":"/2015/07/cf442b/","section":"post","summary":"B. Andrey and Problem time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Andrey needs one more problem to conduct a programming contest. He has n friends who are always willing to help. He can ask some of them to come up with a contest problem. Andrey knows one value for each of his fiends \u0026ndash; the probability that this friend","tags":["概率"],"title":"cf 442B Andrey and Problem","type":"post","url":"/2015/07/cf442b/","weight":0,"wordcount":633},{"author":null,"categories":["ACM"],"content":null,"date":1438099620,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438099620,"objectID":"e0eaa33689622a26ab06949add336fea","permalink":"https://111qqz.github.io/2015/07/cf443b/","publishdate":"2015-07-28T16:07:00Z","readingtime":1,"relpermalink":"/2015/07/cf443b/","section":"post","summary":"B. Kolya and Tandem Repeat time limit per test 2 seconds memory limit per test 256 megabytes input standard input output standard output Kolya got string s for his birthday, the string consists of small English letters. He immediately added k more characters to the right of the string. Then Borya came and said that the new string contained a tandem repeat of length l as a substring. How large","tags":["brute force"],"title":"cf 443B  Kolya and Tandem Repeat","type":"post","url":"/2015/07/cf443b/","weight":0,"wordcount":371},{"author":null,"categories":["ACM"],"content":null,"date":1438098480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438098480,"objectID":"ec56652714a89119939e56ad4185448e","permalink":"https://111qqz.github.io/2015/07/bchdu5312sequence/","publishdate":"2015-07-28T15:48:00Z","readingtime":4,"relpermalink":"/2015/07/bchdu5312sequence/","section":"post","summary":"Sequence Accepts: 25 Submissions: 1442 Time Limit: 2000/2000 MS (Java/Others) Memory Limit: 262144/262144 K (Java/Others) 问题描述 Soda习得了一个数列, 数列的第\u0026lt;span class=\u0026quot;katex\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;katex-mathml\u0026quot;\u0026gt;n\u0026lt;span class=\u0026quot;katex-html\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;strut\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;strut bottom\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;base textstyle uncramped\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;mord mathit\u0026quot;\u0026gt;n \u0026lt;span class=\u0026quot;katex\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;katex-mathml\u0026quot;\u0026gt;(n ge 1)\u0026lt;span class=\u0026quot;katex-html\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;strut\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;strut bottom\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;base textstyle uncramped\u0026quot;\u0026gt;\u0026lt;span class=\u0026quot;mopen\u0026quot;\u0026gt;(\u0026lt;span class=\u0026quot;mord mathit\u0026quot;\u0026gt;n\u0026lt;span c","tags":["math"],"title":"(BC 一周年) hdu 5312  Sequence","type":"post","url":"/2015/07/bchdu5312sequence/","weight":0,"wordcount":1809},{"author":null,"categories":["ACM"],"content":null,"date":1438093800,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438093800,"objectID":"be6974f085ef59d3b793f4262a69043f","permalink":"https://111qqz.github.io/2015/07/_/","publishdate":"2015-07-28T14:30:00Z","readingtime":2,"relpermalink":"/2015/07/_/","section":"post","summary":"它有一定的规律性，排列如下(构成图)，像上面的1、3、6、10、15等等这些能够表示成三角形的形状的总数量的数，叫做三角形数。 一定数目的点或","tags":null,"title":"三角形数_百度百科","type":"post","url":"/2015/07/_/","weight":0,"wordcount":877},{"author":null,"categories":["ACM"],"content":null,"date":1438093320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438093320,"objectID":"15f3dc1c94f35ee86aad691d693647cd","permalink":"https://111qqz.github.io/2015/07/hdu5311/","publishdate":"2015-07-28T14:22:00Z","readingtime":2,"relpermalink":"/2015/07/hdu5311/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5311 题意：问能否从一个给定的字符串中拿出三个不相交的字串（原串可以有剩余），组成字符串“anniversary” 思路：暴力。 比赛的时候没做出来","tags":["brute force","字符串"],"title":"(BC 一周年)hdu 5311 Hidden String","type":"post","url":"/2015/07/hdu5311/","weight":0,"wordcount":651},{"author":null,"categories":["ACM"],"content":null,"date":1438085460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438085460,"objectID":"437333673521d5fd199e7b0097b368ea","permalink":"https://111qqz.github.io/2015/07/hdu5310/","publishdate":"2015-07-28T12:11:00Z","readingtime":1,"relpermalink":"/2015/07/hdu5310/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=5310 水。 不要用cin. /************************************************************************* \u0026gt; File Name: code/bc/#ann/1001.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年07月25日 星期六 18时54分24秒 ************************************************************************/ #include\u0026lt;iostream\u0026gt; #include\u0026lt;iomanip\u0026gt; #include\u0026lt;cstdio\u0026gt; #include\u0026lt;algorithm\u0026gt; #include\u0026lt;cmath\u0026gt; #include\u0026lt;cstring\u0026gt; #include\u0026lt;string\u0026gt; #include\u0026lt;map\u0026gt; #include\u0026lt;set\u0026gt; #include\u0026lt;queue\u0026gt; #include\u0026lt;vector\u0026gt; #include\u0026lt;stack\u0026gt; #define y0 abc111qqz #define y1 hust111qqz #define yn hez111qqz #define","tags":null,"title":"(BC 一周年)hdu 5310  Souvenir","type":"post","url":"/2015/07/hdu5310/","weight":0,"wordcount":134},{"author":null,"categories":["ACM"],"content":null,"date":1438069860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1438069860,"objectID":"982e900392627a58121fc736b5ed6ce2","permalink":"https://111qqz.github.io/2015/07/uva12442/","publishdate":"2015-07-28T07:51:00Z","readingtime":1,"relpermalink":"/2015/07/uva12442/","section":"post","summary":"\u0026ldquo;\u0026hellip; so forward this to ten other people, to prove that you believe the emperor has 题意是说发短信,每个人只会给一个人发,问从哪个人开始发,能传到的人最多 思路是每个人开始做一遍dfs\u0026hell","tags":["dfs"],"title":"uva 12442 . Forwarding Emails","type":"post","url":"/2015/07/uva12442/","weight":0,"wordcount":487},{"author":null,"categories":["ACM"],"content":null,"date":1437994860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437994860,"objectID":"c85bae8fab631cdcdf52175ff76909bc","permalink":"https://111qqz.github.io/2015/07/i-firegamebfs/","publishdate":"2015-07-27T11:01:00Z","readingtime":3,"relpermalink":"/2015/07/i-firegamebfs/","section":"post","summary":"http://acm.hust.edu.cn/vjudge/contest/view.action?cid=83084#problem/I I - Fire Game **Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Fat brother and Maze are playing a kind of special (hentai) game on an N*M board (N rows, M columns). At the beginning, each grid of this board is consisting of grass or just empty and then they start to fire all the grass. Firstly they choose two grids which are consisting of","tags":["bfs"],"title":"I - Fire Game  (两个点开始的bfs)","type":"post","url":"/2015/07/i-firegamebfs/","weight":0,"wordcount":1154},{"author":null,"categories":["ACM"],"content":null,"date":1437986640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437986640,"objectID":"832d9f0338f14e5a774624e0ffee9de9","permalink":"https://111qqz.github.io/2015/07/poj3414/","publishdate":"2015-07-27T08:44:00Z","readingtime":2,"relpermalink":"/2015/07/poj3414/","section":"post","summary":"Pots Description You are given two pots, having the volume of A and B liters respectively. The following operations can be performed: FILL(i) fill the pot i (1 ≤ **i **≤ 2) from the tap; DROP(i) empty the pot i to the drain; POUR(i,j) pour from pot i to pot j; after this operation either the pot j is full (and there may be some water left in","tags":["bfs","路径记录"],"title":"poj 3414 pots (bfs+路径记录)","type":"post","url":"/2015/07/poj3414/","weight":0,"wordcount":531},{"author":null,"categories":null,"content":null,"date":1437986640,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1437986640,"objectID":"","permalink":"https://111qqz.github.io/tags/%E8%B7%AF%E5%BE%84%E8%AE%B0%E5%BD%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E8%B7%AF%E5%BE%84%E8%AE%B0%E5%BD%95/","section":"tags","summary":"","tags":null,"title":"路径记录","type":"tags","url":"/tags/%E8%B7%AF%E5%BE%84%E8%AE%B0%E5%BD%95/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1437922740,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437922740,"objectID":"7f0050b6d5a5c2372e3b5ad1e03542c8","permalink":"https://111qqz.github.io/2015/07/hdoj1495/","publishdate":"2015-07-26T14:59:00Z","readingtime":2,"relpermalink":"/2015/07/hdoj1495/","section":"post","summary":"非常可乐 **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 7194 Accepted Submission(s): 2865 ** Problem Description 大家一定觉的运动以后喝可乐是一件很惬意的事情，但是seeyou却不这么认为。因为每次当seey","tags":["bfs"],"title":"hdoj 1495 非常可乐(bfs)","type":"post","url":"/2015/07/hdoj1495/","weight":0,"wordcount":872},{"author":null,"categories":["ACM"],"content":null,"date":1437810420,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437810420,"objectID":"a5055a1b52fee7f34a598cc062ffe28a","permalink":"https://111qqz.github.io/2015/07/hdoj/","publishdate":"2015-07-25T07:47:00Z","readingtime":2,"relpermalink":"/2015/07/hdoj/","section":"post","summary":"Oil Deposits **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 17683 Accepted Submission(s): 10172 ** Problem Description The GeoSurvComp geologic survey company is responsible for detecting underground oil deposits. GeoSurvComp works with one large rectangular region of land at a time, and creates a grid that divides the land into numerous square plots. It then analyzes each plot separately, using sensing equipment to determine whether or","tags":["dfs"],"title":"hdoj 1241 Oil Deposits  (dfs)","type":"post","url":"/2015/07/hdoj/","weight":0,"wordcount":548},{"author":null,"categories":["ACM"],"content":null,"date":1437807660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437807660,"objectID":"44602ec5835580e8e0becfe7ae215448","permalink":"https://111qqz.github.io/2015/07/hdoj2612/","publishdate":"2015-07-25T07:01:00Z","readingtime":2,"relpermalink":"/2015/07/hdoj2612/","section":"post","summary":"Find a way ****Time Limit: 3000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 6221 Accepted Submission(s): 2070 ** ** Problem Description Pass a year learning in Hangzhou, yifenfei arrival hometown Ningbo at finally. Leave Ningbo one year, yifenfei have many people to meet. Especially a good friend Merceki. Yifenfei\u0026rsquo;s home is at the countryside, but Merceki\u0026rsquo;s home is in the center of city. So yifenfei made arrangements with","tags":["bfs"],"title":"hdoj 2612 find a way (两次bfs)","type":"post","url":"/2015/07/hdoj2612/","weight":0,"wordcount":668},{"author":null,"categories":["ACM"],"content":null,"date":1437803580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437803580,"objectID":"c92f7842ff33f927a139b4b623c0c8e4","permalink":"https://111qqz.github.io/2015/07/poj3984/","publishdate":"2015-07-25T05:53:00Z","readingtime":1,"relpermalink":"/2015/07/poj3984/","section":"post","summary":"迷宫问题 Description 定义一个二维数组： \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt;int maze[5][5] = { \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt; 0, 1, 0, 0, 0, \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt; 0, 1, 0, 1, 0, \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt; 0, 0, 0, 0, 0, \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt; 0, 1, 1, 1, 0, \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt; 0, 0, 0, 1, 0, \u0026lt;br\u0026gt;\u0026lt;/br\u0026gt;}; 它表示一个迷宫，其中的1表示墙壁，0表示可","tags":["bfs","路径记录"],"title":"poj 3984 迷宫问题","type":"post","url":"/2015/07/poj3984/","weight":0,"wordcount":409},{"author":null,"categories":["ACM"],"content":null,"date":1437754320,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437754320,"objectID":"75a45379b35fbd891339a46a88f69c15","permalink":"https://111qqz.github.io/2015/07/poj3087/","publishdate":"2015-07-24T16:12:00Z","readingtime":1,"relpermalink":"/2015/07/poj3087/","section":"post","summary":"http://poj.org/problem?id=3087 用bfs写的，但是其实就是个模拟啊喂！ 只有一种操作，何谈最短？ 一直往下写就行了． 有一点疑惑，就是map的初始值 比如我定义的 map\u0026lt;s","tags":["bfs"],"title":"poj 3087 Shuffle'm Up (bfs)","type":"post","url":"/2015/07/poj3087/","weight":0,"wordcount":286},{"author":null,"categories":["ACM"],"content":null,"date":1437742380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437742380,"objectID":"89c5d3112da9a15cf2606ccfa220e220","permalink":"https://111qqz.github.io/2015/07/poj3126/","publishdate":"2015-07-24T12:53:00Z","readingtime":1,"relpermalink":"/2015/07/poj3126/","section":"post","summary":"http://poj.org/problem?id=3126 题意是说,给定两个四位素数a b 问从a变换到b,最少需要变换几次. 变换的要求是,每次只能改变一个数字,而且中间过程得到的四位数也必须为素数.","tags":["bfs"],"title":"poj 3126 Prime Path (bfs)","type":"post","url":"/2015/07/poj3126/","weight":0,"wordcount":498},{"author":null,"categories":["ACM"],"content":null,"date":1437663360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437663360,"objectID":"0dcd546fcae579ca72dcbf6be3cf331f","permalink":"https://111qqz.github.io/2015/07/poj3279/","publishdate":"2015-07-23T14:56:00Z","readingtime":2,"relpermalink":"/2015/07/poj3279/","section":"post","summary":"http://poj.org/problem?id=3279 反转类问题. 有N*M个方格,每个上面有数字0或者1 操作一个方格,这个方格即其相邻的四个方格(有公共边)会改变状态(由0变1或者由1变0) 问","tags":["brute force"],"title":"poj 3279 Fliptile (搜索..暴力？)","type":"post","url":"/2015/07/poj3279/","weight":0,"wordcount":834},{"author":null,"categories":["ACM"],"content":null,"date":1437555180,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437555180,"objectID":"4dddf6347fb25d455498ffdb2a75affe","permalink":"https://111qqz.github.io/2015/07/hdu4082/","publishdate":"2015-07-22T08:53:00Z","readingtime":3,"relpermalink":"/2015/07/hdu4082/","section":"post","summary":"http://acm.hust.edu.cn/vjudge/contest/view.action?cid=83295#problem/I 最多18个点，选3个点，能够成的三角形不超过1000个，O(n2)暴力就可以。 思路就是枚举三个点点，对于每一个构成的三角形，把这个三角形的","tags":["计算几何"],"title":"hdu 4082 I Hou Yi's secret （计算几何）","type":"post","url":"/2015/07/hdu4082/","weight":0,"wordcount":1169},{"author":null,"categories":["ACM"],"content":null,"date":1437484380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437484380,"objectID":"7e1844cd976769c3e91c0f093a03ac3b","permalink":"https://111qqz.github.io/2015/07/poj2398/","publishdate":"2015-07-21T13:13:00Z","readingtime":2,"relpermalink":"/2015/07/poj2398/","section":"post","summary":"http://poj.org/problem?id=2398 题意大概是说将一个盒子用n个board分成n+1 部分 然后往里面放toy,给定盒子,board,和toy的坐标 问所有的toy放完后,有多少部","tags":["计算几何"],"title":"poj 2398 Toy Storage (计算几何,判断点和线段关系)","type":"post","url":"/2015/07/poj2398/","weight":0,"wordcount":837},{"author":null,"categories":["ACM"],"content":null,"date":1437454920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437454920,"objectID":"eb4c578407f90381a99b2036f41793d9","permalink":"https://111qqz.github.io/2015/07/poj2251/","publishdate":"2015-07-21T05:02:00Z","readingtime":1,"relpermalink":"/2015/07/poj2251/","section":"post","summary":"http://poj.org/problem?id=2251 简单bfs，只不过是三维的。。。 唯一的坑点在输出上\u0026hellip; Escaped in %d minute(s) 这意思是答案为1输出minute,不为1输出minutes还是说","tags":["bfs"],"title":"poj 2251 Dungeon Master (三维bfs)","type":"post","url":"/2015/07/poj2251/","weight":0,"wordcount":444},{"author":null,"categories":["ACM"],"content":null,"date":1437447600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437447600,"objectID":"f8e723473d4b9e7f895bdc44edb3a24a","permalink":"https://111qqz.github.io/2015/07/cf558c/","publishdate":"2015-07-21T03:00:00Z","readingtime":2,"relpermalink":"/2015/07/cf558c/","section":"post","summary":"http://codeforces.com/contest/558/problem/C 题目大意是说，给定N个数，可以对任意数进行任意次两种操作，×2，和/2（整除） 问最少操作多少次，可以让所有数相等。 嘛，前半个小时A掉了前两","tags":["brute force","greedy"],"title":"codeforces 558c Amr and Chemistry (贪心)","type":"post","url":"/2015/07/cf558c/","weight":0,"wordcount":659},{"author":null,"categories":["ACM"],"content":null,"date":1437117420,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1437117420,"objectID":"d5561c832e6b0f8deb2ea11f19ffe3af","permalink":"https://111qqz.github.io/2015/07/poj1564/","publishdate":"2015-07-17T07:17:00Z","readingtime":1,"relpermalink":"/2015/07/poj1564/","section":"post","summary":"http://poj.org/problem?id=1564 dfs 三个参数 x,sum,k, x表示开始的坐标,sum表示当前的和,k表示这是一组答案中的第几个数,是用来记录路径的\u0026hellip; 调了好久没写出来\u0026hel","tags":["dfs"],"title":"POJ 1564 Sum It Up (DFS+剪枝）","type":"post","url":"/2015/07/poj1564/","weight":0,"wordcount":437},{"author":null,"categories":["ACM"],"content":null,"date":1436950140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436950140,"objectID":"1956c9fe4a4b0fc8657965786967cdeb","permalink":"https://111qqz.github.io/2015/07/hust20150715cacoprime/","publishdate":"2015-07-15T08:49:00Z","readingtime":0,"relpermalink":"/2015/07/hust20150715cacoprime/","section":"post","summary":"","tags":null,"title":"hust2015暑假集训 0715 c  a coprime","type":"post","url":"/2015/07/hust20150715cacoprime/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1436923920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436923920,"objectID":"5fceaca01251c9c2d01bfafda3c20414","permalink":"https://111qqz.github.io/2015/07/0714c/","publishdate":"2015-07-15T01:32:00Z","readingtime":1,"relpermalink":"/2015/07/0714c/","section":"post","summary":"/************************************************************************* \u0026gt; File Name: code/2015summer/0714/C_DFS.cpp \u0026gt; Author: 111qqz \u0026gt; Email: rkz2013@126.com \u0026gt; Created Time: 2015年07月15日 星期三 08时59分30秒 ************************************************************************/ #include #include #include #include #include #include #include #include #include #include #include #include using namespace std; #define REP(i, n) for (int i=0;itypedef long long LL; typedef unsigned long long ULL; const int N=50;","tags":null,"title":"0714c","type":"post","url":"/2015/07/0714c/","weight":0,"wordcount":182},{"author":null,"categories":["ACM"],"content":null,"date":1436851860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436851860,"objectID":"bef09a194b97575f13955622117381e8","permalink":"https://111qqz.github.io/2015/07/0714m/","publishdate":"2015-07-14T05:31:00Z","readingtime":0,"relpermalink":"/2015/07/0714m/","section":"post","summary":"","tags":null,"title":"0714M","type":"post","url":"/2015/07/0714m/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1436780160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436780160,"objectID":"b88a2b86e43fa4e06da0bce3b1d54266","permalink":"https://111qqz.github.io/2015/07/hust20150713aadangeroustrip/","publishdate":"2015-07-13T09:36:00Z","readingtime":1,"relpermalink":"/2015/07/hust20150713aadangeroustrip/","section":"post","summary":"http://acm.hust.edu.cn/vjudge/contest/view.action?cid=82557#problem/A Zk的解法：拆点，把每一个点存成两份，r[i]和r[n+i] 连边的时候如果u和v相连，我们就分别连 u\u0026amp;\u0026amp;v; 和 u+n\u0026amp;\u0026amp;v;+n 和 u\u0026amp;\u0026amp;v;+n 其中最后一个存法是要使用魔法的","tags":null,"title":"hust2015暑假集训 0713 A  a dangerous trip","type":"post","url":"/2015/07/hust20150713aadangeroustrip/","weight":0,"wordcount":251},{"author":null,"categories":["ACM"],"content":null,"date":1436773260,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436773260,"objectID":"d857aee896c859b632a41416c8f6b86f","permalink":"https://111qqz.github.io/2015/07/hust20150713broadsystem/","publishdate":"2015-07-13T07:41:00Z","readingtime":0,"relpermalink":"/2015/07/hust20150713broadsystem/","section":"post","summary":"","tags":null,"title":"hust暑假集训2015 0713B Road System","type":"post","url":"/2015/07/hust20150713broadsystem/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1436672340,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436672340,"objectID":"a6c90fbab5923ba19dbe6ac5f41a7df7","permalink":"https://111qqz.github.io/2015/07/cf556ccaseofmatryoshkas/","publishdate":"2015-07-12T03:39:00Z","readingtime":1,"relpermalink":"/2015/07/cf556ccaseofmatryoshkas/","section":"post","summary":"http://codeforces.com/contest/556/problem/C 果然一晚上不睡觉会导致读错题么\u0026hellip; 需要注意的是 如果有一个是 1 2 4 6 那么 1,2是不必拆开的\u0026hellip;. 然后我们发现,只有以","tags":null,"title":"cf 556C Case of Matryoshkas","type":"post","url":"/2015/07/cf556ccaseofmatryoshkas/","weight":0,"wordcount":481},{"author":null,"categories":["ACM"],"content":null,"date":1436649420,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436649420,"objectID":"eca0a0dbe1ee1c6d991a1bec9e434c40","permalink":"https://111qqz.github.io/2015/07/","publishdate":"2015-07-11T21:17:00Z","readingtime":2,"relpermalink":"/2015/07/","section":"post","summary":"最大连续区间和是一个经典的问题。给定一个长度为n的序列a[1],a[2]\u0026hellip;a[n-1],a[n]，求一个连续的子序列a[i],","tags":null,"title":"最大连续区间和的算法总结","type":"post","url":"/2015/07//","weight":0,"wordcount":807},{"author":null,"categories":["ACM"],"content":null,"date":1436322300,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436322300,"objectID":"f50e24861c9f7a166d3070e466139c1e","permalink":"https://111qqz.github.io/2015/07/poj3278/","publishdate":"2015-07-08T02:25:00Z","readingtime":1,"relpermalink":"/2015/07/poj3278/","section":"post","summary":"http://poj.org/problem?id=3278 bfs,用到了stl的queue /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分05秒 File Name :3278.cpp ************************************************ */ #include \u0026lt;algorithm\u0026gt; #include \u0026lt;cstdio\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;stack\u0026gt; #include \u0026lt;queue\u0026gt;","tags":["bfs"],"title":"poj 3278 catch that cow","type":"post","url":"/2015/07/poj3278/","weight":0,"wordcount":152},{"author":null,"categories":["ACM"],"content":null,"date":1436321280,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436321280,"objectID":"feb37f9dc538b7c1c6987109d90257bd","permalink":"https://111qqz.github.io/2015/07/poj1028/","publishdate":"2015-07-08T02:08:00Z","readingtime":1,"relpermalink":"/2015/07/poj1028/","section":"post","summary":"http://poj.org/problem?id=1028 /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分01秒 File Name :1028.cpp ************************************************ */ #include \u0026lt;algorithm\u0026gt; #include \u0026lt;cstdio\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;map\u0026gt; #include \u0026lt;stack\u0026gt; #include \u0026lt;queue\u0026gt; using namespace std; typedef long long LL; const int inf = 8E8; stack\u0026lt;string\u0026gt; backstack; stack\u0026lt;string\u0026gt; forwardstack;","tags":["stl"],"title":"POJ 1028 Web Navigation","type":"post","url":"/2015/07/poj1028/","weight":0,"wordcount":129},{"author":null,"categories":["ACM"],"content":null,"date":1436318820,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1436318820,"objectID":"42e135abaeebc20638354acdd1c83a11","permalink":"https://111qqz.github.io/2015/07/poj2643/","publishdate":"2015-07-08T01:27:00Z","readingtime":1,"relpermalink":"/2015/07/poj2643/","section":"post","summary":"题目链接：http://poj.org/problem?id=2643 在考stl的map\u0026hellip; 我是定义了一个string 指向str","tags":["map","stl"],"title":"poj 2643 election","type":"post","url":"/2015/07/poj2643/","weight":0,"wordcount":422},{"author":null,"categories":["ACM"],"content":null,"date":1435896600,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1435896600,"objectID":"47688a1e78b418730fa0dcd39a54b4e4","permalink":"https://111qqz.github.io/2015/07/poj3481/","publishdate":"2015-07-03T04:10:00Z","readingtime":1,"relpermalink":"/2015/07/poj3481/","section":"post","summary":"http://acm.hdu.edu.cn/showproblem.php?pid=1908 看到有两个优先级，然后题目中又有queue。。。就想到了优先队列。。。 但是优先队列的cmp函数没搞懂，因为比较的是结构体，好像要重载\u0026lt","tags":["stl","优先队列"],"title":"poj 3481 double queues","type":"post","url":"/2015/07/poj3481/","weight":0,"wordcount":238},{"author":null,"categories":["ACM"],"content":null,"date":1435865640,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1435865640,"objectID":"7f11b0753e5544d7e53b555374006c26","permalink":"https://111qqz.github.io/2015/07/stl/","publishdate":"2015-07-02T19:34:00Z","readingtime":0,"relpermalink":"/2015/07/stl/","section":"post","summary":"","tags":["stl","优先队列"],"title":"STL容器之优先队列","type":"post","url":"/2015/07/stl/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1435864860,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1435864860,"objectID":"86b407701b68a335d900b1054fbab6fd","permalink":"https://111qqz.github.io/2015/07/poj1833/","publishdate":"2015-07-02T19:21:00Z","readingtime":1,"relpermalink":"/2015/07/poj1833/","section":"post","summary":"http://poj.org/problem?id=1833 还是next_permutation. 这次是Int类型的 需要注意的是next_permutation是先判断时候有后继，返回一个bool值","tags":["stl"],"title":"poj 1833 排列","type":"post","url":"/2015/07/poj1833/","weight":0,"wordcount":263},{"author":null,"categories":["ACM"],"content":null,"date":1435862520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1435862520,"objectID":"cd663a83b4f36ed791bc07b847453040","permalink":"https://111qqz.github.io/2015/07/next_permutation/","publishdate":"2015-07-02T18:42:00Z","readingtime":2,"relpermalink":"/2015/07/next_permutation/","section":"post","summary":"**这是一个求一个排序的下一个排列的函数，可以遍历全排列,要包含头文件 下面是以前的笔记 与之完全相反的函数还有prev_permutation","tags":["stl"],"title":"next_permutation函数 (生成全排列)","type":"post","url":"/2015/07/next_permutation/","weight":0,"wordcount":639},{"author":null,"categories":["ACM"],"content":null,"date":1435862460,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":300,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1435862460,"objectID":"b59146b25da9675a64fc9cd8b40b9bd9","permalink":"https://111qqz.github.io/2015/07/poj1256/","publishdate":"2015-07-02T18:41:00Z","readingtime":1,"relpermalink":"/2015/07/poj1256/","section":"post","summary":"http://poj.org/problem?id=1256 题意是说求出一个字符串的全排列，按字典序 需要注意的是字典序和传统意义上的字典序不同 重新定义了,A 需要自己重写cmp函数。 next_perm","tags":["stl"],"title":"poj 1256 Anagram","type":"post","url":"/2015/07/poj1256/","weight":0,"wordcount":202},{"author":null,"categories":["ACM"],"content":null,"date":1432737900,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1432737900,"objectID":"b22f85538ef18c7db9d5db881bcea0ec","permalink":"https://111qqz.github.io/2015/05/cf548b/","publishdate":"2015-05-27T14:45:00Z","readingtime":1,"relpermalink":"/2015/05/cf548b/","section":"post","summary":"http://codeforces.com/problemset/problem/548/B 比赛的时候不懂为什么就没做出来\u0026hellip;. 其实很容易想到一个o(q*(n+m))的做法\u0026hellip; 就是每次更新，要同时更新当前更","tags":["brute force"],"title":"codeforces  548B  Mike and Fun","type":"post","url":"/2015/05/cf548b/","weight":0,"wordcount":367},{"author":null,"categories":["ACM"],"content":null,"date":1432737480,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1432737480,"objectID":"61b133fe1b5aa20baa5bd78cc89756d8","permalink":"https://111qqz.github.io/2015/05/cf548a/","publishdate":"2015-05-27T14:38:00Z","readingtime":1,"relpermalink":"/2015/05/cf548a/","section":"post","summary":"http://codeforces.com/problemset/problem/548/A 水题。分割成K个，每个串判断是否回文，如果都是就yes，否则no 需要注意的是，可能不能正好分成长度相同的K个，这个时候也要No /* *********************************************** Author :111qqz Created Time","tags":null,"title":"codeforces  548 A. Mike and Fax","type":"post","url":"/2015/05/cf548a/","weight":0,"wordcount":177},{"author":null,"categories":["ACM"],"content":null,"date":1429874040,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":3500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429874040,"objectID":"7e7a786be86337caba7441c9eb716644","permalink":"https://111qqz.github.io/2015/04/cstlmapkeyvalue/","publishdate":"2015-04-24T11:14:00Z","readingtime":7,"relpermalink":"/2015/04/cstlmapkeyvalue/","section":"post","summary":"map是用来存放键值对的数据结构，可以很方便快速的根据key查到相应的value。假如存储学生和其成绩（假定不存在重名，当然可以对重名加以区","tags":null,"title":"C++ STL中Map的按Key排序和按Value排序","type":"post","url":"/2015/04/cstlmapkeyvalue/","weight":0,"wordcount":3457},{"author":null,"categories":["ACM"],"content":null,"date":1429306140,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429306140,"objectID":"bd81bec0349e7bf6ef9caddee79702bf","permalink":"https://111qqz.github.io/2015/04/poj2492/","publishdate":"2015-04-17T21:29:00Z","readingtime":1,"relpermalink":"/2015/04/poj2492/","section":"post","summary":"http://poj.org/problem?id=2492 Hint Huge input,scanf is recommended. 也是带种类的冰茶几。 由于只分了两类\u0026hellip;我们还是可以按照上道题的做法。。 感觉完全是一样的题啊。。 结果一直WA。。。。 最","tags":["并查集"],"title":"poj 2492  A Bug's Life (并查集)","type":"post","url":"/2015/04/poj2492/","weight":0,"wordcount":323},{"author":null,"categories":["ACM"],"content":null,"date":1429285920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429285920,"objectID":"29bf192e25eb486bc926fc0b1ba37952","permalink":"https://111qqz.github.io/2015/04/poj1703/","publishdate":"2015-04-17T15:52:00Z","readingtime":1,"relpermalink":"/2015/04/poj1703/","section":"post","summary":"http://poj.org/problem?id=1703 种类冰茶几\u0026hellip;看到还有一种算是拓展的交加权冰茶几？ 看到有做法是在开一个数组。。。记录是哪一组\u0026hellip;. 但是因为只有两组","tags":["并查集"],"title":"poj 1703  Find them, Catch them (并查集)","type":"post","url":"/2015/04/poj1703/","weight":0,"wordcount":452},{"author":null,"categories":["ACM"],"content":null,"date":1429168560,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429168560,"objectID":"6f60d21e7173aa7375ce068ab48f96f9","permalink":"https://111qqz.github.io/2015/04/cf535c/","publishdate":"2015-04-16T07:16:00Z","readingtime":1,"relpermalink":"/2015/04/cf535c/","section":"post","summary":"http://codeforces.com/problemset/problem/535/C 题读了好几遍才读懂。 题意是给出一个等差数列，操作严格要求从最左边不为零的连续m个数减去1，最多执行t次后问离最左边最远的位置在哪里。 有两个","tags":["math"],"title":"codeforces 535 C.Tavas and karafs (解方程)","type":"post","url":"/2015/04/cf535c/","weight":0,"wordcount":499},{"author":null,"categories":["ACM"],"content":null,"date":1429044000,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429044000,"objectID":"5476253c16b2d0575fd15cf6f718d053","permalink":"https://111qqz.github.io/2015/04/wacf534d-handshakes/","publishdate":"2015-04-14T20:40:00Z","readingtime":3,"relpermalink":"/2015/04/wacf534d-handshakes/","section":"post","summary":"D. Handshakes time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output On February, 30th n students came in the Center for Training Olympiad Programmers (CTOP) of the Berland State University. They came one by one, one after another. Each of them went in, and before sitting down at his desk, greeted with those who were present in the room by shaking","tags":null,"title":"[WA]cf 534 D. Handshakes","type":"post","url":"/2015/04/wacf534d-handshakes/","weight":0,"wordcount":1070},{"author":null,"categories":["ACM"],"content":null,"date":1429043880,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429043880,"objectID":"359df4e1a3de37f19704f4adcc7a1c2a","permalink":"https://111qqz.github.io/2015/04/cf534c/","publishdate":"2015-04-14T20:38:00Z","readingtime":1,"relpermalink":"/2015/04/cf534c/","section":"post","summary":"http://codeforces.com/problemset/problem/534/C 题意是说一共有N个骰子，第I个筛子一共有di面\u0026hellip;现在知道这些骰子的点数之和，问对于每一个骰子不能取得值有多少个。 乍一看有点不","tags":["math"],"title":"codeforces  534 C  Polycarpus' Dice","type":"post","url":"/2015/04/cf534c/","weight":0,"wordcount":390},{"author":null,"categories":["ACM"],"content":null,"date":1429043520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429043520,"objectID":"d3dcc1e687327a0a9da6e4539900a7f8","permalink":"https://111qqz.github.io/2015/04/cf534b/","publishdate":"2015-04-14T20:32:00Z","readingtime":1,"relpermalink":"/2015/04/cf534b/","section":"post","summary":"http://codeforces.com/problemset/problem/534/B 题意是说一辆车，每秒内的速度恒定\u0026hellip;第I秒到第I+1秒的速度变化不超过D。初始速度为V1，末速度为V2，经过时间t，问最远能走","tags":["math"],"title":"cf 534B. Covered Path","type":"post","url":"/2015/04/cf534b/","weight":0,"wordcount":339},{"author":null,"categories":["ACM"],"content":null,"date":1429043220,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":2600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1429043220,"objectID":"babbbebeb2debaca401d16715756d52d","permalink":"https://111qqz.github.io/2015/04/cf535btavasandsaddas/","publishdate":"2015-04-14T20:27:00Z","readingtime":6,"relpermalink":"/2015/04/cf535btavasandsaddas/","section":"post","summary":"B. Tavas and SaDDas time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output Once again Tavas started eating coffee mix without water! Keione told him that it smells awful, but he didn\u0026rsquo;t stop doing that. That\u0026rsquo;s why Keione told his smart friend, SaDDas to punish him! SaDDas took Tavas\u0026rsquo; headphones and told him: \u0026ldquo;If you solve the following problem, I\u0026rsquo;ll return","tags":null,"title":"cf 535B Tavas and SaDDas","type":"post","url":"/2015/04/cf535btavasandsaddas/","weight":0,"wordcount":2531},{"author":null,"categories":["ACM"],"content":null,"date":1428893700,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428893700,"objectID":"a2f35c815446f015a60daf5591b9f95a","permalink":"https://111qqz.github.io/2015/04/cf534a/","publishdate":"2015-04-13T02:55:00Z","readingtime":1,"relpermalink":"/2015/04/cf534a/","section":"post","summary":"A. Exam time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output An exam for n students will take place in a long and narrow room, so the students will sit in a line in some order. The teacher suspects that students with adjacent numbers (i and i + 1) always studied side by side and became friends and if they take","tags":["构造"],"title":"codeforces 534 A. Exam","type":"post","url":"/2015/04/cf534a/","weight":0,"wordcount":470},{"author":null,"categories":["ACM"],"content":null,"date":1428493920,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428493920,"objectID":"97a237b5ff9cca61a6c0d69d59664fb9","permalink":"https://111qqz.github.io/2015/04/cf479d/","publishdate":"2015-04-08T11:52:00Z","readingtime":2,"relpermalink":"/2015/04/cf479d/","section":"post","summary":"http://codeforces.com/problemset/problem/479/D 题意是说有一把尺子，本身有一些刻度，然后需要测量x和y，问最少需要添加多少个刻度，如果需要，这些刻度分别添加在什么位置。 一开始没有看清题目","tags":["binary search","greedy"],"title":"codeforces 479D. Long Jumps","type":"post","url":"/2015/04/cf479d/","weight":0,"wordcount":610},{"author":null,"categories":["ACM"],"content":null,"date":1428493200,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428493200,"objectID":"9ac59d57c9b879f18bd6425c2116269f","permalink":"https://111qqz.github.io/2015/04/cf525b/","publishdate":"2015-04-08T11:40:00Z","readingtime":2,"relpermalink":"/2015/04/cf525b/","section":"post","summary":"http://codeforces.com/problemset/problem/525/B fbdcea\u0026lt;br\u0026gt;\u0026lt;/br\u0026gt;\u0026lt;br\u0026gt;\u0026lt;/br\u0026gt;题意是说一个字符串，进行m次颠倒变换（从a","tags":["greedy"],"title":"codeforces 525 B. Pasha and String","type":"post","url":"/2015/04/cf525b/","weight":0,"wordcount":552},{"author":null,"categories":["ACM"],"content":null,"date":1428492720,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428492720,"objectID":"e974aa3025d079aa74969d2f6b99042f","permalink":"https://111qqz.github.io/2015/04/cf482/","publishdate":"2015-04-08T11:32:00Z","readingtime":1,"relpermalink":"/2015/04/cf482/","section":"post","summary":"C - C **Time Limit:**1000MS **Memory Limit:**262144KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Permutation_p_ is an ordered set of integers _p_1, _p_2, \u0026hellip;, _p__n_, consisting of _n_ distinct positive integers not larger than _n_. We\u0026rsquo;ll denote as_n_ the length of permutation _p_1, _p_2, \u0026hellip;, _p__n_. Your task is to find such permutation p of length n, that the group of numbers |_p_1 - _p_2|, |_p_2 - p_3|, \u0026hellip;,","tags":["greedy","构造"],"title":"codeforces 482 A. Diverse Permutation（构造）","type":"post","url":"/2015/04/cf482/","weight":0,"wordcount":347},{"author":null,"categories":["ACM"],"content":null,"date":1428492240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428492240,"objectID":"8933d774f1879c0f4e69812a5df2d4ea","permalink":"https://111qqz.github.io/2015/04/cf479c/","publishdate":"2015-04-08T11:24:00Z","readingtime":1,"relpermalink":"/2015/04/cf479c/","section":"post","summary":"http://codeforces.com/problemset/problem/479/C /* *********************************************** Author :111qqz Created Time :2016年02月22日 星期一 23时31分10秒 File Name :code/cf/problem/479C.cpp ************************************************ */ #include #include #include #include #include using namespace std; int n,ans; const int N=1E4+5; int a[N],b[N]; struct Q {int a,b; }q[N]; bool cmp(Q x, Q y) { if ( x.a\u0026lt;y.a) return true; if ( x.a==y.a","tags":["greedy"],"title":"codeforces 47 C. Exams","type":"post","url":"/2015/04/cf479c/","weight":0,"wordcount":127},{"author":null,"categories":["ACM"],"content":null,"date":1428338160,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428338160,"objectID":"6b78882de0216d828c580160e0c270b3","permalink":"https://111qqz.github.io/2015/04/hdu1160/","publishdate":"2015-04-06T16:36:00Z","readingtime":2,"relpermalink":"/2015/04/hdu1160/","section":"post","summary":"FatMouse\u0026rsquo;s Speed Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 10172 Accepted Submission(s): 4521 Special Judge Problem Description FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the","tags":["dp","区间dp"],"title":"hdu 1160  FatMouse's Speed (最长上升子序列)","type":"post","url":"/2015/04/hdu1160/","weight":0,"wordcount":682},{"author":null,"categories":["ACM"],"content":null,"date":1428337380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428337380,"objectID":"d0abcf3c4a64ec1f21f15d6ecaca48bd","permalink":"https://111qqz.github.io/2015/04/hdu1260/","publishdate":"2015-04-06T16:23:00Z","readingtime":2,"relpermalink":"/2015/04/hdu1260/","section":"post","summary":"Tickets **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 1408 Accepted Submission(s): 687 ** Problem Description Jesus, what a great movie! Thousands of people are rushing to the cinema. However, this is really a tuff time for Joe who sells the film tickets. He is wandering when could he go back home as early as possible. A good approach, reducing the total time of tickets selling,","tags":["dp"],"title":"hdu 1260 tickets","type":"post","url":"/2015/04/hdu1260/","weight":0,"wordcount":615},{"author":null,"categories":["ACM"],"content":null,"date":1428257100,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428257100,"objectID":"94195855cf01b90ff16a79ddfe243f5f","permalink":"https://111qqz.github.io/2015/04/hdu1176/","publishdate":"2015-04-05T18:05:00Z","readingtime":3,"relpermalink":"/2015/04/hdu1176/","section":"post","summary":"免费馅饼 **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 29065 Accepted Submission(s): 9921 ** Problem Description 都说天上不会掉馅饼，但有一天gameboy正走在回家的小径上，忽然天上掉下大把大把的馅饼。说来","tags":["dp"],"title":"hdu 1176 免费馅饼(二维dp)","type":"post","url":"/2015/04/hdu1176/","weight":0,"wordcount":1108},{"author":null,"categories":["ACM"],"content":null,"date":1428246840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428246840,"objectID":"7015f8410c84c3df9570fa624a709193","permalink":"https://111qqz.github.io/2015/04/hdu1114/","publishdate":"2015-04-05T15:14:00Z","readingtime":2,"relpermalink":"/2015/04/hdu1114/","section":"post","summary":"F - Piggy-Bank **Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Before ACM can do anything, a budget must be prepared and the necessary financial support obtained. The main income for this action comes from Irreversibly Bound Money (IBM). The idea behind is simple. Whenever some ACM member has any small money, he takes all the coins and throws them into a piggy-bank. You know that","tags":["dp","区间dp","完全背包"],"title":"hdu 1114 - Piggy-Bank (完全背包)","type":"post","url":"/2015/04/hdu1114/","weight":0,"wordcount":707},{"author":null,"categories":["ACM"],"content":null,"date":1428243120,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428243120,"objectID":"0a238dee11528590a07c4a70196d1dde","permalink":"https://111qqz.github.io/2015/04/hdu1087/","publishdate":"2015-04-05T14:12:00Z","readingtime":1,"relpermalink":"/2015/04/hdu1087/","section":"post","summary":"E - Super Jumping! Jumping! Jumping! **Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description Nowadays, a kind of chess game called \u0026ldquo;Super Jumping! Jumping! Jumping!\u0026rdquo; is very popular in HDU. Maybe you are a good boy, and know little about this game, so I introduce it to you now. The game can be played by two or more than two players. It consists of a c","tags":["dp","区间dp"],"title":"hdu 1087  - Super Jumping! Jumping! Jumping! (最长上升子序列)","type":"post","url":"/2015/04/hdu1087/","weight":0,"wordcount":492},{"author":null,"categories":["ACM"],"content":null,"date":1428210240,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428210240,"objectID":"a218bf979cf217ebf26d1ab1fbe9c116","permalink":"https://111qqz.github.io/2015/04/hdu1069/","publishdate":"2015-04-05T05:04:00Z","readingtime":2,"relpermalink":"/2015/04/hdu1069/","section":"post","summary":"C - Monkey and Banana **Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d \u0026amp; %I64u Submit Status Description A group of researchers are designing an experiment to test the IQ of a monkey. They will hang a banana at the roof of a building, and at the mean time, provide the monkey with some blocks. If the monkey is clever enough, it shall be able to reach the banana by placing","tags":["dp","最长下降子序列"],"title":"hdu1069 Monkey and Banana (最长下降子序列)","type":"post","url":"/2015/04/hdu1069/","weight":0,"wordcount":847},{"author":null,"categories":null,"content":null,"date":1428210240,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1428210240,"objectID":"","permalink":"https://111qqz.github.io/tags/%E6%9C%80%E9%95%BF%E4%B8%8B%E9%99%8D%E5%AD%90%E5%BA%8F%E5%88%97/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/%E6%9C%80%E9%95%BF%E4%B8%8B%E9%99%8D%E5%AD%90%E5%BA%8F%E5%88%97/","section":"tags","summary":"","tags":null,"title":"最长下降子序列","type":"tags","url":"/tags/%E6%9C%80%E9%95%BF%E4%B8%8B%E9%99%8D%E5%AD%90%E5%BA%8F%E5%88%97/","weight":0,"wordcount":0},{"author":null,"categories":["ACM"],"content":null,"date":1428159360,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428159360,"objectID":"8edfc1c7b09ebb417778082253cbc7cc","permalink":"https://111qqz.github.io/2015/04/hdu1171/","publishdate":"2015-04-04T14:56:00Z","readingtime":3,"relpermalink":"/2015/04/hdu1171/","section":"post","summary":"Big Event in HDU **Time Limit: 10000/5000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 26534 Accepted Submission(s): 9332 ** Problem Description Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don\u0026rsquo;t know that Computer College had ever been split into Computer College and Software College in 2002. The splitting is absolutely a big event in HDU! At the same time, it","tags":["01背包","dp","母函数"],"title":"hdu 1171 Big Event in HDU （母函数，01背包）","type":"post","url":"/2015/04/hdu1171/","weight":0,"wordcount":1013},{"author":null,"categories":["ACM"],"content":null,"date":1428149520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":1000,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428149520,"objectID":"55feae2dcba870cf1d38a525a63239cd","permalink":"https://111qqz.github.io/2015/04/hdu1203/","publishdate":"2015-04-04T12:12:00Z","readingtime":2,"relpermalink":"/2015/04/hdu1203/","section":"post","summary":"I NEED A OFFER! **Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others) Total Submission(s): 18287 Accepted Submission(s): 7320 ** Problem Description Speakless很早就想出国，现在他已经考完了所有需要的考试，准备了所有要准备的材料，于是，","tags":["01背包","dp"],"title":"hdu 1203 I NEED A OFFER! （01背包）","type":"post","url":"/2015/04/hdu1203/","weight":0,"wordcount":931},{"author":null,"categories":["ACM"],"content":null,"date":1428137580,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1428137580,"objectID":"243ef4304b7925faef0c97eb22f5fc8f","permalink":"https://111qqz.github.io/2015/04/hdu2546/","publishdate":"2015-04-04T08:53:00Z","readingtime":2,"relpermalink":"/2015/04/hdu2546/","section":"post","summary":"饭卡 **Time Limit: 5000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 14225 Accepted Submission(s): 4945 ** Problem Description 电子科大本部食堂的饭卡有一种很诡异的设计，即在购买之前判断余额。如果购买一个商品之前，卡上的剩余金","tags":["01背包","dp"],"title":"hdu 2546 饭卡 （01背包）","type":"post","url":"/2015/04/hdu2546/","weight":0,"wordcount":634},{"author":null,"categories":["ACM"],"content":null,"date":1427798400,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":600,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1427798400,"objectID":"a79a84cfb26500dc8c7a3f3a688bc043","permalink":"https://111qqz.github.io/2015/03/hdu4882/","publishdate":"2015-03-31T10:40:00Z","readingtime":2,"relpermalink":"/2015/03/hdu4882/","section":"post","summary":"ZCC Loves Codefires Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 32768/32768 K (Java/Others) Total Submission(s): 988 Accepted Submission(s): 500 Problem Description Though ZCC has many Fans, ZCC himself is a crazy Fan of a coder, called \u0026ldquo;Memset137\u0026rdquo;. It was on Codefires(CF), an online competitive programming site, that ZCC knew Memset137, and immediately became his fan. But why? Because Memset137 can solve all problem in rounds, without unsuccessful submissions; his estimation","tags":["greedy"],"title":"HDOJ 4882 Loves Codefires","type":"post","url":"/2015/03/hdu4882/","weight":0,"wordcount":563},{"author":null,"categories":["ACM"],"content":null,"date":1427785500,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1427785500,"objectID":"48707bcb1bfb8cdd4501927b162b2f3f","permalink":"https://111qqz.github.io/2015/03/poj1065/","publishdate":"2015-03-31T07:05:00Z","readingtime":2,"relpermalink":"/2015/03/poj1065/","section":"post","summary":"Wooden Sticks Time Limit: 1000MS Memory Limit: 10000K Total Submissions: 19008 Accepted: 8012 Description There is a pile of n wooden sticks. The length and weight of each stick are known in advance. The sticks are to be processed by a woodworking machine in one by one fashion. It needs some time, called setup time, for the machine to prepare processing a stick. The setup times are associated with cleaning","tags":["greedy"],"title":"poj 1065 Wooden Sticks","type":"post","url":"/2015/03/poj1065/","weight":0,"wordcount":698},{"author":null,"categories":["ACM"],"content":null,"date":1427708700,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1427708700,"objectID":"ec4bd9424cdf9ed6cbc8a161df43e193","permalink":"https://111qqz.github.io/2015/03/cf447b/","publishdate":"2015-03-30T09:45:00Z","readingtime":1,"relpermalink":"/2015/03/cf447b/","section":"post","summary":"简单贪心。 因为填的字母没有次数限制，所以最优策略很容易想到，就是在最后面填最大的。 不用实际去填，算出ans就可以。 #include \u0026lt;iostream\u0026gt; #include \u0026lt;cmath\u0026gt; #include \u0026lt;cstring\u0026gt; #include \u0026lt;algorithm\u0026gt; using namespace std; int main()","tags":["greedy"],"title":"codeforces 447 B. DZY Loves Strings","type":"post","url":"/2015/03/cf447b/","weight":0,"wordcount":116},{"author":null,"categories":["ACM"],"content":null,"date":1427704380,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1427704380,"objectID":"e549d1586db5a068b831d479d676785a","permalink":"https://111qqz.github.io/2015/03/hdu1009/","publishdate":"2015-03-30T08:33:00Z","readingtime":1,"relpermalink":"/2015/03/hdu1009/","section":"post","summary":"简单贪心\u0026hellip;. 需要注意的是数据是非负，所以有0的情况要考虑周全，基本都要特殊处理。 多WA了三次，不知道为什么交C++可以过，交G","tags":["greedy"],"title":"hdu 1009 FatMouse' Trade","type":"post","url":"/2015/03/hdu1009/","weight":0,"wordcount":198},{"author":null,"categories":["ACM"],"content":null,"date":1427367660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1427367660,"objectID":"1797e49697c88e998ee334b3070cfbc9","permalink":"https://111qqz.github.io/2015/03/hdu1050/","publishdate":"2015-03-26T11:01:00Z","readingtime":1,"relpermalink":"/2015/03/hdu1050/","section":"post","summary":"一开始算法想的有点问题。 坑点在于走廊两侧都有房间 也就是说room1和room2对应的位置是一样的 1 to 3 4to6 是没法同时完成的。 做法就是整个扫一遍","tags":["模拟"],"title":"hdu 1050 Moving Tables","type":"post","url":"/2015/03/hdu1050/","weight":0,"wordcount":147},{"author":null,"categories":["ACM"],"content":null,"date":1424330520,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":700,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1424330520,"objectID":"23141df4f44b243fae5063ea744a945b","permalink":"https://111qqz.github.io/2015/02/hdu5120/","publishdate":"2015-02-19T07:22:00Z","readingtime":2,"relpermalink":"/2015/02/hdu5120/","section":"post","summary":"题意：求两个相等的圆环的相交的面积\u0026hellip;. 简单计算几何+容斥原理？ 扇形面积公式记错调了半天2333333333 这题不难\u0026helli","tags":["计算几何"],"title":"hdu 5120 - Intersection","type":"post","url":"/2015/02/hdu5120/","weight":0,"wordcount":621},{"author":null,"categories":["ACM"],"content":null,"date":1424163840,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":800,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1424163840,"objectID":"7af6926ef78b10d2fffde7600eb90d34","permalink":"https://111qqz.github.io/2015/02/hdu5119/","publishdate":"2015-02-17T09:04:00Z","readingtime":2,"relpermalink":"/2015/02/hdu5119/","section":"post","summary":"Description Matt has N friends. They are playing a game together. Each of Matt’s friends has a magic number. In the game, Matt selects some (could be zero) of his friends. If the xor (exclusive-or) sum of the selected friends’magic numbers is no less than M , Matt wins. Matt wants to know","tags":["dp"],"title":"hdu 5119 - Happy Matt Friends（dp解法）","type":"post","url":"/2015/02/hdu5119/","weight":0,"wordcount":774},{"author":null,"categories":["ACM"],"content":null,"date":1424163660,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":900,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1424163660,"objectID":"89e4c9873f8ca33de3564f86d32d2ec2","permalink":"https://111qqz.github.io/2015/02/hdu5113/","publishdate":"2015-02-17T09:01:00Z","readingtime":2,"relpermalink":"/2015/02/hdu5113/","section":"post","summary":"题意是说用k重颜色填充n*m的方格，第i种颜色要用ci次，保证ci（i属于1..k）的和为n\u0026quot;m，问是否有可行解，若有，输出任意一","tags":["模拟"],"title":"hdu 5113  Black And White","type":"post","url":"/2015/02/hdu5113/","weight":0,"wordcount":878},{"author":null,"categories":["ACM"],"content":null,"date":1424134680,"description":"","dir":"post/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":500,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":1424134680,"objectID":"1d8f4e8c3021f9ce72411c635175a78e","permalink":"https://111qqz.github.io/2015/02/hdu2138/","publishdate":"2015-02-17T00:58:00Z","readingtime":1,"relpermalink":"/2015/02/hdu2138/","section":"post","summary":"2 ACM STEPS里的\u0026hellip;这题前面一道是求LCM\u0026hellip;.结果接下来就是这么一道。。。 朴素会超\u0026hellip;.筛法会爆\u0026h","tags":["math","Miller-Rabin素数测试","number theory"],"title":"hdu 2138 How many prime numbers","type":"post","url":"/2015/02/hdu2138/","weight":0,"wordcount":464},{"author":null,"categories":null,"content":null,"date":1424134680,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"taxonomy","lang":"en","lastmod":1424134680,"objectID":"","permalink":"https://111qqz.github.io/tags/miller-rabin%E7%B4%A0%E6%95%B0%E6%B5%8B%E8%AF%95/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/tags/miller-rabin%E7%B4%A0%E6%95%B0%E6%B5%8B%E8%AF%95/","section":"tags","summary":"","tags":null,"title":"Miller-Rabin素数测试","type":"tags","url":"/tags/miller-rabin%E7%B4%A0%E6%95%B0%E6%B5%8B%E8%AF%95/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://111qqz.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"top/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7a0da914bde98a7d3fcc7f6c5886633c","permalink":"https://111qqz.github.io/top/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/top/about/","section":"top","summary":"from hust to sensetime ","tags":null,"title":"","type":"top","url":"/top/about/","weight":0,"wordcount":4},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"zoj/","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"bb9f979a074ae5b97a9bef7bcd5dc95a","permalink":"https://111qqz.github.io/zoj/233/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/zoj/233/","section":"zoj","summary":"测试一下 ","tags":null,"title":"","type":"zoj","url":"/zoj/233/","weight":0,"wordcount":1},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://111qqz.github.io/search/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/","section":"search","summary":"","tags":null,"title":"Searches","type":"search","url":"/search/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://111qqz.github.io/top/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/top/","section":"top","summary":"","tags":null,"title":"Tops","type":"top","url":"/top/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"","permalink":"https://111qqz.github.io/zoj/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/zoj/","section":"zoj","summary":"","tags":null,"title":"Zojs","type":"zoj","url":"/zoj/","weight":0,"wordcount":0}]