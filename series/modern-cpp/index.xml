<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Modern cpp on 111qqz的小窝</title><link>https://111qqz.com/series/modern-cpp/</link><description>Recent content in Modern cpp on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Sun, 09 Sep 2018 13:01:45 +0000</lastBuildDate><atom:link href="https://111qqz.com/series/modern-cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>[施工中][c++11] move semantics &amp;&amp; perfect forwarding 学习笔记</title><link>https://111qqz.com/2018/09/cpp-move-semantics-notes/</link><pubDate>Sun, 09 Sep 2018 13:01:45 +0000</pubDate><guid>https://111qqz.com/2018/09/cpp-move-semantics-notes/</guid><description>
背景 move semantics是modern cpp中非常重要的特性，有必要详细了解一下。
updateime: 2022年7月2日
move semantic 基本的内容大家都很熟悉，就不说了
std::move 做了什么 std::move没有move任何内容，只是简单把传进来转换为对应的rvalue reference
实现为:
1 2template&amp;lt;typename T&amp;gt; 3constexpr std::remove_reference_t&amp;lt;T&amp;gt;&amp;amp;&amp;amp; move(T&amp;amp;&amp;amp; t) noexcept 4{ 5 return static_cast&amp;lt;std::remove_reference_t&amp;lt;T&amp;gt;&amp;amp;&amp;amp;&amp;gt;(t); 6} Tip 需要强调的是，无论传入的是const or non-const, lvalue or rvalue, ref or non-ref, std::move都会无条件(无差别)地转换为 rvalue refernece
被std::move的值处于一个什么状态 Tip moved from object is in a valid but unspecified state
说人话就是，对于moved from object，仍然可以对其进行一些操作，但是其state是未知的
我们拆开来看
这里提到的一些操作，其实只有三种:
析构函数 move assigment operator copy assigment operator 其余操作都是非法的。</description></item></channel></rss>