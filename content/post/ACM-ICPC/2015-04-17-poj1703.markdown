---
author: 111qqz
date: 2015-04-17 15:52:00+00:00
draft: false
title: poj 1703  Find them, Catch them (并查集)
type: post
url: /2015/04/poj1703/
categories:
- ACM
tags:
- 并查集
---










http://poj.org/problem?id=1703







种类冰茶几...看到还有一种算是拓展的交加权冰茶几？
看到有做法是在开一个数组。。。记录是哪一组....
但是因为只有两组....我们可以分别存...
因为不知道每一个D的两个人分别是哪个组（帮派？）
可以都存一下。
TLE了两次....应该是用了cin的事。。。改成scanf就变WA了。。。
想了下。原来是我对“not sure yet”的判断出现失误。
我开了一个v数组，记录在D下出现的人。
我误以为出现的人的帮派一定是确定的。
实际上并不是。
比如 1,3 5,7 3和7都出现了。但是3和7是一组与否显然还是“not sure yet”



```c++
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年03月03日 星期四 13时43分16秒
    File Name :code/poj/1703.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cstdio>
    #include <cmath>
    
    using namespace std;
    
    const int N=2E5+7;
    bool v[N];
    int f[N];
    int T,n,m,x,y;
    char ch;
    
    int root (int x)
    {
        if (f[x]!=x)
            f[x] = root(f[x]);
        return f[x];
    }
    void u(int a,int b)
    {
        f[root(a)]=root(b);
    }
    void ask(int a,int b)
    {
        //if (!v[a]||!v[b])
       // {
            
         //   return;
      //  }
        if (root(a)==root(b)||root(a+n)==root(b+n))
        {
            cout<<"In the same gang."<<endl;
        }
        else if (root(a)==root(b+n)||root(a+n)==root(b))
        {
            cout<<"In different gangs."<<endl;
        }
        else
        {
            cout<<"Not sure yet."<<endl;
        }
    }
    
    
    int main()
    {
        cin>>T;
        while (T--)
        {
            memset(v,false,sizeof(v));
            for ( int i = 0 ; i < N ; i++ )
                f[i] = i;
            scanf("%d %d",&n,&m);
            for ( int i = 1 ; i <= m ; i++ )
            {
    
                scanf("%s %d %d",&ch,&x,&y);
                if (ch=='A')
                {
                    ask(x,y);
                }
                else
                {
                    v[x] = true;
                    v[y] = true;
                    u(x,y+n);
                    u(x+n,y);
                }
            }
        }
        return 0;
    }
    


```
