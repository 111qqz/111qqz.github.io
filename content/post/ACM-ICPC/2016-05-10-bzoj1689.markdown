---
author: 111qqz
date: 2016-05-10 13:26:29+00:00
draft: false
title: 'BZOJ 1689: [Usaco2005 Open] Muddy roads 泥泞的路 （模拟）'
type: post
url: /2016/05/bzoj1689/
categories:
- ACM
tags:
- 模拟
---




## 1689: [Usaco2005 Open] Muddy roads 泥泞的路


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 311  Solved: 227
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1689)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1689)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1689)]


## Description






Farmer John has a problem: the dirt road from his farm to town has suffered in the recent rainstorms and now contains (1 <= N <= 10,000) mud pools. Farmer John has a collection of wooden planks of length L that he can use to bridge these mud pools. He can overlap planks and the ends do not need to be anchored on the ground. However, he must cover each pool completely. Given the mud pools, help FJ figure out the minimum number of planks he needs in order to completely cover all the mud pools.


    牧场里下了一场暴雨，泥泞道路上出现了许多水坑，约翰想用一批长度为L的木板将这些水坑盖住.    牧场里的道路可以看成一根数轴，每个水坑可以用数轴上的两个坐标表示，如(3，6)表示从3到6有一个长度为3的水坑．所有的水坑都是不重叠的，(3，6)和(6，9)可以出现在同一个输入数据中，因为它们是两个连续的水坑，但不重叠．




    请你帮助约翰计算最少要用多少块木板才能将所有水坑盖住







## Input






* Line 1: Two space-separated integers: N and L * Lines 2..N+1: Line i+1 contains two space-separated integers: s_i and e_i (0 <= s_i < e_i <= 1,000,000,000) that specify the start and end points of a mud pool along the road. The mud pools will not overlap. These numbers specify points, so a mud pool from 35 to 39 can be covered by a single board of length 4. Mud pools at (3,6) and (6,9) are not considered to overlap.


    第1行有二个用空格隔开的整数N和L．其中1≤N≤10000，表示水坑总数．L为木板长度．




接下来的N行每行有二个用整数si和ei(0≤si<ei≤109)，表示一个水坑的两个坐标．







## Output






* Line 1: The miminum number of planks FJ needs to use.





    一个整数，表示约翰盖住所有水坑最少要用多少块长为L的木板．







## Sample Input




3 3
1 6
13 17
8 12





## Sample Output




5





## HINT






![](http://www.lydsy.com/JudgeOnline/upload/201401/11(1).jpg)







## Source






[Silver](http://www.lydsy.com/JudgeOnline/problemset.php?search=Silver)






注意区间是左开右闭。



 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年05月10日 星期二 21时00分28秒
    File Name :code/bzoj/1689.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E4+76;
    int n;
    pi a[N];
    int L;
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	scanf("%d%d",&n,&L);
    	for ( int i = 1 ; i <= n ; i++) scanf("%d %d",&a[i].fst,&a[i].sec),a[i].sec--;
    	sort(a+1,a+n+1);
    
    	int ans = 0;
    	int lst = a[1].fst-1;
    	int num = (a[1].sec-lst+L-1)/L;
    	
    	ans +=num;
    	lst = lst+num*L;
    	for ( int i = 2 ; i <= n ; i++)
    	{
    	  //   cout<<"ans:"<<ans<<" lst:"<<lst<<endl;
    	     if (a[i].sec<=lst) continue;
    	     if (a[i].fst>lst) lst = a[i].fst-1;
    	     num = (a[i].sec-lst+L-1)/L;
    	     ans +=num;
    	     lst = lst + num*L;
    	}
    
    	printf("%d\n",ans);
    
    
    	
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



