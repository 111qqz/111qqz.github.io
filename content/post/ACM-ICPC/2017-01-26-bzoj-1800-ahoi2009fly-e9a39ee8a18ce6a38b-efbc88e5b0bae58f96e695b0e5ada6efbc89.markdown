---
author: 111qqz
date: 2017-01-26 15:42:07+00:00
draft: false
title: 'BZOJ 1800: [Ahoi2009]fly 飞行棋 （尺取+数学）'
type: post
url: /2017/01/bzoj-1800-ahoi2009fly--/
categories:
- ACM
tags:
- math
- 尺取法
---




## 1800: [Ahoi2009]fly 飞行棋


Time Limit: 10 Sec  Memory Limit: 64 MB
Submit: 1530  Solved: 1220
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1800)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1800)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1800)]


## Description




给出圆周上的若干个点，已知点与点之间的弧长，其值均为正整数，并依圆周顺序排列。 请找出这些点中有没有可以围成矩形的，并希望在最短时间内找出所有不重复矩形。




## Input




第一行为正整数N，表示点的个数，接下来N行分别为这N个点所分割的各个圆弧长度




## Output




所构成不重复矩形的个数




## Sample Input




8
1
2
2
3
1
1
3
3 






## Sample Output




3





## HINT






N<= 20
![](http://www.lydsy.com/JudgeOnline/images/1800.jpg)





思路：一开始的想法是枚举四条边，如果a==c&&b==d，就认为是找到了一个矩形。

重点在于判重，非常不好判断。一开始想要根绝四条边的长度hash一下，但是设想一个所有弧长都相等，且弧长较多的情况。

此时所有矩形的边长长度都相同，但是显然是不同的矩形，因此这种判断方法是错误的。

比较棒的思路是：**矩形的对角线一定是外接圆的直径。**

因此只需要找有多少条执行，假设为c，那么答案就是c*(c-1)/2（因为任意两条对角线就可以构成一个矩形）

这种做法的好处很明显，不需要判重。

至于如何找直径，直径是把圆周等分的弦，所以尺取找一下就好了。

复杂度O(n)

    
    /* ***********************************************
    Author :111qqz
    Created Time :2017年01月26日 星期四 18时43分21秒
    File Name :code/bzoj/r1800.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=25;
    int n,m;
    int a[N];
    int sum=0;
    LL ans=0;
    void ruler()
    {
        int head;
        int tail;
        int cur = 0 ;
        head = tail = 1;
        while (head<n)
        {
    	cur+=a[head];
    	while (cur>sum) cur-=a[tail++];
    	if (cur==sum)
    	{
    	    ans++;
    	}
    	head++;
        }
    
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    //	freopen("code/in.txt","r",stdin);
      #endif
    
    	scanf("%d",&n);
    	for ( int i = 1 ;i  <= n ; i++)
    	{
    	    scanf("%d",&a[i]);
    	    sum = sum + a[i];
    	}
    	//cout<<"sum:"<<sum<<endl;
    	if (sum%2==1)
    	{
    	    puts("0");
    	    return 0;
    	}
    	sum/=2;
    	ruler();
    	//cout<<"sum:"<<sum<<" ans:"<<ans<<endl;
    	ans=ans*(ans-1)/2;
    	printf("%lld\n",ans);
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    




