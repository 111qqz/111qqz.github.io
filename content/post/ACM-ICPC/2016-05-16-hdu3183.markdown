---
author: 111qqz
date: 2016-05-16 05:40:38+00:00
draft: false
title: hdu 3183 A Magic Lamp ( 暴力)
type: post
url: /2016/05/hdu3183/
categories:
- ACM
tags:
- brute force
---

[hdu3183题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=3183)



题意：n位长的数字串（n<=1000),删掉m个（m<=n），使得剩下的数字串表示的数字最小。 忽略前导0.

思路：暴力搞就可以。要注意每位数字是有一定位置的范围的。比如当前是第i位数字，后面还要取n-m-i位数字，那么第i位数字最多只能取到第k位，k=m+i,因为这样才能保证后面还有n-m-i位数字。



 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年05月16日 星期一 13时15分44秒
    File Name :code/hdu/3183.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    int n,m;
    
    int ans[N];
    char st[N];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	while (~scanf("%s %d",st,&m))
    	{
    	    n = strlen(st);
    	    ms(ans,0);
    
    	    int x = 0 ;
    	    for ( int i = 1 ; i <= n-m ; i++)
    	    {
    		int MIN = inf;
    		for ( int j = x+1 ; j <= m+i ; j++)
    		{
    		    int val = st[j-1]-'0';
    		    if (val<MIN)
    		    {
    			MIN = val;
    			x = j;
    		    }
    		}
    		ans[i] = MIN;
    	    }
    
    	    
    	    bool zero = true;
    	    bool output = false;
    	    for ( int i = 1; i <= n-m ; i++)
    	    {
    		if (ans[i]!=0) zero = false;
    		if (!zero)
    		{
    		    output = true;
    		    printf("%d",ans[i]);
    		}
    	    }
    	    if (output)
    	    printf("\n");
    	    else printf("0\n");
    
    	}
    	
    	
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



