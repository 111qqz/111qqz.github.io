---
author: 111qqz
date: 2016-07-19 11:55:09+00:00
draft: false
title: hdu 1846 Brave Game　（巴什博奕）
type: post
url: /2016/07/hdu-1846-brave-game/
categories:
- ACM
tags:
- 博弈论
- 巴什博奕
---

[hdu 1846 题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=1846)

题意：有n个石子，每次最多取m个，最少取１个，如果没有石子可取就输了。给出n,m，两个人都很聪明，问先手和后手谁赢。。



思路：

首先定义几个概念：

**p点：即必败点，某玩家位于此点，只要对方无失误，则必败**

**　　N点 ：即必胜点，某玩家位于此点，只要自己无失误，则必胜。**



**    一、 所有终结点都是必败点P（这道题目中，轮到谁取石子，还剩0个石子的时候，此人无石子可取，就输了）；**

**    二、所有一步能走到必败点P的就是N点；（这里是_存在一种_情况可以走到p点即可）**

**    三、通过一步操作只能到N点的就是P点；　（这里是_所有_的情况都只能走到n点）**

那么当m=3的时候，则有：

  x  ：0   1  2   3  4    5  6  7  8   9  10...

pos：P   N  N  N  P   N  N  N  P  N   N ...

１，２，３为n点是因为一步可以走到p点0,直观得说就是剩余１，２，３个石子的时候可以一次拿走。

４为p点是因为，不管怎么走，下一步一定是处于１，２，３这三个n点的，因此４是p点。



因此我们可以得出结论：n%(m+1)==0的时候，后手赢，否则先手赢。

（之前遇到的时候只记了结论，不清楚为什么，这下明白了orz









    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月19日 星期二 19时41分16秒
    File Name :code/hdu/1846.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    int n,m;
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	int T;
    	cin>>T;
    	while (T--)
    	{
    	    scanf("%d%d",&n,&m);
    	    if (n%(m+1)==0)
    	    {
    		puts("second");
    	    }
    	    else
    	    {
    		puts("first");
    	    }
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



