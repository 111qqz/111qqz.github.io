---
author: 111qqz
date: 2016-04-03 18:23:10+00:00
draft: false
title: 'BZOJ 1622: [Usaco2008 Open]Word Power 名字的能量 (暴力)'
type: post
url: /2016/04/bzoj1622/
categories:
- ACM
tags:
- brute force
---




## 1622: [Usaco2008 Open]Word Power 名字的能量


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 462  Solved: 228
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1622)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1622)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1622)]


## Description







    约翰想要计算他那N(1≤N≤1000)只奶牛的名字的能量．每只奶牛的名字由不超过1000个字待构成，没有一个名字是空字体串，  约翰有一张“能量字符串表”，上面有M(1≤M≤100)个代表能量的字符串．每个字符串由不超过30个字体构成，同样不存在空字符串．一个奶牛的名字蕴含多少个能量字符串，这个名字就有多少能量．所谓“蕴含”，是指某个能量字符串的所有字符都在名字串中按顺序出现（不一定一个紧接着一个）．




    所有的大写字母和小写字母都是等价的．比如，在贝茜的名字“Bessie”里，蕴含有“Be”




“sI”“EE”以及“Es”等等字符串，但不蕴含“lS”或“eB”．请帮约翰计算他的奶牛的名字的能量．







## Input







    第1行输入两个整数N和M，之后N行每行输入一个奶牛的名字，之后M行每行输入一个能量字符串．







## Output










    一共N行，每行一个整数，依次表示一个名字的能量．







## Sample Input




5 3
Bessie
Jonathan
Montgomery
Alicia
Angola
se
nGo
Ont

INPUT DETAILS:

There are 5 cows, and their names are "Bessie", "Jonathan",
"Montgomery", "Alicia", and "Angola". The 3 good strings are "se",
"nGo", and "Ont".








## Sample Output




1
1
2
0
1

OUTPUT DETAILS:

"Bessie" contains "se", "Jonathan" contains "Ont", "Montgomery" contains
both "nGo" and "Ont", Alicia contains none of the good strings, and
"Angola" contains "nGo".








思路：复杂度1E8..5S的时限。。。暴力。。



 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月04日 星期一 02时10分20秒
    File Name :code/bzoj/1622.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    string cow[N];
    string eng[105];
    int n,m;
    
    string  aha ( string x)
    {
        int len = x.length();
        for ( int i = 0 ; i < len ; i++)
        {
    	if (x[i]>='A'&&x[i]<='Z') x[i] = char(x[i]+32);
        }
        return x;
    }
    
    bool ok (string x,string y)
    {
      //  cout<<"x:"<<x<<" y:"<<y<<endl;
        int lx = x.length();
        int ly = y.length();
        int j = 0;
        for ( int i = 0 ; i < lx ; i++)
        {
    	if (x[i]==y[j]) j++;
    	if (j>=ly) return true;
        }
        return false;
    
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	ios::sync_with_stdio(false);
    	cin>>n>>m;
    	for ( int i = 1 ; i <= n ; i++) cin>>cow[i],cow[i]=aha(cow[i]);
    	for ( int i = 1 ; i <= m ; i++) cin>>eng[i],eng[i]=aha(eng[i]);
    
    
    	for ( int i = 1 ; i <= n ; i++)
    	{
    
    	    int ans =  0;
    	    for ( int j = 1 ; j <= m ; j++)
    	    {
    		if (ok(cow[i],eng[j])) ans++;
    	    }
    	    cout<<ans<<endl;
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    




