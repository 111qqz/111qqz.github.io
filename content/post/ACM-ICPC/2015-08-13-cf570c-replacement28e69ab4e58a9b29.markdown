---
author: 111qqz
date: 2015-08-13 22:55:00+00:00
draft: false
title: cf 570 C. Replacement (暴力)
type: post
url: /2015/08/cf570c-replacement/
categories:
- ACM
---




C. Replacement







time limit per test


2 seconds







memory limit per test


256 megabytes







input


standard input







output


standard output










Daniel has a string _s_, consisting of lowercase English letters and period signs (characters '.'). Let's define the operation of replacement as the following sequence of steps: find a substring ".." (two consecutive periods) in string _s_, of all occurrences of the substring let's choose the first one, and replace this substring with string ".". In other words, during the replacement operation, the first two consecutive periods are replaced by one. If string _s_ contains no two consecutive periods, then nothing happens.




Let's define _f_(_s_) as the minimum number of operations of replacement to perform, so that the string does not have any two consecutive periods left.




You need to process _m_ queries, the _i_-th results in that the character at position _x__i_ (1 ≤ _x__i_ ≤ _n_) of string _s_ is assigned value _c__i_. After each operation you have to calculate and output the value of _f_(_s_).




Help Daniel to process all queries.










Input




The first line contains two integers _n_ and _m_ (1 ≤ _n_, _m_ ≤ 300 000) the length of the string and the number of queries.




The second line contains string _s_, consisting of _n_ lowercase English letters and period signs.




The following _m_ lines contain the descriptions of queries. The _i_-th line contains integer _x__i_ and_c__i_ (1 ≤ _x__i_ ≤ _n_, _c__i_ -- a lowercas English letter or a period sign), describing the query of assigning symbol _c__i_ to position _x__i_.










Output




Print _m_ numbers, one per line, the _i_-th of these numbers must be equal to the value of _f_(_s_)after performing the _i_-th assignment.










Sample test(s)










input



    
    10 3<br></br>.b..bz....<br></br>1 h<br></br>3 c<br></br>9 f










output



    
    4<br></br>3<br></br>1










input



    
    4 4<br></br>.cc.<br></br>2 .<br></br>3 .<br></br>2 a<br></br>1 a










output



    
    1<br></br>3<br></br>1<br></br>1
















Note




Note to the first sample test (replaced periods are enclosed in square brackets).




The original string is ".b..bz....".





  * after the first query _f_(hb..bz....) = 4 ("hb[..]bz...."  ->  "hb.bz[..].." ->  "hb.bz[..]."  ->  "hb.bz[..]"  ->  "hb.bz.")
  * after the second query _f_(hbс.bz....) = 3 ("hbс.bz[..].."  -> "hbс.bz[..]."  ->  "hbс.bz[..]"  ->  "hbс.bz.")
  * after the third query _f_(hbс.bz..f.) = 1 ("hbс.bz[..]f."  ->  "hbс.bz.f.")



Note to the second sample test.




The original string is ".cc.".





  * after the first query: _f_(..c.) = 1 ("[..]c."  ->  ".c.")
  * after the second query: _f_(....) = 3 ("[..].."  ->  "[..]."  ->  "[..]"  ->  ".")
  * after the third query: _f_(.a..) = 1 (".a[..]"  ->  ".a.")
  * after the fourth query: _f_(aa..) = 1 ("aa[..]"  ->  "aa.")



对于每一个改变，如果是字母变成周期符号或者周期符号变成字母，我们称之为有效改变．




对于每个有效改变，只有当这个位置左边有周期符号的时候，会影响答案．




直接扫一遍即可．复杂度o(n+m)







抱歉之前代码帖错了．．．我的锅．．．







/*************************************************************************  
	> File Name: code/cf/#316/C.cpp  
	> Author: 111qqz  
	> Email: rkz2013@126.com   
	> Created Time: 2015年08月14日 星期五 00时54分50秒  
************************************************************************/




#include  
#include  
#include  
#include  
#include  
#include  
#include  
#include  
#include  
#include  
#include  
#include  
#define y0 abc111qqz  
#define y1 hust111qqz  
#define yn hez111qqz  
#define j1 cute111qqz  
#define tm crazy111qqz  
#define lr dying111qqz  
using namespace std;  
#define REP(i, n) for (int i=0;itypedef long long LL;  
typedef unsigned long long ULL;  
const int inf = 0x7fffffff;  
const int N=3E5+7;  
int n,m;  
char st[N];




int judge(char a,char b)  
{  
   if (a>='a'&&a;<='z'&&b;>='a'&&b;<='z') return 0;  
   if (a=='.'&&b;=='.') return 0;  
   if (a>='a'&&a;<='z'&&b;=='.') return 1;  
   if (a=='.'&&b;>='a'&&b;<='z') return -1;  
}  
int main()  
{  
   cin>>n>>m;  
   getchar();  
   st[0]=' ';  
   for ( int i = 1 ; i <= n ; i++)  
   {  
	scanf("%c",&st;[i]);  
   }  
   int cnt = 0;  
   for ( int i = 1 ;i <= n - 1 ; i++)  
   {  
	if (st[i]=='.'&&st;[i+1]=='.')  
	{  
	    cnt++;  
	}  
   }  
  // cout<<"cnt :"<    int x;  
   char ch;  
   for ( int i = 1 ; i <= m ; i++)  
   {  
	scanf("%d",&x;);  
	getchar();  
	scanf("%c",&ch;);  
	int flag =judge(st[x],ch);  
	st[x] = ch;  
	if (flag==0)  
	{  
	    cout<	    continue;  
	}  
	if (flag==1)  
	{  
	    if (st[x-1]=='.') cnt++;  
	    if (st[x+1]=='.') cnt++;  
	    cout<	    continue;  
	}  
	if (flag==-1)  
	{  
	    if (st[x-1]=='.') cnt--;  
	    if (st[x+1]=='.') cnt--;  
	    cout<	    continue;  
	}




   }  
   
	return 0;  
}









