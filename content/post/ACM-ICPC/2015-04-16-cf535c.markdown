---
author: 111qqz
date: 2015-04-16 07:16:00+00:00
draft: false
title: codeforces 535 C.Tavas and karafs (解方程)
type: post
url: /2015/04/cf535c/
categories:
- ACM
tags:
- math
---
















http://codeforces.com/problemset/problem/535/C




题读了好几遍才读懂。
题意是给出一个等差数列，操作严格要求从最左边不为零的连续m个数减去1，最多执行t次后问离最左边最远的位置在哪里。
有两个限制条件...一个是本身的si不能大于t，否则无法吃完。
还有一个是从sl到sr的和不能超过m*t (比赛的时候考虑的不周到。。实际上只有当r-l+1比m大的时候才是m，也就是说要取min(m,l-r+1))
这题正解应该是二分....直接Lower_bound。。。看到也有人用前缀和搞的。
我是解方程了（貌似是个傻逼做法）....
可以列出一个关于r的一元二次方程。。。然后求根公式2333
方程是：















![](https://111qqz.com/wp-content/uploads/2015/11/161513291826463.jpg)







然后再和第一个条件得到的r比较取小的就是结果.....

等周末把这题的二分解法也写一些。

下面是蒟蒻傻逼的数学方恒解法的代码：



 ```c++

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年03月03日 星期四 13时49分13秒
    File Name :code/cf/problem/535C.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cmath>
    #include <cstdio>
     
    using namespace std;
    typedef long long LL;
    const int N=1e5+5;
    LL A,B,n,l,t,m,p,q,k,ans,a,b,c,dd,q2;
    long double d,pp;
    int main()
    {
        cin>>A>>B>>n;
        for ( int i = 1; i <= n ; i++ )
        {
            cin>>l>>t>>m;
            if ( t<A+B*(l-1) )
            {
                cout<<-1<<endl;
                continue;
            }
         //   l = A + (l-1)*B; //wtf。。。这行代码是什么鬼...
            p = (int) ((t-A)/B);
            p++;
            a=B;
            b=(2*A-B);
            c=-B*l*l+3*B*l-2*m*t-2*A*l+2*A-2*B;
            d=(-b+sqrt(b*b-4*a*c))/(2*a);
            //cout<<"a:"<<a<<endl;
            //cout<<"b:"<<b<<endl;
            //cout<<"c:"<<c<<endl;
           // cout<<"d:"<<d<<endl;
            q = int (d);
            q2 = int((2*t-2*A+2*B-l*B)/B);
           // cout<<"q1:"<<q<<endl;
          //  cout<<"q2:"<<q2<<endl;
            q = min(q,q2);
           // cout<<"p:"<<p<<endl;
         //   cout<<"q"<<q<<endl;
            ans = min (p,q);
            cout<<ans<<endl;
        }
        return 0;
    }
    


```
