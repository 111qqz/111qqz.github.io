---
author: 111qqz
date: 2016-07-26 07:38:44+00:00
draft: false
title: hdu 4283 You Are the One (区间dp)
type: post
url: /2016/07/hdu-4283/
categories:
- ACM
tags:
- dp
- 区间dp
---

[hdu 4283题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=4283)

题意：有N个人按顺序排成一排上台表演，每个都有一个num[]值，若在他是第k个上场的人，则会有num[]*(k-1)的unhappiness。台下有一个黑屋（stack），对每一个人，可以选择让他先进屋子或者直接上台。现在让你找到一个最优方案使得所有人的unhappiness之和最小。

思路：


### 我想对了的：


无。状态设计就错了。。。转移方程也就不可能对。。。

错的一塌糊涂。。。嗯。。基础题。。完全不会2333

参考题解：[参考博客1](http://www.cnblogs.com/kedebug/archive/2012/12/10/2811053.html)
[参考博客2](http://blog.csdn.net/R1986799047/article/details/50639640)

 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月26日 星期二 15时03分41秒
    File Name :code/hdu/4283.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=105;
    int n;
    int a[N];
    int sum[N];
    int dp[N][N];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	int T;
    	cin>>T;
    	int cas = 0 ;
    	while (T--)
    	{
    	    scanf("%d",&n);
    //	    cout<<"n:"<<n<<endl;
    	    sum[0] = 0 ;
    	    for ( int i = 1 ; i <= n ; i++)
    	    {
    		int x;
    		scanf("%d",&x);
    		a[i] = x;
    		sum[i] = sum[i-1] + x;
    	    }
    
    	    for ( int l = 2 ; l  <= n ; l++) //区间长度
    		for ( int  i =  1 ; i+l-1 <= n ; i++) //区间以第i人开始，以第j人结束。
    		{
    		    int j = i+l-1;dp[i][j]=inf;
    		    for ( int k = i ; k <= j ; k++ )  //第i人可能在当前区间[i,j]中是第k-i+1个出场的。。。就是说在枚举出场顺序。。
    			dp[i][j] =min(dp[i][j],dp[i+1][k]+dp[k+1][j]+(k-i)*a[i]+(k-i+1)*(sum[j]-sum[k]));
    
    	//	    cout<<"i:"<<i<<" j:"<<" dp[i][j]:"<<dp[i][j]<<endl;
    		}
    
    	     printf("Case #%d: %d\n",++cas,dp[1][n]);  
    
    
    	}
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



