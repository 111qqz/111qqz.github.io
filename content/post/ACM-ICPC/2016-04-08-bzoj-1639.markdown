---
author: 111qqz
date: 2016-04-08 08:11:10+00:00
draft: false
title: 'BZOJ 1639: [Usaco2007 Mar]Monthly Expense 月度开支 (二分)'
type: post
url: /2016/04/bzoj-1639/
categories:
- ACM
tags:
- binary search
---




## 1639: [Usaco2007 Mar]Monthly Expense 月度开支


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 767  Solved: 381
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1639)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1639)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1639)]


## Description






Farmer John是一个令人惊讶的会计学天才，他已经明白了他可能会花光他的钱，这些钱本来是要维持农场每个月的正常运转的。他已经计算了他以后N(1<=N<=100,000)个工作日中每一天的花费moneyi(1<=moneyi<=10,000)，他想要为他连续的M(1<=M<=N)个被叫做“清算月”的结帐时期做一个预算，每一个“清算月”包含一个工作日或更多连续的工作日，每一个工作日都仅被包含在一个“清算月”当中。 FJ的目标是安排这些“清算月”，使得每个清算月的花费中最大的那个花费达到最小，从而来决定他的月度支出限制。






## Input






第一行：两个用空格隔开的整数：N和M

第2..N+1行：第i+1行包含FJ在他的第i个工作日的花费






## Output






第一行：能够维持每个月农场正常运转的钱数






## Sample Input




7 5
100
400
300
100
500
101
400





## Sample Output




500
输入细节

这里有7个工作日来被5个“清算月”划分。他花费100，400，100，500，101，和400元在他的每个工作日。

输出细节

如果FJ安排他的月度预算，他将把前两天划分在一个月中，把第三天、第四天划分在一个月当中，最后的三个工作日各自在一个月当中，所以他一个月最多花费500元，其他的方法总是得出一个较大的结果。

100 400 300 100 500 101 400 每天花费
---1--- ---2--- -3- -4- -5- 月度标号
500 400 500 101 400 月度花费





## HINT







## Source






[Silver](http://www.lydsy.com/JudgeOnline/problemset.php?search=Silver)






思路：一开始以为是贪心。挨个放，然后每放完m个sort一次。但是有可能是连续多次都划分在一个里啊。。不一定是挨个放，所以是错的。

正解是二分：check的时候因为必须是连续的区间，每次大于x了，则划分数+1，最后判断划分数是否小于等于m.需要注意的是，初始的划分数就是1.





 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月08日 星期五 15时33分11秒
    File Name :code/bzoj/1639.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E5+7;
    int n;
    int m;
    int a[N];
    int sum;
    int mx;
    bool check ( int x)
    {
        int cur = 0 ; 
        int cnt = 1 ; //初始占用一个
        for ( int i = 0 ; i < n ; i++)
        {
    	cur +=a[i];
    	if (cur>x)
    	{
    	    cur = 0 ;
    	    cur += a[i];
    	    cnt++;
    	}
    	if (cnt>m) return false;
        }
        return true;
    }
    
    int bin()
    {
        int l = mx;
        int r = sum;
        int mid;
    
        while (l<=r)
        {
    	mid = (l+r)/2;
    	if (check(mid)) r = mid-1;
    	else l = mid + 1;
        }
        return l;
    
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	ios::sync_with_stdio(false);
    	cin>>n>>m;
    	mx = 0 ;
        	for ( int i = 0 ; i  < n ; i++)
    	{
    	    cin>>a[i];
    	    sum += a[i];
    	    mx = max(a[i],mx);
    	}
    
    	cout<<bin()<<endl;
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



