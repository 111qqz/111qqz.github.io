---
author: 111qqz
date: 2016-03-21 14:55:26+00:00
draft: false
title: codeforces 330 B. Road Construction （图论基础）
type: post
url: /2016/03/cf330b/
categories:
- ACM
tags:
- 图论基础
---

[题目链接](http://codeforces.com/problemset/problem/330/B)
题意：n个点，m（m<n/2）条不能走的边，问最少连多少条边，使得任何两个点之间的距离最多为2. 输出最少的边数和连接的哪些边。
思路： **数据范围很关键。**数据范围很关键。****数据范围很关键。****

因为m<n/2,每条禁止的边最多禁止两个点，所以禁止的点数<n..那么至少有一个点是和可以和其他所有点相连的。。于是把其他所有点和该点相连即可。





    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年03月19日 星期六 10时39分40秒
    File Name :code/cf/problem/330B.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    int cnt[N];
    int n,m;
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	ms(cnt,0);
    	cin>>n>>m;
    	for ( int i = 1 ; i <= m ; i++) //因为m<n/2...一条m限制两个点不能相连。。最多限制2*m<n个。。。
    	{				//所以至少有一个点不受任何限制。。把其他的所有点连到这个点上即可。
    	    int u,v;                    //此时得到一个 star graph.
    	    cin>>u>>v;
    	    cnt[v]++;
    	    cnt[u]++;
    	}
    
    	int p;
    	for ( int i = 1 ; i <= n ; i++)
    	{
    	    if (cnt[i] == 0)
    	    {
    		p = i ;
    		break;
    	    }
    	}
    
    	cout<<n-1<<endl;
    	for ( int i = 1; i <= n ; i++)
    	{
    	    if (i==p) continue;
    	    cout<<p<<" "<<i<<endl;
    	}
    
    	
     
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



