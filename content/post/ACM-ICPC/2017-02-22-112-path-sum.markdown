---
author: 111qqz
date: 2017-02-22 11:40:23+00:00
draft: false
title: 112. Path Sum
type: post
url: /2017/02/112-path-sum/
categories:
- 面试
tags:
- 前缀和
---

[题目链接](https://leetcode.com/problems/path-sum/?tab=Description)



题意：给一棵树。。问是否存在一条从树根到叶子的路径，使得路径上每个点的val之和等于给定的sum。

思路：。。。直接搞就好。。。由于是比较经典的题目所以记录一下。。。注意递归的时候每一部分都要返回值orz..(我是多久没写代码了。。。

    
    /**
     * Definition for a binary tree node.
     * struct TreeNode {
     *     int val;
     *     TreeNode *left;
     *     TreeNode *right;
     *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
     * };
     */
    class Solution {
    public:
    		bool leaf(TreeNode* root)
    		{
    			if (root->left==NULL&&root->right==NULL) return true;
    			return false;
    		}
    		int SUM;
    		bool dfs(TreeNode* root,int cur)
    		{
    		//	cout<<"val:"<<root->val<<" cur:"<<cur<<endl;
    			bool ret=false;
    			if (cur+root->val==SUM&&leaf(root)) return true;
    			if (root->left!=NULL) ret = dfs(root->left,cur+root->val);
    			if (ret) return true;
    			if (root->right!=NULL) ret = dfs(root->right,cur+root->val);
    			if (ret) return true;
    			return false;
    		}
        bool hasPathSum(TreeNode* root, int sum) {
    		if (root==NULL) return false;
    		SUM = sum;
    		bool res = dfs(root,0);
    		return res;
            
        }
    };





