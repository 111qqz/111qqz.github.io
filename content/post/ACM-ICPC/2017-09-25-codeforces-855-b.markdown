---
author: 111qqz
date: 2017-09-25 13:12:25+00:00
draft: false
title: codeforces 855 B. Marvolo Gaunt's Ring (前缀最大，dp)
type: post
url: /2017/09/codeforces-855-b/
categories:
- ACM
tags:
- dp
---

[题目链接](http://codeforces.com/contest/855/problem/B)

题意：给出n,p,q,r,以及n（1E5）个数，所有数的范围都是[-1E9,1E9],现在问p_a[i]+q_a[j]+r*a[k]的最大值，满足1<=i<=j<=k<=n

思路：傻逼dp...

我。。好菜啊。。。万年dp苦手。

直接转载官方题解了。。。思路的重点是维护了一个最大前缀值。



<blockquote>_dp_[_i_][0] stores maximum of value _p_·_a__x_ for _x_ between 1 and _i_. Similarly _dp_[_i_][1] stores the maximum value of _p_·_a__x_ + _q_·_a__y_ such that _x_ ≤ _y_ ≤ _i_ and _dp_[_i_][2] stores maximum value of _p_·_a__x_ + _q_·_a__y_ + _r_·_a__z_ for _x_ ≤ _y_ ≤ _z_ ≤ _i_.

To calculate the dp:

_dp_[_i_][0] = _max_(_dp_[_i_ - 1][0], _p_·_a__i_)

_dp_[_i_][1] = _max_(_dp_[_i_ - 1][1], _dp_[_i_][0] + _q_·_a__i_)

_dp_[_i_][2] = _max_(_dp_[_i_ - 1][2], _dp_[_i_][1] + _r_·_a__i_)

The answer will be stored in _dp_[_n_][2]</blockquote>




    
    /* ***********************************************
    Author :111qqz
    Created Time :2017年09月25日 星期一 19时26分34秒
    File Name :B.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define PB push_back
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E5+7;
    LL a[N];
    LL p,q,r;
    int n;
    LL dp[N][3];
    int main()
    {
    #ifndef  ONLINE_JUDGE 
        freopen("./in.txt","r",stdin);
    #endif
        cin>>n>>p>>q>>r;
        for ( int i = 1 ; i <= n ; i++) cin>>a[i];
        LL ans = 1LL<<60;
        ans*=-5LL;
        ms(dp,0xc0);
        //重要的是维护一个前缀最大值。
        for ( int i = 1 ; i <= n ; i++)
        dp[i][0] = max(dp[i-1][0],p*a[i]);
        for ( int i = 1 ; i <= n ; i++)
        dp[i][1] = max(dp[i-1][1],dp[i][0]+q*a[i]);
        for ( int i = 1 ; i <= n ; i++)
        dp[i][2] = max(dp[i-1][2],dp[i][1]+r*a[i]);
        cout<<dp[n][2]<<endl;
    
    #ifndef ONLINE_JUDGE  
        fclose(stdin);
    #endif
        return 0;
    }
    






