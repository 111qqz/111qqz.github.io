---
author: 111qqz
date: 2016-04-04 11:28:12+00:00
draft: false
title: 'BZOJ 1630/2023: [Usaco2005 Nov]Ant Counting 数蚂蚁  （母函数）'
type: post
url: /2016/04/bzoj1630/
categories:
- ACM
tags:
- 母函数
---




## 2023: [Usaco2005 Nov]Ant Counting 数蚂蚁


Time Limit: 4 Sec  Memory Limit: 64 MB
Submit: 149  Solved: 85
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=2023)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=2023)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=2023)]


## Description







    有一天，贝茜无聊地坐在蚂蚁洞前看蚂蚁们进进出出地搬运食物．很快贝茜发现有些蚂蚁长得几乎一模一样，于是她认为那些蚂蚁是兄弟，也就是说它们是同一个家族里的成员．她也发现整个蚂蚁群里有时只有一只出来觅食，有时是几只，有时干脆整个蚁群一起出来．这样一来，蚂蚁们出行觅食时的组队方案就有很多种．作为一头有数学头脑的奶牛，贝茜注意到整个蚂蚁群由T(1≤T≤1000)个家族组成，她将这些家族按1到T依次编号．编号为i的家族里有Ni(1≤Ni≤100)只蚂蚁．同一个家族里的蚂蚁可以认为是完全相同的．




    如果一共有S，S+1…．，B(1≤S≤B≤A)只蚂蚁一起出去觅食，它们一共能组成多少种不同的队伍呢？注意：只要两支队伍中所包含某个家族的蚂蚁数不同，我们就认为这两支队伍不同．由于贝茜无法分辨出同一家族的蚂蚁，所以当两支队伍中所包含的所有家族的蚂蚁数都相同时，即使有某个家族换了几只蚂蚁出来，贝茜也会因为看不出不同而把它们认为是同一支队伍．    比如说，有个由3个家族组成的蚂蚁群里一共有5只蚂蚁，它们所属的家族分别为1，1，2，2，3．于是出去觅食时它们有以下几种组队方案：




  ·1只蚂蚁出去有三种组合：(1)(2)(3)




  ·2只蚂蚁出去有五种组合：(1，1)(1，2)(1，3)(2，2)(2，3)




  ·3只蚂蚁出去有五种组合：(1，1，2)(1，1，3)(1，2，2)(1，2，3)(2，2，3)




  ·4只蚂蚁出去有三种组合：(1，2，2，3)(1，1，2，2)(1，1，2，3)




  ·5只蚂蚁出去有一种组合：(1，1，2，2，3)




    你的任务就是根据给出的数据，计算蚂蚁们组队方案的总数．







## Input







    第1行：4个用空格隔开的整数T，A，S，B.




    第2到A+1行：每行是一个正整数，为某只蚂蚁所在的家族的编号．







## Output







    输出一个整数，表示当S到B（包括S和B）只蚂蚁出去觅食时，不同的组队方案数．




    注意：组合是无序的，也就是说组合1，2和组合2，1是同一种组队方式．最后的答案可能很大，你只需要输出答案的最后6位数字．注意不要输出前导0以及多余的空格．







## Sample Input




3 5 2 3
1
2
2
1
3INPUT DETAILS:Three types of ants (1..3); 5 ants altogether. How many sets of size 2 or
size 3 can be made?






## Sample Output






10

OUTPUT DETAILS:

5 sets of ants with two members; 5 more sets of ants with three members


















题意：有n只蚂蚁，T个种族，输入给出第i只蚂蚁属于哪个种族（每个种族最多有100只蚂蚁）




设f[x]表示x只蚂蚁的组成的方案数（只要两支队伍中所包含某个家族的蚂蚁数不同，我们就认为这两支队伍不同） 现在要求 [S,B]区间中 f[x]的和 。







思路：时间主要花在的读题上。。。这两个题目一个没描述一个数据有问题。。。得一起看。




题目读懂以后觉得是母函数。。




先统计出每种种群的蚂蚁个数，然后就变成了


[hdu2152解题报告](https://111qqz.com/wordpress/2016/02/hdu2152/)  这道题的模型。。。

然后求母函数的时候直接求到B的，那么之前的也都求出来了。

最后累加。

由于答案保留最后六位数字，所以算的时候要6...

1A，好开心。。。。

母函数的思维上难度很小，说白了都是套路。

感觉比那些dp+前缀和乱搞的做法高到不知哪里去了（反正对我这种dp废是这样的）






    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月04日 星期一 17时49分19秒
    File Name :code/bzoj/1630.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    const int M=1E5+1007;
    const int MOD=1E6;
    int T,A,S,B;
    int cnt[N];
    int a[M],tmp[M];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	ms(cnt,0);
    	cin>>T>>A>>S>>B;
    	for ( int i = 1 ; i <= A  ; i++)
    	{
    	    int x;
    	    cin>>x;
    	    cnt[x]++;
    	}
    	ms(a,0);
    	ms(tmp,0);
    	for ( int i = 0 ; i <= cnt[1]  ; i++)
    	{
    	    a[i] = 1;
    	    tmp[i] = 0 ;
    	}
    
    	for ( int i = 2; i <= T ; i++)
    	{
    	    for ( int j = 0 ; j <= B ; j++)
    	    {
    		for ( int k = 0 ; k <= cnt[i] && j + k <= B ; k++)
    		{
    		    tmp[j+k] = (tmp[j+k] + a[j])%MOD;
    		}
    	    }
    
    	    for (int j = 0 ; j <= B ; j++)
    	    {
    		a[j] = tmp[j];
    		tmp[j] =  0;
    	    }
    	}
    	int ans = 0 ;
    	for ( int i = S ; i <= B ; i++)
    	{
    	    ans = (ans + a[i])%MOD;
    	}
    
    	cout<<ans<<endl;
    
    
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    
