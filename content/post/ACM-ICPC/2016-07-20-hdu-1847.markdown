---
author: 111qqz
date: 2016-07-20 10:59:43+00:00
draft: false
title: hdu 1847 Good Luck in CET-4 Everybody! (巴什博奕,找规律｜｜sg函数)
type: post
url: /2016/07/hdu-1847/
categories:
- ACM
tags:
- sg函数
- 博弈论
- 巴什博奕
---

[hdu1847题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=1847)
题意：n个石子，每次只能取2的幂次个。。。问先手是否有必赢策略。。。
思路：画n点p点。。。发现n为３的倍数的时候先手必输。。。否则先手必赢。。。
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月20日 星期三 18时54分46秒
    File Name :code/hdu/1847.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    int n;
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	while (scanf("%d",&n)!=EOF)
    	{
    	    if (n%3==0)
    	    {
    		puts("Cici");
    	    }
    	    else
    	    {
    		puts("Kiki");
    	    }
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    




也可以利用sg函数求解。。。
从这里我们可以看出，sg函数类似于母函数，本身并不是一类问题，而是一种求解问题的工具。

 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月20日 星期三 18时54分46秒
    File Name :code/hdu/1847.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7; 
    int n;
    int two[12];
    int sg[N];
    bool vis[N];
    
    void sg_solve()
    {
    
        two[0] = 1;
        for ( int i = 1 ; i <=10 ; i++) two[i] = two[i-1]*2;
        ms(sg,0);
    
        for ( int i = 1 ; i < N ; i++)
        {
    	ms(vis,false);
    	for ( int j = 0 ;  j <=10 ; j++)
    	    if (i-two[j]>=0) vis[sg[i-two[j]]] = true;
    	    //i-two[j]表示能从i到达的状态。。。　这里完全是按照定义在求。。。
    	
    	for ( int j = 0 ; ; j++)
    	    if (!vis[j])　//第一个没有出现的值。。。
    	    {
    		sg[i] = j ;
    //		cout<<"j:"<<j<<endl;
    		break;
    	    }
        }
    
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	sg_solve();
    //	for ( int i = 1 ; i <= 100 ; i++) cout<<"i:"<<i<<" sg[i]"<<sg[i]<<endl;
    	while (scanf("%d",&n)!=EOF)
    	{
    	    if (!sg[n])
    	    {
    		puts("Cici");
    	    }
    	    else
    	    {
    		puts("Kiki");
    	    }
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



