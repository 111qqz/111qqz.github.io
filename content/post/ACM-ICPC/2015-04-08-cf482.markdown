---
author: 111qqz
date: 2015-04-08 11:32:00+00:00
draft: false
title: codeforces 482 A. Diverse Permutation（构造）
type: post
url: /2015/04/cf482/
categories:
- ACM
tags:
- greedy
- 构造
---




C - C


**Time Limit:**1000MS **Memory Limit:**262144KB **64bit IO Format:**%I64d & %I64u


Submit [Status](http://acm.hust.edu.cn/vjudge/contest/view.action?cid=74251#status//C/0)













Description







Permutation_p_ is an ordered set of integers _p_1,   _p_2,   ...,   _p__n_, consisting of _n_ distinct positive integers not larger than _n_. We'll denote as_n_ the length of permutation _p_1,   _p_2,   ...,   _p__n_.




Your task is to find such permutation _p_ of length _n_, that the group of numbers |_p_1 - _p_2|, |_p_2 - _p_3|, ..., |_p__n_ - 1 - _p__n_| has exactly _k_ distinct elements.













Input







The single line of the input contains two space-separated positive integers _n_, _k_ (1 ≤ _k_ < _n_ ≤ 105).













Output







Print _n_ integers forming the permutation. If there are multiple answers, print any of them.













Sample Input










Input



    
    3 2










Output



    
    1 3 2










Input



    
    3 1










Output



    
    1 2 3










Input



    
    5 2










Output



    
    1 3 2 4 5
















Hint







By |_x_| we denote the absolute value of number _x_.










题意是说找到找到一组n个由1..n组成的数列，且每个数字只出现一次




满足每相邻的两项的差的绝对值一共有k种。







找规律即可。不好描述，直接上代码吧。


 
```c++
    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月22日 星期一 23时36分22秒
    File Name :code/cf/problem/482A.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cstdio>
    #include <cmath>
    using namespace std;
         int n,k;
         int tmp,p;
         const int N=1E5+7;
         int a[N];
    
    int main()
    {
    
         scanf("%d %d",&n,&k);
         for ( int i = 1; i <= n ; i++ )
            a[i] = i;
            tmp = k;
            p = 1;
         for ( int i = 2 ; i <= k+1  ; i++)
         {
             a[i] = a[i-1] + tmp*p;
             tmp--;
             p=p*-1;
         }
         for ( int i = 1 ; i < n ; i++ )
            printf("%d ",a[i]);
        printf("%d",a[n]);
    
        return 0;
    }


```
