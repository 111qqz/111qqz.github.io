---
author: 111qqz
date: 2016-04-14 10:28:28+00:00
draft: false
title: 'BZOJ 1655: [Usaco2006 Jan] Dollar Dayz 奶牛商店 (母函数，高精度)'
type: post
url: /2016/04/bzoj1655/
categories:
- ACM
tags:
- 母函数
- 高精度
---




## 1655: [Usaco2006 Jan] Dollar Dayz 奶牛商店


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 353  Solved: 190
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1655)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1655)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1655)]


## Description






Farmer John goes to Dollar Days at The Cow Store and discovers an unlimited number of tools on sale. During his first visit, the tools are selling variously for $1, $2, and $3. Farmer John has exactly $5 to spend. He can buy 5 tools at $1 each or 1 tool at $3 and an additional 1 tool at $2. Of course, there are other combinations for a total of 5 different ways FJ can spend all his money on tools. Here they are: 1 @ US$3 + 1 @ US$2 1 @ US$3 + 2 @ US$1 1 @ US$2 + 3 @ US$1 2 @ US$2 + 1 @ US$1 5 @ US$1 Write a program than will compute the number of ways FJ can spend N dollars (1 <= N <= 1000) at The Cow Store for tools on sale with a cost of $1..$K (1 <= K <= 100).


    约翰到奶牛商场里买工具．商场里有K(1≤K≤100).种工具，价格分别为1，2，…，K美元．约翰手里有N(1≤N≤1000)美元，必须花完．那他有多少种购买的组合呢？







## Input






A single line with two space-separated integers: N and K.


    仅一行，输入N，K.







## Output






A single line with a single integer that is the number of unique ways FJ can spend his money.


    不同的购买组合数．







## Sample Input




5 3





## Sample Output




5










思路：母函数裸题，还卡个高精度。。差评。。。






 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月14日 星期四 16时42分31秒
    File Name :code/bzoj/1655.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E4+7;
    const int MAXN =300;
    int n,m;
    int a[N][105],tmp[N][105];
    
    void add(int x,int y)
    {
        for ( int i = 1 ; i <= 100 ; i++)
    	tmp[x][i]+=a[y][i];
    
        for ( int i = 1 ; i <= 100 ; i++)
        {
    	tmp[x][i+1]+=tmp[x][i]/10;
    	tmp[x][i]%=10;
        }
    
    }
    
    void tran( int x)
    {
        for ( int i = 1 ; i <= 100 ; i++)
        {
    	a[x][i] = tmp[x][i];
    	tmp[x][i] =  0;
        }
    }
    
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	scanf("%d %d",&n,&m);
    	ms(a,0);
    	m = min(m,n);
    	for ( int i = 0 ; i <= n ; i++)
    	{
    	    a[i][1] = 1;
    	    tmp[i][1] =  0 ;
    	}
    
    	for ( int i = 2 ; i <= m ; i++)
    	{
    	    for ( int j = 0 ;j <= n ; j++)
    	    {
    		for ( int k = 0 ; k+j<= n ; k+=i)
    		{
    		    for ( int z = 1 ; z <= 40 ; z++)
    		    {
    			tmp[k+j][z] += a[j][z];
    		    }
    		
    		}
    	    }
    //	    cout<<"aaa"<<endl;
    
    	    for ( int j = 0 ; j <= n ; j++)
    	    {
    		for ( int z = 1 ; z <= 40 ; z++)
    		{
    		    tmp[j][z+1]+=tmp[j][z]/10;
    		    tmp[j][z]%=10;
    		}
    	    }
    	    for ( int j = 0 ; j <= n ; j++)
    	    {
    		for ( int z = 1 ; z <= 40 ; z++)
    		{
    		    a[j][z] = tmp[j][z];
    		    tmp[j][z]  = 0;
    		}
    	    }
    	}
    
    	int len = 100;
    	while (a[n][len]==0) len--;
    //	cout<<"len:"<<len<<endl;
    	for ( int i = len  ;i >0 ; i--) printf("%d",a[n][i]);
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



