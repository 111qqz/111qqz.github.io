---
author: 111qqz
date: 2016-05-26 16:20:48+00:00
draft: false
title: poj 1469 COURSES (匈牙利算法)
type: post
url: /2016/05/poj1469/
categories:
- ACM
tags:
- 匈牙利算法
---

[poj 1469 题目链接](http://poj.org/problem?id=1469)

题意：p个课程，n个学生，给出每个课程对应选取该课程的学生编号，问能否选出p个学生，使得和课程一一对应。

思路：一眼二分图最大匹配。。。需要注意的是。。两个集合可能分别给出。。**建图的最大点数是两个集合的最大数目之和**。。。因为没注意这个细节RE了一次。。
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年05月26日 星期四 23时53分39秒
    File Name :code/poj/1469.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=30003;
    int n,p;
    int head[405];
    int cnt ;
    int link[405];
    bool vis[405];
    struct Edge
    {
        int v;
        int nxt;
    }edge[N];
    
    void addedge( int u,int v)
    {
        edge[cnt].v = v;
        edge[cnt].nxt = head[u];
        head[u] = cnt;
        cnt++;
    }
    
    
    bool dfs( int u)
    {
      //  cout<<"u:"<<u<<endl;
        for ( int i = head[u] ; i!=-1 ; i = edge[i].nxt)
        {
    	int v = edge[i].v;
    	if (vis[v]) continue;
    	vis[v] = true;
    
    	if (link[v]==-1||dfs(link[v]))
    	{
    	    link[v] = u;
    	    return true;
    	}
        }
        return false;
    }
    int hungary()
    {
        int res = 0 ;
        ms(link,-1);
    
        for ( int i = 1 ; i <= p ; i++)
        {
    	ms(vis,false);
    	if (dfs(i))  res++;
        }
        
        return res;
    
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	int T;
    	scanf("%d",&T);
    	while (T--)
    	{
    	    scanf("%d%d",&p,&n); 
    	    cnt  = 0;
    	    ms(head,-1);
    	    ms(edge,0);
    	    for ( int i = 1 ; i <= p ; i++)
    	    {
    		int x;
    		scanf("%d",&x);
    		while (x--)
    		{
    		    int y;
    		    scanf("%d",&y);
    		    y+=p;
    		    addedge(i,y);
    		}
    	    }
    	    int ans = hungary();
    	    
    	    if (ans==p) puts("YES");
    		else puts("NO");
    	}
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    







