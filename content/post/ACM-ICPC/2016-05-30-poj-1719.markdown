---
author: 111qqz
date: 2016-05-30 13:25:39+00:00
draft: false
title: poj 1719 Shooting Contest (匈牙利算法)
type: post
url: /2016/05/poj-1719/
categories:
- ACM
tags:
- 匈牙利算法
---

[poj1719题目链接](http://poj.org/problem?id=1719)

题意：射箭比赛，靶子是一个n*m的网格。网格的特点是没列只有两个白色，剩下的全是黑色。一共射m次，每列射一次，要求每行都射到至少一次才算合法，问是否有合法射法，如果有输出一组解。

思路：由于列数可能比行数多，那么我们把行编号作为左集合，列编号作为右集合，做一次匈牙利，对于每一行都找到它匹配的列，如果匹配数等于n，说明有解。对于输出一组街的问题，m列中已经匹配了n列，输出他们对应的link即可。对于剩下的m-n列，可以任意输出。由于之前不知道会剩下哪n-m列，所以在读入的时候有必要保存每一列的white格子的位置信息。

1A,有点爽。




 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年05月30日 星期一 20时44分59秒
    File Name :code/poj/1719.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    int n,m;
    char maze[N][N];
    int head[2*N];
    int cnt;
    int link[2*N];
    int vis[2*N];
    pi white[N];
    struct Edge
    {
        int v;
        int nxt;
    }edge[N*2];
    
    void addedge( int u,int v)
    {
        edge[cnt].v = v;
        edge[cnt].nxt = head[u];
        head[u] = cnt;
        cnt++;
    }
    void init()
    {
        cnt =  0;
        ms(head,-1);
    
    }
    
    
    int find( int u)
    {
        for ( int i = head[u] ; i!=-1 ; i = edge[i].nxt)
        {
    	int v = edge[i].v;
    	if (vis[v]) continue;
    	vis[v] = true;
    	if (link[v]==-1||find(link[v]))
    	{
    	    link[v] = u ;
    	    return true;
    	}
        }
        return false;
    }
    int hungary()
    {
        int res = 0 ;
        ms(link,-1);
    
        for ( int i = 1 ; i <= n ; i++)
        {
    	ms(vis,false);
    	if (find(i)) res++;
        }
      //  cout<<"res:"<<res<<endl;
        return res;
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	int T;
    	cin>>T;
    	while (T--)
    	{
    	    init();
    	    scanf("%d%d",&n,&m);
    	    int tot = 0;
    	    for ( int i = 1 ; i <= m ; i++)
    	    {
    		int x1,x2;
    		scanf("%d %d",&x1,&x2);
    		white[++tot]=make_pair(x1,x2);
    
    		addedge(x1,i+n);
    		addedge(x2,i+n);
    	    }
    
    	    int ans = hungary();
    	    if (ans<n)
    	    {
    		puts("NO");
    	    }
    	    else
    	    {
    		//for ( int i = n+1 ; i <= n+m ; i++) cout<<"link[i]:"<<link[i]<<endl;
    		for ( int i = n+1 ; i <= n+m ; i++)
    		{
    		    if (link[i]==-1)
    		    {
    			printf("%d ",white[i-n].fst);
    		    }
    		    else
    		    {
    			printf("%d ",link[i]);
    		    }
    		}
    		printf("\n");
    	    }
    
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



