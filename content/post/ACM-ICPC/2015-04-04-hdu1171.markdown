---
author: 111qqz
date: 2015-04-04 14:56:00+00:00
draft: false
title: hdu 1171 Big Event in HDU （母函数，01背包）
type: post
url: /2015/04/hdu1171/
categories:
- ACM
tags:
- 01背包
- dp
- 母函数
---




**Time Limit: 10000/5000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 26534    Accepted Submission(s): 9332
**


Problem Description




Nowadays, we all know that Computer College is the biggest department in HDU. But, maybe you don't know that Computer College had ever been split into Computer College and Software College in 2002.
The splitting is absolutely a big event in HDU! At the same time, it is a trouble thing too. All facilities must go halves. First, all facilities are assessed, and two facilities are thought to be same if they have the same value. It is assumed that there is N (0<N<1000) kinds of facilities (different value, different kinds).








Input




Input contains multiple test cases. Each test case starts with a number N (0 < N <= 50 -- the total number of different facilities). The next N lines contain an integer V (0<V<=50 --value of facility) and an integer M (0<M<=100 --corresponding number of the facilities) each. You can assume that all V are different.
A test case starting with a negative integer terminates input and this test case is not to be processed.


Output

For each case, print one line containing two integers A and B which denote the value of Computer College and Software College will get respectively. A and B should be as equal as possible. At the same time, you should guarantee that A is not less than B.

Sample Input

2
10 1
20 1
3
10 1
20 2
30 1
-1


Sample Output

20 10
40 40




背包。

所有的设备不是放在第一部分，就是要放在第二部分。

那么对于第一部分，或者第二部分，每一个设备就只有放和不放两种情况。

然后感觉就是做一个容量为总数的一半的01背包

然后脑抽看到第一部分可以大于一半，觉得这么想是错的。。。

实际上并不是，因为第二部分总要比第一部分小，所以第二部分是不可能大于一半的。

所以我们对于第二部分做01背包。




```c++


    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月22日 星期一 22时52分26秒
    File Name :code/hdu/1171.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cstdio>
    #include <cmath>
    
    using namespace std;
    const int N=3E6+5;
    int a[N],dp[N];
    int n,x,y;
    int tmp;
    int sum;
    
    void solve(int value ,int cost)
    {
        for ( int i = sum/2 ; i >= cost ; i--)
        {
            dp [i] = max(dp[i],dp[i-cost]+value);
        }
    
    }
    
    int main()
    {
        while (scanf("%d",&n)!=EOF)
        {
            if( n<0 ) break;
            memset(dp,0,sizeof(dp));
            memset(a,0,sizeof(a));
            tmp = 1;
            sum = 0;
            for ( int i = 1 ; i <= n ; i++ )
            {
                scanf("%d %d",&x,&y);
                sum = sum +x*y;
                for ( int j =1 ; j <= y ; j++)
                {
                    a[tmp] = x;
                    tmp++;
                }
            }
            for ( int i = 1 ; i <= tmp ; i++)
                solve (a[i],a[i]);
            printf("%d %d\n",sum-dp[sum/2],dp[sum/2]);
        }
    
        return 0;
    }


```

### 还有一种母函数的做法：先得到每种价值有多种种方法，然后从总价值一半向下找到第一个方案数非0的价值，就是答案。
_**注意。。。数组开小不一定是re...tle,wa,re都有可能**_




### _**注意。。。数组开小不一定是re...tle,wa,re都有可能**_




### _**注意。。。数组开小不一定是re...tle,wa,re都有可能**_






```c++

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月25日 星期四 23时08分48秒
    File Name :code/hdu/_1171.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=3E5+7;
    int n;
    int a[N],tmp[N];
    int v[55],num[55];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	while (scanf("%d",&n))
    	{
    	    if (n<0) break;
    
    	    for ( int i =  1 ; i <= n ; i++)
    	    {
    		scanf("%d %d",&v[i],&num[i]);
    	    }
    
    	    ms(a,0);
    	    for ( int i = 0 ; i <= num[1]*v[1] ; i+=v[1])
    	    {
    		a[i] = 1;
    	    }
    
    	    int cur = num[1]*v[1];
    	    for ( int i = 2 ; i <= n ; i++)
    	    {
    		for ( int j = 0 ; j <= cur ;  j++)
    		{
    		    for ( int k = 0 ; k<=num[i]*v[i] ; k +=v[i] )
    		    {
    			tmp[j+k] += a[j];
    		    }
    		}
    
    		cur += num[i]*v[i];
    
    		for ( int j = 0 ; j <= cur ; j++)
    		{
    		    a[j] = tmp[j];
    		    tmp[j] = 0 ;
    		}
    	    }
    
    	    for ( int i = cur/2 ; i >= 0 ; i--)
    	    {
    		if (a[i]!=0)
    		{
    		    printf("%d %d\n",cur-i,i);
    		    break;
    		}
    	    }
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    


```
