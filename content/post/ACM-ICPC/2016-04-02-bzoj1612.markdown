---
author: 111qqz
date: 2016-04-02 07:55:10+00:00
draft: false
title: 'BZOJ 1612: [Usaco2008 Jan]Cow Contest奶牛的比赛(floyd,传递闭包)'
type: post
url: /2016/04/bzoj1612/
categories:
- ACM
tags:
- floyd
- 传递闭包
---




## 1612: [Usaco2008 Jan]Cow Contest奶牛的比赛


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 900  Solved: 597
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1612)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1612)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1612)]


## Description






FJ的N(1 <= N <= 100)头奶牛们最近参加了场程序设计竞赛:)。在赛场上，奶牛们按1..N依次编号。每头奶牛的编程能力不尽相同，并且没有哪两头奶牛的水平不相上下，也就是说，奶牛们的编程能力有明确的排名。 整个比赛被分成了若干轮，每一轮是两头指定编号的奶牛的对决。如果编号为A的奶牛的编程能力强于编号为B的奶牛(1 <= A <= N; 1 <= B <= N; A != B) ，那么她们的对决中，编号为A的奶牛总是能胜出。 FJ想知道奶牛们编程能力的具体排名，于是他找来了奶牛们所有 M(1 <= M <= 4,500)轮比赛的结果，希望你能根据这些信息，推断出尽可能多的奶牛的编程能力排名。比赛结果保证不会自相矛盾。






## Input






* 第1行: 2个用空格隔开的整数：N 和 M

* 第2..M+1行: 每行为2个用空格隔开的整数A、B，描述了参加某一轮比赛的奶 牛的编号，以及结果（编号为A，即为每行的第一个数的奶牛为 胜者）






## Output






* 第1行: 输出1个整数，表示排名可以确定的奶牛的数目






## Sample Input




5 5
4 3
4 2
3 2
1 2
2 5




## Sample Output




2

输出说明:

编号为2的奶牛输给了编号为1、3、4的奶牛，也就是说她的水平比这3头奶
牛都差。而编号为5的奶牛又输在了她的手下，也就是说，她的水平比编号为5的
奶牛强一些。于是，编号为2的奶牛的排名必然为第4，编号为5的奶牛的水平必
然最差。其他3头奶牛的排名仍无法确定。








题意：给出m场比赛结果，问能确定多少头奶牛的排名。




思路：容易联想到拓扑排序。。。然而并不对。。其实这题之前做过。。。能确定一头奶牛的条件是，知道它和其他n-1头奶牛的关系，被打败或者打败都可以...由于n才100,直接floyd,传递闭包。




同poj 3660

 [poj3660解题报告](https://111qqz.com/wordpress/2015/12/poj3660/)

 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月02日 星期六 15时20分50秒
    File Name :code/bzoj/1612.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=105;
    int d[N][N];
    int n,m;
    
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	ios::sync_with_stdio(false);
    	cin>>n>>m;
    	ms(d,0);
    	for ( int i = 1 ;i  <= m ; i++)
    	{
    	    int u,v;
    	    cin>>u>>v;
    	    d[u][v]=1;
    	    
    	}
    	
    	for ( int k = 1 ; k <= n ; k++)
    	    for ( int i = 1 ; i <= n ; i++)
    		for ( int j = 1 ; j <= n ; j++)
    		    d[i][j] = d[i][j]|(d[i][k]&&d[k][j]);
    
    	int ans = 0 ;
    	for ( int i = 1 ;i <= n ; i++)
    	{
    	    int cnt = 0;
    	    for ( int j = 1 ; j <= n ; j++)
    	    {
    		if (i==j) continue;
    		if (d[i][j]||d[j][i]) cnt++;
    	    }
    	    if (cnt==n-1) ans++;
    	}
    	printf("%d\n",ans);
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



