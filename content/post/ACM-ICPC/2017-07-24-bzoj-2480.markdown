---
author: 111qqz
date: 2017-07-24 13:37:40+00:00
draft: false
title: 'BZOJ 2480: Spoj3105 Mod (扩展BSGS算法，模板)'
type: post
url: /2017/07/bzoj-2480/
categories:
- ACM
tags:
- BSGS
- 扩展BSGS
---

## Description







已知数a,p,b，求满足a^x≡b(mod p)的最小自然数x。










## Input







    每个测试文件中最多包含100组测试数据。




    每组数据中，每行包含3个正整数a,p,b。




    当a=p=b=0时，表示测试数据读入完全。










## Output










    对于每组数据，输出一行。




    如果无解，输出“No Solution”（不含引号），否则输出最小自然数解。










## Sample Input




5 58 33
2 4 3
0 0 0






## Sample Output




9
No Solution






## HINT






  100%的数据，a,p,b≤1e9。
2016.3.29新加数据一组 by  1430586275






思路：BSGS算法，需要注意这里没有保证(a,p)=1，因此不能直接使用BSGS算法。

[![](https://111qqz.com/wordpress/wp-content/uploads/2017/07/Screenshot_20170724_213255.png)
](https://111qqz.com/wordpress/wp-content/uploads/2017/07/Screenshot_20170724_213255.png)

**我们称之为扩展BSGS算法...**

**但是其实并不是什么新东西，不过是几次gcd,将条件转化成满足BSGS算法的情况**

    
    /* ***********************************************
    Author :111qqz
    Created Time :Mon 24 Jul 2017 08:54:25 PM CST
    File Name :2480.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define PB push_back
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    map<LL,LL>mp;
    LL a,b,p;
    LL ksm(LL a,LL b,LL p)
    {
        LL res = 1LL;
        while (b)
        {
    	if (b&1) res = res * a % p;
    	b = b>>1LL;
    	a = a * a % p;
        }
        return res;
    }
    LL gcd( LL a,LL b){return b?gcd(b,a%b):a;}
    LL BSGS(LL a,LL b,LL p)
    {
        a%=p;
        b%=p;
        if (a==0&&b==0) return 0;
        if (a==0) return -1;
        if (b==1) return 0;
        int cnt = 0 ;
        LL t = 1;
        for (int g = gcd(a,p); g!=1 ; g = gcd(a,p))
        {
    	if (b%g) return -1;
    	p/=g;
    	b/=g;
    	t=t*a/g%p;
    	cnt++;
    	if (b==t) return cnt;
        }
        mp.clear();
        int m = ceil(sqrt(double(p)));
        LL base = b ;
        for ( int i = 0 ; i < m ; i++)
        {
    	mp[base] =  i;
    	base = base * a % p;
        }
        base = ksm(a,m,p);
        LL ret = t ;
        for ( int i = 1 ; i <= m+1 ; i++)
        {
    	ret = ret * base % p;
    	if (mp.count(ret)) return i*m-mp[ret]+cnt;
        }
        return -1;
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    //	freopen("./in.txt","r",stdin);
      #endif
        while (scanf("%lld%lld%lld",&a,&p,&b))
        {
    	if (a==0&&b==0&&p==0) break;
    	LL ans = BSGS(a,b,p);
    	if (ans==-1) puts("No Solution");
    	else printf("%lld\n",ans);
        }
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



