---
author: 111qqz
date: 2016-11-29 11:16:28+00:00
draft: false
title: 'codeforces #382 div2 D. Taxes(哥德巴赫猜想)'
type: post
url: /2016/11/cf375d-2/
categories:
- ACM
tags:
- math
- number theory
- 哥德巴赫猜想
---

[题目链接](http://codeforces.com/problemset/problem/735/D)

题意：一个人有n元前，他要交的税是n的最大因子（除n外)，现在这个投机倒把者想把前分成k部分(k为大于等于１的任意值）每部分不能为１，分别交税，问最少交多少税。

思路：要说因子小。。很容易想到素数。。。然后就很容易想到了[维基百科_哥德巴赫猜想](https://zh.wikipedia.org/wiki/)

内容是：任何一个大于２的偶数可以写成两个素数的和。

（虽然是一个猜想没有被证明。。。但是1E9这种级别正确性还是很显然的２３３３

那么任何大于２的偶数，答案就是２

奇数可以分成一个３和一个偶数，答案为３．

不过这可能还不够优，这也是这道题的两个trick所在：

如果该数本身为素数，那么不用分（k取１），答案为１

如果该数减去２为素数，那么答案为２．

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年11月29日 星期二 11时36分56秒
    File Name :code/cf/#382/D.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    LL n;
    bool prime( LL x)
    {
        for ( LL i = 2 ; i*i <= x ; i++)
        {
    	if (x%i==0) return false;
        }
        return true;
    }
    LL solve( LL x)
    {
        if (prime(x)) return 1;
        if (x%2==0) return 2;
        if (x%2==1)
        {
    	if (prime(x-2)) return 2;
    	else return 3;
        }
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	cin>>n;
    	LL ans = solve(n);
    	cout<<ans<<endl;
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



