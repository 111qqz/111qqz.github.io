---
author: 111qqz
date: 2015-08-22 15:09:00+00:00
draft: false
title: 'bc #52 div 2 B || hdoj 5418 Victor and World(tsp问题,状压dp)'
type: post
url: /2015/08/hdoj5418/
categories:
- ACM
tags:
- tsp
- 状压dp
---




比赛的时候一看,tsp么




前些天好像刚写过一个clean robot什么的




然后发现n才16,而m很大..




应该有很多重复的.




那么我们取油费最少的.




然后先做一遍 floyd




之后我写了一个dfs...TLE 了...sad




正解是状压dp




虽然没写过状压dp




但是之前写过一道状态压缩的bfs




所以理解起来没有问题.




这道题的做法是:




用dp[i][j]表示当前访问国家的状态为s,要访问的国家为j的时候的最小费用.i是二进制,i的第p位为1表示第p个国家已经访问过了,否则表示没有访问过.




那么状态转移方程则为:dp[i|(1<


初始化的时候d[i][i] =0,其他为inf




dp[0][0] 表示要访问第一个国家且没有访问国人国家的时候的状态,此时花费为0




然后先枚举访问国家的状态,再枚举访问的国家.


 

    
    /*************************************************************************
    	> File Name: code/bc/#52/rrr1002.cpp
    	> Author: 111qqz
    	> Email: rkz2013@126.com 
    	> Created Time: 2015年08月22日 星期六 22时33分20秒
     ************************************************************************/
    
    #include<iostream>
    #include<iomanip>
    #include<cstdio>
    #include<algorithm>
    #include<cmath>
    #include<cstring>
    #include<string>
    #include<map>
    #include<set>
    #include<queue>
    #include<vector>
    #include<stack>
    #include<cctype>
    #define y1 hust111qqz
    #define yn hez111qqz
    #define j1 cute111qqz
    #define ms(a,x) memset(a,x,sizeof(a))
    #define lr dying111qqz
    using namespace std;
    #define For(i, n) for (int i=0;i<int(n);++i)  
    typedef long long LL;
    typedef double DB;
    const int inf = 0x3f3f3f3f;
    const int N=17;
    int d[N][N];
    int n,m;
    int dp[(1<<16)+5][N];
    
    void floyd(){
        For(k,n){
    	For(i,n){
    	    For (j,n){
    		d[i][j] = min ( d[i][j] , d[i][k]+d[k][j]);
    	    }
    	}
        }
    
    }
    
    void solve()
    {
        dp[0][0] = 0;
        for ( int i = 0 ; i <(1<<n) ; i ++){
    	for ( int j = 0 ; j < n ;j++){
    	    if (dp[i][j]!=inf){
    		for (int k = 0 ; k < n ; k++){
    		    int tmp = i|(1<<k);
    		    dp[tmp][k] = min(dp[tmp][k],dp[i][j] + d[j][k]);
    		}
    	    }
    	}
        }
    }
    int main()
    {
      #ifndef  ONLINE_JUDGE 
        freopen("in.txt","r",stdin);
      #endif
        int T;
        cin>>T;
        while (T--){
    	scanf("%d %d",&n,&m);
    	ms(d,inf);
    	ms(dp,inf);
    	For(i,n){
    	    d[i][i] = 0 ;
    	}
    	int u,v,w;
    	For(i,m){
    	    scanf("%d %d %d",&u,&v,&w);
    	    u--;v--;
    	    d[u][v] = d[v][u] =min(d[u][v],w);
    	}
    	floyd();
    //	for ( int i = 0 ; i < n; i++){
    //	    for ( int j = 0 ; j < n ; j++){
    //		cout<<d[i][j]<<" ";
    //	    
    //	    }
    //	    cout<<endl;
    
    //	}
    	solve();
    	int ans = dp[(1<<n)-1][0];
    	printf("%d\n",ans);
    
        }
      
      
     #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
    	return 0;
    }
    



