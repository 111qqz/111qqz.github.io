---
author: 111qqz
date: 2016-07-20 13:27:59+00:00
draft: false
title: hdu 1517 A Multiplication Game (博弈论，将点的局势对应到段)
type: post
url: /2016/07/hdu-1517/
categories:
- ACM
tags:
- 博弈论
---

[hdu 1517 题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=1517)

题意：初始为1，每次可以乘2..9中的一个数，最先达到或者超过n的人胜利。问谁有必赢策略。。

思路：一开始想用sg函数。。然而n太大（4e10）。。。绝对会超时。。。

所以可以更朴素得，去画n点和p点。。。我们可以发现。。。**连续一段的局势是相同的。。。所以不能，也没必要找到每一个点对应的局势。**

[n,+oo]是p点，那么[n/9,n-1]是n点，那么[n/9/2,n/9)又是p点。。。以此类推。。

这道题同时也告诉我们。。。没有什么方法是万能的。。。就算sg函数很神。。也有不能用的时候。。。所以掌握最本质的东西还是很重要的。。。



转载一段题解：


<blockquote>****

这道题如果用sg函数，利用点的局势做一定会超时，因为相同的局势能够形成连续的段，所以我们可以将局势对应到段来达到一定的优化：

首先题目中能够了解到必败态[n,+oo)，那么可以由此推出必胜态

必胜态就是[n/9,n-1]，也就是有一定有策略达到必败态

另一个必败态就是[n/9/2,n/9)，之后就是一直循环这样的局势，找到了循环，我们可以固定一个点，固定区间的左端点比较易操作，也就是我们通过固定左端点找到１在必胜态区间，还是必败态区间．</blockquote>




 
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月20日 星期三 20时27分11秒
    File Name :code/hdu/1517.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    LL n;
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	
    
    	while (~scanf("%lld",&n))
    	{
    	    int cnt = 0 ;
    	    while (n>1)
    	    {
    		if (cnt%2==0) n = ceil(n*1.0/9.0);
    		else n = ceil(n*1.0/2.0);
    		cnt++;
    	    }
    	    if (cnt%2==1)
    		puts("Stan wins.");
    	    else puts("Ollie wins.");
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



