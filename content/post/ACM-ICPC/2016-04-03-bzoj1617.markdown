---
author: 111qqz
date: 2016-04-03 11:34:42+00:00
draft: false
title: 'BZOJ 1617: [Usaco2008 Mar]River Crossing渡河问题 (DP)'
type: post
url: /2016/04/bzoj1617/
categories:
- ACM
tags:
- dp
---




## 1617: [Usaco2008 Mar]River Crossing渡河问题


Time Limit: 5 Sec  Memory Limit: 64 MB
Submit: 837  Solved: 606
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=1617)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=1617)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=1617)]


## Description






Farmer John以及他的N(1 <= N <= 2,500)头奶牛打算过一条河，但他们所有的渡河工具，仅仅是一个木筏。 由于奶牛不会划船，在整个渡河过程中，FJ必须始终在木筏上。在这个基础上，木筏上的奶牛数目每增加1，FJ把木筏划到对岸就得花更多的时间。 当FJ一个人坐在木筏上，他把木筏划到对岸需要M(1 <= M <= 1000)分钟。当木筏搭载的奶牛数目从i-1增加到i时，FJ得多花M_i(1 <= M_i <= 1000)分钟才能把木筏划过河（也就是说，船上有1头奶牛时，FJ得花M+M_1分钟渡河；船上有2头奶牛时，时间就变成M+M_1+M_2分钟。后面的依此类推）。那么，FJ最少要花多少时间，才能把所有奶牛带到对岸呢？当然，这个时间得包括FJ一个人把木筏从对岸划回来接下一批的奶牛的时间。






## Input






* 第1行: 2个用空格隔开的整数：N 和 M

* 第2..N+1行: 第i+1为1个整数：M_i






## Output






* 第1行: 输出1个整数，为FJ把所有奶牛都载过河所需的最少时间






## Sample Input




5 10
3
4
6
100
1

输入说明:

FJ带了5头奶牛出门。如果是单独把木筏划过河，FJ需要花10分钟，带上
1头奶牛的话，是13分钟，2头奶牛是17分钟，3头是23分钟，4头是123分钟，将
5头一次性载过去，花费的时间是124分钟。







## Sample Output




50






## HINT






输出说明:
Farmer John第一次带3头奶牛过河（23分钟），然后一个人划回来

（10分钟），最后带剩下的2头奶牛一起过河（17分钟），总共花费的时间是

23+10+17 = 50分钟。




题意：有n头奶牛要过河，Fj过河的代价为M,FJ每多带一直奶牛，代价就要相应增加m[i],i为新带的这只奶牛是这一批的第几只。问所有奶牛以及FJ全部过河的最小代价。

思路：一开始觉得是贪心，想了一下发现好像没法贪心，应该是dp...

**dp维数和循环次数无关。比如O(N2)求LIS也是一维的dp方程啊。。。**

然后我就想歪了QAQ.

其实的确不难。

**dp[i]表示把前i头奶牛送到对岸的最小代价。**

**转移方程 dp[i] = min(dp[i],dp[i-j]+M+sum[j])  (1=<j<=i)**

**初始条件为：dp[i]=inf(i!=0)  dp[0]=0;**

sum[i]表示送i只奶牛过河的代价，前缀和预处理下。注意sum[0]=M,表示算上FJ的代价。





 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月03日 星期日 16时17分03秒
    File Name :code/bzoj/1617.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=2503;
    int t[N];
    int sum[N];
    int n,m,T;
    int dp[N];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	cin>>n>>m;
    	sum[0] = m ;   //sum[i]表示把i头奶牛运到对岸去的话费（初始sum[0]=m是因为算了自己）
    	for ( int i = 1 ;i  <= n ; i++)
    	{
    	    cin>>t[i];
    	    sum[i] = sum[i-1] + t[i];
    	}
    
    //	for ( int i = 1 ; i <= n ; i++) cout<<sum[i]<<endl;
    	ms(dp,0x3f);
    	dp[0] = 0 ;
    	for ( int i = 1 ; i <= n ; i++)
    	{
    	    for ( int j = 1 ; j <= i ; j++)
    	    {
    		dp[i] = min(dp[i],dp[i-j]+sum[j]+m);
    	    }
    	}
    
    	cout<<dp[n]-m<<endl;  //因为把最后一批奶牛运到对岸后就不用返回了。
    
    
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



