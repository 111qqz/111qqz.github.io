---
author: 111qqz
date: 2016-03-15 13:05:13+00:00
draft: false
title: bzoj 1026 windy数(数位dp入门题)
type: post
url: /2016/03/bzoj1026/
categories:
- ACM
tags:
- dp
- 数位dp
---

[题目链接](http://www.lydsy.com/JudgeOnline/problem.php?id=1026)
题意：不含前导零且相邻两个数字之差至少为2的正整数被称为windy数。 windy想知道，在A和B之间，包括A和B，总共有多少个windy数？
思路：数位dp
这道题的特点是前面不允许前导0，也就是说，如果第i位前面全是0的话，这个数就变成了i位数，i就变成了最高位，而最高位没有前面的数（**如果这里不考虑不允许前导0这个因素而把前面的一个数认为成是0就错了） **最高位的数可以直接取。 还有记忆化调用以及存储的时候也要注意...只有当位数相同的时候转移才有意义。 具体的方法是dfs中多了一个prehasnonzero的bool变量，就是字面意思，判断当前位置前面的位置是够存在一个非0的值。





 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年03月15日 星期二 19时49分57秒
    File Name :code/bzoj/1026.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    int l,r;
    int dp[30][10];  
    int digit[30];
    
    
    int dfs ( int pos,int pre,bool limit,bool prehasnonzero) // prehasnonzero表示当前位前面的位是否有非0的位。
    {zhi
        if (pos==0) return 1;
        if (prehasnonzero&&!limit&&dp[pos][pre]!=-1) return dp[pos][pre];  //位数相同才通用，所以prehasnonzero为true才调用
        
        int mx = limit?digit[pos]:9;
    
        int res = 0 ;
    
        if (!prehasnonzero)
        {
    	for ( int i =  0 ; i <= mx ; i++ )
    	{
    	    res+=dfs (pos-1,i,limit&&i==mx,i==0?false:true);
    	}
        }
        else
        {
    	for ( int i = 0 ; i <= mx ; i++)
    	{
    	    if (abs(i-pre)>=2)
    	    {
    		res+=dfs(pos-1,i,limit&&i==mx,true);
    	    }
    	}
        }
        
        
        if (prehasnonzero&&!limit)  dp[pos][pre] = res; //位数相同才通用，所以prehasnonzero为true时才记录。
        return res;
    }
    int solve ( int  n )
    {
        ms(digit,0);
        
        int len = 0  ;
        
        while (n)
        {
    	digit[++len] = n;
    	n/=10;
        }
        return dfs(len,0,true,0);  //pre的初始值应该是0而不是-1，因为不允许前导0，位数是可变的。..所以不过是一种特殊情况而已。
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	ios::sync_with_stdio(false);
    	ms(dp,-1);
    	cin>>l>>r;
    	int ans = 0 ;
    	ans += solve (r)-solve(l-1);
    //	cout<<solve(15)<<endl;
    	cout<<ans<<endl;
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



