---
author: 111qqz
date: 2015-04-04 12:12:00+00:00
draft: false
title: hdu 1203 I NEED A OFFER! （01背包）
type: post
url: /2015/04/hdu1203/
categories:
- ACM
tags:
- 01背包
- dp
---

# I NEED A OFFER!


**Time Limit: 2000/1000 MS (Java/Others)    Memory Limit: 65536/32768 K (Java/Others)
Total Submission(s): 18287    Accepted Submission(s): 7320
**


Problem Description




Speakless很早就想出国，现在他已经考完了所有需要的考试，准备了所有要准备的材料，于是，便需要去申请学校了。要申请国外的任何大学，你都要交纳一定的申请费用，这可是很惊人的。Speakless没有多少钱，总共只攒了n万美元。他将在m个学校中选择若干的（当然要在他的经济承受范围内）。每个学校都有不同的申请费用a（万美元），并且Speakless估计了他得到这个学校offer的可能性b。不同学校之间是否得到offer不会互相影响。“I NEED A OFFER”，他大叫一声。帮帮这个可怜的人吧，帮助他计算一下，他可以收到至少一份offer的最大概率。（如果Speakless选择了多个学校，得到任意一个学校的offer都可以）。

Input

输入有若干组数据，每组数据的第一行有两个正整数n,m(0<=n<=10000,0<=m<=10000)
后面的m行，每行都有两个数据ai(整型),bi(实型)分别表示第i个学校的申请费用和可能拿到offer的概率。
输入的最后有两个0。


Output


每组数据都对应一个输出，表示Speakless可能得到至少一份offer的最大概率。用百分数表示，精确到小数点后一位。


Sample Input

10 3
4 0.1
4 0.2
5 0.3
0 0


Sample Output

44.0%

_Hint_


You should use printf("%%") to print a '%'.


01背包

最开始WA在初始化，dp数组全都赋值为1，忘赋了dp[0]，导致如果恰好是花光所有钱得到答案的时候答案错误。


然后还一直WA。

后来发现是当N=0的时候，我直接取了所有A[I]=0对应的B[I]中最大的值。。。这显然是错的，少年你是脑抽吗。。。。。


然后修改了下，终于A掉了。。。。。

```c++
    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月22日 星期一 22时50分40秒
    File Name :code/hdu/1203.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cstdio>
    #include <cmath>
    
    using namespace std;
        int n,m;
        const int N = 1E4+5;
        int a[N];
        double b[N],dp[N];
        double ans,mmax;
    
    void solve(int cost,double value)
    {
        for ( int i = n ; i >= cost ; i-- )
            dp[i] = min(dp[i],dp[i-cost]*value);
    }
    
    void init()
    {
        for ( int i = 0 ; i <N ; i++ )
            dp[i]=1.0;
        mmax=-1;
        ans=1;
       // memset(a,0,sizeof(a));
       // memset(b,0,sizeof(b));
    }
    int main()
    {
        while (scanf("%d %d",&n,&m)!=EOF)
        {
            init();
            if ( (n==0)&&(m==0) ) break;
            for ( int i = 1 ; i <= m ; i++ )
                scanf("%d %lf",&a[i],&b[i]);
            for ( int i = 1 ; i <= m ; i++ )
                b[i]=1-b[i];
            if ( n==0 )
            {
                for ( int i = 1 ; i <= m ; i++ )
                    if ( a[i]==0 )
                        ans = ans*b[i];
                printf("%.1lf%%\n",(1-ans)*100);
                continue;
            }
    
            for ( int i = 1 ; i <= m ; i++ )
                solve(a[i],b[i]);
                ans = 1-dp[n];
                ans = ans*100;
          //  for ( int i = 1 ; i <= n ; i++ )
            //    printf("%lf ",dp[i]);
            printf("%.1lf%%\n",ans);
        }
        return 0;
    }


```
