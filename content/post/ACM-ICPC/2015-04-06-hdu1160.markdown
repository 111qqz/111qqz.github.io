---
author: 111qqz
date: 2015-04-06 16:36:00+00:00
draft: false
title: hdu 1160  FatMouse's Speed (最长上升子序列)
type: post
url: /2015/04/hdu1160/
categories:
- ACM
tags:
- dp
- 区间dp
---

# FatMouse's Speed




**Time Limit: 2000/1000 MS (Java/Others) Memory Limit: 65536/32768 K (Java/Others)  
Total Submission(s): 10172 Accepted Submission(s): 4521  
Special Judge**  
  





Problem Description




FatMouse believes that the fatter a mouse is, the faster it runs. To disprove this, you want to take the data on a collection of mice and put as large a subset of this data as possible into a sequence so that the weights are increasing, but the speeds are decreasing.










Input




Input contains data for a bunch of mice, one mouse per line, terminated by end of file.  
  
The data for a particular mouse will consist of a pair of integers: the first representing its size in grams and the second representing its speed in centimeters per second. Both integers are between 1 and 10000. The data in each test case will contain information for at most 1000 mice.  
  
Two mice may have the same weight, the same speed, or even the same weight and speed.










Output




Your program should output a sequence of lines of data; the first line should contain a number n; the remaining n lines should each contain a single positive integer (each one representing a mouse). If these n integers are m[1], m[2],..., m[n] then it must be the case that   
  
W[m[1]] < W[m[2]] < ... < W[m[n]]  
  
and   
  
S[m[1]] > S[m[2]] > ... > S[m[n]]  
  
In order for the answer to be correct, n should be as large as possible.  
All inequalities are strict: weights must be strictly increasing, and speeds must be strictly decreasing. There may be many correct outputs for a given input, your program only needs to find one.










Sample Input







6008 1300
6000 2100
500 2000
1000 4000
1100 3000
6000 2000
8000 1400
6000 1200
2000 1900














Sample Output







4
4
5
9
7

















先排序，然后求一个最长上升子序列。




第一次做记录路径的题，比较无力。




调了很久，后来调到样例都不对整个人都无奈了。




可能也是调了太久的缘故，整个人比较烦躁，也忘记了题目中的那句"如果有多组接那么任意输出一种"，结果白白浪费了好久。sad




还是不要浮躁。







AC代码：







```c++
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月22日 星期一 23时23分41秒
    File Name :code/hdu/1160.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cstdio>
    #include <cmath>
    
    using namespace std;
    
    int n,tmp,tmppre,m,index;
    const int N=1E5+5;
    int dp[N],ans[N],pre[N],k;
    
    struct ST
    {
        int w,s,id;
    }st[N];
    
    bool cmp(ST a,ST b)
    {
        if ( a.w<b.w) return true;
        if ( a.w==b.w&&a.s>b.s ) return true;
        return false;
    }
    int main()
    {
        n = 1;
        while(scanf("%d %d",&st[n].w,&st[n].s)!=EOF)
        {
    
                st[n].id = n;
                n++;
             //   if (n>9) break;
    
        }
        n--;
         memset(dp,0,sizeof(dp));
        memset(ans,0,sizeof(ans));
        memset(pre,-1,sizeof(pre));zixulie
        sort(st+1,st+n+1,cmp);
    
    
        dp[1] = 1;
        for ( int i = 2; i <= n; i++)
        {
           dp[i] = 1;
            for ( int j = 1 ; j <= i -1 ; j++ )
                if (st[j].w<st[i].w&&st[j].s>st[i].s&&dp[j]+1>dp[i])
                {
    
                    dp[i] = dp[j]+1;
                    pre[i] = j;
                }
        }
      //  cout<<endl;
      //  for ( int i = 1 ; i <= n ; i++ )
       //     cout<<st[i].w<<" "<<st[i].s<<endl;
       // for ( int i = 1 ;  i <= n ; i++ )
         //   cout<<"pre[i]:"<<pre[st[i].id]<<"dp[i]:"<<dp[i]<<endl;
    
    
        m = -1;
        for ( int i = 1 ; i <= n;i++ )
            if ( dp[i] > m)
            {
                m = dp[i];
                index = i;
            }
        cout<<m<<endl;
       // cout<<"index "<<index<<endl;
        k = 0;
        while (index!=-1)
        {
            k++;
            ans[k] = index;
            index=pre[index];
        }
        for ( int i = k; i >= 1; i-- )
            cout<<st[ans[i]].id<<endl;
    
    
        return 0;
    }


```
