---
author: 111qqz
date: 2015-12-22 08:04:29+00:00
draft: false
title: 'codeforces #333 div 2B. Approximating a Constant Range'
type: post
url: /2015/12/cf602b/
categories:
- ACM
tags:
- set
- stl
---

http://codeforces.com/contest/602/problem/B
题意：给定n个数，问最大连续区间长度，满足这段区间内最大值和最小值的差的绝对值小于等于1.
思路：尺取+set。尺取法，由于要时刻得到一段区间的最大值和最小值，而且可能有重复元素，所以用multiset.

**需要注意的是，set里最小值是*se.begin() ，最大值是*se.rbegin()这样比较好。。不要用se.end()之类。。。**

**另一个需要注意的是，multiset里用erase的时候。如果se.erase(x)会把集合里所有的x都删除掉。如果指向删除一个，那么应该写成se.erase(se.find(x))**



    
    /* ***********************************************
    Author :111qqz
    Created Time :2015年12月22日 星期二 15时10分01秒
    File Name :code/cf/#333/B.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E5+7;
    int n ;
    int a[N];
    
    void ruler()
    {
        int head = 1;
        int tail = 1;
        int ans = -1;
        multiset<int>se;
        while (tail<=n)
        {
    	se.insert(a[tail]);
    //	cout<<"tail:"<<tail<<" a[tail]:"<<a[tail]<<" "<<endl;
    //	cout<<"min:"<<*se.begin()<<" max:"<<*se.end()<<endl;
    	if (abs(*se.begin()-*se.rbegin())>1)
    	{
    	    se.erase(se.find(a[head]));//这样写是删除multiset中的一个元素，写成se.erase(a[head])会删除掉所有的。
    					//删掉一个就可以。虽然删掉一个不一定使得满足最大值和最小值差的绝对值小于等于1
    					//但是之前插入一个，现在删除一个，区间长度没有变，就是不会对当前答案有影响。
    	    head++;
    	}
    	ans = max(ans,int(se.size()));
    
    //	cout<<"size:"<<int(se.size())<<"head:"<<head<<" tail:"<<tail<<endl;
    	tail++;
    
        }
       cout<<ans<<endl;
        multiset<int>::iterator it;
    
    //    for ( it =se.begin() ;it !=se.end() ;it++)
     //   {
    //	cout<<*it<<endl;
    //    }
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	cin>>n;
    	for ( int i = 1 ; i<= n ; i++) scanf("%d",&a[i]);
    
    //	for ( int i = 1 ; i <= n ; i++) printf("%d %d\n",i,a[i]);
    	ruler();
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



