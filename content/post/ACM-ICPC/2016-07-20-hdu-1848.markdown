---
author: 111qqz
date: 2016-07-20 12:22:06+00:00
draft: false
title: hdu 1848 Fibonacci again and again (sg函数)
type: post
url: /2016/07/hdu-1848/
categories:
- ACM
tags:
- sg函数
- 博弈论
---

[hdu 1848题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=1848)



题意：三堆石头，每次任选一堆取，取的石子数目必须是斐波那契数列中的数(1,2,3,5,8....)问先手是否有必赢策略。



思路：sg函数即可。。。。这次sg函数的优越性终于体现出来了。。。其他方法估计很难写吧。。

以及，这道题不知道为什么让我联想到了生成函数。。。感觉生成函数和sg函数作为工具还是有不少共同点的。。。




 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月20日 星期三 20时08分38秒
    File Name :code/hdu/1848.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    bool vis[N];
    int sg[N];
    int f[N];
    int a,b,c;
    void sg_init()
    {
        f[1] = 1;
        f[2] = 2;
        ms(sg,0);
        for ( int i = 3 ; i<=18 ; i++)
    	f[i] = f[i-1] + f[i-2];
        
    //    cout<<"jhhhh;"<<endl;
        for ( int i = 1 ; i < N ; i++)
        {
    	ms(vis,false);
    	for ( int j = 1 ; f[j] <= i ; j++)
    	    vis[sg[i-f[j]]] = true;
    
    	for ( int j = 0 ; ; j++)
    	    if (!vis[j])
    	    {
    		sg[i] = j;
    		break;
    	    }
        }
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	sg_init();
    	
    	while (~scanf("%d%d%d",&a,&b,&c))
    	{
    	    if (a==0&&b==0&&c==0) break;
    	    int sum = sg[a]^sg[b]^sg[c];
    	    if (sum==0)
    	    {
    		puts("Nacci");
    	    }
    	    else
    	    {
    		puts("Fibo");
    	    }
    	}
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



