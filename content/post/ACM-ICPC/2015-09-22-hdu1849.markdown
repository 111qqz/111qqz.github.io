---
author: 111qqz
date: 2015-09-22 12:47:00+00:00
draft: false
title: hdu 1849Rabbit and Grass(一维nim游戏,sg函数)
type: post
url: /2015/09/hdu1849/
categories:
- ACM

tags:
- nim游戏
- sg函数
- 博弈论
---

# Rabbit and Grass


**Time Limit: 1000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 3058    Accepted Submission(s): 2261
**


Problem Description






大学时光是浪漫的，女生是浪漫的，圣诞更是浪漫的，但是Rabbit和Grass这两个大学女生在今年的圣诞节却表现得一点都不浪漫：不去逛商场，不去逛公园，不去和AC男约会，两个人竟然猫在寝食下棋……
说是下棋，其实只是一个简单的小游戏而已，游戏的规则是这样的：
1、棋盘包含1*n个方格，方格从左到右分别编号为0，1，2，…，n-1；
2、m个棋子放在棋盘的方格上，方格可以为空，也可以放多于一个的棋子；
3、双方轮流走棋；
4、每一步可以选择任意一个棋子向左移动到任意的位置（可以多个棋子位于同一个方格），当然，任何棋子不能超出棋盘边界；
5、如果所有的棋子都位于最左边（即编号为0的位置），则游戏结束，并且规定最后走棋的一方为胜者。

对于本题，你不需要考虑n的大小（我们可以假设在初始状态，棋子总是位于棋盘的适当位置）。下面的示意图即为一个1*15的棋盘，共有6个棋子，其中，编号8的位置有两个棋子。

![](https://111qqz.com/wp-content/uploads/2015/11/C101-1004-1.jpg)
大家知道，虽然偶尔不够浪漫，但是Rabbit和Grass都是冰雪聪明的女生，如果每次都是Rabbit先走棋，请输出最后的结果。










Input




输入数据包含多组测试用例，每个测试用例占二行，首先一行包含一个整数m（0<=m<=1000），表示本测试用例的棋子数目，紧跟着的一行包含m个整数Ki(i=1…m; 0<=Ki<=1000)，分别表示m个棋子初始的位置，m=0则结束输入。








Output




如果Rabbit能赢的话，请输出“Rabbit Win!”，否则请输出“Grass Win!”，每个实例的输出占一行。








Sample Input







2
3 5
3
3 5 6
0











Sample Output







Rabbit Win!
Grass Win!











Author




lcy








Source




[ACM Short Term Exam_2007/12/13](http://acm.hdu.edu.cn/search.php?field=problem&key=ACM+Short+Term+Exam_20071213&source=1&searchmode=source)







是一个略有变形的nim游戏模型




如果在i位置上有 k个棋子




我们可以看做有k堆数量为i的堆




可以向左移动1~i步




就可以看做每次从数量为i的堆中拿走数量１～i




这样就是nim游戏．




而nim游戏的结论是．．异或和为０必败．









![](https://111qqz.com/wp-content/uploads/2015/11/ContractedBlock69.gif)
![](https://111qqz.com/wp-content/uploads/2015/11/ExpandedBlockStart70.gif)


    
    /*************************************************************************
    	> File Name: code/hdu/1849.cpp
    	> Author: 111qqz
    	> Email: rkz2013@126.com 
    	> Created Time: 2015年09月22日 星期二 20时37分46秒
     ************************************************************************/
    
    #include<iostream>
    #include<iomanip>
    #include<cstdio>
    #include<algorithm>
    #include<cmath>
    #include<cstring>
    #include<string>
    #include<map>
    #include<set>
    #include<queue>
    #include<vector>
    #include<stack>
    #include<cctype>
    #define y1 hust111qqz
    #define yn hez111qqz
    #define j1 cute111qqz
    #define ms(a,x) memset(a,x,sizeof(a))
    #define lr dying111qqz
    using namespace std;
    #define For(i, n) for (int i=0;i<int(n);++i)  
    typedef long long LL;
    typedef double DB;
    const int inf = 0x3f3f3f3f;
    int m;
    int main()
    {
      #ifndef  ONLINE_JUDGE 
       freopen("in.txt","r",stdin);
      #endif
        while (scanf("%d",&m)!=EOF&&m)
        {
    	int sum = 0 ;
    	for ( int i = 0 ;i < m ; i++)
    	{
    	    int x;
    	    scanf("%d",&x);
    	    sum ^= x;
    	}
    	//cout<<sum<<endl;
    	if (sum)
    	{
    	    puts("Rabbit Win!");
    	}
    	else
    	{
    	    puts("Grass Win!");
    	}
        }
       
     #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
    	return 0;
    }
    








**同样，我们可以用sg函数来解决。**
** m个棋子可以认为是m个1个棋子的游戏的和。**
** 而游戏的和的sg值就是所有子游戏的sg值的异或。**




 

    
    /*************************************************************************
    	> File Name: code/hdu/1849.cpp
    	> Author: 111qqz
    	> Email: rkz2013@126.com 
    	> Created Time: 2015年09月22日 星期二 20时37分46秒
     ************************************************************************/
    
    #include<iostream>
    #include<iomanip>
    #include<cstdio>
    #include<algorithm>
    #include<cmath>
    #include<cstring>
    #include<string>
    #include<map>
    #include<set>
    #include<queue>
    #include<vector>
    #include<stack>
    #include<cctype>
    #define y1 hust111qqz
    #define yn hez111qqz
    #define j1 cute111qqz
    #define ms(a,x) memset(a,x,sizeof(a))
    #define lr dying111qqz
    using namespace std;
    #define For(i, n) for (int i=0;i<int(n);++i)  
    typedef long long LL;
    typedef double DB;
    const int inf = 0x3f3f3f3f;
    const int N=1E3+7;
    bool vis[N];
    int sg[N];
    int m;
    
    
    void sg_init()
    {
        for ( int i = 1 ; i < N ; i++)
        {
    	ms(vis,false);
    	for ( int j = 0 ; j <= i ; j++)
    	    vis[sg[i-j]] = true;
    
    	for ( int j = 0 ; ; j++)
    	    if (!vis[j])
    	    {
    		sg[i] = j;
    		break;
    	    }
        }
    }
    int main()
    {
      #ifndef  ONLINE_JUDGE 
       freopen("code/in.txt","r",stdin);
      #endif
    
       sg_init();
        while (scanf("%d",&m)!=EOF&&m)
        {
    	int sum = 0 ;
    	for ( int i = 0 ;i < m ; i++)
    	{
    	    int x;
    	    scanf("%d",&x);
    	    sum ^= sg[x];
    	}
    	//cout<<sum<<endl;
    	if (sum)
    	{
    	    puts("Rabbit Win!");
    	}
    	else
    	{
    	    puts("Grass Win!");
    	}
        }
       
     #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
    	return 0;
    }
    




