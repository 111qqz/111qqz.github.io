---
author: 111qqz
date: 2016-07-23 07:48:00+00:00
draft: false
title: hdu 2999 Stone Game, Why are you always there? (sg函数，线性串取石子)
type: post
url: /2016/07/hdu-2999/
categories:
- ACM
tags:
- sg函数
- 博弈论
---

[hdu2999题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=2999)

题意：有一串石子，给定一个集合S，每次只能拿**连续**x个石子，石子必须是在集合S中的数，问先手是否有必赢策略。**需要注意石子的位置是不能变化的，也就是说如果一串连续的石子因为中间有石子被取走，那么这段石子就变成不连续的了，也就不能一次取走。**

思路：一开始没有读懂题。需要特别强调的是。**石子的位置是不能合并的。。**

**举个例子，如果我有5个石子，S={2},那么我取完一次剩下的情况是 {3,4,5}或者{1},{4,5}或者{1,2},{5}或者{1,2,3} 一共四种。**

题意搞清楚以后就好做了。。类似于bomb game那道题。。我们仍然可以把取一次的操作拆分两个子过程，也就是两个区间。我们不关心区间具体的情况，只关心区间的长度。以及，取完只有一个区间的情况不需要特殊考虑，认为是长度为0就可以了，因为sg[0]为0，不影响答案。









 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年07月23日 星期六 15时02分17秒
    File Name :code/hdu/2999.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=2005;
    int sg[N];
    bool vis[N];
    set<int>ok;
    set<int>::iterator it ;
    int n;
    int q;
    
    
    void sg_init()
    {
        ms(sg,0);
        
        for ( int i = 1 ; i < N ; i++)
        {
    	ms(vis,false);
    
    	for ( it = ok.begin() ; it!=ok.end() ; it++)
    	{
    	    int tmp=*it;
    	    tmp = i-tmp;
    	    for ( int j = 0 ; tmp-j>= j ; j++)
    		vis[sg[j]^sg[tmp-j]] = true;
    	}
    
    	for ( int k = 0 ; ; k++)
    	    if (!vis[k])
    	    {
    		sg[i] = k;
    		break;
    	    }
        }
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	while (~scanf("%d",&n))
    	{
    	    ok.clear();
    //	    int mn = inf;
    	    for ( int i =  1 ; i  <=  n;  i++)
    	    {
    		int x;
    		scanf("%d",&x);
    		ok.insert(x);
    	//	mn = min(x,mn);
    		
    	    }
    	    sg_init();
    //	    for ( int i = 1; i <= 30 ; i++) cout<<"i:"<<i<<" sg[i]:"<<sg[i]<<endl;
    	    scanf("%d",&q);
    	    while (q--)
    	    {
    		int x;
    		scanf("%d",&x);
    		if (sg[x])
    		{
    		    puts("1");
    		}else
    		{
    		    puts("2");
    		}
    	    }
    	}
    
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



