---
author: 111qqz
date: 2015-02-17 09:01:00+00:00
draft: false
title: hdu 5113  Black And White
type: post
url: /2015/02/hdu5113/
categories:
- ACM

tags:
- 模拟
---

题意是说用k重颜色填充n*m的方格，第i种颜色要用ci次，保证ci（i属于1..k）的和为n"m，问是否有可行解，若有，输出任意一种。
第一感觉是dfs.。。而且数据范围还那么小。但是鉴于我上次dfs写成汪的经历....嗯 不过群里有学长说似乎剪枝不太好想？
我一开始分了四类，o行o列，e行e列，e行o列，o行e列，（o是odd，e是even）然后将c[i]排序，先填大的C[I]，感觉这样应该更容易找到解。交了一发,WA掉了。。发现当k较小的时候，也就是c[i]都相对较大的时候，先填大的C[I]的策略会出现错误。于是我换了下....按c[i]的大小从两边往中间...然后我还发现其实o行o列和e行e列可以归为一类，同理，后两种也可以归为一类。又交，又WA2333333  然后想了好久。。。 发现对于上面说的两类的处理顺序不同会得到不同的结果.......只有一种是对的。于是加了个judge函数判断冲突...如果冲突就换个顺序.....再交，A了。

过程中出现了两个语法上的错误....**一个是=写成了==(从来都是把==写成=。。。)
另一个是无参数的函数依然要写（）。。。。。。

确实不难....的确是我生疏了。
 
```c++

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月19日 星期五 16时20分07秒
    File Name :code/hdu/5113.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    
    using namespace std;
    
        int c[100],cc[100];
        int ans[10][10];
        int colorid[100];
        int n,m,k;
        void look();
    bool judge();
    
    
    int main()
    {
        int tt;
        int t;
        int kk;
    
        cin>>t;
        tt=t;
    
    
        int i,j;
        int head;
        int flag;
       while (t--)
        {  head=1;
        flag=1;
             memset(ans,0,sizeof(ans));
            cin>>n>>m>>k;
            kk=k;
            for (i=1;i<=k;i++)
                cin>>c[i];
    
            for (i=1;i<=k;i++)
                colorid[i]=i;
            for (i=1;i<k;i++)
                for (j=i+1;j<=k;j++)
                if (c[i]>c[j])
                {
                  swap(c[i],c[j]);
                  swap(colorid[i],colorid[j]);
                }
                 for (i=1;i<=k;i++)
                    cc[i]=c[i];
    
    
    
            if (c[k]>(n*m+1)/2)  { cout<<"Case #"<<tt-t<<":"<<endl;cout<<"NO"<<endl;continue;}
    
            for (i=1;i<=n;i++)
                for (j=1;j<=m;j++)
                    if ((i%2+j%2)%2==1)
                    {
                      if (flag%2==1)
                      {
    
    
                         ans[i][j]=colorid[k];
                        // cout<<"i:"<<i<<"j:"<<j<<" "<<colorid[k]<<endl;
    
                         c[k]--;
                         if (c[k]==0)
                            {
                                k--;
                                flag++;
    
                            }
                      }
                      else
                        {
                            ans[i][j]=colorid[head];
    
                        //    cout<<"i:"<<i<<"j:"<<j<<"  "<<colorid[head]<<endl;
                            c[head]--;
                            if (c[head]==0)
                            {
                                head++;
                                flag++;
    
                            }
                        }
                      //  look();
                    }
    
    
                    for (i=1;i<=n;i++)
                for (j=1;j<=m;j++)
                    if ((i%2+j%2)%2==0)
                    {
    
    
                        if (flag%2==1)
                      {
    
    
                         ans[i][j]=colorid[k];
                      //   cout<<"i:"<<i<<"j:"<<j<<" "<<colorid[k]<<endl;
                         c[k]--;
                         if (c[k]==0)
                            {
                                k--;
                                  flag++;
                            }
                      }
                      else
                        {
                            ans[i][j]=colorid[head];
                          // cout<<"i:"<<i<<"j:"<<j<<"  "<<colorid[head]<<endl;
                            c[head]--;
                            if (c[head]==0)
                            {
                                head++;
                               flag++;
                            }
                        }
                     //   look();
                    }
                   cout<<"Case #"<<tt-t<<":"<<endl;
                   cout<<"YES"<<endl;
    
                    if (!judge())
                         look();
                   else
                   {
    
    
                       k=kk;
                       head=1;
                       flag=1;
                       for (i=1;i<=k;i++)
                           c[i]=cc[i];
                       memset(ans,0,sizeof(ans));
    
                       for (i=1;i<=n;i++)
                        for (j=1;j<=m;j++)
                            if ((i%2+j%2)%2==0)
                        {
                            if (flag%2==1)
                            {
                         ans[i][j]=colorid[k];
                       //  cout<<"i:"<<i<<"j:"<<j<<" "<<colorid[k]<<endl;
    
                         c[k]--;
                         if (c[k]==0)
                            {
                                k--;
                                flag++;
    
                            }
                      }
                      else
                        {
                            ans[i][j]=colorid[head];
    
                         //   cout<<"i:"<<i<<"j:"<<j<<"  "<<colorid[head]<<endl;
                            c[head]--;
                            if (c[head]==0)
                            {
                                head++;
                                flag++;
    
                            }
                        }
                      //  look();
                    }
                    for (i=1;i<=n;i++)
                for (j=1;j<=m;j++)
                    if ((i%2+j%2)%2==1)
                    {
    
    
                        if (flag%2==1)
                      {
    
    
                         ans[i][j]=colorid[k];
                        // cout<<"i:"<<i<<"j:"<<j<<" "<<colorid[k]<<endl;
                         c[k]--;
                         if (c[k]==0)
                            {
                                k--;
                                  flag++;
                            }
                      }
                      else
                        {
                            ans[i][j]=colorid[head];
                         //  cout<<"i:"<<i<<"j:"<<j<<"  "<<colorid[head]<<endl;
                            c[head]--;
                            if (c[head]==0)
                            {
                                head++;
                               flag++;
                            }
                        }
                     //   look();
                    }
                      look();
    
                   }
    
    
    
        }
        return 0;
    }
    
    
    void look()
    {
        //  cout<<"lookkkkkkkkkkkkkkkkkkkkk"<<endl;
        int i,j;
        for (i=1;i<=n;i++)
            for (j=1;j<=m;j++)
                if (j!=m)
              cout<<ans[i][j]<<" ";
             else cout<<ans[i][j]<<endl;
    
    }
    bool judge()
    {
        int i,j;
        for (i=1;i<=n;i++)
            for (j=1;j<m;j++)
             if (ans[i][j]==ans[i][j+1])
               return true;
        for (i=1;i<n;i++)
            for (j=1;j<=m;j++)
            if (ans[i][j]==ans[i+1][j])
              return true;
          return false;
    }
    


```