---
author: 111qqz
date: 2015-04-08 11:40:00+00:00
draft: false
title: codeforces 525 B. Pasha and String
type: post
url: /2015/04/cf525b/
categories:
- ACM
tags:
- greedy
---

http://codeforces.com/problemset/problem/525/B

    
    题意是说一个字符串，进行m次颠倒变换（从a[i]位置到a[l-i+1]位置），问得到的字符串。容易发现，对于越在里边（对称，也就是越靠近中间位置）的字符，调换的次数越多。我们可以把a[i]从小到大排序。然后经过分析发现，把两个相邻的a[i]分为一组，做处理，如果m为奇数，最后还剩下a[m]没有被分组，要单独处理a[m]细节上要注意st数组是从st[0]开始的...好吧的确不方便，适牛也说我了。。数组下标以后还是从0开始吧。。。主要是受高中OI用的pascal的影响。。。那个数组下标随便啊。代码：


```c++

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年02月22日 星期一 23时39分51秒
    File Name :code/cf/problem/525B.cpp
    ************************************************ */
    
    #include <iostream>
    #include <algorithm>
    #include <cstring>
    #include <cmath>
    #include <cstdio>
    
    using namespace std;
    
    int m,k,len;
    const int N=2E5+7;
    int a[N];
    char st[N];
    
    int main()
    {
        cin>>st;
        scanf("%d",&m);
        for ( int i = 1 ; i <= m ; i++ )
            scanf("%d",&a[i]);
        sort(a+1,a+m+1);
        k = 1;
        len = strlen(st);
        while (k<=m)
        {
            for ( int j = a[k] ; j <= a[k+1]-1 ; j++)
                swap(st[j-1],st[len-j]);
            k = k + 2;
        }
        if ( m %2==1 )
            for ( int i = a[m]; i <= len/2 ; i++ )
                swap(st[i-1],st[len-i]);
        cout<<st<<endl;
        return 0;
    }



```