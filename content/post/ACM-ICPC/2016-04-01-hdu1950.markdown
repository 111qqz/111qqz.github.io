---
author: 111qqz
date: 2016-04-01 13:16:54+00:00
draft: false
title: hdu 1950 Bridging signals (LIS)
type: post
url: /2016/04/hdu1950/
categories:
- ACM
tags:
- LIS
---

[题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=1950)
题意：有两跟柱子并排竖直放置，每根柱子有n个结点，从上往下标号1..n， 两根柱子间的结点间要连线，给出计划连接的情况。a[i]表示左边结点i连接右边结点a[i].但是要求连线不能交叉，所以计划可能不能全部执行。现在问最多能连接多少条线。
思路：由于不能交叉，而左边的结点是按照顺序给出的，所以右边连接的结点只能是越来越大。其实就是求a[i]的最长上升子序列。感觉算是LIS的一个比较巧妙的应用？ 由于n还是很大。所以必须nlogn的做法。
 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月01日 星期五 20时43分24秒
    File Name :code/hdu/1950.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=4E4+7;
    int n;
    int a[N];
    int dp[N];
    int g[N];
    
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	ios::sync_with_stdio(false);
    	int T;
    	cin>>T;
    	while (T--)
    	{
    	    cin>>n;
    	    for ( int i = 1 ; i <= n ; i++) cin>>a[i];
    	    ms(g,0x3f);
    	    int ans = 0 ; 
    	    for ( int i = 1 ; i <= n ; i++)
    	    {
    		int k = lower_bound(g+1,g+n+1,a[i])-g;
    		dp[i] = k;
    		g[k] = a[i];
    		ans = max(ans,dp[i]);
    	    }
    
    	    cout<<ans<<endl;
    	}
    
    
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    







