---
author: 111qqz
date: 2016-03-23 08:16:05+00:00
draft: false
title: 'hdu 5646 ||bc #76 div 2 (贪心)'
type: post
url: /2016/03/hdu5646/
categories:
- ACM
tags:
- greedy
---

[题目链接](http://acm.hdu.edu.cn/showproblem.php?pid=5646)

题意：将正整数n(n<=1E9)，拆分成k个（k<=1E9）个**互不相等的正整数，**并且使得k个正整数的乘积最大。如果可以拆分，输出最大乘积，否则输出-1.

思路：其实是道贪心。。容易知道，k个互不相同的正整数的最小的和为sum=(k+1)*k/2，以此来判断是否有解。如果有解。那么找到最大的i，使得从i 开始的连续k个正整数相加的和小于等于n.

由于k不会超过1E5(否则一定无解)，所以可以开个数组存一下拆分的每个数。

然后设此时还需要添加r才能到n,那么贪心得想，一定是给最大的r个每个增加1最后的乘积会最大。这等效于直接将第k-r+1个直接增加r.

注意全程long long

以及：


## **开了同步以后scanf/puts/printf  和 cin/cout 后会导致WA!!!**




## **开了同步以后scanf/puts/printf  和 cin/cout 后会导致WA!!!**




## **开了同步以后scanf/puts/printf  和 cin/cout 后会导致WA!!!**




## **开了同步以后scanf/puts/printf  和 cin/cout 后会导致WA!!!**




## **开了同步以后scanf/puts/printf  和 cin/cout 后会导致WA!!!**


原因是puts也是<stdio.h>里的。。

**c和c++各有一套指针。。随时同步，所以cin会慢。。关掉同步会快，但是由于已经关掉同步了，混用就会有问题。 以前不知道puts也是不能混用的QAQ**







    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年03月22日 星期二 20时43分37秒
    File Name :code/hdu/r5646.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E6+7;
    const LL MOD = 1E9+7;
    LL n,k;
    LL a[N];
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	ios::sync_with_stdio(false);
    	int T;
    	cin>>T;
    	while (T--)
    	{
    	    ms(a,0);
    	    cin>>n>>k;
    	    LL sum = k*(k+1)/2;
    	    LL r = n - sum;
    	    if (r<0)
    	    {
    	//	puts("-1");
    		cout<<-1<<endl;
    		continue;
    	    }
    
    	    LL x = r/k;
    	    ms(a,0);
    	    sum = 0 ;
    	    for ( int i = 1 ; i <= k ; i++)
    	    {
    		a[i] = i + x;
    		sum+=a[i];
    	    }
    
    	    r = n- sum;
    	    a[k-r+1]+=r;
    	    LL ans = 1;
    	    for ( int i = 1 ; i <= k ; i ++)
    	    {
    		ans = (ans * a[i]) % MOD;
    	    }
    	    cout<<ans%MOD<<endl;
    	}
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



