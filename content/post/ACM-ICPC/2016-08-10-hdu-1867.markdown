---
author: 111qqz
date: 2016-08-10 22:03:19+00:00
draft: false
title: hdu 1867 A + B for you again （kmp，最短的字符串a+b）
type: post
url: /2016/08/hdu-1867/
categories:
- ACM
tags:
- kmp
---

[hdu 1867 题意](http://acm.hdu.edu.cn/showproblem.php?pid=1867)
题意：给两个字符串，将两个字符串**首尾拼接**之后得到一个长度最短的字符串，求这个最短的字符串（一个串的**前缀**可能是另一个串的后缀，这样的话只出现一次就行了）

思路：kmp。。注意和hdu 1841区分。那道题是只要得到一个串包含两个串即可。这道题是首尾拼接得到。

还要注意。。这道题要求了长度相同时按照字典序小的方法拼接。。。

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年08月11日 星期四 05时08分32秒
    File Name :code/hdu/1867.cpp
    ************************************************ */
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <stack>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <deque>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=1E5+7;
    char a[N],b[N];
    int nxt[N];
    void getnxt( char *s)
    {
        int n = strlen(s);
        int i = 0 ;
        int j = -1;
        nxt[0] = -1;
        while (i<n)
    	if (j==-1||s[i]==s[j]) nxt[++i] = ++j;
    	else j = nxt[j];
    }
    int kmp(char *a,char *b)
    {
        int n = strlen(a);
        int m = strlen(b);
        int i = 0;
        int j = 0;
        getnxt(b);
        while (i<n&&j<m)
        {
    	if (j==-1||a[i]==b[j]) i++,j++;
    	else j = nxt[j];
        }
        if (i==n)   //因为要保证，两个串是首尾拼接得到的，这样子必须是文本串的后缀和模式串的前缀相等。这是和hdu 1841的不同。
    	return j;  
        return 0;
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    	while (scanf("%s\n%s",a,b)!=EOF)
    	{
    	    int k1 = kmp(a,b);
    	    int k2 = kmp(b,a);
    	//    cout<<"k1:"<<k1<<" k2:"<<k2<<endl;
    	    if (k1==k2)
    	    {
    		if (strcmp(a,b)>0)
    		{
    		    printf("%s",b);
    		    printf("%s\n",a+k1);
    		}else
    		{
    		    printf("%s",a);
    		    printf("%s\n",b+k1);
    		}
    	    }
    	    else if (k1>k2)
    	    {
    		printf("%s",a);
    		printf("%s\n",b+k1);
    	    }
    	    else
    	    {
    		printf("%s",b);
    		printf("%s\n",a+k2);
    	    }
    	}
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    





