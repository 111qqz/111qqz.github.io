---
author: 111qqz
date: 2016-04-14 11:39:25+00:00
draft: false
title: 'BZOJ 3407: [Usaco2009 Oct]Bessie''s Weight Problem 贝茜的体重问题(01背包)'
type: post
url: /2016/04/bzoj-3407/
categories:
- ACM
tags:
- 01背包
---

## 3407: [Usaco2009 Oct]Bessie's Weight Problem 贝茜的体重问题


Time Limit: 3 Sec  Memory Limit: 128 MB
Submit: 88  Solved: 79
[[Submit](http://www.lydsy.com/JudgeOnline/submitpage.php?id=3407)][[Status](http://www.lydsy.com/JudgeOnline/problemstatus.php?id=3407)][[Discuss](http://www.lydsy.com/JudgeOnline/bbs.php?id=3407)]


## Description


贝茜像她的诸多姊妹一样，因为从约翰的草地吃了太多美味的草而长出了太多的赘肉．所以约翰将她置于一个及其严格的节食计划之中．她每天不能吃多过H(5≤日≤45000)公斤的干草．贝茜只能吃一整捆干草；当她开始吃一捆干草的之后就再也停不下来了．她有一个完整

的N(1≤N≤500)捆可以给她当作晚餐的干草的清单．她自然想要尽量吃到更多的干草．很自然地，每捆干草只能被吃一次（即使在列表中相同的重量可能出现2次，但是这表示的是两捆干草，其中每捆干草最多只能被吃掉一次）．

给定一个列表表示每捆干草的重量Si(1≤Si≤H)，求贝茜不超过节食的限制的前提下可以吃掉多少干草（注意一旦她开始吃一捆干草就会把那一捆干草全部吃完）．


## Input


第1行：两个由空格隔开的整数日和N.

第2到第N+1行：第i+l行是一个单独的整数，表示第i捆干草的重量Si．


## Output




一个单独的整数表示贝茜在限制范围内最多可以吃多少公斤的干草．


## Sample Input


56 4
15
19
20
21


## Sample Output


56


## HINT


有四捆草，重量分别是15，19，20和21.贝茜在56公斤的限制范围内想要吃多少就可以吃多少．

贝茜可以吃3捆干草（重量分别为15，20，21）．恰好达到她的56公斤的限制．







`` 

    
    /* ***********************************************
    Author :111qqz
    Created Time :2016年04月14日 星期四 19时33分09秒
    File Name :code/bzoj/3407.cpp
    ************************************************ */
    
    #include <cstdio>
    #include <cstring>
    #include <iostream>
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <set>
    #include <map>
    #include <string>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #define fst first
    #define sec second
    #define lson l,m,rt<<1
    #define rson m+1,r,rt<<1|1
    #define ms(a,x) memset(a,x,sizeof(a))
    typedef long long LL;
    #define pi pair < int ,int >
    #define MP make_pair
    
    using namespace std;
    const double eps = 1E-8;
    const int dx4[4]={1,0,0,-1};
    const int dy4[4]={0,-1,1,0};
    const int inf = 0x3f3f3f3f;
    const int N=5E4+7;
    int n,V;
    int a[505];
    int dp[N];
    
    void solve ( int cost,int val)
    {
        for ( int i = V ; i >= cost ; i--)
    	dp[i] = max(dp[i],dp[i-cost]+val);
    }
    int main()
    {
    	#ifndef  ONLINE_JUDGE 
    	freopen("code/in.txt","r",stdin);
      #endif
    
    	scanf("%d %d",&V,&n);
    	for ( int i = 1 ; i <= n ; i++) scanf("%d",&a[i]);
    
    	ms(dp,0);
    	for ( int i = 1 ; i <= n ; i++)
    	{
    	    solve(a[i],a[i]);
    	}
    
    	int ans = 0 ;
    	for ( int i = V ; i >= 0 ; i--) ans = max(ans,dp[i]);
    	printf("%d\n",ans);
    
      #ifndef ONLINE_JUDGE  
      fclose(stdin);
      #endif
        return 0;
    }
    



