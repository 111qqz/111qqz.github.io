<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OS on 111qqz的小窝</title>
    <link>https://111qqz.com/categories/os/</link>
    <description>Recent content in OS on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Mar 2019 12:45:25 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.com/categories/os/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【施工中】MIT 6.828 lab 3: User Environments</title>
      <link>https://111qqz.com/2019/03/mit-6-828-lab-3-user-environments/</link>
      <pubDate>Sun, 03 Mar 2019 12:45:25 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/03/mit-6-828-lab-3-user-environments/</guid>
      <description>JOS的environments基本可以理解成&amp;rdquo;process&amp;rdquo;进程的同义词，但是由于&amp;rdquo;process&amp;</description>
    </item>
    
    <item>
      <title>【施工中】MIT 6.828 lab 3: User Environments</title>
      <link>https://111qqz.com/2019/03/mit-6-828-lab-3-user-environments/</link>
      <pubDate>Sun, 03 Mar 2019 12:45:25 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/03/mit-6-828-lab-3-user-environments/</guid>
      <description>JOS的environments基本可以理解成&amp;rdquo;process&amp;rdquo;进程的同义词，但是由于&amp;rdquo;process&amp;</description>
    </item>
    
    <item>
      <title>【施工完毕】MIT 6.828 lab 2: Memory Management</title>
      <link>https://111qqz.com/2019/02/mit-6-828-lab-2/</link>
      <pubDate>Thu, 14 Feb 2019 14:01:46 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/02/mit-6-828-lab-2/</guid>
      <description>2019年2月24:完成了除了&amp;rdquo;Challenge&amp;rdquo;以外的全部练习和问题. 总共花费15个小时. 2019年2月26:完</description>
    </item>
    
    <item>
      <title>【施工完毕】MIT 6.828 lab 2: Memory Management</title>
      <link>https://111qqz.com/2019/02/mit-6-828-lab-2/</link>
      <pubDate>Thu, 14 Feb 2019 14:01:46 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/02/mit-6-828-lab-2/</guid>
      <description>2019年2月24:完成了除了&amp;rdquo;Challenge&amp;rdquo;以外的全部练习和问题. 总共花费15个小时. 2019年2月26:完</description>
    </item>
    
    <item>
      <title>x86 calling conventions</title>
      <link>https://111qqz.com/2019/01/x86-calling-conventions/</link>
      <pubDate>Thu, 31 Jan 2019 12:12:22 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/x86-calling-conventions/</guid>
      <description>x86的调用约定主要说的是这几件事: * The order in which atomic (scalar) parameters, or individual parts of a complex parameter, are allocated * How parameters are passed (pushed on the stack, placed in registers, or a mix of both) * Which registers the called function must preserve for the caller (also known as: callee-saved registers or non-volatile</description>
    </item>
    
    <item>
      <title>x86 calling conventions</title>
      <link>https://111qqz.com/2019/01/x86-calling-conventions/</link>
      <pubDate>Thu, 31 Jan 2019 12:12:22 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/x86-calling-conventions/</guid>
      <description>x86的调用约定主要说的是这几件事: * The order in which atomic (scalar) parameters, or individual parts of a complex parameter, are allocated * How parameters are passed (pushed on the stack, placed in registers, or a mix of both) * Which registers the called function must preserve for the caller (also known as: callee-saved registers or non-volatile</description>
    </item>
    
    <item>
      <title>【施工完成】MIT 6.828 lab 1: C, Assembly, Tools and Bootstrapping</title>
      <link>https://111qqz.com/2019/01/mit-6-828-lab-1/</link>
      <pubDate>Thu, 24 Jan 2019 12:27:58 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/mit-6-828-lab-1/</guid>
      <description>花费了30+小时，终于搞定了orz Part 1: PC Bootstrap The PC&amp;rsquo;s Physical Address Space 8086/8088时代 +------------------+ &amp;lt;- 0x00100000 (1MB) | BIOS ROM | +------------------+ &amp;lt;- 0x000F0000 (960KB) | 16-bit devices, | | expansion ROMs | +------------------+ &amp;lt;- 0x000C0000 (768KB) | VGA Display | +------------------+ &amp;lt;- 0x000A0000 (640KB) |</description>
    </item>
    
    <item>
      <title>【施工完成】MIT 6.828 lab 1: C, Assembly, Tools and Bootstrapping</title>
      <link>https://111qqz.com/2019/01/mit-6-828-lab-1/</link>
      <pubDate>Thu, 24 Jan 2019 12:27:58 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/mit-6-828-lab-1/</guid>
      <description>花费了30+小时，终于搞定了orz Part 1: PC Bootstrap The PC&amp;rsquo;s Physical Address Space 8086/8088时代 +------------------+ &amp;lt;- 0x00100000 (1MB) | BIOS ROM | +------------------+ &amp;lt;- 0x000F0000 (960KB) | 16-bit devices, | | expansion ROMs | +------------------+ &amp;lt;- 0x000C0000 (768KB) | VGA Display | +------------------+ &amp;lt;- 0x000A0000 (640KB) |</description>
    </item>
    
    <item>
      <title>【施工中】MIT 6.828 Operating System Engineering 学习笔记</title>
      <link>https://111qqz.com/2019/01/mit-6-828-operating-system-engineering-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Tue, 15 Jan 2019 16:39:18 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/mit-6-828-operating-system-engineering-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>课程主页 这课稍微有点硬核&amp;hellip;感觉基础稍微有些不扎实就做不下去orz. 网上似乎是有博客写了6.828的学习笔记，不过我更希望自己能</description>
    </item>
    
    <item>
      <title>【施工中】MIT 6.828 Operating System Engineering 学习笔记</title>
      <link>https://111qqz.com/2019/01/mit-6-828-operating-system-engineering-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Tue, 15 Jan 2019 16:39:18 +0000</pubDate>
      
      <guid>https://111qqz.com/2019/01/mit-6-828-operating-system-engineering-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>课程主页 这课稍微有点硬核&amp;hellip;感觉基础稍微有些不扎实就做不下去orz. 网上似乎是有博客写了6.828的学习笔记，不过我更希望自己能</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://111qqz.com/2018/05/4744/</link>
      <pubDate>Thu, 03 May 2018 12:47:43 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/05/4744/</guid>
      <description>./src/geekos/screen.c:333:6: 错误：this ‘if’ clause does not guard&amp;hellip; [-Werror=misleading-indentation] if (s_cons.numArgs == 2) Move_Cursor(Get_Arg(0)-1, Get_Arg(1)-1); break; 原因是编译检查过于严格。。我们修改makefile文件，取消把warning当成错误看待。把</description>
    </item>
    
    <item>
      <title>No Content Found</title>
      <link>https://111qqz.com/2018/05/4744/</link>
      <pubDate>Thu, 03 May 2018 12:47:43 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/05/4744/</guid>
      <description>./src/geekos/screen.c:333:6: 错误：this ‘if’ clause does not guard&amp;hellip; [-Werror=misleading-indentation] if (s_cons.numArgs == 2) Move_Cursor(Get_Arg(0)-1, Get_Arg(1)-1); break; 原因是编译检查过于严格。。我们修改makefile文件，取消把warning当成错误看待。把</description>
    </item>
    
    <item>
      <title>geekos project 1 （ELF文件相关）</title>
      <link>https://111qqz.com/2016/06/geekos-project-1-%ef%bc%88elf%e6%96%87%e4%bb%b6%e7%9b%b8%e5%85%b3%ef%bc%89/</link>
      <pubDate>Sat, 18 Jun 2016 19:43:34 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geekos-project-1-%ef%bc%88elf%e6%96%87%e4%bb%b6%e7%9b%b8%e5%85%b3%ef%bc%89/</guid>
      <description>一、目的 熟悉ELF文件格式，了解GeekOS系统如何将ELF格式的可执行程序装入到内存，建立内核进程并运行的实现技术。 二、流程 1、修改/ge</description>
    </item>
    
    <item>
      <title>geekos project 1 （ELF文件相关）</title>
      <link>https://111qqz.com/2016/06/geekos-project-1-%ef%bc%88elf%e6%96%87%e4%bb%b6%e7%9b%b8%e5%85%b3%ef%bc%89/</link>
      <pubDate>Sat, 18 Jun 2016 19:43:34 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geekos-project-1-%ef%bc%88elf%e6%96%87%e4%bb%b6%e7%9b%b8%e5%85%b3%ef%bc%89/</guid>
      <description>一、目的 熟悉ELF文件格式，了解GeekOS系统如何将ELF格式的可执行程序装入到内存，建立内核进程并运行的实现技术。 二、流程 1、修改/ge</description>
    </item>
    
    <item>
      <title>geek OS project 0 （下）</title>
      <link>https://111qqz.com/2016/06/geek-os-project-0-%ef%bc%88%e4%b8%8b%ef%bc%89/</link>
      <pubDate>Sat, 18 Jun 2016 09:48:06 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geek-os-project-0-%ef%bc%88%e4%b8%8b%ef%bc%89/</guid>
      <description>现在我们环境已经搭好了，参考 geekos实验环境的搭建 在main.c中新加个函数，命名为projecto,函数的代码如下： /* * GeekOS C code entry point * Copyright</description>
    </item>
    
    <item>
      <title>geek OS project 0 （下）</title>
      <link>https://111qqz.com/2016/06/geek-os-project-0-%ef%bc%88%e4%b8%8b%ef%bc%89/</link>
      <pubDate>Sat, 18 Jun 2016 09:48:06 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geek-os-project-0-%ef%bc%88%e4%b8%8b%ef%bc%89/</guid>
      <description>现在我们环境已经搭好了，参考 geekos实验环境的搭建 在main.c中新加个函数，命名为projecto,函数的代码如下： /* * GeekOS C code entry point * Copyright</description>
    </item>
    
    <item>
      <title>geekok project0（上）（实验环境的搭建）</title>
      <link>https://111qqz.com/2016/06/geekok-project0/</link>
      <pubDate>Sat, 18 Jun 2016 08:35:49 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geekok-project0/</guid>
      <description>apt-get install build-essential apt-get install bochs bochs-x nasm 此处下载的bochs应该是比较新的&amp;hellip;如果之后遇到 failed assertion in init_idt :g_handlersizenoterr == g_handlersizeerr 这个错误，建议安装比较老的nasm版本，比如2.</description>
    </item>
    
    <item>
      <title>geekok project0（上）（实验环境的搭建）</title>
      <link>https://111qqz.com/2016/06/geekok-project0/</link>
      <pubDate>Sat, 18 Jun 2016 08:35:49 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/geekok-project0/</guid>
      <description>apt-get install build-essential apt-get install bochs bochs-x nasm 此处下载的bochs应该是比较新的&amp;hellip;如果之后遇到 failed assertion in init_idt :g_handlersizenoterr == g_handlersizeerr 这个错误，建议安装比较老的nasm版本，比如2.</description>
    </item>
    
    <item>
      <title>OS课设之geek os 非最终版</title>
      <link>https://111qqz.com/2016/06/os%e8%af%be%e8%ae%be%e4%b9%8bgeek-os-%e9%9d%9e%e6%9c%80%e7%bb%88%e7%89%88/</link>
      <pubDate>Fri, 17 Jun 2016 04:09:37 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/os%e8%af%be%e8%ae%be%e4%b9%8bgeek-os-%e9%9d%9e%e6%9c%80%e7%bb%88%e7%89%88/</guid>
      <description>参考了这篇博客 流程部分不再具体描述，可以参考上面的博客。 只详细给出我遇到的问题。 我的pc环境是：Linux 111qqz-ThinkPad-X200 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux linux mint 17.2</description>
    </item>
    
    <item>
      <title>OS课设之geek os 非最终版</title>
      <link>https://111qqz.com/2016/06/os%e8%af%be%e8%ae%be%e4%b9%8bgeek-os-%e9%9d%9e%e6%9c%80%e7%bb%88%e7%89%88/</link>
      <pubDate>Fri, 17 Jun 2016 04:09:37 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/06/os%e8%af%be%e8%ae%be%e4%b9%8bgeek-os-%e9%9d%9e%e6%9c%80%e7%bb%88%e7%89%88/</guid>
      <description>参考了这篇博客 流程部分不再具体描述，可以参考上面的博客。 只详细给出我遇到的问题。 我的pc环境是：Linux 111qqz-ThinkPad-X200 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux linux mint 17.2</description>
    </item>
    
  </channel>
</rss>