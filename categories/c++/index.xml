<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on 111qqz的小窝</title>
    <link>https://111qqz.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Feb 2019 11:19:29 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C语言变长参数</title>
      <link>https://111qqz.github.io/2019/02/variadic-function-of-c/</link>
      <pubDate>Fri, 01 Feb 2019 11:19:29 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2019/02/variadic-function-of-c/</guid>
      <description>说起C语言的变长参数，可能听起来比较陌生，因为很少会需要自己实现。不过想一下scanf和printf，参数个数的确是不固定的。 stdarg.h 中提供以一套</description>
    </item>
    
    <item>
      <title>std::call_once &amp;&amp; std::once_flag  notes</title>
      <link>https://111qqz.github.io/2018/09/stdcall_once-stdonce_flag-notes/</link>
      <pubDate>Thu, 20 Sep 2018 12:47:46 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/09/stdcall_once-stdonce_flag-notes/</guid>
      <description>多线程保护数据时，一种较为特殊的情况是只需要保护资源的初始化。 资源初始化一般遵循&amp;quot;lazy initialization&amp;quot;</description>
    </item>
    
    <item>
      <title>Lock-free vs wait-free concurrency</title>
      <link>https://111qqz.github.io/2017/03/lock-free-vs-wait-free-concurrency/</link>
      <pubDate>Tue, 21 Mar 2017 09:24:56 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/03/lock-free-vs-wait-free-concurrency/</guid>
      <description>参考资料 看leveldb源码中遇到的，关于lock-free 和 wait-free..感觉这个讲得不错，我试着翻译一下？ There are two types of [non-blocking thread synchronization](http://en.wikipedia.org/wiki/Non-blocking_synchronization) algorithms - lock-free,</description>
    </item>
    
    <item>
      <title>C&#43;&#43; const 用法总结（转载）</title>
      <link>https://111qqz.github.io/2017/03/c-const-/</link>
      <pubDate>Sat, 18 Mar 2017 12:22:32 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/03/c-const-/</guid>
      <description>基本全文照搬了：关于C++ const 的全面总结 总结全面还是要一点时间的orz..感谢原作者，暂时没发现有什么错误（? 其中对我而言比较陌生的是“con</description>
    </item>
    
    <item>
      <title>C&#43;&#43; sort学习笔记</title>
      <link>https://111qqz.github.io/2017/03/c-sort/</link>
      <pubDate>Wed, 01 Mar 2017 07:27:12 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/03/c-sort/</guid>
      <description>回想起大一的时候打cf&amp;hellip;那个时候对C++还不怎么熟悉。。。用sort不会自定义排序方式。。 于是手写快排。。。直接取中间元素没加</description>
    </item>
    
    <item>
      <title>cpp vector学习笔记</title>
      <link>https://111qqz.github.io/2017/02/cpp-vector/</link>
      <pubDate>Tue, 28 Feb 2017 07:21:49 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/02/cpp-vector/</guid>
      <description>起因是百度实习二面的时候被问了一道类似这样的题： 给我下面的代码，问有没有什么问题。 /* *********************************************** Author :111qqz Created Time :2017年02月28日 星期二 14时49分37</description>
    </item>
    
    <item>
      <title>c&#43;&#43;11 学习笔记</title>
      <link>https://111qqz.github.io/2016/08/c11-/</link>
      <pubDate>Thu, 18 Aug 2016 07:37:49 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/c11-/</guid>
      <description>昨天终于搞定了ycm对c++11的支持&amp;hellip;. 嘛，17都快出来了，我竟然连11都不会用。 不过突然把所有的11特性给我也没办法全部吸</description>
    </item>
    
    <item>
      <title>c语言中static的作用</title>
      <link>https://111qqz.github.io/2016/01/cstatic/</link>
      <pubDate>Mon, 11 Jan 2016 06:55:04 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/01/cstatic/</guid>
      <description>一般有两个 static int a; int b; void func(void) { static int c=0; int d; } 在这里，a与b都是全局变量，二者的区别是，b可以被别的文件使用，a只能在本文件中使用，这是static</description>
    </item>
    
  </channel>
</rss>