<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>其他 on 111qqz的小窝</title><link>https://111qqz.github.io/categories/%E5%85%B6%E4%BB%96/</link><description>Recent content in 其他 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 26 Feb 2022 18:12:20 +0800</lastBuildDate><atom:link href="https://111qqz.github.io/categories/%E5%85%B6%E4%BB%96/index.xml" rel="self" type="application/rss+xml"/><item><title>2022 TO DO list</title><link>https://111qqz.github.io/2022/02/2022-to-do-list/</link><pubDate>Sat, 26 Feb 2022 18:12:20 +0800</pubDate><guid>https://111qqz.github.io/2022/02/2022-to-do-list/</guid><description>竟然一下子就2022年了，时间过得真快。 还是简单列一下TODO list吧。 源码 levelDB workflow 书籍 课程 目前买了一年的极客时间，可以学6门课&amp;hellip</description></item><item><title>博客除草</title><link>https://111qqz.github.io/2022/02/better-blog/</link><pubDate>Wed, 02 Feb 2022 19:56:49 +0800</pubDate><guid>https://111qqz.github.io/2022/02/better-blog/</guid><description>博客要长草了。。趁着过年时间多，打理一下。。 添加google analytics hugo本身已经集成了这个功能 要点是集成的是旧版本的universal analytics (对应</description></item><item><title>Goodbye 2021</title><link>https://111qqz.github.io/2022/01/goodbye-2021/</link><pubDate>Mon, 03 Jan 2022 16:27:20 +0800</pubDate><guid>https://111qqz.github.io/2022/01/goodbye-2021/</guid><description>在公司做ppt做到吐血，恰好想起2021年终总结还没有写 过去的一年 总的来说,2021年真的是无比辛苦的一年。 转行互联网的阵痛期这句话其实完全</description></item><item><title>使用github actions来部署 github pages</title><link>https://111qqz.github.io/2020/01/using-github-actions-to-deploy-gh-pages/</link><pubDate>Sat, 23 Jan 2021 17:08:00 +0800</pubDate><guid>https://111qqz.github.io/2020/01/using-github-actions-to-deploy-gh-pages/</guid><description>目前我的博客是部署在github pages上，源码是一个repo,渲染出来的静态页面是一个repo. 更新的时候是把后者作为前者的submod</description></item><item><title>2020年终总结</title><link>https://111qqz.github.io/2020/01/my-2020/</link><pubDate>Sun, 03 Jan 2021 16:54:57 +0800</pubDate><guid>https://111qqz.github.io/2020/01/my-2020/</guid><description>本来不知道写什么所以不打算写了，不过后来觉得可以把今年做的一些重大的决定写出来，把当时的分析和想法记录下来。这样若干年后再回看，就能找到，是</description></item><item><title>k8s nodes is forbidden user cannot list resource nodes in api group at the cluster scope</title><link>https://111qqz.github.io/2020/05/install-k8s-get-nodes-forbidden-error/</link><pubDate>Thu, 07 May 2020 16:01:52 +0800</pubDate><guid>https://111qqz.github.io/2020/05/install-k8s-get-nodes-forbidden-error/</guid><description>继续将k8s用于模型转换和部署的自动化流程&amp;hellip;然后发现之前安装k8s的文档不work了．． 时间是2020年5月7日，当前最新的k</description></item><item><title>thinkpad t430 manjaro系统安装nvidia驱动</title><link>https://111qqz.github.io/2020/04/install-nvidia-driver-on-thinkpad-t430-manjaro/</link><pubDate>Sun, 12 Apr 2020 07:10:14 +0800</pubDate><guid>https://111qqz.github.io/2020/04/install-nvidia-driver-on-thinkpad-t430-manjaro/</guid><description>前几天装驱动把笔记本搞崩溃了..重新装了kde桌面环境的manjaro 首先根据 Configure NVIDIA (non-free) settings and load them on Startup 直接装驱动。 装之后mhwd -li命令会显示新</description></item><item><title>2020 to do List</title><link>https://111qqz.github.io/2020/02/2020-to-do-list/</link><pubDate>Fri, 21 Feb 2020 20:12:51 +0800</pubDate><guid>https://111qqz.github.io/2020/02/2020-to-do-list/</guid><description>就..终于再次出现了to do list. 原因是之前一直不知道如何置顶文章&amp;hellip;. 竟然一下子就2020年了&amp;hellip; 学习模型量化 学习onn</description></item><item><title>yuv 图像格式初探</title><link>https://111qqz.github.io/2019/07/yuv-image-format/</link><pubDate>Wed, 03 Jul 2019 20:31:11 +0800</pubDate><guid>https://111qqz.github.io/2019/07/yuv-image-format/</guid><description>概述 YUV是一种图像编码方式,或者称为色彩空间,与RGB是同级的概念. YUV是三个分量,Y,U和V,其中: Y 表示明亮度(Luminance或</description></item><item><title>写在毕业一年之后</title><link>https://111qqz.github.io/2019/06/one-yeaf-after-graduation/</link><pubDate>Sat, 29 Jun 2019 01:04:09 +0800</pubDate><guid>https://111qqz.github.io/2019/06/one-yeaf-after-graduation/</guid><description>转眼毕业一整年了，是时候做一个复盘了。 依稀记得刚入职的时候leader提醒我要有职业规划时的场景。总体来说，这一年虽然没有完全走在最正确的路</description></item><item><title>迁移博客到hugo</title><link>https://111qqz.github.io/2019/05/hello-hugo/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://111qqz.github.io/2019/05/hello-hugo/</guid><description>发现工作之后更新博客的频率低了很多，以及迫于不想在自己维护服务器了，因此决定把博客迁移到hugo上。 由于原本的博客内容实在是太多了，因此目前</description></item><item><title>BattleBlock Theater linux下无法启动的解决办法　（　void* MemoryBlock::Alloc(unsigned int): Assertion failed ）</title><link>https://111qqz.github.io/2019/05/battleblock-theater-linux-start-failed/</link><pubDate>Wed, 01 May 2019 12:09:18 +0000</pubDate><guid>https://111qqz.github.io/2019/05/battleblock-theater-linux-start-failed/</guid><description>在steam上买了 BattleBlock Theater， 官方说支持linux，但是却无法启动。 在steam里启动看不到log,于是找到游戏的安装目录。 /home/coder/.steam/steam/steamapps/common/BattleBlock Theater 在终端</description></item><item><title>manjaro /archlinux 下 steam 文明5/6(civilization V/VI)的运行方法</title><link>https://111qqz.github.io/2019/02/manjaro-archlinux-civilization/</link><pubDate>Sat, 23 Feb 2019 14:28:01 +0000</pubDate><guid>https://111qqz.github.io/2019/02/manjaro-archlinux-civilization/</guid><description>系统版本为Manjaro 18.0.3 Illyria 运行文明5比较容易，只需要设置启动选项为: LD_PRELOAD=/usr/lib32/libopenal.so.1 %command% 文明6运行会报错 undefined symbol: FT_Done_MM_Var 解决办法是 在终端中用如下办法运行steam:</description></item><item><title>2019 to do list</title><link>https://111qqz.github.io/2019/01/2019-to-do-list/</link><pubDate>Tue, 01 Jan 2019 13:13:04 +0000</pubDate><guid>https://111qqz.github.io/2019/01/2019-to-do-list/</guid><description>* &amp;lt;del&amp;gt;Operating Systems: Three Easy Pieces&amp;lt;/del&amp;gt; * fluent python * &amp;lt;del&amp;gt;《计算机网络:自顶向下方法》&amp;lt;/del&amp;gt; * 《mysql必知必会》 * PC Assembly Language ( for mit 6.828 )</description></item><item><title>我在公司的服务器上执行了sudo rm -rf /*</title><link>https://111qqz.github.io/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/</link><pubDate>Sat, 24 Nov 2018 08:31:19 +0000</pubDate><guid>https://111qqz.github.io/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/</guid><description>TL;DR * 依靠人的小心谨慎是不靠谱的，人总有失误的时候 * 看了下docker volume的权限机制，貌似是从docker image中继承。 * 写了两个</description></item><item><title>docker network 与 本地 network 网段冲突</title><link>https://111qqz.github.io/2018/11/docker-network-conflict-with-local-subnetwork/</link><pubDate>Tue, 20 Nov 2018 08:33:20 +0000</pubDate><guid>https://111qqz.github.io/2018/11/docker-network-conflict-with-local-subnetwork/</guid><description>起因: 公司部署在hk的爬虫服务器突然挂掉了。后来发现只是在深圳办公区无法访问。排查后发现原因是docker的网络(包括docker netwo</description></item><item><title>记一次在 docker compose 中使用volume的踩坑记录</title><link>https://111qqz.github.io/2018/11/docker-compose-default-volume-name-makes-me-confused/</link><pubDate>Wed, 14 Nov 2018 08:06:57 +0000</pubDate><guid>https://111qqz.github.io/2018/11/docker-compose-default-volume-name-makes-me-confused/</guid><description>现象: 使用docker compose 挂载 named volume 无效（且没有错误提示) 排查过程: 一开始是没有使用docker-compose命令，直接使用docker run -v 命</description></item><item><title>How to use Scrapy with Django Application（转自medium）</title><link>https://111qqz.github.io/2018/11/how-to-use-scrapy-with-django-application/</link><pubDate>Tue, 06 Nov 2018 13:33:00 +0000</pubDate><guid>https://111qqz.github.io/2018/11/how-to-use-scrapy-with-django-application/</guid><description>在meidum上看到一篇很赞的文章&amp;hellip;无奈关键部分一律无法加载出来&amp;hellip;挂了梯子也不行，很心塞&amp;hellip;刚刚突然</description></item><item><title>lua学习笔记</title><link>https://111qqz.github.io/2018/10/lua-notes/</link><pubDate>Fri, 26 Oct 2018 02:47:59 +0000</pubDate><guid>https://111qqz.github.io/2018/10/lua-notes/</guid><description>lua是一门轻量级的脚本语言&amp;hellip;好像比较适合写游戏？在 太阳神三国杀 中见过很多lua脚本。 由于splash 的渲染脚本需要用lua来</description></item><item><title>golang 学习笔记</title><link>https://111qqz.github.io/2018/10/golang-notes/</link><pubDate>Sat, 20 Oct 2018 11:06:56 +0000</pubDate><guid>https://111qqz.github.io/2018/10/golang-notes/</guid><description>先放资料,可能比较侧重于go在系统调用方面的内容. 这里不会记录详细的go的语法,只会记录学习的过程,踩到的坑,以及其他我认为值得记录的内容.</description></item><item><title>爬虫学习笔记</title><link>https://111qqz.github.io/2018/10/web-crawler-notes/</link><pubDate>Fri, 19 Oct 2018 08:18:53 +0000</pubDate><guid>https://111qqz.github.io/2018/10/web-crawler-notes/</guid><description>再次迫于生计。。。 参考了面向新人的 Python 爬虫学习资料 大致的学习路线为: 一： 简单的定向脚本爬虫（ request --- bs4 --- re ） 二： 大型框架式爬虫（ Scrapy 框架为主） 三：浏</description></item><item><title>java-grpc 踩坑记录</title><link>https://111qqz.github.io/2018/10/java-grpc-notes/</link><pubDate>Wed, 17 Oct 2018 03:29:03 +0000</pubDate><guid>https://111qqz.github.io/2018/10/java-grpc-notes/</guid><description>最近的项目需要java和python之间的进程通信，想到了之前使用过的的grpc. 参考官方quickstart * JDK: version 7 or higher 看起来只依赖jdk</description></item><item><title>2018 to do list</title><link>https://111qqz.github.io/2018/10/2018-to-do-list/</link><pubDate>Sun, 14 Oct 2018 15:30:52 +0000</pubDate><guid>https://111qqz.github.io/2018/10/2018-to-do-list/</guid><description>迫于最近的事情有点多，还是记录一下。 果然to do list什么的，还是要按照年份记录啊。 * &amp;lt;del&amp;gt;了解linux strace命令&amp;</description></item><item><title>spring 学习笔记</title><link>https://111qqz.github.io/2018/10/spring-notes/</link><pubDate>Wed, 10 Oct 2018 09:56:46 +0000</pubDate><guid>https://111qqz.github.io/2018/10/spring-notes/</guid><description>迫于生计，又要从零开始学习spring. 在这篇文章之前，对java的基础是2015年写过一个java大作业，对spring是一无所知。 为了学</description></item><item><title>spring 依赖注入</title><link>https://111qqz.github.io/2018/10/spring-dependency-injection/</link><pubDate>Tue, 09 Oct 2018 07:45:17 +0000</pubDate><guid>https://111qqz.github.io/2018/10/spring-dependency-injection/</guid><description>真是个不明觉厉的术语&amp;hellip;其实是个特别简单的概念orz 用白话讲，如果一个class A中用到了class B的实例，那么class B的</description></item><item><title>解决ubuntu 14.04 下 壁纸软件 variety 崩溃 ValueError: bad marshal data (unknown type code) 的问题</title><link>https://111qqz.github.io/2018/09/the-way-to-fix-variety-crash-on-ubuntu-14-04/</link><pubDate>Sun, 30 Sep 2018 08:59:31 +0000</pubDate><guid>https://111qqz.github.io/2018/09/the-way-to-fix-variety-crash-on-ubuntu-14-04/</guid><description>系统为ubuntu 14.04 迫于特别想定时换壁纸，查了下解决方案。 发现只要删除掉/usr目录下所有的&amp;rsquo;.pyc'文件就可以 命令为:sud</description></item><item><title>[c++11] std::async std::packaged_task std::promise and std::future notes</title><link>https://111qqz.github.io/2018/09/c11-async-packaged-ask-promise-future-notes/</link><pubDate>Sun, 30 Sep 2018 06:49:27 +0000</pubDate><guid>https://111qqz.github.io/2018/09/c11-async-packaged-ask-promise-future-notes/</guid><description>把std::async,std::packaged_task,std::promise三个放在一起来说,是因为他们都可以返回一个std::f</description></item><item><title>[C++11]std::condition_variable notes</title><link>https://111qqz.github.io/2018/09/condition_variable-notes/</link><pubDate>Sun, 23 Sep 2018 08:42:33 +0000</pubDate><guid>https://111qqz.github.io/2018/09/condition_variable-notes/</guid><description>condition_variable 类是同步原语，能用于阻塞一个线程，或同时阻塞多个线程，直至另一线程修改共享变量（条件）并通知 condition_variable 。 用人话来说,condition_varia</description></item><item><title>react 中setState的更新策略</title><link>https://111qqz.github.io/2018/09/react-setstate-update-strategy/</link><pubDate>Tue, 18 Sep 2018 13:31:06 +0000</pubDate><guid>https://111qqz.github.io/2018/09/react-setstate-update-strategy/</guid><description>起因是想更新一个array类型的state,结果setState更新之后用console.log() debug 结果，发现结果特别玄学。。。 查了下发现</description></item><item><title>learn java in 21 minutes for C++ Programmers</title><link>https://111qqz.github.io/2018/09/learn-java-in-21-minutes-for-c-programmers/</link><pubDate>Mon, 10 Sep 2018 11:53:31 +0000</pubDate><guid>https://111qqz.github.io/2018/09/learn-java-in-21-minutes-for-c-programmers/</guid><description>先放资料: Learning a New Programming Language: Java for C++ Programmers java package 先说几条重要的人话: * 一个java文件第一行可以声明该文件所属于的package，package的名字必须与</description></item><item><title>[c++11 ]std::move 右值引用 转移语义 完美转发 notes</title><link>https://111qqz.github.io/2018/09/c11-stdmove-notes/</link><pubDate>Sun, 09 Sep 2018 13:01:45 +0000</pubDate><guid>https://111qqz.github.io/2018/09/c11-stdmove-notes/</guid><description>起因是在看&amp;lt;CplusplusConcurrencyInAction_PracticalMultithreading&amp;gt;，里面讲到</description></item><item><title>[C++11 ] std::ref&amp;&amp;std::reference_wrapper notes</title><link>https://111qqz.github.io/2018/09/reference_wrapper-notes/</link><pubDate>Sun, 09 Sep 2018 11:28:53 +0000</pubDate><guid>https://111qqz.github.io/2018/09/reference_wrapper-notes/</guid><description>起因是在看《CplusplusConcurrencyInAction_PracticalMultithreading》的时候，里面讲到初始化</description></item><item><title>前端To do list</title><link>https://111qqz.github.io/2018/09/front-end-to-do-list/</link><pubDate>Thu, 06 Sep 2018 09:56:57 +0000</pubDate><guid>https://111qqz.github.io/2018/09/front-end-to-do-list/</guid><description>20181014update: 可以不写了，开心 迫于生计，要从零开始学习前端。 由于之前的to do list 年代久远+ 前端的技术栈可之前几乎没有关系，因此新开一篇记录。 * css盒子模</description></item><item><title>typescript学习笔记</title><link>https://111qqz.github.io/2018/09/typescript-notes/</link><pubDate>Wed, 05 Sep 2018 08:02:42 +0000</pubDate><guid>https://111qqz.github.io/2018/09/typescript-notes/</guid><description>先放参考资料: TypeScript 入门教程 React &amp;amp; Webpack react-typescript-cheatsheet (强推一波，讲了很多react+ts的实践） typescript是javascript的语法扩展。。。好处是</description></item><item><title>[设计模式] 观察者( Observer )模式学习笔记</title><link>https://111qqz.github.io/2018/09/observer-pattern-notes/</link><pubDate>Sat, 01 Sep 2018 09:27:40 +0000</pubDate><guid>https://111qqz.github.io/2018/09/observer-pattern-notes/</guid><description>最近在学习node.js，里面讲到node.js的事件机制使用了观察者模式，因此来学习一下。 观察者模式的目的是定义对象间的一种一对多的依赖关</description></item><item><title>Redux 学习笔记</title><link>https://111qqz.github.io/2018/08/redux-notes/</link><pubDate>Thu, 30 Aug 2018 12:05:35 +0000</pubDate><guid>https://111qqz.github.io/2018/08/redux-notes/</guid><description>Redux是Flux架构的一种实现。 至于Flux架构是什么，可以参考Flux 架构入门教程 粗略得讲，和MVC架构是同一类东西，最大的区别是单向</description></item><item><title>JavaScript 学习笔记</title><link>https://111qqz.github.io/2018/08/javascript-notes/</link><pubDate>Thu, 30 Aug 2018 03:42:19 +0000</pubDate><guid>https://111qqz.github.io/2018/08/javascript-notes/</guid><description>暂时没空从头开始搞&amp;hellip;用到哪里先记录一下好了orz 我觉得不行，还是要先大致了解一下。 参考资料: A re-introduction to JavaScript (JS tutorial) 继承与原型链 // 让我们假</description></item><item><title>react学习笔记</title><link>https://111qqz.github.io/2018/08/react-notes/</link><pubDate>Tue, 28 Aug 2018 10:16:16 +0000</pubDate><guid>https://111qqz.github.io/2018/08/react-notes/</guid><description>首先介绍一个fb家的快速开发react的工具 create-react-app 这个东西依赖node6.0或者更高版本。 关于在ubuntu 14.04上安装node ，可以参考这</description></item><item><title>[设计模式] 组合模式（composite） 学习笔记</title><link>https://111qqz.github.io/2018/08/composite-pattern-notes/</link><pubDate>Tue, 28 Aug 2018 06:30:59 +0000</pubDate><guid>https://111qqz.github.io/2018/08/composite-pattern-notes/</guid><description>目的是忽略单一对象和组合对象的不同。 有点像以前写过的用链表定义一个树结构，每个节点是一个val + 多个tree 。如果某个节点是叶子节点了，那么</description></item><item><title>[C++11] promise &amp;&amp; future leanrning notes</title><link>https://111qqz.github.io/2018/08/promise-future-notes/</link><pubDate>Thu, 23 Aug 2018 02:45:53 +0000</pubDate><guid>https://111qqz.github.io/2018/08/promise-future-notes/</guid><description>用人话就是，主线程传给附属线程一个promise Object,然后主线程想要获取附属线程set给promise Object的值（也就是该线程</description></item><item><title>把二进制文件按字节读到vector中</title><link>https://111qqz.github.io/2018/08/how-to-read-binary-data-into-cpp-vector/</link><pubDate>Tue, 21 Aug 2018 06:08:56 +0000</pubDate><guid>https://111qqz.github.io/2018/08/how-to-read-binary-data-into-cpp-vector/</guid><description>std::vector&amp;lt;unsigned char&amp;gt; readFromFile1(const char* filePath) { FILE* file = fopen(filePath, &amp;quot;rb&amp;quot;); std::vector&amp;lt;unsigned char&amp;gt; result; if (file == nullptr) { return result; } // 获取文件大小，尽量一次读完 size_t fileSize = getFileSize(file); if (fileSize != 0) { result.resize(fileSize); size_t n = fread(&amp;amp;result[0], 1, fileSize, file); assert(n &amp;lt;= fileSize); if (n != fileSize) { result.resize(n); } } // 在读取过程</description></item><item><title>boost:property_tree 学习笔记</title><link>https://111qqz.github.io/2018/08/boost_property_tree-notes/</link><pubDate>Mon, 20 Aug 2018 08:10:16 +0000</pubDate><guid>https://111qqz.github.io/2018/08/boost_property_tree-notes/</guid><description>先放资料: How to use boost::property_tree to load and write JSON How to iterate a boost property tree? 不出现key的方法遍历一个json文件: /* *********************************************** Author :111qqz mail: renkuanze@sensetime.com Created Time :2018年08月17日 星期五 15时29分</description></item><item><title>记录一次因动态库符号表可见性导致的未定义的引用(undefined reference)</title><link>https://111qqz.github.io/2018/08/symbol-table-visibility/</link><pubDate>Wed, 15 Aug 2018 13:12:17 +0000</pubDate><guid>https://111qqz.github.io/2018/08/symbol-table-visibility/</guid><description>编译某代码，发现报错某函数未定义的引用。该函数的是先前编译得到的动态库中。 先去check了该函数的实现，还有接口与头文件中的声明是否统一。发</description></item><item><title>使用python计算误差代码</title><link>https://111qqz.github.io/2018/08/calculate-error-with-python/</link><pubDate>Mon, 06 Aug 2018 11:54:35 +0000</pubDate><guid>https://111qqz.github.io/2018/08/calculate-error-with-python/</guid><description>import os import math ave_err=0.0 max_err=0.0 max_err_rate=0.0 length=0 with open(&amp;ldquo;cpu_result.txt&amp;rdquo;,&amp;ldquo;r&amp;rdquo;) as fp1, open(&amp;ldquo;cuda_ppl_result.txt&amp;rdquo;,&amp;ldquo;r&amp;rdquo;) as fp2: for l1 in fp1: l2 = fp2.readline() l1=l1[:-2] l2=l2[:-2] lst = l1.split(&amp;rsquo; &amp;lsquo;) lst2 = l2.split(&amp;rsquo; &amp;lsquo;) #print lst lst = [float(x) for x in lst ] length = length + len(lst) lst2 = [float(x) for x in lst2] #print (lst) #print (lst2) for index,x in enumerate(lst): y = lst2[index] ave_err = ave_err + abs(x-y)</description></item><item><title>c++11 function 与bind 学习笔记</title><link>https://111qqz.github.io/2018/07/cpp11-function-bind-notes/</link><pubDate>Thu, 19 Jul 2018 10:46:26 +0000</pubDate><guid>https://111qqz.github.io/2018/07/cpp11-function-bind-notes/</guid><description>C++11 std::function 是一种通用、多态的函数封装,它的实例可以对任何可 以调用的目标实体进行存储、复制和调用操作 见下面的例子 /* *********************************************** Author :111qqz mail: renkuanze@sensetime.com Created Time :2018年07月1</description></item><item><title>intel tbb 学习笔记</title><link>https://111qqz.github.io/2018/07/intel-tbb-notes/</link><pubDate>Wed, 18 Jul 2018 06:57:38 +0000</pubDate><guid>https://111qqz.github.io/2018/07/intel-tbb-notes/</guid><description>tbb是**Threading Building Blocks library的缩写,**是一个为开发者提供并行解决方案的库. 先放个文档https://www.threa</description></item><item><title>C++ 记录代码运行时间</title><link>https://111qqz.github.io/2018/07/record-code-run-time-with-cpp/</link><pubDate>Tue, 10 Jul 2018 02:26:50 +0000</pubDate><guid>https://111qqz.github.io/2018/07/record-code-run-time-with-cpp/</guid><description>以前用的办法太老土啦 看到一个since C++11的方法，我觉得比较优雅 #include &amp;lt;iostream&amp;gt; #include &amp;lt;chrono&amp;gt; //#include &amp;lt;ratio&amp;gt; #include &amp;lt;thread&amp;gt; void f() { std::this_thread::sleep_for(std::chrono::seconds(1)); } int main() { auto t1 = std::chrono::high_resolution_clock::now(); f(); auto t2 = std::chrono::high_resolution_clock::now(); // floating-point duration: no duration_cast needed std::chrono::duration&amp;lt;double, std::milli&amp;gt; fp_ms =</description></item><item><title>gdb学习笔记</title><link>https://111qqz.github.io/2018/07/gdb-notes/</link><pubDate>Fri, 06 Jul 2018 07:44:38 +0000</pubDate><guid>https://111qqz.github.io/2018/07/gdb-notes/</guid><description>用gdb调试c++的时候，需要添加-g编译选项add_compile_options(-g)，并且关掉各种编译优化 如果是多线程程序，可以用i</description></item><item><title>Kafka 学习笔记</title><link>https://111qqz.github.io/2018/07/kafka-notes/</link><pubDate>Mon, 02 Jul 2018 08:56:52 +0000</pubDate><guid>https://111qqz.github.io/2018/07/kafka-notes/</guid><description>先放资料． kafka简明教程</description></item><item><title>linux 下C++ 连接mysql 数据库</title><link>https://111qqz.github.io/2018/07/connect-mysql-with-cpp-under-linux/</link><pubDate>Mon, 02 Jul 2018 07:02:28 +0000</pubDate><guid>https://111qqz.github.io/2018/07/connect-mysql-with-cpp-under-linux/</guid><description>资料推荐这个:MySQL C API programming tutorial 环境为ubuntu 14.04 lts 需要安装mysql 和mysql 开发包 sudo apt-get install libmysqlclient15-dev mysql-server mysql-client 先在mysql 中建立test数据库和t</description></item><item><title>使用haproxy中转酸酸流量</title><link>https://111qqz.github.io/2018/05/shadowsocks-with-haproxy/</link><pubDate>Tue, 15 May 2018 06:27:35 +0000</pubDate><guid>https://111qqz.github.io/2018/05/shadowsocks-with-haproxy/</guid><description>一个国内vps，一个国外vps. 前提是国外vps已经配置好。 接下来，我们在国内vps上安装haproxy yum -y install haproxy 或者 apt-get install haproxy 然后修改配置文件,</description></item><item><title>wordpress 开启全站https</title><link>https://111qqz.github.io/2018/05/enable-https-for-wordpress/</link><pubDate>Mon, 14 May 2018 13:08:30 +0000</pubDate><guid>https://111qqz.github.io/2018/05/enable-https-for-wordpress/</guid><description>20190511更新: 证书到期了,写一下更换证书的流程. 重新申请好证书之后,直接把Apache里面对应的123放到/data/cert文件夹</description></item><item><title>C++ STL Algotithms 学习笔记</title><link>https://111qqz.github.io/2018/05/c-stl-algotithms-notes/</link><pubDate>Sun, 06 May 2018 09:45:50 +0000</pubDate><guid>https://111qqz.github.io/2018/05/c-stl-algotithms-notes/</guid><description>迫于拙劣的cpp水平，这次来记录一些关于STL算法部分的内容。 参考内容是CS106L的course reader Iterator Categories Iterators分为以下五种: * Output</description></item><item><title>C++ IO Streams 学习笔记</title><link>https://111qqz.github.io/2018/05/cpp-io-streams-notes/</link><pubDate>Fri, 04 May 2018 03:48:37 +0000</pubDate><guid>https://111qqz.github.io/2018/05/cpp-io-streams-notes/</guid><description>迫于拙劣的cpp水平，来补补以前忽略掉的cpp细节。 老规矩，先放资料。 参考资料: A Gentle Introduction to C++ IO Streams "Designing and implementing a general input/output facility for a programming language is notoriously difficult" - Bjarne Stroustrup Stream</description></item><item><title>vim 插件 NERDTree 学习笔记</title><link>https://111qqz.github.io/2018/04/vim-nerdtree-plugin/</link><pubDate>Mon, 30 Apr 2018 05:54:33 +0000</pubDate><guid>https://111qqz.github.io/2018/04/vim-nerdtree-plugin/</guid><description>迫于要在服务器上写cpp代码，又由于各种原因，没办法把同步到本地。因此要在服务器上配置一个cpp的环境orz. 我是用vim-plug来管理插</description></item><item><title>gRPC学习笔记</title><link>https://111qqz.github.io/2018/04/grpc-notes/</link><pubDate>Sun, 29 Apr 2018 16:18:47 +0000</pubDate><guid>https://111qqz.github.io/2018/04/grpc-notes/</guid><description>gRPC 是 google 最新发布的开源 RPC 框架, 声称是&amp;quot;一个高性能，开源，将移动和HTTP/2放在首位的通用的RPC框架.&amp;quot;. 技术栈非常的新</description></item><item><title>8102年了，来更新一波vim配置</title><link>https://111qqz.github.io/2018/04/vim-config-in-2018/</link><pubDate>Wed, 25 Apr 2018 16:46:51 +0000</pubDate><guid>https://111qqz.github.io/2018/04/vim-config-in-2018/</guid><description>现在用的vim配置还是2015年7月的时候写的。 三年过去了，vim到了8.0,很多功能也有了更多选择。因此打算来更新一波vim配置。目前还在</description></item><item><title>protobuf学习笔记</title><link>https://111qqz.github.io/2018/04/protobuf-notes/</link><pubDate>Tue, 24 Apr 2018 03:05:09 +0000</pubDate><guid>https://111qqz.github.io/2018/04/protobuf-notes/</guid><description>Protobuff 是一种轻便高效的结构化数据存储格式，可以用于结构化数据序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关</description></item><item><title>levelDB 学习笔记</title><link>https://111qqz.github.io/2018/04/leveldb-notes/</link><pubDate>Thu, 19 Apr 2018 15:58:40 +0000</pubDate><guid>https://111qqz.github.io/2018/04/leveldb-notes/</guid><description>大三的时候看过一点levelDB的源码，不过没有怎么用过。 最近有个需求是存人脸的feature到硬盘，似乎使用levelDB比较合适，因此来</description></item><item><title>Eigen: C++开源矩阵学习笔记</title><link>https://111qqz.github.io/2018/04/eigen-notes/</link><pubDate>Thu, 05 Apr 2018 07:14:54 +0000</pubDate><guid>https://111qqz.github.io/2018/04/eigen-notes/</guid><description>接触Eigen的原因是最近在看caffe/caffe2源码,caffe2中使用了Eigen库. Eigen 是一个基于C++模板的线性代数库，直接将库下</description></item><item><title>linux/win双系统 更新win后 grub 出现 Error: unknown filesystem 的解决办法</title><link>https://111qqz.github.io/2018/04/the-way-to-fix-unkown-filesystem-error-in-grub/</link><pubDate>Sun, 01 Apr 2018 06:28:30 +0000</pubDate><guid>https://111qqz.github.io/2018/04/the-way-to-fix-unkown-filesystem-error-in-grub/</guid><description>windows自己更新把grub更新挂了&amp;hellip;. 更新的时候要重启几次,重启一次挂一次&amp;hellip; 讲真,windows(或者说w</description></item><item><title>cmake 学习笔记</title><link>https://111qqz.github.io/2018/03/cmake-notes/</link><pubDate>Sun, 18 Mar 2018 10:27:26 +0000</pubDate><guid>https://111qqz.github.io/2018/03/cmake-notes/</guid><description>前置技能点： gnu make linux下.so,.a,.o文件 cmake是一个工具，也可以看成一门语言。 学习cmake最大的障碍在于看不懂全是大写的英文</description></item><item><title>mysql 出现　innoDB: Cannot allocate memory for the buffer pool　的解决办法</title><link>https://111qqz.github.io/2018/03/the-way-to-fix-mysql-innodb-cannot-allocate-memory/</link><pubDate>Thu, 15 Mar 2018 04:56:58 +0000</pubDate><guid>https://111qqz.github.io/2018/03/the-way-to-fix-mysql-innodb-cannot-allocate-memory/</guid><description>emmm,博客的数据库又挂了。 看了下log，发现innoDB: Cannot allocate memory for the buffer pool 的error 查了下，貌似是内存不够了？ orz 用free 命令看了下，阿</description></item><item><title>推荐系统之 LFM (Latent Factor Model) 隐因子模型 学习笔记</title><link>https://111qqz.github.io/2018/02/latent-factor-model-notes/</link><pubDate>Fri, 09 Feb 2018 13:02:06 +0000</pubDate><guid>https://111qqz.github.io/2018/02/latent-factor-model-notes/</guid><description>起因是被assgin了一个新的任务&amp;hellip;..要死. 参考资料: 推荐系统学习笔记之三 LFM (Latent Factor Model) 隐因子模型 + SVD (singular value decomposition) 奇异值分解 基于矩阵分解</description></item><item><title>20171214</title><link>https://111qqz.github.io/2017/12/20171214/</link><pubDate>Thu, 14 Dec 2017 12:31:33 +0000</pubDate><guid>https://111qqz.github.io/2017/12/20171214/</guid><description>记得之前被人在群里刷“宽神是我们的红太阳”还不理解&amp;hellip; 为什么我这种菜鸡要被如此对待 现在想想，大概是觉得，“111qqz那么菜的人</description></item><item><title>unicode 汉字表示不唯一的问题 (cjk字符集)</title><link>https://111qqz.github.io/2017/12/unicode-char-not-unique/</link><pubDate>Tue, 05 Dec 2017 02:44:46 +0000</pubDate><guid>https://111qqz.github.io/2017/12/unicode-char-not-unique/</guid><description>update: 遇到的汉字： 丹：63838 李：63969 昨天写的正则发现死活识别不了 &amp;ldquo;年&amp;quot;字&amp;hellip; 放到unicode编码转</description></item><item><title>正则匹配中文及常用正则表达式 (转载)</title><link>https://111qqz.github.io/2017/12/common-regular-expression/</link><pubDate>Mon, 04 Dec 2017 11:34:06 +0000</pubDate><guid>https://111qqz.github.io/2017/12/common-regular-expression/</guid><description>先放一个同事安利给我的网站:regex101 查询匹配的中文字符unicode编码 正则表达式用于字符串处理、表单验证、日志数据分析等场合，实用</description></item><item><title>基础 Haskell 学习笔记</title><link>https://111qqz.github.io/2017/11/haskell-notes/</link><pubDate>Fri, 24 Nov 2017 03:18:01 +0000</pubDate><guid>https://111qqz.github.io/2017/11/haskell-notes/</guid><description>出于对函数式编程语言这一技能点的缺失&amp;hellip;以及退役之后闲得蛋疼 打算浅尝辄止地学一下haskell 这篇笔记不会写成文档那样的详尽..</description></item><item><title>在wordpress 中输入数学公式</title><link>https://111qqz.github.io/2017/10/input-formula-on-wordpress/</link><pubDate>Tue, 31 Oct 2017 15:26:25 +0000</pubDate><guid>https://111qqz.github.io/2017/10/input-formula-on-wordpress/</guid><description>查了一些资料。。发现不是要装各种插件（还不一定能用，比如和crayon冲突。。就是讲得很不清楚orz。。 又下一个win下的公式编辑器之类的软</description></item><item><title>archlinux/manjaro fcitx 与 chrome 不兼容 中文掉字 解决办法</title><link>https://111qqz.github.io/2017/10/manjaro-fcitx-drop-chinese-words-randomly/</link><pubDate>Wed, 11 Oct 2017 16:24:11 +0000</pubDate><guid>https://111qqz.github.io/2017/10/manjaro-fcitx-drop-chinese-words-randomly/</guid><description>[已解决]最近两个版本的 chrome（aura界面）有两个问题 https://github.com/fcitx/fcitx/issues/197 解决办法： 安装fcitx-im 包即可</description></item><item><title>20170929</title><link>https://111qqz.github.io/2017/09/20170929/</link><pubDate>Fri, 29 Sep 2017 17:10:29 +0000</pubDate><guid>https://111qqz.github.io/2017/09/20170929/</guid><description>刚刚看了TBBT season 11 episode 1 Sheldon 和Amy 订婚了，Bernadette又怀孕了。 想想上一季结束的时候，大概半年前。 我好像还是只单身狗，手头没啥能看的</description></item><item><title>MPI 学习笔记</title><link>https://111qqz.github.io/2017/08/mpi-notes/</link><pubDate>Thu, 31 Aug 2017 03:04:27 +0000</pubDate><guid>https://111qqz.github.io/2017/08/mpi-notes/</guid><description>参考资料： 消息传递接口（MPI）维基百科 MPI_TUTORIAL MPI 在大规模机器学习领域的前景如何？ 因为要和平台组对接工作以及写我们自己的BN同步&amp;hellip;所</description></item><item><title>20170819近况</title><link>https://111qqz.github.io/2017/08/20170819/</link><pubDate>Sun, 20 Aug 2017 08:56:15 +0000</pubDate><guid>https://111qqz.github.io/2017/08/20170819/</guid><description>一转眼&amp;hellip;暑假就要结束了&amp;hellip; 秋招似乎也可以告一段落了&amp;hellip; 投了蛮多的，但是昨天突然发现我用gmail邮箱发</description></item><item><title>python只获取当前目录下的文件夹及文件名</title><link>https://111qqz.github.io/2017/08/python-get-dir-name-in-current-path/</link><pubDate>Wed, 16 Aug 2017 08:21:41 +0000</pubDate><guid>https://111qqz.github.io/2017/08/python-get-dir-name-in-current-path/</guid><description>list = os.listdir(rootdir)#列出目录下的所有文件和目录 for line in list: filepath = os.path.join(rootdir,line) if os.path.isdir(filepath):#如果</description></item><item><title>峰度（Kurtosis）和偏度（Skewness）</title><link>https://111qqz.github.io/2017/08/kurtosisskewness/</link><pubDate>Wed, 02 Aug 2017 01:34:58 +0000</pubDate><guid>https://111qqz.github.io/2017/08/kurtosisskewness/</guid><description>昨天pinduoduo笔试遇到了，看心情蒙的2333，来学习一下 ** 峰度（Kurtosis）和偏度（Skewness）** 重点：正太分布的峰度</description></item><item><title>manjaro(archlinux) 安装 YouCompleteMe</title><link>https://111qqz.github.io/2017/07/install-youcompleteme-on-manjaro/</link><pubDate>Fri, 28 Jul 2017 09:13:34 +0000</pubDate><guid>https://111qqz.github.io/2017/07/install-youcompleteme-on-manjaro/</guid><description>来来回回折腾了好多次，aur直接安装或者手动编译，安装后都无法补全 ycm的log文件是在/tmp目录下的。 发现问题是缺少libtinfo.s</description></item><item><title>python numpy 用法 简明手册</title><link>https://111qqz.github.io/2017/07/python-numpy-notes/</link><pubDate>Mon, 24 Jul 2017 03:08:35 +0000</pubDate><guid>https://111qqz.github.io/2017/07/python-numpy-notes/</guid><description>原文链接 感谢stanford,感谢原作者的翻译，我调整了一下代码格式，可以当做手册来用了，毕竟之前没怎么写过py 23333 **译者注**：本文[智能</description></item><item><title>archlinux/manjaro 下 安装 qq/tim</title><link>https://111qqz.github.io/2017/06/install-qq-on-manjaro/</link><pubDate>Mon, 26 Jun 2017 16:09:19 +0000</pubDate><guid>https://111qqz.github.io/2017/06/install-qq-on-manjaro/</guid><description>参考资料：install qq/tim on linux with wine wine运行qq不能输入账号 This tutorial introduces how to install QQ/TIM in Linux with Wine, which had been tested on ArchLinux with Wine 2.4. Prerequisites Before start, you need to get the latest Wine. I'm not sure whether QQ/TIM can run on lower</description></item><item><title>libgfortran.so.4 missing under archlinux</title><link>https://111qqz.github.io/2017/06/libgfortran-so-4-missing-under-archlinux/</link><pubDate>Fri, 09 Jun 2017 20:12:41 +0000</pubDate><guid>https://111qqz.github.io/2017/06/libgfortran-so-4-missing-under-archlinux/</guid><description>。。。哭了哦。。终于解决了这个bug 参考资料： libgfortran broken? libgfortran=3.0 should not be install with numpy &amp;lt;= 1.9 [SOLVED] libgfortran.so.3:cannot open shared object file: No such file [Replacing gcc-libs-libs with gcc-multilib arch conflict with gcc-libs and gcc-libs-multilib on latest update 一开始以为是anaconda</description></item><item><title>manjaro installation guide</title><link>https://111qqz.github.io/2017/06/manjaro-installation-guide/</link><pubDate>Thu, 08 Jun 2017 18:26:14 +0000</pubDate><guid>https://111qqz.github.io/2017/06/manjaro-installation-guide/</guid><description>20180214 update: 第一个版本已经比较久了，于是更新一下，顺便写了个脚本orz pacman-mirrors -c China echo &amp;quot; [archlinuxcn] &amp;quot; &amp;gt;&amp;gt; /etc/pacman.conf echo &amp;quot; SigLevel = Optional TrustedOnly &amp;quot; &amp;gt;&amp;gt; /etc/pacman.conf echo &amp;quot; Server = https://mirrors.ustc.edu.cn/archlinuxcn/\$arch&amp;quot; &amp;gt;&amp;gt; /etc/pacman.conf echo &amp;quot;[arch4edu]&amp;quot; &amp;gt;&amp;gt; /etc/pacman.conf echo &amp;quot;SigLevel = Never&amp;quot; &amp;gt;&amp;gt; /etc/pacman.conf echo &amp;quot;Server = http://mirrors.tuna.tsinghua.edu.cn/arch4edu/\$arch</description></item><item><title>conda升级anaconda　ValueError的解决办法</title><link>https://111qqz.github.io/2017/06/how-to-fix-conda-upgrade-valueerror/</link><pubDate>Thu, 08 Jun 2017 13:03:51 +0000</pubDate><guid>https://111qqz.github.io/2017/06/how-to-fix-conda-upgrade-valueerror/</guid><description>conda update anaconda 后提示 ValueError: unsupported format character ')' (0x29) at index 49 查到了这个：anaconda update issue I have narrowed this down to the following packages: package build psutil-1.2.1 py27_0 hard-link pycparser-2.10 py27_0 hard-link pykit-0.1.0 np18py27_2 hard-link pyparsing-2.0.1 py27_0 hard-link by calling "conda install anaconda" and then successfully installing everything else one at a time. These</description></item><item><title>数字图像处理大作业(初步）</title><link>https://111qqz.github.io/2017/06/digital-image-processing-course-final-project/</link><pubDate>Wed, 07 Jun 2017 06:53:36 +0000</pubDate><guid>https://111qqz.github.io/2017/06/digital-image-processing-course-final-project/</guid><description>&amp;hellip;先随便记录一下好了。。。 * 神经网络识别数字或者字母？ * 识别车牌号？ * not hot dog? 安装python pandas pandas 发现之前装caffe的时候&amp;h</description></item><item><title>vim下python 的配置</title><link>https://111qqz.github.io/2017/06/vimrc-for-python/</link><pubDate>Wed, 07 Jun 2017 06:21:12 +0000</pubDate><guid>https://111qqz.github.io/2017/06/vimrc-for-python/</guid><description>由于最近要做数字图像处理的大作业，以及之后一段时间，估计写python多一些，所以打算花些时间配置下vim. 1. 一键执行 其实之前一直有的。。不</description></item><item><title>vundle error detected while processing function</title><link>https://111qqz.github.io/2017/06/vundle-error-detected-while-processing-function/</link><pubDate>Wed, 07 Jun 2017 05:50:27 +0000</pubDate><guid>https://111qqz.github.io/2017/06/vundle-error-detected-while-processing-function/</guid><description>好久没装新插件了，最新要配下python,发现安装时候满屏的错误。。。 最后发现是shell的锅，因为我用的是fish,在.vimrc文件中添</description></item><item><title>边界的链码，归一化链码，差分玛，形状数</title><link>https://111qqz.github.io/2017/06/digital-image-processing-course-review/</link><pubDate>Tue, 06 Jun 2017 11:42:37 +0000</pubDate><guid>https://111qqz.github.io/2017/06/digital-image-processing-course-review/</guid><description>复习一下数字图像处理。 按照我自己的理解简单来说： 原链码：按照任意起点走边界一周，方向按照上图对应的表示，得到的数字序列就是原链码。 归一化链码</description></item><item><title>qt 5.x　初探　(5)　</title><link>https://111qqz.github.io/2017/06/qt-5-notes-5/</link><pubDate>Sun, 04 Jun 2017 17:14:39 +0000</pubDate><guid>https://111qqz.github.io/2017/06/qt-5-notes-5/</guid><description>qt_5.9_ui_doc 还是比直接写代码方便点。。。所以不妨学习一个！ 以及。。。qt在2017年6月１号发布了5.9。。。所以之前是5.8。。。现在变成5.9了。</description></item><item><title>qt 5.x初探　（４）　qt 在win下打包成exe</title><link>https://111qqz.github.io/2017/06/qt-5-notes-4/</link><pubDate>Sun, 04 Jun 2017 12:54:51 +0000</pubDate><guid>https://111qqz.github.io/2017/06/qt-5-notes-4/</guid><description>des的基本搞定了。。。打包。。。 在linux下打包成exe。。。。实在是。。没什么好办法的样子。。。 嘛。转念一想。老师说是打包成可执行文件</description></item><item><title>关于恋爱模式的一点思考</title><link>https://111qqz.github.io/2017/05/think-about-love-relationship/</link><pubDate>Tue, 30 May 2017 06:03:09 +0000</pubDate><guid>https://111qqz.github.io/2017/05/think-about-love-relationship/</guid><description>最近和妹子闹了一点小矛盾，不过已经problem solved. 大概是因为，我聊到了妹子很不喜欢的话题，导致妹子情绪变得负面而我还没意识到&amp;hellip;</description></item><item><title>安装win10后导致grub 引导缺失的解决办法</title><link>https://111qqz.github.io/2017/05/missing-grub-after-install-windows10/</link><pubDate>Sun, 28 May 2017 04:10:35 +0000</pubDate><guid>https://111qqz.github.io/2017/05/missing-grub-after-install-windows10/</guid><description>我之前是单系统manjaro，装了win10以后，grub menu直接消失不见&amp;hellip; ubuntu 的live cd进去，用神器boot-repa</description></item><item><title>archlinux安装记</title><link>https://111qqz.github.io/2017/05/install-archlinux-notes/</link><pubDate>Sun, 21 May 2017 18:41:27 +0000</pubDate><guid>https://111qqz.github.io/2017/05/install-archlinux-notes/</guid><description>实在不忍心x1c吃灰。。。 打算装个arch玩。。。 第一次失败了，原因是忘记配置引导相关&amp;hellip; 第二次就成功了&amp;hellip; 教程满大</description></item><item><title>qt 5.x初探 （3）</title><link>https://111qqz.github.io/2017/05/qt-5-notes-3/</link><pubDate>Thu, 18 May 2017 12:47:20 +0000</pubDate><guid>https://111qqz.github.io/2017/05/qt-5-notes-3/</guid><description>update3： 终于知道了正确的学习姿势&amp;hellip; 用百度把要用的东西大概描述出来，然后总能找到一个是你要的。。。 然后再去搜关键词。。。</description></item><item><title>C++中头文件（.h）和源文件（.cpp）都应该写些什么（转载）</title><link>https://111qqz.github.io/2017/05/cpp-header-file-and-source-file/</link><pubDate>Tue, 16 May 2017 07:07:06 +0000</pubDate><guid>https://111qqz.github.io/2017/05/cpp-header-file-and-source-file/</guid><description>感觉其实。。。更像是一种规范。。。？而不是一种具体要求吧。。。 转自 头文件(.h)： 写类的声明（包括类里面的成员和方法的声明）、函数原型、#d</description></item><item><title>g++ 编译多个源文件（转载）</title><link>https://111qqz.github.io/2017/05/g++-compile-multi-file/</link><pubDate>Tue, 16 May 2017 06:40:03 +0000</pubDate><guid>https://111qqz.github.io/2017/05/g++-compile-multi-file/</guid><description>参考资料 一. 常用编译命令选项 假设源程序文件名为test.c。 无选项编译链接 用法：#gcc test.c 作用：将test.c预处理、汇编、编译并链接形成可</description></item><item><title>qt 5.x 学习笔记　(2)</title><link>https://111qqz.github.io/2017/05/qt-5-notes-2/</link><pubDate>Tue, 16 May 2017 03:14:19 +0000</pubDate><guid>https://111qqz.github.io/2017/05/qt-5-notes-2/</guid><description>先来放一波过程中用到的资料和官方文档好了。 basic layout_qt5.8 QBoxLayout Class_qt5.8 QString Class 5.8 QChar Class qt 5.8 Standard Dialogs Example qt 5.8 更新的部分还是放在最前面好了。。。 convert from QString to char *的时候有个坑。。。 In</description></item><item><title>qt 5.x　初探(1)</title><link>https://111qqz.github.io/2017/05/qt-5-notes-1/</link><pubDate>Sun, 14 May 2017 12:21:56 +0000</pubDate><guid>https://111qqz.github.io/2017/05/qt-5-notes-1/</guid><description>嘛。。为了系统安全课来学一波qt&amp;hellip; 现在算是写出了一个可以打开文件，保存文件的记事本。。。 接下来要搞定的事情是。。。如何写一个自</description></item><item><title>20170504近况</title><link>https://111qqz.github.io/2017/05/20170504/</link><pubDate>Thu, 04 May 2017 12:58:06 +0000</pubDate><guid>https://111qqz.github.io/2017/05/20170504/</guid><description>啊。。在准备考试QAQ 明天约了鹅厂面试。。。然而从四月就开始一直考试考试考试&amp;hellip;.感觉药丸啊？ MS的结果貌似明天也要出了orz&amp;</description></item><item><title>ubuntu 包管理(apt-get)损坏的解决办法</title><link>https://111qqz.github.io/2017/04/fix-ubuntu-package-manager-broken-problem/</link><pubDate>Sun, 30 Apr 2017 06:58:27 +0000</pubDate><guid>https://111qqz.github.io/2017/04/fix-ubuntu-package-manager-broken-problem/</guid><description>症状是不管安装什么，都会说有一大堆依赖无法安装。。。 大概是: a depends b[i],but b[i] is not be installed. (b==0..n) 最后会提示Unable to correct problems, you have held broken packages 解决办法：用synapt</description></item><item><title>install galliumOS on chromebook with chrx</title><link>https://111qqz.github.io/2017/04/install-galliumos-with-chrx-on-chromebook/</link><pubDate>Sat, 29 Apr 2017 15:09:51 +0000</pubDate><guid>https://111qqz.github.io/2017/04/install-galliumos-with-chrx-on-chromebook/</guid><description>我的chromebook 是 samsung 3 查阅Hardware Compatibility 可以知道我的cb支持 gallium,对应的cpu 是Intel Braswell 然后去galliumos 官</description></item><item><title>为什么。。。为什么会变成这样呢。。。</title><link>https://111qqz.github.io/2017/04/why-is-it-like-this/</link><pubDate>Thu, 27 Apr 2017 07:53:22 +0000</pubDate><guid>https://111qqz.github.io/2017/04/why-is-it-like-this/</guid><description>连着考试。。。 取消考试周这做法就是蠢。。。 白天上课晚上考试。。。 说得好像没有考试周大家就不会复习了一样。。。 结果就只能是在白天的课上复习。。</description></item><item><title>20140419</title><link>https://111qqz.github.io/2017/04/20140419/</link><pubDate>Wed, 19 Apr 2017 12:56:13 +0000</pubDate><guid>https://111qqz.github.io/2017/04/20140419/</guid><description>最让你恶心痛苦的那些人，你必要从他们身上学到最重要和有用的东西。 所有的痛苦都不能白受，克我者必生我。 在知乎看到这句话，不禁在想 人无疑是zha</description></item><item><title>murmurhash源码分析</title><link>https://111qqz.github.io/2017/03/murmurhash/</link><pubDate>Wed, 22 Mar 2017 12:20:37 +0000</pubDate><guid>https://111qqz.github.io/2017/03/murmurhash/</guid><description>分析levelDB源码的时候遇到的&amp;hellip;发现是一个广泛应用的hash算法，而且是纯c写的，于是找来了源码看。 **MurmurHash** 是一种非[加密](h</description></item><item><title>内存屏障（Memory Barriers）</title><link>https://111qqz.github.io/2017/03/memory-barriers/</link><pubDate>Wed, 22 Mar 2017 05:16:53 +0000</pubDate><guid>https://111qqz.github.io/2017/03/memory-barriers/</guid><description>起因是最近在看levelDB源码，其中port里的atomic_pointer.h文件用到了内存屏障。。 于是来学习一下。。 粗略得说下我自己的</description></item><item><title>AWK 初探</title><link>https://111qqz.github.io/2017/03/awk-/</link><pubDate>Sun, 19 Mar 2017 10:02:58 +0000</pubDate><guid>https://111qqz.github.io/2017/03/awk-/</guid><description>参考资料： awk_维基百科 awk简明教程 awk是一门比较古老但是很好用的文本处理工具（语言?） 语法还是很好懂的。。。转载了一篇文章。。。算是</description></item><item><title>2017年3月更新archlinux后没有声音问题的解决办法</title><link>https://111qqz.github.io/2017/03/20173archlinux/</link><pubDate>Thu, 16 Mar 2017 06:37:25 +0000</pubDate><guid>https://111qqz.github.io/2017/03/20173archlinux/</guid><description>系统信息： 表现为不管外放还是耳机。。都没有声音。。。 解决办法： pacmd set-card-profile alsa_card.pci-0000_00_1b.0 output:analog-stereo+input:analog-stereo 参考资料</description></item><item><title>一致性哈希初探</title><link>https://111qqz.github.io/2017/03/</link><pubDate>Wed, 15 Mar 2017 07:58:05 +0000</pubDate><guid>https://111qqz.github.io/2017/03/</guid><description>原始论文：一致性哈希 本来不打算放的。。被批评说太不严谨orz.. 说说自己的理解好了。。 大概就是。。。hash的时候。。一开始有n个桶。。你设</description></item><item><title>Linux 下各个目录的作用及内容</title><link>https://111qqz.github.io/2017/03/linux-/</link><pubDate>Wed, 15 Mar 2017 06:29:36 +0000</pubDate><guid>https://111qqz.github.io/2017/03/linux-/</guid><description>参考：[wiki_FHS](http://Filesystem Hierarchy Standard) 其实这东西。。。虽然有一个统一的标准。。。但是不同发行版。。。或者同一个发</description></item><item><title>压缩算法初探（科普向，转载）</title><link>https://111qqz.github.io/2017/03/</link><pubDate>Wed, 15 Mar 2017 02:55:56 +0000</pubDate><guid>https://111qqz.github.io/2017/03/</guid><description>参考链接 简要概述原理： 每个文件都由各种不同代码组成，比如01代码。这类文件只有数字0与1组合。 压缩原理就是 【通过寻找其中的规律，简化数字的排</description></item><item><title>缓存淘汰算法之LRU（转载）</title><link>https://111qqz.github.io/2017/03/lru/</link><pubDate>Wed, 15 Mar 2017 00:34:50 +0000</pubDate><guid>https://111qqz.github.io/2017/03/lru/</guid><description>参考博客 计组块忘光了呜呜呜。。。来复习一波。。 1. LRU 1.1. 原理 LRU（Least recently used，最近最少使用）算法根据数据的历史访问记录来进行淘汰数据</description></item><item><title>大数据top K 问题总结（转载）</title><link>https://111qqz.github.io/2017/03/top-k-/</link><pubDate>Tue, 14 Mar 2017 06:21:24 +0000</pubDate><guid>https://111qqz.github.io/2017/03/top-k-/</guid><description>转自：http://blog.csdn.net/v_july_v/article/details/6279498 第一部分、十道海量数据处理面</description></item><item><title>局部敏感哈希算法(Locality Sensitive Hashing)初探</title><link>https://111qqz.github.io/2017/03/locality-sensitive-hashing/</link><pubDate>Sat, 11 Mar 2017 07:59:00 +0000</pubDate><guid>https://111qqz.github.io/2017/03/locality-sensitive-hashing/</guid><description>前言： 其实有了前文simhash算法的基础，局部敏感hash算法已经不存在理解上的问题了吧。。。毕竟simhash算法应该是局部敏感哈希算法</description></item><item><title>文本相似度判断-simhash算法学习笔记</title><link>https://111qqz.github.io/2017/03/-simhash/</link><pubDate>Fri, 10 Mar 2017 03:33:08 +0000</pubDate><guid>https://111qqz.github.io/2017/03/-simhash/</guid><description>先放原始论文。。。以此表达对这个算法的敬意orz 论文链接 问题引出： 那天百度一面，frog学姐问了我如何判断两篇新闻稿的相似度的问题&amp;hell</description></item><item><title>蓄水池抽样算法概述(Reservoir Sampling Algorithm)[转载]</title><link>https://111qqz.github.io/2017/03/reservoir-sampling-algorithm/</link><pubDate>Thu, 09 Mar 2017 12:14:11 +0000</pubDate><guid>https://111qqz.github.io/2017/03/reservoir-sampling-algorithm/</guid><description>面京东被这个问题卡了QAQ，来补补这方面的课。 转自：链接 蓄水池抽样算法随机算法的一种，用来从 N 个样本中随机选择 K 个样本，其中 N 非常大（以至于</description></item><item><title>软件体系结构复习笔记</title><link>https://111qqz.github.io/2017/01/software-architecture-course-review/</link><pubDate>Tue, 03 Jan 2017 03:26:39 +0000</pubDate><guid>https://111qqz.github.io/2017/01/software-architecture-course-review/</guid><description>Cha1 软件架构概念： 是系统的一个或多个结构，它们由软件组件，组件的外部可见属性以及组件之间的关系组成。 组件的外部可见属性是指其他组件对该组件所做</description></item><item><title>manjaro安(zhe)装(teng)记</title><link>https://111qqz.github.io/2016/12/manjarozheteng/</link><pubDate>Tue, 27 Dec 2016 04:40:53 +0000</pubDate><guid>https://111qqz.github.io/2016/12/manjarozheteng/</guid><description>噫。。之前x200上装的是win7+fedora25 gnome。。。 虽然感觉gnome对于09年的老电脑来说有点吃力&amp;hellip;不过也懒</description></item><item><title>discourse邮件服务无法使用的解决方案</title><link>https://111qqz.github.io/2016/12/discourse/</link><pubDate>Sun, 25 Dec 2016 07:27:48 +0000</pubDate><guid>https://111qqz.github.io/2016/12/discourse/</guid><description>解决办法:https://blog.discourse.org/2016/03/switching-your-discourse-from-</description></item><item><title>编译原理实验：词法分析器</title><link>https://111qqz.github.io/2016/12/</link><pubDate>Mon, 12 Dec 2016 09:02:12 +0000</pubDate><guid>https://111qqz.github.io/2016/12/</guid><description>实验一 设计实现简单语言的词法分析器 1、实验目的 通过该实验,熟练应用编译原理关于词法分析的基本理论和方法；学会用C/C++高级程序设计语言设计</description></item><item><title>一些计划。。。</title><link>https://111qqz.github.io/2016/12/</link><pubDate>Fri, 09 Dec 2016 09:51:40 +0000</pubDate><guid>https://111qqz.github.io/2016/12/</guid><description>感觉owncloud的确很赞的样子。。。 小电影什么的。。我倒是需求不大。。。 不过作为同步盘感觉蛮赞的。。。 然而现在手头的服务器。。。除了论坛</description></item><item><title>fedora/centos　服务器搭建shadowsocks超时的解决办法</title><link>https://111qqz.github.io/2016/12/fedoracentosshadowsocks/</link><pubDate>Thu, 08 Dec 2016 07:42:54 +0000</pubDate><guid>https://111qqz.github.io/2016/12/fedoracentosshadowsocks/</guid><description>操作肯定没有错，就是连接不上，显示超时 发现是防火墙的锅 具体请看：github_shadowsocks_issues_477</description></item><item><title>搭建论坛历程</title><link>https://111qqz.github.io/2016/12/</link><pubDate>Mon, 05 Dec 2016 08:32:38 +0000</pubDate><guid>https://111qqz.github.io/2016/12/</guid><description>。。。由于一些不可描述的原因。。。 和某个华师计科的妹子一拍即合。。。打算搞一个论坛出来。。。 算是做一些微小的贡献2333 一开始打算尝试dz&amp;</description></item><item><title>关于代码插件　crayon　无法高亮的解决方案</title><link>https://111qqz.github.io/2016/11/crayon/</link><pubDate>Wed, 30 Nov 2016 08:37:57 +0000</pubDate><guid>https://111qqz.github.io/2016/11/crayon/</guid><description>在最后一个标签 加上两个 （空格的字符表示 ＆ ＋ nbsp） 就好了。。。。</description></item><item><title>database connection error 的解决方案</title><link>https://111qqz.github.io/2016/10/database-connection-error-/</link><pubDate>Mon, 10 Oct 2016 10:37:14 +0000</pubDate><guid>https://111qqz.github.io/2016/10/database-connection-error-/</guid><description>其实 东西之前出现过&amp;hellip;不过好像重启一下服务器就可以了？ 这次比较麻烦。 一开始我是直接google 了这条错误信息，结果答案五花八门，</description></item><item><title>[solved ]fedora 24 "Tap to click" not working</title><link>https://111qqz.github.io/2016/09/solved-fedora-24-tap-to-click-not-working/</link><pubDate>Thu, 01 Sep 2016 08:16:07 +0000</pubDate><guid>https://111qqz.github.io/2016/09/solved-fedora-24-tap-to-click-not-working/</guid><description>链接</description></item><item><title>using your computer without mouse</title><link>https://111qqz.github.io/2016/09/using-your-computer-without-mouse/</link><pubDate>Thu, 01 Sep 2016 07:44:31 +0000</pubDate><guid>https://111qqz.github.io/2016/09/using-your-computer-without-mouse/</guid><description>键盘足够爽了以后。。。 鼠标明显降低效率。。。 学会逐步脱离鼠标吧orz. 首先是chrome插件vimium vimium教程 Vimium 常用的按键功能解释</description></item><item><title>fedora 24 cannot modify keyboard delay and rate</title><link>https://111qqz.github.io/2016/08/fedora-24-cannot-modify-keyboard-delay-and-rate/</link><pubDate>Thu, 25 Aug 2016 08:58:50 +0000</pubDate><guid>https://111qqz.github.io/2016/08/fedora-24-cannot-modify-keyboard-delay-and-rate/</guid><description>最近入手了x1 c 然后发现没办法支持 f22&amp;hellip;.. 没办法，只好上f24了。。。虽然明知道一堆bug&amp;hellip; 最近发现。。之前在系统设置-&amp;gt;键盘</description></item><item><title>实训相关。。。。</title><link>https://111qqz.github.io/2016/07/</link><pubDate>Sat, 02 Jul 2016 07:44:27 +0000</pubDate><guid>https://111qqz.github.io/2016/07/</guid><description>列个技能表。。。。。 java&amp;hellip;. mysql&amp;hellip; tomcat apache jsp&amp;hellip;.. idea&amp;hellip;? tomcat是apache的进化。。。。？？？ hibernate&amp;hellip;持久层的设计模式。。？？ http://docs.jboss.org/hibernate/orm/</description></item><item><title>geekos project 1 （ELF文件相关）</title><link>https://111qqz.github.io/2016/06/geekos-project-1-elf/</link><pubDate>Sat, 18 Jun 2016 19:43:34 +0000</pubDate><guid>https://111qqz.github.io/2016/06/geekos-project-1-elf/</guid><description>一、目的 熟悉ELF文件格式，了解GeekOS系统如何将ELF格式的可执行程序装入到内存，建立内核进程并运行的实现技术。 二、流程 1、修改/ge</description></item><item><title>geek OS project 0 （下）</title><link>https://111qqz.github.io/2016/06/geek-os-project-0-/</link><pubDate>Sat, 18 Jun 2016 09:48:06 +0000</pubDate><guid>https://111qqz.github.io/2016/06/geek-os-project-0-/</guid><description>现在我们环境已经搭好了，参考 geekos实验环境的搭建 在main.c中新加个函数，命名为projecto,函数的代码如下： /* * GeekOS C code entry point * Copyright</description></item><item><title>geekok project0（上）（实验环境的搭建）</title><link>https://111qqz.github.io/2016/06/geekok-project0/</link><pubDate>Sat, 18 Jun 2016 08:35:49 +0000</pubDate><guid>https://111qqz.github.io/2016/06/geekok-project0/</guid><description>apt-get install build-essential apt-get install bochs bochs-x nasm 此处下载的bochs应该是比较新的&amp;hellip;如果之后遇到 failed assertion in init_idt :g_handlersizenoterr == g_handlersizeerr 这个错误，建议安装比较老的nasm版本，比如2.</description></item><item><title>OS课设之geek os 非最终版</title><link>https://111qqz.github.io/2016/06/osgeek-os-/</link><pubDate>Fri, 17 Jun 2016 04:09:37 +0000</pubDate><guid>https://111qqz.github.io/2016/06/osgeek-os-/</guid><description>参考了这篇博客 流程部分不再具体描述，可以参考上面的博客。 只详细给出我遇到的问题。 我的pc环境是：Linux 111qqz-ThinkPad-X200 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux linux mint 17.2</description></item><item><title>linux下的对拍写法</title><link>https://111qqz.github.io/2016/05/linux/</link><pubDate>Mon, 16 May 2016 13:44:16 +0000</pubDate><guid>https://111qqz.github.io/2016/05/linux/</guid><description>首先先生成三个程序： $ g++ a+b.cpp -o a+b $ g++ a+b2.cpp -o a+b2 $ g++ make.cpp -o make 然后生成数据 $ ./make &amp;gt; in.txt 然后运行两个程序 $ ./a+b &amp;lt; in.txt &amp;gt; out.txt $ ./a+b2 &amp;lt; in.txt &amp;gt; ans.txt 最后对拍 $ diff out.txt ans.txt 输出的结果可以</description></item><item><title>tmp</title><link>https://111qqz.github.io/2016/04/tmp/</link><pubDate>Wed, 13 Apr 2016 12:10:55 +0000</pubDate><guid>https://111qqz.github.io/2016/04/tmp/</guid><description>#include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; using namespace std; const int N=1E4+7; int n,k,Q; int siz; int pos[N]; int sum[N]; int dis[N]; bool vis[N]; vector &amp;lt; pair&amp;lt;int,int&amp;gt; &amp;gt; edge[N]; struct node { int l,r; int id; bool operator &amp;lt; (node b)const { if (pos[l]==pos[b.l]) return r&amp;lt;b.r; return pos[l]&amp;lt;pos[b.l]; } }q[N]; void dfs( int u,int val) { vis[u] = true; dis[u+1] = val; int Siz</description></item><item><title>NYOJ 505 因子和阶乘</title><link>https://111qqz.github.io/2016/01/nyoj-505-/</link><pubDate>Wed, 20 Jan 2016 07:08:01 +0000</pubDate><guid>https://111qqz.github.io/2016/01/nyoj-505-/</guid><description>http://acm.nyist.net/JudgeOnline/problem.php?pid=509 题意：中文题目。。。 思路：快速筛即可。。。妈蛋。。。这个oj不能用宏编译==。。。然后一直TLE&amp;hellip;去掉了就好了。。sad /* ***********************************************</description></item><item><title>poj 1350 Cabric Number Problem</title><link>https://111qqz.github.io/2016/01/poj1350/</link><pubDate>Wed, 20 Jan 2016 05:29:46 +0000</pubDate><guid>https://111qqz.github.io/2016/01/poj1350/</guid><description>http://poj.org/problem?id=1350 题意：6174问题。。。一个四位数。。四个数字重排。。。最大的减去最小的得到新的数字。最后一定能得到6174或者0.除非这个四位数的四个数</description></item><item><title>linux mint gedit 中文乱码</title><link>https://111qqz.github.io/2015/12/linux-mint-gedit-/</link><pubDate>Mon, 28 Dec 2015 12:46:05 +0000</pubDate><guid>https://111qqz.github.io/2015/12/linux-mint-gedit-/</guid><description>gconftool-2 --set --type=list --list-type=string /apps/gedit-2/preferences/encodings/auto_detected &amp;quot;[UTF-8,CURRENT,GB18030,ISO-8859-15,UTF-16]&amp;quot;</description></item><item><title>在linux mint 上安装 Oracle JDK 的方法</title><link>https://111qqz.github.io/2015/12/linux-mint-oracle-jdk-/</link><pubDate>Mon, 28 Dec 2015 08:17:03 +0000</pubDate><guid>https://111qqz.github.io/2015/12/linux-mint-oracle-jdk-/</guid><description>Open up the Terminal (Alt + F2 &amp;gt; Terminal). Remove OpenJDK installation. sudo apt-get update &amp;amp;&amp;amp; apt-get remove openjdk* Download Oracle JDK from here. You are looking for a linux version with tar.gz extension. Also choose the right version from 32-bit (x86) and 64bit (x64) one. Change directory into one with downloaded tarball. In my case $HOME/Downloads. cd ~/Downloads Extract tarball. Replace with a name of dowloaded file. (just press</description></item><item><title>codeforces 519 C. A and B and Team Training</title><link>https://111qqz.github.io/2015/12/cf519c/</link><pubDate>Mon, 14 Dec 2015 10:53:21 +0000</pubDate><guid>https://111qqz.github.io/2015/12/cf519c/</guid><description>http://codeforces.com/problemset/problem/519/C 题意：两种组队方式，3人一组，1个大牛+2个蒟蒻或者1个蒟蒻+2个大牛。给定大牛和蒟蒻的个数。问最多能组多少队。 思路：线性规划。设两种队分</description></item><item><title>codeforces #334 div 2 C. Alternative Thinking</title><link>https://111qqz.github.io/2015/12/codeforces-334-div-2-c-alternative-thinking/</link><pubDate>Wed, 02 Dec 2015 08:54:38 +0000</pubDate><guid>https://111qqz.github.io/2015/12/codeforces-334-div-2-c-alternative-thinking/</guid><description>题意：给定一个01串。要进行一次变换：选一段连续的非空的字串，将这段串的0和1反转（0变成1,1变成0） 然后问能得到的最长的0,1交替的序列</description></item><item><title>test</title><link>https://111qqz.github.io/2015/12/test/</link><pubDate>Tue, 01 Dec 2015 07:04:19 +0000</pubDate><guid>https://111qqz.github.io/2015/12/test/</guid><description>应大家的要求，写一篇博客来介绍下vim在ACM中的简单使用。 写本文的目的，只是为了给广大acmer一个入门vim的指导。不喜勿喷！ 不想看到的</description></item><item><title>atom在linux下安装插件失败的解决方案</title><link>https://111qqz.github.io/2015/12/atomlinux/</link><pubDate>Mon, 30 Nov 2015 17:27:17 +0000</pubDate><guid>https://111qqz.github.io/2015/12/atomlinux/</guid><description>gyp info it worked if it ends with ok gyp info using node-gyp@2.0.2 gyp info using node@0.10.40 | linux | x64 gyp http GET https://atom.io/download/atom-shell/v0.34.0/node-v0.34.0.tar.gz gyp WARN install got an error, rolling back install gyp ERR! install error gyp ERR! stack Error: This is most likely not a problem with node-gyp or the package itself and gyp ERR! stack is related to network connectivity. In most cases you are behind</description></item><item><title>wordpress无法创建目录/没有写权限的解决方案</title><link>https://111qqz.github.io/2015/11/wordpress/</link><pubDate>Mon, 30 Nov 2015 02:44:19 +0000</pubDate><guid>https://111qqz.github.io/2015/11/wordpress/</guid><description>终于解决了。 的确是权限问题。 但是由于初始化的时候，我错误的设置了数据库目录。应该为/alidata/www/serve/mysql ，而我设置</description></item><item><title>博客算是搭好了？</title><link>https://111qqz.github.io/2015/11/</link><pubDate>Sun, 29 Nov 2015 11:18:01 +0000</pubDate><guid>https://111qqz.github.io/2015/11/</guid><description>然而不能上传&amp;hellip; 插件也是。在线安装也不可以。 google遍了只看到说是权限问题。 然而wp-content整个目录都已经chmod</description></item><item><title>世界，您好！</title><link>https://111qqz.github.io/2015/11/hello-world/</link><pubDate>Sun, 29 Nov 2015 08:13:34 +0000</pubDate><guid>https://111qqz.github.io/2015/11/hello-world/</guid><description>欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！</description></item></channel></rss>