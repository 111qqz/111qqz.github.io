<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>其他 on 111qqz的小窝</title>
    <link>https://111qqz.github.io/categories/%E5%85%B6%E4%BB%96/</link>
    <description>Recent content in 其他 on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 May 2019 12:09:18 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.github.io/categories/%E5%85%B6%E4%BB%96/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BattleBlock Theater linux下无法启动的解决办法　（　void* MemoryBlock::Alloc(unsigned int): Assertion failed ）</title>
      <link>https://111qqz.github.io/2019/05/battleblock-theater-linux-start-failed/</link>
      <pubDate>Wed, 01 May 2019 12:09:18 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2019/05/battleblock-theater-linux-start-failed/</guid>
      <description>在steam上买了 BattleBlock Theater， 官方说支持linux，但是却无法启动。 在steam里启动看不到log,于是找到游戏的安装目录。 /home/coder/.steam/steam/steamapps/common/BattleBlock Theater 在终端</description>
    </item>
    
    <item>
      <title>manjaro /archlinux 下 steam 文明5/6(civilization V/VI)的运行方法</title>
      <link>https://111qqz.github.io/2019/02/manjaro-archlinux-civilization/</link>
      <pubDate>Sat, 23 Feb 2019 14:28:01 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2019/02/manjaro-archlinux-civilization/</guid>
      <description>系统版本为Manjaro 18.0.3 Illyria 运行文明5比较容易，只需要设置启动选项为: LD_PRELOAD=/usr/lib32/libopenal.so.1 %command% 文明6运行会报错 undefined symbol: FT_Done_MM_Var 解决办法是 在终端中用如下办法运行steam:</description>
    </item>
    
    <item>
      <title>2019 to do list</title>
      <link>https://111qqz.github.io/2019/01/2019-to-do-list/</link>
      <pubDate>Tue, 01 Jan 2019 13:13:04 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2019/01/2019-to-do-list/</guid>
      <description>* &amp;lt;del&amp;gt;Operating Systems: Three Easy Pieces&amp;lt;/del&amp;gt; * fluent python * &amp;lt;del&amp;gt;《计算机网络:自顶向下方法》&amp;lt;/del&amp;gt; * 《mysql必知必会》 * PC Assembly Language ( for mit 6.828 )</description>
    </item>
    
    <item>
      <title>我在公司的服务器上执行了sudo rm -rf /*</title>
      <link>https://111qqz.github.io/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/</link>
      <pubDate>Sat, 24 Nov 2018 08:31:19 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/11/when-i-execute-sudo-rm-rf-on-the-company-server/</guid>
      <description>TL;DR * 依靠人的小心谨慎是不靠谱的，人总有失误的时候 * 看了下docker volume的权限机制，貌似是从docker image中继承。 * 写了两个</description>
    </item>
    
    <item>
      <title>docker network 与 本地 network 网段冲突</title>
      <link>https://111qqz.github.io/2018/11/docker-network-conflict-with-local-subnetwork/</link>
      <pubDate>Tue, 20 Nov 2018 08:33:20 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/11/docker-network-conflict-with-local-subnetwork/</guid>
      <description>起因: 公司部署在hk的爬虫服务器突然挂掉了。后来发现只是在深圳办公区无法访问。排查后发现原因是docker的网络(包括docker netwo</description>
    </item>
    
    <item>
      <title>记一次在 docker compose 中使用volume的踩坑记录</title>
      <link>https://111qqz.github.io/2018/11/docker-compose-default-volume-name-makes-me-confused/</link>
      <pubDate>Wed, 14 Nov 2018 08:06:57 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/11/docker-compose-default-volume-name-makes-me-confused/</guid>
      <description>现象: 使用docker compose 挂载 named volume 无效（且没有错误提示) 排查过程: 一开始是没有使用docker-compose命令，直接使用docker run -v 命</description>
    </item>
    
    <item>
      <title>How to use Scrapy with Django Application（转自medium）</title>
      <link>https://111qqz.github.io/2018/11/how-to-use-scrapy-with-django-application/</link>
      <pubDate>Tue, 06 Nov 2018 13:33:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/11/how-to-use-scrapy-with-django-application/</guid>
      <description>在meidum上看到一篇很赞的文章&amp;hellip;无奈关键部分一律无法加载出来&amp;hellip;挂了梯子也不行，很心塞&amp;hellip;刚刚突然</description>
    </item>
    
    <item>
      <title>lua学习笔记</title>
      <link>https://111qqz.github.io/2018/10/lua-notes/</link>
      <pubDate>Fri, 26 Oct 2018 02:47:59 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/lua-notes/</guid>
      <description>lua是一门轻量级的脚本语言&amp;hellip;好像比较适合写游戏？在 太阳神三国杀 中见过很多lua脚本。 由于splash 的渲染脚本需要用lua来</description>
    </item>
    
    <item>
      <title>golang 学习笔记</title>
      <link>https://111qqz.github.io/2018/10/golang-notes/</link>
      <pubDate>Sat, 20 Oct 2018 11:06:56 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/golang-notes/</guid>
      <description>先放资料,可能比较侧重于go在系统调用方面的内容. 这里不会记录详细的go的语法,只会记录学习的过程,踩到的坑,以及其他我认为值得记录的内容.</description>
    </item>
    
    <item>
      <title>爬虫学习笔记</title>
      <link>https://111qqz.github.io/2018/10/web-crawler-notes/</link>
      <pubDate>Fri, 19 Oct 2018 08:18:53 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/web-crawler-notes/</guid>
      <description>再次迫于生计。。。 参考了面向新人的 Python 爬虫学习资料 大致的学习路线为: 一： 简单的定向脚本爬虫（ request --- bs4 --- re ） 二： 大型框架式爬虫（ Scrapy 框架为主） 三：浏</description>
    </item>
    
    <item>
      <title>java-grpc 踩坑记录</title>
      <link>https://111qqz.github.io/2018/10/java-grpc-notes/</link>
      <pubDate>Wed, 17 Oct 2018 03:29:03 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/java-grpc-notes/</guid>
      <description>最近的项目需要java和python之间的进程通信，想到了之前使用过的的grpc. 参考官方quickstart * JDK: version 7 or higher 看起来只依赖jdk</description>
    </item>
    
    <item>
      <title>2018 to do list</title>
      <link>https://111qqz.github.io/2018/10/2018-to-do-list/</link>
      <pubDate>Sun, 14 Oct 2018 15:30:52 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/2018-to-do-list/</guid>
      <description>迫于最近的事情有点多，还是记录一下。 果然to do list什么的，还是要按照年份记录啊。 * &amp;lt;del&amp;gt;了解linux strace命令&amp;</description>
    </item>
    
    <item>
      <title>spring 学习笔记</title>
      <link>https://111qqz.github.io/2018/10/spring-notes/</link>
      <pubDate>Wed, 10 Oct 2018 09:56:46 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/spring-notes/</guid>
      <description>迫于生计，又要从零开始学习spring. 在这篇文章之前，对java的基础是2015年写过一个java大作业，对spring是一无所知。 为了学</description>
    </item>
    
    <item>
      <title>spring 依赖注入</title>
      <link>https://111qqz.github.io/2018/10/spring-dependency-injection/</link>
      <pubDate>Tue, 09 Oct 2018 07:45:17 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/spring-dependency-injection/</guid>
      <description>真是个不明觉厉的术语&amp;hellip;其实是个特别简单的概念orz 用白话讲，如果一个class A中用到了class B的实例，那么class B的</description>
    </item>
    
  </channel>
</rss>