<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>poj on 111qqz的小窝</title>
    <link>https://111qqz.github.io/categories/poj/</link>
    <description>Recent content in poj on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 30 Nov 2016 08:10:23 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.github.io/categories/poj/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>poj 3274 Gold Balanced Lineup (抽屉原理？错题？)</title>
      <link>https://111qqz.github.io/2016/11/poj-3274/</link>
      <pubDate>Wed, 30 Nov 2016 08:10:23 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/11/poj-3274/</guid>
      <description>poj 3274 题目链接 题意：给出n个数和k，每个数不超过k位二进制。现在问最长的一段区间，满足该区间中所有数相加，k个位置上的数相等。 思路：k个位置上</description>
    </item>
    
    <item>
      <title>poj 3349 Snowflake Snow Snowflakes (利用hash分组)</title>
      <link>https://111qqz.github.io/2016/11/poj-3349/</link>
      <pubDate>Wed, 30 Nov 2016 06:30:56 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/11/poj-3349/</guid>
      <description>题意：有n个雪花，每个雪花有６瓣，给出每一瓣的长度，问是否有两个雪花相同。（雪花相同的条件是：存在某个顺序使得两个雪花的每一瓣长度对应相等）</description>
    </item>
    
    <item>
      <title>poj 1971  Parallelogram Counting</title>
      <link>https://111qqz.github.io/2016/11/poj-1971/</link>
      <pubDate>Tue, 22 Nov 2016 15:08:14 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/11/poj-1971/</guid>
      <description>题目链接 题意：给出n（n&amp;lt;=1E3）个不同的点，问最多组成多少个平行四边形。 思路：这道题的关键是，对于平行四边形的判断条件，要利用平行</description>
    </item>
    
    <item>
      <title>poj 1200  Crazy Search (字符串哈希)</title>
      <link>https://111qqz.github.io/2016/11/poj-1200/</link>
      <pubDate>Tue, 22 Nov 2016 14:02:41 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/11/poj-1200/</guid>
      <description>题目链接 题意：一个字符串，其仅由nc种字符组成，问其所有长度为n的字串里，共用多少种不同的。 思路：一开始木有懂nc种字符有什么用&amp;helli</description>
    </item>
    
    <item>
      <title>poj 1006 Biorhythms (中国剩余定理模板题)</title>
      <link>https://111qqz.github.io/2016/10/poj-1006-biorhythms-/</link>
      <pubDate>Thu, 13 Oct 2016 12:39:27 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/10/poj-1006-biorhythms-/</guid>
      <description>题目链接： 题意：人自出生起就有体力，情感和智力三个生理周期，分别为23，28和33天。一个周期内有一天为峰值，在这一 天，人在对应的方面（体力</description>
    </item>
    
    <item>
      <title>poj 2142 The Balance (扩展欧几里得算法)</title>
      <link>https://111qqz.github.io/2016/10/poj-2142/</link>
      <pubDate>Thu, 13 Oct 2016 11:34:08 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/10/poj-2142/</guid>
      <description>题目链接 题意：给出a,b,d，分别表示a,b两种刻度的砝码，以及要称量的物体重量为d.现在保证能称量出给定重量的物体，问两种砝码个数的和最小</description>
    </item>
    
    <item>
      <title>poj 1061 青蛙的约会 （扩展欧几里得算法（负数的处理））</title>
      <link>https://111qqz.github.io/2016/10/poj-1061-/</link>
      <pubDate>Thu, 13 Oct 2016 07:48:35 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/10/poj-1061-/</guid>
      <description>题目链接 题意：两只青蛙初始在数轴的x,y点，单位时间内分别可以向右跳m米和n米，数轴是环型的，长度为L，问两只青蛙能否相遇，以及相遇时跳的次</description>
    </item>
    
    <item>
      <title>poj  2886  Who Gets the Most Candies? （线段树模拟加强版约瑟夫问题&#43;反素数)</title>
      <link>https://111qqz.github.io/2016/09/poj-2886/</link>
      <pubDate>Wed, 21 Sep 2016 17:03:08 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/09/poj-2886/</guid>
      <description>poj 2886 题目链接 题意：n个人围成一圈，每个人身上由一个数，可正可负。从第k个人开始出圈，如果第k个人身上的数是X,X&amp;gt;0，就左边第x个没有</description>
    </item>
    
    <item>
      <title>poj 2456 Aggressive cows (二分)</title>
      <link>https://111qqz.github.io/2016/09/poj2456/</link>
      <pubDate>Mon, 19 Sep 2016 15:15:57 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/09/poj2456/</guid>
      <description>题目链接 题意：给出n个x轴上的坐标点，选取其中c个，问c个之中任意两个点的最小距离最大是多少。 思路：二分距离check合法性。 大水题。。。因</description>
    </item>
    
    <item>
      <title>poj 2828 Buy Tickets (线段树单点更新，逆序插入)</title>
      <link>https://111qqz.github.io/2016/09/poj-2828/</link>
      <pubDate>Sat, 03 Sep 2016 13:26:54 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/09/poj-2828/</guid>
      <description>poj 2828 题目链接 题意：n个人，每个人有一个rp值（用来区分不同的人），还有一个pos[i]，表示当第i个人来排队的时候插入到第pos[i]个人的</description>
    </item>
    
    <item>
      <title>poj 2069 Super Star (模拟退火)</title>
      <link>https://111qqz.github.io/2016/08/poj-2069/</link>
      <pubDate>Tue, 30 Aug 2016 12:12:29 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2069/</guid>
      <description>poj 2069 题目链接 题意：给出n个点，找出包含这n个点的最小半径的外接球。求球的半径。 思路：模拟退火。不过在走的时候，不是随机上下左右前后6个方向走</description>
    </item>
    
    <item>
      <title>poj 1385 Lifting the Stone (多边形的重心)</title>
      <link>https://111qqz.github.io/2016/08/poj-1385/</link>
      <pubDate>Mon, 29 Aug 2016 03:31:15 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-1385/</guid>
      <description>poj 1385 题目链接 题意：求多边形的重心。 思路： 抄模板（逃 嘛。。三角形的重心是三个点坐标的平均数。。。 多边形的重心其实就是先求三角形的重心然后再加权</description>
    </item>
    
    <item>
      <title>poj 2420 A Star not a Tree? (模拟退火模板题求多边形费马点)</title>
      <link>https://111qqz.github.io/2016/08/poj-2420/</link>
      <pubDate>Mon, 29 Aug 2016 03:23:27 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2420/</guid>
      <description>poj 2420 题意：求多边形费马点，也就是距离所有点的距离之和最小的点。 思路：模拟退火裸题。 关于模拟退火的学习： 模拟退火讲解 我就记住了一句话2333：</description>
    </item>
    
    <item>
      <title>poj 1386 Play on Words (欧拉路)</title>
      <link>https://111qqz.github.io/2016/08/poj-1386/</link>
      <pubDate>Sun, 28 Aug 2016 12:53:13 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-1386/</guid>
      <description>poj 1386 题意：n个单词，问能否形成一个串（单词接龙，收尾相连，当且仅当前一个单词的末尾字母和后一个单词的首字母相同） 思路：欧拉路。 关于欧拉路： (</description>
    </item>
    
    <item>
      <title>poj 1383 Labyrinth (树的直径裸题)</title>
      <link>https://111qqz.github.io/2016/08/poj-1383/</link>
      <pubDate>Sun, 28 Aug 2016 12:04:15 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-1383/</guid>
      <description>poj 1383题目链接 题意：一个迷宫图，求最远两点的距离是多少，保证每两个点都是联通的。 思路：树的直径。 #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt;</description>
    </item>
    
    <item>
      <title>poj 1379 Run Away (模拟退火)</title>
      <link>https://111qqz.github.io/2016/08/poj-1379/</link>
      <pubDate>Sun, 28 Aug 2016 11:49:57 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-1379/</guid>
      <description>poj 1379题目链接 题意：给出一个矩形区域的长宽，给出区域中若干点，问距离所有点的最近距离的最大值是多少。 思路：很容易想到模拟退火。 比赛的时候</description>
    </item>
    
    <item>
      <title>poj 2001 Shortest Prefixes (trie树)</title>
      <link>https://111qqz.github.io/2016/08/poj-2001/</link>
      <pubDate>Mon, 15 Aug 2016 19:22:36 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2001/</guid>
      <description>poj 2001 题目链接 题意：给出n个字符串的表，问每个字符串的简化表示。简化表示的要求是，以该字符串的最短的而且不能产生歧义的前缀来表示。 思路：字典树</description>
    </item>
    
    <item>
      <title>poj 2752 Seek the Name, Seek the Fame (kmp 理解nxt函数)</title>
      <link>https://111qqz.github.io/2016/08/poj-2752/</link>
      <pubDate>Wed, 10 Aug 2016 13:25:59 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2752/</guid>
      <description>poj 2752题目链接 题意：求出所有的前缀和后缀相同的子串的长度。 思路:求出nxt函数，观察发现，从从len递归向前就是答案。 /* *********************************************** Author :111qqz Created Time :20</description>
    </item>
    
    <item>
      <title>poj 3494 Largest Submatrix of All 1’s (单调栈)</title>
      <link>https://111qqz.github.io/2016/08/poj-3494/</link>
      <pubDate>Wed, 03 Aug 2016 12:02:59 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-3494/</guid>
      <description>poj 3494 题意：给出一个n*m个0-1图，求最大的全部由1组成的矩阵。 思路：同poj 1964,一共做n+2×m次单调栈。。。数组开小re一发。。某</description>
    </item>
    
    <item>
      <title>poj 2796 Feel Good (前缀和，单调栈)</title>
      <link>https://111qqz.github.io/2016/08/poj-2796/</link>
      <pubDate>Wed, 03 Aug 2016 11:30:56 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2796/</guid>
      <description>poj 2796 题意：给出一个人n（1E5）天的情绪值（0..1E6），一段时间的value的定义是这段时间的情绪之和*这段时间情绪的最小值。 现在求va</description>
    </item>
    
    <item>
      <title>poj 2406 Power Strings (后缀数组||kmp)</title>
      <link>https://111qqz.github.io/2016/08/poj-2406/</link>
      <pubDate>Tue, 02 Aug 2016 13:49:47 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-2406/</guid>
      <description>poj 2406 题意:给定一个字符串 L,已知这个字符串是由某个字符串 S 重复 R 次而得到的, 求 R 的最大值 思路:论文题. 转载论文中的题解: 做法比较简单,穷举字</description>
    </item>
    
    <item>
      <title>poj 3261 Milk Patterns (最长公共子串，后缀数组)</title>
      <link>https://111qqz.github.io/2016/08/poj-3261/</link>
      <pubDate>Sun, 31 Jul 2016 18:18:04 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-3261/</guid>
      <description>poj3261 题意：给一个字符串，要求找出至少出现k次的最长重复子串&amp;hellip; 思路：后缀数组，然后再次用到了根据height数组对后缀进行分组的套</description>
    </item>
    
    <item>
      <title>poj 1743 Musical Theme  (不可重叠最长重复子串，后缀数组)</title>
      <link>https://111qqz.github.io/2016/08/poj-1743-musical-theme-/</link>
      <pubDate>Sun, 31 Jul 2016 16:38:25 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/08/poj-1743-musical-theme-/</guid>
      <description>poj 1743 题意：n个数字（1..88）表示的音符，问最长的连续两段长度至少为5的变化相同的音符段的长度。。。 思路：求最长重复字串。。。。很容易想到</description>
    </item>
    
    <item>
      <title>poj 3661 Running (区间dp)</title>
      <link>https://111qqz.github.io/2016/07/poj-3661-running-dp/</link>
      <pubDate>Mon, 25 Jul 2016 16:51:22 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj-3661-running-dp/</guid>
      <description>poj 3661题目链接 题意：锻炼，一共n分钟，每分钟可以选择跑步或者休息，第i分钟跑步可以跑d[i]米，并增加一点疲劳度，如果选择休息，那么每分</description>
    </item>
    
    <item>
      <title>poj 1141 Brackets Sequence (区间dp,括号匹配，记录路径)</title>
      <link>https://111qqz.github.io/2016/07/poj-1141/</link>
      <pubDate>Mon, 25 Jul 2016 08:29:03 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj-1141/</guid>
      <description>poj 1141题目链接 题意：给出一个括号序列，要求添加最少的括号，使得这个序列变成合法的括号匹配，输出最后的序列。 思路：区间dp。。。有了那么一</description>
    </item>
    
    <item>
      <title>POJ 1849 Two (树的直径)</title>
      <link>https://111qqz.github.io/2016/07/poj1849/</link>
      <pubDate>Sun, 17 Jul 2016 11:33:09 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj1849/</guid>
      <description>题目链接 题意:一棵树。。然后初始两个推雪机在点s,问如何选择路径使得处理完所有边上的积雪所耗费的汽油最少（走过一条有雪的边和一条没雪的边耗费</description>
    </item>
    
    <item>
      <title>poj 1789 Truck History (mst,prim)</title>
      <link>https://111qqz.github.io/2016/07/poj-1789/</link>
      <pubDate>Wed, 13 Jul 2016 17:40:56 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj-1789/</guid>
      <description>poj1789题目链接 题意：其实题目不难理解。。。直接按照定义去搞就行了。。。 思路：由于距离在分母上。。所以要quality最大。。。就是要</description>
    </item>
    
    <item>
      <title>poj 3310 Caterpillar (树的直径&#43;并查集判环&#43;dfs判断连通性)</title>
      <link>https://111qqz.github.io/2016/07/poj-3310/</link>
      <pubDate>Wed, 13 Jul 2016 06:21:41 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj-3310/</guid>
      <description>poj3310 题目链接 题意：给出一个无向图。。。问是否满足。。联通，并且无环，并且能找到一条路径，图中所有的顶点要么在这条路径上，要么与这条路径上的顶点</description>
    </item>
    
    <item>
      <title>poj 1679 The Unique MST (判断mst的唯一性，次小生成树)</title>
      <link>https://111qqz.github.io/2016/07/poj1679/</link>
      <pubDate>Tue, 12 Jul 2016 09:53:17 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj1679/</guid>
      <description>poj1679 题意：问最小生成树是否唯一。。 思路：求一下次小生成树。。。如果无解，或者次小生成树的权值之和和最小生成树的权值之和不同，那么唯一，否则不唯</description>
    </item>
    
    <item>
      <title>poj 2631 Roads in the North (树的直径)</title>
      <link>https://111qqz.github.io/2016/07/poj2631/</link>
      <pubDate>Tue, 12 Jul 2016 05:57:18 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj2631/</guid>
      <description>poj2631 题意：一棵树中求两个点的最远距离。。。 思路：就是求树的直径。。。裸体。。。。1A /* *********************************************** Author :111qqz Created Time :2016年07月12日 星期二 13时03分39</description>
    </item>
    
    <item>
      <title>poj 1985 Cow Marathon (树的直径模板题)</title>
      <link>https://111qqz.github.io/2016/07/poj1985/</link>
      <pubDate>Tue, 12 Jul 2016 04:07:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/07/poj1985/</guid>
      <description>poj1985 题意：求树上两点的最长距离。。。也就是传说中的树的直径。。。 思路： **两遍BFS :先任选一个起点BFS找到最长路的终点，再从终点进行BFS</description>
    </item>
    
    <item>
      <title>poj 3041 Asteroids (二分图的最小顶点覆盖，匈牙利算法)</title>
      <link>https://111qqz.github.io/2016/05/poj-3041/</link>
      <pubDate>Mon, 30 May 2016 13:56:28 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj-3041/</guid>
      <description>poj 3041题目链接 题意：一个n*n的网格中，有k个大小为1*1的小行星，现在可以用激光枪每次消灭一行的小行星或者消灭一列的小行星。问最少需要</description>
    </item>
    
    <item>
      <title>poj 1274 The Perfect Stall （匈牙利算法）</title>
      <link>https://111qqz.github.io/2016/05/poj-1274-the-perfect-stall-/</link>
      <pubDate>Wed, 25 May 2016 09:59:54 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj-1274-the-perfect-stall-/</guid>
      <description>poj 1274题目链接 裸的匈牙利。 /* *********************************************** Author :111qqz Created Time :2016年05月25日 星期三 17时49分22秒 File Name :code/poj/1274.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt;</description>
    </item>
    
    <item>
      <title>poj 2949 Word Rings (spfa&#43;栈优化)</title>
      <link>https://111qqz.github.io/2016/05/poj-2949-word-rings/</link>
      <pubDate>Tue, 24 May 2016 19:55:02 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj-2949-word-rings/</guid>
      <description>poj2949 题目链接 题意：我们有 n 个 (n&amp;lt;=100000) 字符串,每个字符串都是由 a~z 的小写英文字 母组成的字符串。如果字符串 A 的结尾两个字符刚好与字符串 B 的开头两字符相 匹配</description>
    </item>
    
    <item>
      <title>poj 1932 XYZZY (floyd传递闭包&#43;spfa求最长路)</title>
      <link>https://111qqz.github.io/2016/05/poj-1932/</link>
      <pubDate>Tue, 24 May 2016 13:00:45 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj-1932/</guid>
      <description>poj1932题目链接 题意：初始在点1，有100点能量，然后每个点有一个能量值【-100,100】，经过某个点会加上这个点的能量值，问能否找</description>
    </item>
    
    <item>
      <title>poj 1470 Closest Common Ancestors (lca,rmq&#43;dfs,读入技巧)</title>
      <link>https://111qqz.github.io/2016/05/poj1470/</link>
      <pubDate>Thu, 19 May 2016 08:42:05 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj1470/</guid>
      <description>poj1470题目链接 题意：求两点的lca. 思路：dfs+rmq. 读入技巧。 读入比较坑爹。。。 学会了一种新的读入技巧。 scanf(&amp;ldquo;%2s&amp;rdquo;,st); 表示读一个长度为2的</description>
    </item>
    
    <item>
      <title>poj 2452 Sticks Problem (rmq&#43;二分，需要返回最值位置)</title>
      <link>https://111qqz.github.io/2016/05/poj2452/</link>
      <pubDate>Wed, 18 May 2016 05:40:40 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj2452/</guid>
      <description>poj2452题目链接 题意：给你一组数a[n]，求满足a[i] &amp;lt; a[k] &amp;lt; a[j] (i &amp;lt;= k &amp;lt;= j)的最大的j-i。 思路：大概能想到是rmq，然后想出了一个错</description>
    </item>
    
    <item>
      <title>poj 2019 Cornfields (二维rmq)</title>
      <link>https://111qqz.github.io/2016/05/poj2019/</link>
      <pubDate>Mon, 16 May 2016 11:01:34 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2016/05/poj2019/</guid>
      <description>poj2019题目链接 题意：给一个方阵，k个查询，每个查询求某个方阵的最大值和最小值之差。 思路：二维rmq.同时用到最大值和最小值的话可以把</description>
    </item>
    
    <item>
      <title>poj 3687 Labeling Balls</title>
      <link>https://111qqz.github.io/2015/12/poj3687/</link>
      <pubDate>Sat, 19 Dec 2015 09:18:52 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/12/poj3687/</guid>
      <description>http://poj.org/problem?id=3687 题意：给定几个标签球的重量大小关系，求每个球是第几重的(即每个球在所有球的重量中由小到大排名是多少)。 （输出是每个球第几重，而不是几号球比</description>
    </item>
    
    <item>
      <title>poj 2566 Bound Found (前缀和，尺取法（two pointer）)</title>
      <link>https://111qqz.github.io/2015/09/poj2566/</link>
      <pubDate>Thu, 24 Sep 2015 16:26:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/09/poj2566/</guid>
      <description>题意 ：给定一个长度为n的区间．然后给k次询问，每次一个数t,求一个区间[l,r]使得这个区间和的绝对值最接近t 没办法直接尺取. 先预处理出来前</description>
    </item>
    
    <item>
      <title>poj 2159 Ancient Cipher(水)</title>
      <link>https://111qqz.github.io/2015/09/poj2159/</link>
      <pubDate>Wed, 23 Sep 2015 11:33:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/09/poj2159/</guid>
      <description>由于顺序是可以改变的． 所以考虑是否可以映射．只要存在字母对应出现的次数都相同．那么就可以通过映射得到． 具体是开一个数组记录每个字母出现的次数</description>
    </item>
    
    <item>
      <title>poj 1305 (毕达哥拉斯三元组，构造勾股数)</title>
      <link>https://111qqz.github.io/2015/08/poj1305/</link>
      <pubDate>Sat, 22 Aug 2015 06:18:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/08/poj1305/</guid>
      <description>题意是说，能构造多少本元勾股数和勾股数，要求构造的数&amp;lt;=n 所谓本元勾股数，就是三个勾股数没有公因数，两两互质。 由本元勾股数扩大k倍，就</description>
    </item>
    
    <item>
      <title>HUST team contest #E A Mountain Road||poj 3846 (dp)</title>
      <link>https://111qqz.github.io/2015/08/poj3846/</link>
      <pubDate>Thu, 20 Aug 2015 19:57:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/08/poj3846/</guid>
      <description>比赛的时候以为是贪心&amp;hellip; 想了好久. 不过最后没敢写,因为没办法证明正确性,只是直觉== 最后剩下的时间给队友改另一道题了.. 果然明智</description>
    </item>
    
    <item>
      <title>poj 2299 Ultra-QuickSort  （树状数组＋离散化）</title>
      <link>https://111qqz.github.io/2015/08/poj2299/</link>
      <pubDate>Tue, 04 Aug 2015 13:13:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/08/poj2299/</guid>
      <description>这道题可以总结的地方不少。 １：对于一组乱序数列，每次只能交换相邻元素，达到有序交换的次数就是原数列中你逆序对的个数。 cf上好像总喜欢出这个题</description>
    </item>
    
    <item>
      <title>poj 3414 pots (bfs&#43;路径记录)</title>
      <link>https://111qqz.github.io/2015/07/poj3414/</link>
      <pubDate>Mon, 27 Jul 2015 08:44:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj3414/</guid>
      <description>Pots **Time Limit:** 1000MS **Memory Limit:** 65536K **Total Submissions:** 11703 **Accepted:** 4955 Special Judge Description You are given two pots, having the volume of A and B liters respectively. The following operations can be performed: FILL(i) fill the pot i (1 ≤ **i **≤ 2) from the tap; DROP(i) empty the pot i to the drain; POUR(i,j) pour from pot i to pot j; after this operation either</description>
    </item>
    
    <item>
      <title>poj 3126 Prime Path (bfs)</title>
      <link>https://111qqz.github.io/2015/07/poj3126/</link>
      <pubDate>Fri, 24 Jul 2015 12:53:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj3126/</guid>
      <description>http://poj.org/problem?id=3126 题意是说,给定两个四位素数a b 问从a变换到b,最少需要变换几次. 变换的要求是,每次只能改变一个数字,而且中间过程得到的四位数也必须为素数.</description>
    </item>
    
    <item>
      <title>poj 2398 Toy Storage (计算几何,判断点和线段关系)</title>
      <link>https://111qqz.github.io/2015/07/poj2398/</link>
      <pubDate>Tue, 21 Jul 2015 13:13:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj2398/</guid>
      <description>http://poj.org/problem?id=2398 题意大概是说将一个盒子用n个board分成n+1 部分 然后往里面放toy,给定盒子,board,和toy的坐标 问所有的toy放完后,有多少部</description>
    </item>
    
    <item>
      <title>poj 2251 Dungeon Master (三维bfs)</title>
      <link>https://111qqz.github.io/2015/07/poj2251/</link>
      <pubDate>Tue, 21 Jul 2015 05:02:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj2251/</guid>
      <description>http://poj.org/problem?id=2251 简单bfs，只不过是三维的。。。 唯一的坑点在输出上&amp;hellip; Escaped in %d minute(s) 这意思是答案为1输出minute,不为1输出minutes还是说</description>
    </item>
    
    <item>
      <title>POJ 1564 Sum It Up (DFS&#43;剪枝）</title>
      <link>https://111qqz.github.io/2015/07/poj1564/</link>
      <pubDate>Fri, 17 Jul 2015 07:17:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj1564/</guid>
      <description>http://poj.org/problem?id=1564 dfs 三个参数 x,sum,k, x表示开始的坐标,sum表示当前的和,k表示这是一组答案中的第几个数,是用来记录路径的&amp;hellip; 调了好久没写出来&amp;hel</description>
    </item>
    
    <item>
      <title>poj 3278 catch that cow</title>
      <link>https://111qqz.github.io/2015/07/poj3278/</link>
      <pubDate>Wed, 08 Jul 2015 02:25:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj3278/</guid>
      <description>http://poj.org/problem?id=3278 bfs,用到了stl的queue /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分05秒 File Name :3278.cpp ************************************************ */ #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;queue&amp;gt;</description>
    </item>
    
    <item>
      <title>POJ 1028 Web Navigation</title>
      <link>https://111qqz.github.io/2015/07/poj1028/</link>
      <pubDate>Wed, 08 Jul 2015 02:08:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj1028/</guid>
      <description>http://poj.org/problem?id=1028 /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分01秒 File Name :1028.cpp ************************************************ */ #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;queue&amp;gt; using namespace std; typedef long long LL; const int inf = 8E8; stack&amp;lt;string&amp;gt; backstack; stack&amp;lt;string&amp;gt; forwardstack;</description>
    </item>
    
    <item>
      <title>poj 1256 Anagram</title>
      <link>https://111qqz.github.io/2015/07/poj1256/</link>
      <pubDate>Thu, 02 Jul 2015 18:41:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/07/poj1256/</guid>
      <description>http://poj.org/problem?id=1256 题意是说求出一个字符串的全排列，按字典序 需要注意的是字典序和传统意义上的字典序不同 重新定义了,A 需要自己重写cmp函数。 next_perm</description>
    </item>
    
    <item>
      <title>poj 1703  Find them, Catch them (并查集)</title>
      <link>https://111qqz.github.io/2015/04/poj1703/</link>
      <pubDate>Fri, 17 Apr 2015 15:52:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2015/04/poj1703/</guid>
      <description>http://poj.org/problem?id=1703 种类冰茶几&amp;hellip;看到还有一种算是拓展的交加权冰茶几？ 看到有做法是在开一个数组。。。记录是哪一组&amp;hellip;. 但是因为只有两组</description>
    </item>
    
  </channel>
</rss>