<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>grundy on 111qqz's blog</title><link>https://111qqz.com/tags/grundy/</link><description>Recent content in grundy on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Tue, 22 Dec 2015 06:36:56 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/grundy/index.xml" rel="self" type="application/rss+xml"/><item><title>codeforces #334 div 2 E. Lieges of Legendre</title><link>https://111qqz.com/2015/12/cf603e/</link><pubDate>Tue, 22 Dec 2015 06:36:56 +0000</pubDate><guid>https://111qqz.com/2015/12/cf603e/</guid><description>
http://codeforces.com/contest/604/problem/E 题意：有两个人做游戏，游戏规则如下： 有n堆石子，每次可以对一堆石子进行操作，如果当前石子是偶数，那么可以选择将这2*x个石子分成k堆石子数为x的石子堆，还有一种没有前提的操作是取走当前堆的一个石子，问先手赢还是后手赢，先手和后手都足够聪明的情况下。 思路：博弈论。。不会做。。第一次接触sg函数。。转载一篇题解： http://m.blog.csdn.net/blog/qq_24451605/50154973
/* *********************************************** Author :111qqz Created Time :2015年12月22日 星期二 14时29分05秒 File Name :code/cf/#334/E.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; int n,k,res; int pre[5]={0,1,0,1,2}; int grundy( int a) { if (k%2==0) { if (a==1) return 1; if (a==2) return 2; return (a%2)^1; } else { if (a&amp;lt;5) return pre[a]; if (a%2==1) return 0; return (grundy(a/2)==1?</description></item></channel></rss>