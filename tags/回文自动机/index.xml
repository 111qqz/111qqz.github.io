<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>回文自动机 on 111qqz的小窝</title><link>https://111qqz.com/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/</link><description>Recent content in 回文自动机 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Tue, 14 Nov 2017 12:45:08 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>2014 Xi'An ACM-ICPC Regional Contest Problem G. The Problem to Slow Down You (回文自动机(模块化写法))</title><link>https://111qqz.com/2017/11/2014-xian-acm-icpc-regional-contest-problem-g/</link><pubDate>Tue, 14 Nov 2017 12:45:08 +0000</pubDate><guid>https://111qqz.com/2017/11/2014-xian-acm-icpc-regional-contest-problem-g/</guid><description>
http://codeforces.com/gym/100548
题意： 切换面板：标签 标签 添加新标签 ￼ 回文自动机、 给2个字符串，问2个字符串中，相等并且都是回文串的对数。
思路： 构建2个PAM.然后奇偶起点分别跑dfs即可。
PAM写成了模块化的形式orz
/* *********************************************** Author :111qqz Created Time :2017年11月14日 星期二 20时22分15秒 File Name :G.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=2E5+7; struct PAM { struct state { int fail,cnt,len; int nxt[26]; }st[N]; char S[N],RS[N]; int n,now,sz; void init() { ms(st,0); st[0].</description></item><item><title>bzoj 2160: 拉拉队排练 (回文自动机+快速幂)</title><link>https://111qqz.com/2017/11/bzoj-2160/</link><pubDate>Tue, 14 Nov 2017 11:50:39 +0000</pubDate><guid>https://111qqz.com/2017/11/bzoj-2160/</guid><description>
2160: 拉拉队排练 Time Limit: 10 Sec Memory Limit: 259 MB Submit: 1938 Solved: 743 [Submit][Status][Discuss]
Description 艾利斯顿商学院篮球队要参加一年一度的市篮球比赛了。拉拉队是篮球比赛的一个看点，好的拉拉队往往能帮助球队增加士气，赢得最终的比赛。所以作为拉拉队队长的楚雨荨同学知道，帮助篮球队训练好拉拉队有多么的重要。拉拉队的选拔工作已经结束，在雨荨和校长的挑选下，n位集优秀的身材、舞技于一体的美女从众多报名的女生中脱颖而出。这些女生将随着篮球队的小伙子们一起，和对手抗衡，为艾利斯顿篮球队加油助威。一个阳光明媚的早晨，雨荨带领拉拉队的队员们开始了排练。n个女生从左到右排成一行，每个人手中都举了一个写有26个小写字母中的某一个的牌子，在比赛的时候挥舞，为小伙子们呐喊、加油。雨荨发现，如果连续的一段女生，有奇数个，并且他们手中的牌子所写的字母，从左到右和从右到左读起来一样，那么这一段女生就被称作和谐小群体。现在雨荨想找出所有和谐小群体，并且按照女生的个数降序排序之后，前K个和谐小群体的女生个数的乘积是多少。由于答案可能很大，雨荨只要你告诉她，答案除以19930726的余数是多少就行了。
Input 输入为标准输入。第一行为两个正整数n和K，代表的东西在题目描述中已经叙述。接下来一行为n个字符，代表从左到右女生拿的牌子上写的字母。
Output 输出为标准输出。输出一个整数，代表题目描述中所写的乘积除以19930726的余数，如果总的和谐小群体个数小于K，输出一个整数-1。
Sample Input 5 3 ababa
Sample Output 45 【样例说明】 和谐小群体女生所拿牌子上写的字母从左到右按照女生个数降序排序后为ababa, aba, aba, bab, a, a, a, b, b，前三个长度的乘积为。
HINT 总共20个测试点，数据范围满足： 思路： 直接PAM.
需要注意的是，PAM构建之后，再按照逆拓扑序更新一遍得到的cnt才是实际的cnt
需要注意的是，PAM构建之后，再按照逆拓扑序更新一遍得到的cnt才是实际的cnt
需要注意的是，PAM构建之后，再按照逆拓扑序更新一遍得到的cnt才是实际的cnt
/* *********************************************** Author :111qqz Created Time :2017年11月14日 星期二 19时05分14秒 File Name :2160.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL mod = 19930726; const int N=1E6+7; LL k; int n; char S[N]; struct PAM { int fail; LL cnt,len; int nxt[26]; }st[N]; int now,sz; int Right[N],Left[N]; void pam_init() { ms(st,0); st[0].</description></item><item><title>ural 1960. Palindromes and Super Abilities (回文自动机，统计本质不同的回文串个数)</title><link>https://111qqz.com/2017/11/ural-1960/</link><pubDate>Mon, 13 Nov 2017 18:14:23 +0000</pubDate><guid>https://111qqz.com/2017/11/ural-1960/</guid><description>
http://acm.timus.ru/problem.aspx?space=1&amp;amp;num=1960
题意： 给一个字符串S,依次输出字符串S的所有前缀中，本质不同的回文串个数。
思路： 考虑构建PAM是一个增量算法...所以一边构建一边输出答案就好了。。。
某一时刻本质不同的回文串个数就是sz-1 (标号是从0..sz，一共sz+1个，减去2个根，所以是sz-1)
/* *********************************************** Author :111qqz Created Time :2017年11月14日 星期二 01时01分03秒 File Name :2565.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; struct PAM { int fail,cnt,len; int nxt[26]; }st[N]; char S[N],RS[N]; int n,now,sz; void pam_init() { ms(st,0); st[0].</description></item><item><title>BZOJ 2565: 最长双回文串 (回文自动机)</title><link>https://111qqz.com/2017/11/bzoj-2565/</link><pubDate>Mon, 13 Nov 2017 18:02:49 +0000</pubDate><guid>https://111qqz.com/2017/11/bzoj-2565/</guid><description>
Description 顺序和逆序读起来完全一样的串叫做回文串。比如acbca是回文串，而abc不是（abc的顺序为“abc”，逆序为“cba”，不相同）。 输入长度为n的串S，求S的最长双回文子串T,即可将T分为两部分X，Y，（|X|,|Y|≥1）且X和Y都是回文串。
Input 一行由小写英文字母组成的字符串S。
Output 一行一个整数，表示最长双回文子串的长度。
Sample Input baacaabbacabb
Sample Output 12
HINT 样例说明
从第二个字符开始的字符串aacaabbacabb可分为aacaa与bbacabb两部分，且两者都是回文串。
对于100%的数据，2≤|S|≤10^5
2015.4.25新加数据一组
Source 2012国家集训队Round 1 day2
思路： 我们考虑增量构建PAM的时候
构建到pos,当前的状态的len其实就是到以pos位置结尾的最长回文串的长度。
那么我们只需要正着做一遍，再倒着做一遍，然后枚举断点就行了。
时间复杂度O(n)
/* *********************************************** Author :111qqz Created Time :2017年11月14日 星期二 01时01分03秒 File Name :2565.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; struct PAM { int fail,cnt,len; int nxt[26]; }st[N]; char S[N],RS[N]; int n,now,sz; int Right[N],Left[N]; //right[i]表示以i结尾的最长回文串的长度 //left[i]表示以i开头的最长回文串的长度,需要反转母串构建PAM求得 void pam_init() { ms(st,0); st[0].</description></item><item><title>hdu 3948 | 2011 Multi-University Training Contest 11 The Number of Palindromes (回文自动机模板题)</title><link>https://111qqz.com/2017/11/hdu-3948/</link><pubDate>Mon, 13 Nov 2017 15:56:30 +0000</pubDate><guid>https://111qqz.com/2017/11/hdu-3948/</guid><description>
http://acm.hdu.edu.cn/showproblem.php?pid=3948
题意： 给一个字符串，问本质不同的回文子串的个数。
思路： 考虑回文自动机。
我们知道，对于PAM上的一个节点，表示的就是一个本质不同的回文串。
UPDATE: 弃用了这种代码风格,新的写法见下面。
那么sz-2就是本质不同的回文子串个数了orz(减掉2是因为PAM有2个根，这2个根不表示回文串）
#include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; typedef long long LL; #define ri register int using namespace std; #define MAXALP 30 #define ms(a,x) memset(a,x,sizeof(a)) const int N = 3E5+7; struct PAM { int cnt,len,fail; int nxt[MAXALP]; }st[N]; int n, m, sz , last, cur; char s[N]; inline int new_node(int x) { st[sz].len = x; st[sz].cnt = 0; ms(st[sz].nxt,0); return sz++; } inline int get_fail(int x, int n) { while(s[n-st[x].</description></item><item><title>UOJ #103. 【APIO2014】Palindromes (回文自动机模板题)</title><link>https://111qqz.com/2017/11/uoj-103/</link><pubDate>Mon, 13 Nov 2017 15:25:57 +0000</pubDate><guid>https://111qqz.com/2017/11/uoj-103/</guid><description>
http://uoj.ac/problem/103
题意： 给你一个由小写拉丁字母组成的字符串 s。我们定义 s 的一个子串的存在值为这个子串在 s 中出现的次数乘以这个子串的长度。
对于给你的这个字符串 s，求所有回文子串中的最大存在值。
思路： 回文自动机，也叫回文树，但其实并不是树2333,所以以后还是称为回文自动机，缩写为PAM
学会了(?)SAM之后再看PAM真是简单得一逼。
学习笔记之后补。
对于这道题，PAM中一个状态的cnt表示的该状态所表示的回文串出现的次数
len表示的是该状态所表示的回文串的长度
UPDATE:
下面的代码风格太丑了，打算弃用。
更新的代码风格见最后
#include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;algorithm&amp;gt; typedef long long LL; #define ri register int using namespace std; #define MAXALP 30 #define ms(a,x) memset(a,x,sizeof(a)) const int N = 3E5+7; struct PAM { int cnt,len,fail; int nxt[MAXALP]; }st[N]; int n, m, sz , last, cur; char s[N]; inline int new_node(int x) { st[sz].</description></item><item><title>【施工中】回文自动机学习笔记</title><link>https://111qqz.com/2016/09/</link><pubDate>Thu, 22 Sep 2016 09:36:22 +0000</pubDate><guid>https://111qqz.com/2016/09/</guid><description>
是14年才被提出来的算法... 先%一下该算法的作者：作者的codeforces页
接下来，老规矩，放一波资料：
参考博客1 codeforces上的讲解
20171115 update:
emmmm，这篇是学习笔记是１６年９月写的。。。。一转眼13个月过去了啊。。
回文树，也叫回文自动机，简称PAM
学了SAM之后PAM简直是傻逼算法...
该算法时间和空间复杂度都是O(n)
这样的复杂度基于以下结论：
长度为n的字符串的本质不同的回文串的数目不超过n
因此状态数开到和字符串长度一样就可以了orz
len表示某个状态所表示的回文串的长度
cnt表示某个状态所表示的回文串的数量
构建PAM的算法仍然是增量算法，在某一时刻，本质不同的回文串的数量是sz-1 (sz标号从０开始，出去标号为０和标号为１的２个根)
唯一需要特别注意的是
在构建完PAM之后，沿着回文链（类比后缀链)从底向上跑一遍得到的cnt，才是真正的cnt
在构建完PAM之后，沿着回文链（类比后缀链)从底向上跑一遍得到的cnt，才是真正的cnt
在构建完PAM之后，沿着回文链（类比后缀链)从底向上跑一遍得到的cnt，才是真正的cnt
我的模板：
/* *********************************************** Author :111qqz Created Time :2017年11月15日 星期三 20时31分58秒 File Name :PAM.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct PAM { //cnt表示某个节点的回文串的数量 //len表示的是该状态所表示的回文串的长度 //PAM有２个根，分别为状态０和状态１ //初２个根外，其余每个状态表示一个本质不同的回文串,总数为sz-1 struct state { int fail,cnt,len; int nxt[26]; }st[N]; char S[N],RS[N]; int n,now,sz; int Right[N];//Right[i]表示以i结尾的最长回文串的长度 int Left[N]; //Left[i]表示以i开头的最长回文串的长度.</description></item></channel></rss>