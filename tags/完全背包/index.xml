<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>完全背包 on Clarity</title><link>https://111qqz.com/tags/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/</link><description>Recent content in 完全背包 on Clarity</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Sun, 03 Apr 2016 11:53:05 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/index.xml" rel="self" type="application/rss+xml"/><item><title>BZOJ 1618: [Usaco2008 Nov]Buying Hay 购买干草 (完全背包)</title><link>https://111qqz.com/2016/04/bzoj-1618-usaco2008-novbuying-hay-/</link><pubDate>Sun, 03 Apr 2016 11:53:05 +0000</pubDate><guid>https://111qqz.com/2016/04/bzoj-1618-usaco2008-novbuying-hay-/</guid><description>
1618: [Usaco2008 Nov]Buying Hay 购买干草 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 906 Solved: 456 [Submit][Status][Discuss]
Description  约翰的干草库存已经告罄，他打算为奶牛们采购日(1≤日≤50000)磅干草．
 他知道N(1≤N≤100)个干草公司，现在用1到N给它们编号．第i个公司卖的干草包重量为Pi(1≤Pi≤5000)磅，需要的开销为Ci(l≤Ci≤5000)美元．每个干草公司的货源都十分充足，可以卖出无限多的干草包． 帮助约翰找到最小的开销来满足需要，即采购到至少H磅干草．
Input  第1行输入N和日，之后N行每行输入一个Pi和Ci．
Output  最小的开销．
Sample Input 2 15 3 2 5 3
Sample Output 9
FJ can buy three packages from the second supplier for a total cost of 9.
思路：完全背包。。。注意是买至少V,可以超过。我的做法是算了两倍，然后取最小值（V..2V)
/* *********************************************** Author :111qqz Created Time :2016年04月03日 星期日 19时40分29秒 File Name :code/bzoj/1618.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=105; int p[N],c[N]; int n; int V; int dp[1000005]; void solve (int val,int cost) { for ( int i = value ; i &amp;lt;= V ; i++) dp[i] = min(dp[i],dp[i-value]+cost); } int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>hdu 1114 - Piggy-Bank (完全背包)</title><link>https://111qqz.com/2015/04/hdu1114/</link><pubDate>Sun, 05 Apr 2015 15:14:00 +0000</pubDate><guid>https://111qqz.com/2015/04/hdu1114/</guid><description>
F - Piggy-Bank
**Time Limit:**1000MS **Memory Limit:**32768KB 64bit IO Format:%I64d &amp;amp; %I64u
Submit Status
Description
Before ACM can do anything, a budget must be prepared and the necessary financial support obtained. The main income for this action comes from Irreversibly Bound Money (IBM). The idea behind is simple. Whenever some ACM member has any small money, he takes all the coins and throws them into a piggy-bank. You know that this process is irreversible, the coins cannot be removed without breaking the pig.</description></item></channel></rss>