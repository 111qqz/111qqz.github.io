<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>g++ on Clarity</title><link>https://111qqz.com/tags/g++/</link><description>Recent content in g++ on Clarity</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Tue, 16 May 2017 06:40:03 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/g++/index.xml" rel="self" type="application/rss+xml"/><item><title>g++ 编译多个源文件（转载）</title><link>https://111qqz.com/2017/05/g++-compile-multi-file/</link><pubDate>Tue, 16 May 2017 06:40:03 +0000</pubDate><guid>https://111qqz.com/2017/05/g++-compile-multi-file/</guid><description>
参考资料
一. 常用编译命令选项 假设源程序文件名为test.c。
无选项编译链接 用法：#gcc test.c 作用：将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。
选项 -o 用法：#gcc test.c -o test 作用：将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。
选项 -E 用法：#gcc -E test.c -o test.i 作用：将test.c预处理输出test.i文件。
选项 -S 用法：#gcc -S test.i 作用：将预处理输出文件test.i汇编成test.s文件。
选项 -c 用法：#gcc -c test.s 作用：将汇编输出文件test.s编译输出test.o文件。
无选项链接 用法：#gcc test.o -o test 作用：将编译输出文件test.o链接成最终可执行文件test。
选项-O 用法：#gcc -O1 test.c -o test 作用：使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长。
二. 多源文件的编译方法
如果有多个源文件，基本上有两种编译方法： [假设有两个源文件为test.c和testfun.c]
多个文件一起编译 **用法：#gcc testfun.</description></item></channel></rss>