<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>栈 on 111qqz's blog</title><link>https://111qqz.com/tags/%E6%A0%88/</link><description>Recent content in 栈 on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Sun, 07 Aug 2016 17:29:31 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E6%A0%88/index.xml" rel="self" type="application/rss+xml"/><item><title>whust 2016 #1 H - Pair: normal and paranormal</title><link>https://111qqz.com/2016/08/whust-2016-1-h-pair-normal-and-paranormal/</link><pubDate>Sun, 07 Aug 2016 17:29:31 +0000</pubDate><guid>https://111qqz.com/2016/08/whust-2016-1-h-pair-normal-and-paranormal/</guid><description>
题目链接
其实就是括号匹配的模型。。用栈即可。。被我写挂好几发。。该死该死。。。
/* *********************************************** Author :111qqz Created Time :2016年08月07日 星期日 17时34分13秒 File Name :code/whust2016/#1/HH.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;deque&amp;gt; #include &amp;lt;ctime&amp;gt; #include &amp;lt;cctype&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E4+7; char st[N]; int s[N]; int n; int plow[N]; int pup[N]; int ans[N]; stack&amp;lt;int&amp;gt;stk; bool ok(int x, int y) { // cout&amp;lt;&amp;lt;&amp;quot;x:&amp;quot;&amp;lt;&amp;lt;x&amp;lt;&amp;lt;&amp;quot; y:&amp;quot;&amp;lt;&amp;lt;y&amp;lt;&amp;lt;endl; if (plow[x]&amp;gt;0&amp;amp;&amp;amp;pup[y]&amp;gt;0) { ans[pup[y]] = plow[x]; return true; } if (plow[y]&amp;gt;0&amp;amp;&amp;amp;pup[x]&amp;gt;0) { ans[pup[x]] = plow[y]; return true; } return false; } int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item></channel></rss>