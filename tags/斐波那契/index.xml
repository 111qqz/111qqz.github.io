<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>斐波那契 on 111qqz的小窝</title><link>http://example.org/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/</link><description>Recent content in 斐波那契 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 13 Oct 2017 12:23:49 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91/index.xml" rel="self" type="application/rss+xml"/><item><title>hdu 4794 Arnold (二次剩余，斐波那契循环节)</title><link>http://example.org/2017/10/hdu-4794/</link><pubDate>Fri, 13 Oct 2017 12:23:49 +0000</pubDate><guid>http://example.org/2017/10/hdu-4794/</guid><description>题意： 给定一个 N∗N(N≤4e9) 的矩阵，现在经过这样一个变换：将 (x,y) 变为 ((x+y)%N,(x+2×y)%N)(0≤x&amp;lt;N,0≤y&amp;lt;N) 现在求经过多少次这样的变换之后在回到 N∗N 的原始矩阵。
思路： 在模n的剩余系下可以写成(fib(n)x+fib(n+1)y,fib(n+1)x+fib(n+2)y)的形式fib(n)表示Fibonacci数列的第n项
所以就成了斐波那契数列循环节。。经典题。注意会爆long long,要用ULL
又写了遍板子，去年的东西都忘得差不多了orz
/* *********************************************** Author :111qqz File Name :code/hdu/4794.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef unsigned long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } void pr() { for ( int i = 0 ; i &amp;lt; 2 ; i++) for ( int j = 0 ; j &amp;lt; 2 ; j++) printf(&amp;quot;%lld%c&amp;quot;,mat[i][j],j==1?</description></item><item><title>acdream oj 1124 喵喵的遗憾 (斐波那契数列循环节)</title><link>http://example.org/2016/11/acdream-oj-1124-/</link><pubDate>Thu, 03 Nov 2016 00:39:54 +0000</pubDate><guid>http://example.org/2016/11/acdream-oj-1124-/</guid><description>题目链接
题意：
F0 = 1 , F1 = 1 , F2 = 2 , Fn = Fn-1+Fn-2
求：
FFFn Mod P
( 也就是 F[ F[ F[n] ] ] % P )
思路：原来这是适牛出的题2333.
需要注意的是p可能为1，因此n==0或者1的时候，特判要输出1%p而不是1.
其他的没了。就是求斐波那契数列循环节的经典做法。
/* *********************************************** Author :111qqz Created Time :Thu 03 Nov 2016 08:09:26 AM CST File Name :1124.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>hdu 3978 Evil teacher's Final Problem (斐波那契数列的循环节)</title><link>http://example.org/2016/11/hdu-3978/</link><pubDate>Wed, 02 Nov 2016 10:08:16 +0000</pubDate><guid>http://example.org/2016/11/hdu-3978/</guid><description>题意：now he let you calculate G(n,k) .Here G(n,0) = f(n) , G(n,i) = f( G(n,i-1) ) (k &amp;gt;= i &amp;gt;= 1).其中f是斐波那契数列。
思路：其实就是hdu 4291的加强版：hdu 4291 解题报告
开一个1E4的数组存一下每一层的循环节就好了。
http://vjudge.net/contest/139429#overview 告一段落，完结撒花！
/* *********************************************** Author :111qqz Created Time :Tue 01 Nov 2016 08:31:22 PM CST File Name :code/hdu/3978.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>hdu 4291 A Short problem (矩阵快速幂+广义斐波那契循环节||暴力找循环节)</title><link>http://example.org/2016/10/hdu-4291/</link><pubDate>Mon, 31 Oct 2016 08:59:53 +0000</pubDate><guid>http://example.org/2016/10/hdu-4291/</guid><description>题目链接
题意：
Given n (1 &amp;lt;= n &amp;lt;= 1018), You should solve for
g(g(g(n))) mod 109 + 7 where
g(n) = 3g(n - 1) + g(n - 2)
g(1) = 1
g(0) = 0思路：找循环节。首先由于模数固定，可以暴力一下找到循环节。
得到1E9+7的循环节是222222224,222222224的循环节是183120.
然后三次矩阵快速幂就行了。
需要注意每次都要判断那一层的n是否为0和1。
暴力解法：
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 02:47:01 PM CST File Name :code/hdu/4291.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL loop0 = 1E9+7; const LL loop1=222222224,loop2=183120; //暴力得到每一层的循环节。 /* LL find_loop(LL mod) { LL a,b,c; a = 0 ; b = 1 ; for ( int i = 2 ; ; i++) { c = (a+3*b%mod)% mod; a = b; b = c; // cout&amp;lt;&amp;lt;&amp;quot;a:&amp;quot;&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;quot; b:&amp;quot;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;endl; if (a==0&amp;amp;&amp;amp;b==1) { return i-1; // i的时候得到第i项，判断循环的时候是判断g[i-1]==g[0]&amp;amp;&amp;amp;g[i]==g[1]，所以循环节长度是i-1; } } }*/ LL n; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } void out() { cout&amp;lt;&amp;lt;mat[0][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[0][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;mat[1][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[1][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;endl; } }M,M1; Mat mul(Mat a,Mat b,LL MOD) { Mat c; c.</description></item><item><title>hdu 3977 Evil teacher (斐波那契数列循环节)</title><link>http://example.org/2016/10/hdu-3977/</link><pubDate>Sun, 30 Oct 2016 21:01:37 +0000</pubDate><guid>http://example.org/2016/10/hdu-3977/</guid><description>题目链接
题意：f[0] = 1,f[1] = 1,f[i] = f[i-1] + f[i-2] (i&amp;gt;=2)，问最小的m满足f[n]%p==f[n+m]%p
思路：求斐波那契数列循环节。
参考了Acdreamer的博客_Fib数模n的循环节
（1）把n素因子分解，即（2）分别计算Fib数模每个的循环节长度，假设长度分别是（3）那么Fib模n的循环节长度 从上面三个步骤看来，貌似最困难的是第二步，那么我们如何求Fib模的循环节长度呢？
 这里有一个优美的定理：Fib数模的最小循环节长度等于，其中表示Fib数模素数的最小循环节长度。可以看出我们现在最重要的就是求 对于求我们利用如下定理：
 如果5是模的二次剩余，那么循环节的的长度是的因子，否则，循环节的长度是的因子。
顺便说一句，对于小于等于5的素数，我们直接特殊判断，loop(2)=3,loop(3)=8,loop(5)=20。
那么我们可以先求出所有的因子，然后用矩阵快速幂来一个一个判断，这样时间复杂度不会很大。
这道题是模板题。博客中的模板代码很好理解&amp;hellip;
换成了自己比较熟悉的矩阵构造方式，以及代码风格。
需要注意的是下标是从0开始的，当验证k是否为循环节的时候，应该验证f[k]和f[k+1]
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 03:54:15 AM CST File Name :code/hdu/3977.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL P; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>BZOJ 4547: Hdu5171 小奇的集合 (矩阵快速幂)</title><link>http://example.org/2016/10/bzoj-4547-hdu5171-/</link><pubDate>Wed, 26 Oct 2016 01:09:38 +0000</pubDate><guid>http://example.org/2016/10/bzoj-4547-hdu5171-/</guid><description>4547: Hdu5171 小奇的集合 Time Limit: 2 Sec Memory Limit: 256 MB Submit: 263 Solved: 113 [Submit][Status][Discuss]
Description  有一个大小为n的可重集S，小奇每次操作可以加入一个数a+b(a,b均属于S)，求k次操作后它可获得的S的和的最大
值。（数据保证这个值为非负数）
Input 第一行有两个整数n,k表示初始元素数量和操作数，第二行包含n个整数表示初始时可重集的元素。
对于100%的数据，有 n&amp;lt;=10^5，k&amp;lt;=10^9，|ai|&amp;lt;=10^5
Output 输出一个整数，表示和的最大值。答案对10000007取模。
Sample Input 2 2 3 6
Sample Output 33
HINT Source By Hzwer
思路：同hdu 5171的区别在于，a可能为负数。
同样是设a0为次大值，a1为最大值。
根据a0,a1的正负分类讨论。
如果a1&amp;lt;0（此时a0一定也小于0）那么每次操作都是a0+a1,因为越加越小。
如果a0&amp;lt;0，需要计算需要几次运算，使得a0&amp;gt;=0。设需要num次。
原因是，类斐波那契数列的性质可以对于正数，也可以对于负数，但是如果有正数有负数，性质是不满足的。
因此如果num&amp;gt;k，说明一直都是负数，直接运算即可，如果num&amp;lt;=k，就需要先把负数部分用等差数列的方法处理掉。
然后再用矩阵快速幂的方法计算剩下的k-num次。
/* *********************************************** Author :111qqz Created Time :Tue 25 Oct 2016 07:00:23 PM CST File Name :code/bzoj/4547.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL mod = 1E7+7; const int N=1E5+7; int n,k; LL a[N]; LL a0,a1; LL sum; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat operator*(Mat a,Mat b) { Mat res; res.</description></item><item><title>hdu 5171 GTY's birthday gift (矩阵快速幂)</title><link>http://example.org/2016/10/hdu-5171-gtys-birthday-gift-/</link><pubDate>Tue, 25 Oct 2016 10:56:10 +0000</pubDate><guid>http://example.org/2016/10/hdu-5171-gtys-birthday-gift-/</guid><description>题目链接
题意：给出n,k，以及n个正数，把n个数放在一个集合里，进行k次操作，每次操作取最大的数和次大的数放进集合。问k次操作结束后，集合中所有数的和。
思路：假设初始时刻，次大和最大分别为a0,a1，那么得到的就是一个类斐波那契数列。初始为a0,a1,fn = fn-1 + fn
最后求和。
利用这个性质。。。
我们直接构造完矩阵。。。求出F(n+2)即可。。
需要注意。。。矩阵中每一项是小于1E7+7的。。。矩乘的时候会爆int&amp;hellip;
所以mat要用LL存。。我好傻啊。。。
/* *********************************************** Author :111qqz Created Time :Thu 20 Oct 2016 10:40:39 AM CST File Name :code/hdu/5171.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N =1E5+7; const LL mod = 1E7+7; int n; LL k; LL a[N]; LL sum; LL a0,a1; struct Mat { LL mat[3][3]; void clear() { ms(mat,0); } Mat operator*(const Mat &amp;amp;b)const { Mat ans; ans.</description></item></channel></rss>