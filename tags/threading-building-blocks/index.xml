<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Threading Building Blocks on 111qqz的小窝</title><link>https://111qqz.com/tags/threading-building-blocks/</link><description>Recent content in Threading Building Blocks on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Wed, 18 Jul 2018 06:57:38 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/threading-building-blocks/index.xml" rel="self" type="application/rss+xml"/><item><title>intel tbb 学习笔记</title><link>https://111qqz.com/2018/07/intel-tbb-notes/</link><pubDate>Wed, 18 Jul 2018 06:57:38 +0000</pubDate><guid>https://111qqz.com/2018/07/intel-tbb-notes/</guid><description>
tbb是**Threading Building Blocks library的缩写,**是一个为开发者提供并行解决方案的库.
先放个文档https://www.threadingbuildingblocks.org/intel-tbb-tutorial
再放一个代码示例:
/* *********************************************** Author :111qqz mail: renkuanze@sensetime.com Created Time :2018年07月18日 星期三 14时20分54秒 File Name :parallel_for.cpp ************************************************ */ #include &amp;lt;iostream&amp;gt; #include &amp;quot;tbb/tbb.h&amp;quot; #include &amp;lt;chrono&amp;gt; using namespace std; using namespace tbb; const int N=1E9+7; float a[N+5]; void Foo(float &amp;amp;x) { x -= 100; } void SerialApplyFoo( float a[], size_t n ) { for( size_t i=0; i!=n; ++i ) Foo(a[i]); } class ApplyFoo { float *const my_a; public: void operator()(const blocked_range&amp;lt;size_t&amp;gt; &amp;amp;r) const { float *a = my_a; for (size_t i = r.</description></item></channel></rss>