<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lucas定理 on 111qqz的小窝</title><link>https://111qqz.com/tags/lucas%E5%AE%9A%E7%90%86/</link><description>Recent content in lucas定理 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Thu, 03 Mar 2016 11:50:32 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/lucas%E5%AE%9A%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>hdu 3929 Big Coefficients (递归形式的容斥原理+lucas定理的结论)</title><link>https://111qqz.com/2016/03/hdu3929/</link><pubDate>Thu, 03 Mar 2016 11:50:32 +0000</pubDate><guid>https://111qqz.com/2016/03/hdu3929/</guid><description>
题意：F(x) = (1+x)^a1 + (1+x)^a2 + … + (1+x)^am，求系数是奇数的项的个数。 思路：解题报告 涉及到的由lucas定理得到的推论的证明lucas定理证明 以及这篇理解里有递归形式的容斥定理的一般写法。。递归形式的容斥定理
dfs(int beg,set S,int sym) { ans+=num(S)*sym; for(int i=beg;i&amp;lt;=n;i++) dfs(i,S∩A[i],sym*-1); } for(int i=1;i&amp;lt;=n;i++) dfs(i,A[i],1); 第一次接触递归形式的容斥定理...还不是特别理解，据说要比循环的写法少一层msk(应该是少一个1&amp;lt;/* *********************************************** Author :111qqz Created Time :2016年03月03日 星期四 18时55分21秒 File Name :code/hdu/3929.cpp ************************************************ */
#include #include #include #include #include #include #include #include #include #include #include #include #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair</description></item><item><title>codeforces 451E Devu and Flowers (指数型母函数)</title><link>https://111qqz.com/2016/03/cf451e/</link><pubDate>Wed, 02 Mar 2016 13:41:51 +0000</pubDate><guid>https://111qqz.com/2016/03/cf451e/</guid><description>
http://codeforces.com/problemset/problem/451/E 题意;有n个花坛，要选s支花，每个花坛有f[i]支花，同一个花坛的花颜色相同，不同花坛的花颜色不同，问说可以有多少种组合。 思路：典型的母函数...然而s有点大，根据泰勒展开什么的...先转一下官方题解。
The number of ways to choose _N_ items out of _R_ groups where each item in a group is identical is equal to the number of integral solutions to _x_1 + _x_2 + _x_3..._x__R_ = _N_, where 0 ≤ _x__i_ ≤ _L__i_, where _L__i_ is the number of items in _i__th_ group. Number of integral solutions are coefficient of _x__N_ in [Product of (1 + _x_ + _x_ * _x_ + .</description></item><item><title>codeforces 560 E. Gerald and Giant Chess (dp+lucas定理,求大组合数 mod p,p为质数)</title><link>https://111qqz.com/2015/08/codeforces560e-geraldandgiantchessdplucasmodpp/</link><pubDate>Tue, 18 Aug 2015 11:36:00 +0000</pubDate><guid>https://111qqz.com/2015/08/codeforces560e-geraldandgiantchessdplucasmodpp/</guid><description>
dp方程想错了.果然还是欠练啊.
如果我们不考虑坏点,那么从 (0,0)到(x,y)的方案数是c(x+y,x)或者c(x+y,y)
因为有坏点的存在,我们可以逆向思维,先求出总数,然后减去那些由于坏点的影响不能走的方案数.
由于存在黑点i(x,y)，从左上到该黑点的方案数sum[i] = C(x+y,x)，其中如果在黑点i的左上还有黑点j(u,v)，那么应该减去sum[j]*C(x-u+y-v)(y-u)
然后可以把坏点按照x为第一关键字,y为第二关键字排序.
从左上出发,往右下扫黑点.
还有一个考点是大组合数的求法
因为太大,递推也不行.
可以用欧拉公式求逆元的方法求解.
或者是lucas定理.
记得拿到骑士(1,1)到(n,m)的题和这道题很像.
也是从坐上到右下,中间有些坏点,不过骑士的走法并不是向下或者想有1步,而是向右p步,向下q步,或者向又q步,向下p步.
而且那道题的n和m是 10^9的数量级...
那道题的话就只能用lucas定理了貌似
这道题算是那道题的弱化版本,在此orz zhangk,果然厉害
所以我还是决定写lucas定理的解法
lucas定理适用于 求C(n,m)%p,p为素数 且n,m很大的情况.
引用一段题解:
题意，给一个n * m 的网格，其只有一些点是坏的不能走，要求从0，0点起到n,m的总方案数。 设dp[i] 表示到达第i个坏点且不经过其他坏点的总方案数。增加一个点(n-1,m-1),则dp[k]即为答案。 壮态转移方程 dp[i] = C[x[i]+y[i],x[i]) - sum(dp[j] * C(x[i] - x[j] + y[i] - y[j],x[i] - x[j]),j表示，所有在i之前的坏点，由于这里的dp[i]都是不经过别的坏点，不会有重复的路径，所以减去以前的坏点到达i的路径就是答案。 先排序，就可以得到每个点的先后顺序，这样在更新状态的时候，可以从小到大枚举。总的复杂度为 o(k * k); 现在剩下的问题 就是要求c(n,m),由于n,m很大，一般求组合数的方法是n * m，这样复杂度太高，即使用递推o(n)的复杂度，也是太高的。这里引入了 定理Lucas，这个就是专门求大组合数的一种方法。 Lucas(n,m,p)=c(n%p,m%p)*Lucas(n/p,m/p,p) 设 aa = n % p,bb = m % p;这里可以看出来把n,m很大的数转化了相对比较小的aa,bb, 这个公式把n - n/p m - m/p,这样可以递归解决。求c(aa,bb)就可以直接用组合公式aa!</description></item></channel></rss>