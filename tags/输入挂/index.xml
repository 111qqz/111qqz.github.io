<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>输入挂 on 111qqz的小窝</title><link>https://111qqz.com/tags/%E8%BE%93%E5%85%A5%E6%8C%82/</link><description>Recent content in 输入挂 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Tue, 10 Oct 2017 06:58:32 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E8%BE%93%E5%85%A5%E6%8C%82/index.xml" rel="self" type="application/rss+xml"/><item><title>BZOJ 2648: SJY摆棋子 (动态kd-tree,插入，曼哈顿距离,输入挂)</title><link>https://111qqz.com/2017/10/bzoj2648/</link><pubDate>Tue, 10 Oct 2017 06:58:32 +0000</pubDate><guid>https://111qqz.com/2017/10/bzoj2648/</guid><description>
Description 这天，SJY显得无聊。在家自己玩。在一个棋盘上，有N个黑色棋子。他每次要么放到棋盘上一个黑色棋子，要么放上一个白色棋子，如果是白色棋子，他会找出距离这个白色棋子最近的黑色棋子。此处的距离是 曼哈顿距离 即(|x1-x2|+|y1-y2|) 。现在给出N&amp;lt;=500000个初始棋子。和M&amp;lt;=500000个操作。对于每个白色棋子，输出距离这个白色棋子最近的黑色棋子的距离。同一个格子可能有多个棋子。
Input 第一行两个数 N M
以后M行，每行3个数 t x y
如果t=1 那么放下一个黑色棋子
如果t=2 那么放下一个白色棋子
Output 对于每个T=2 输出一个最小距离
Sample Input 2 3 1 1 2 3 2 1 2 1 3 3 2 4 2
Sample Output 1 2
其实就是BZOJ2716 的双倍经验题
写出来是因为，这道题要加输入挂才可以过orz
/* *********************************************** Author :111qqz Created Time :2017年10月10日 星期二 13时35分26秒 File Name :2716.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL linf = 1LL&amp;lt;&amp;lt;60; const int N=5E5+7; int n,m; int idx,rt; LL ans; LL getLL() { LL k = 0, fh = 1; char c = getchar(); for(; c &amp;lt; '0' || c &amp;gt; '9'; c = getchar()) if (c == '-') fh = -1; for(; c &amp;gt;= '0' &amp;amp;&amp;amp; c &amp;lt;= '9'; c = getchar()) k = k * 10 + c - '0'; return k * fh; } struct KDT { LL coor[2]; LL mn[2],mx[2]; //需要维护四个方向的最值，是因为是曼哈顿距离。 int son[2]; bool operator &amp;lt; (const KDT &amp;amp;u)const{ return coor[idx]&amp;lt;u.</description></item><item><title>poj 1964 City Game(单调栈，输入挂)</title><link>https://111qqz.com/2016/08/poj-1964/</link><pubDate>Wed, 03 Aug 2016 10:42:29 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-1964/</guid><description>
poj 1964
题意：n*m的maze,由'R'和‘F’组成，现在要求找到面积最大的矩形，使得矩形中所有格子都是'F'。
思路：单调栈...一开始神tm tle....复杂度没问题啊。。。
结果看到有人说这题由于数据量比较大。。。scanf会超时。。。所以要用输入挂。。。。。getchar什么的。。。
poj竟然也卡读入。。。人性呢。。。。
改了输出以后再交wa了。
发现想错了，我是写了从(i,j)到两个方向能到的最大距离。。但是这样写有些点上的情况是没有考虑到的。。比如如果(i+1,j+1)上的点是'R'，实际上是不可以构成l*r的矩形的(l&amp;gt;=2&amp;amp;r&amp;gt;=2)。。。但是我这样做无法体现。
改了下，变成：
仍然对于每行做一次单调栈，预处理出点(i,j)能往右的最远距离a[i][j]。
然后观察一下。。。如果我把每一列分别看成x轴，那a[i][j]不就是矩形的高度了吗。。。
那我要求的不又变成了最大矩形面积了吗。。。
于是接下来对于每一列，做上下两个方向的单调栈得到（i,j）上下能延伸到的最远距离。
(i,j)点所在的矩形面积就是** (r[i][j]-l[i][j]+1)a[i][j];*
再交，A了
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 05时55分30秒 File Name :code/poj/1964.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E3+7; int n,m; char maze[N][N]; int row[N][N],col[N][N]; int a[N][N]; int l[N][N],r[N][N]; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item></channel></rss>