<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>哥德巴赫猜想 on 111qqz's blog</title><link>https://111qqz.com/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/</link><description>Recent content in 哥德巴赫猜想 on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Tue, 29 Nov 2016 11:16:28 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/index.xml" rel="self" type="application/rss+xml"/><item><title>codeforces #382 div2 D. Taxes(哥德巴赫猜想)</title><link>https://111qqz.com/2016/11/cf375d-2/</link><pubDate>Tue, 29 Nov 2016 11:16:28 +0000</pubDate><guid>https://111qqz.com/2016/11/cf375d-2/</guid><description>
题目链接
题意：一个人有n元前，他要交的税是n的最大因子（除n外)，现在这个投机倒把者想把前分成k部分(k为大于等于１的任意值）每部分不能为１，分别交税，问最少交多少税。
思路：要说因子小。。很容易想到素数。。。然后就很容易想到了维基百科_哥德巴赫猜想
内容是：任何一个大于２的偶数可以写成两个素数的和。
（虽然是一个猜想没有被证明。。。但是1E9这种级别正确性还是很显然的２３３３
那么任何大于２的偶数，答案就是２
奇数可以分成一个３和一个偶数，答案为３．
不过这可能还不够优，这也是这道题的两个trick所在：
如果该数本身为素数，那么不用分（k取１），答案为１
如果该数减去２为素数，那么答案为２．
/* *********************************************** Author :111qqz Created Time :2016年11月29日 星期二 11时36分56秒 File Name :code/cf/#382/D.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL n; bool prime( LL x) { for ( LL i = 2 ; i*i &amp;lt;= x ; i++) { if (x%i==0) return false; } return true; } LL solve( LL x) { if (prime(x)) return 1; if (x%2==0) return 2; if (x%2==1) { if (prime(x-2)) return 2; else return 3; } } int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item></channel></rss>