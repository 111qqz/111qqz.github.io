<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>prim on 111qqz的小窝</title><link>http://example.org/tags/prim/</link><description>Recent content in prim on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 13 Jul 2016 17:40:56 +0000</lastBuildDate><atom:link href="http://example.org/tags/prim/index.xml" rel="self" type="application/rss+xml"/><item><title>poj 1789 Truck History (mst,prim)</title><link>http://example.org/2016/07/poj-1789/</link><pubDate>Wed, 13 Jul 2016 17:40:56 +0000</pubDate><guid>http://example.org/2016/07/poj-1789/</guid><description>poj1789题目链接
题意：其实题目不难理解。。。直接按照定义去搞就行了。。。
思路：由于距离在分母上。。所以要quality最大。。。就是要分母最小。。。
然后由于题目中说每一种类型的type只能由其他一种派生出来。。。我们可以把这个派生关系看做一条边。。。把每种类型看成点。。
这样就构成了一棵树。。。先o(nn7)预处理出权值。。。然后最小生成树即可。。。
这种给了坐标距离作为权值的图一定是稠密图。。。图小用kruskal糊弄一下就过去了。。。图大的话还是乖乖的用prim吧。。。
然而仍然 TLE???wtf??
最后发现。。因为我习惯用string&amp;hellip;但是又怕卡cin&amp;hellip;所以做法是scanf读入字符数组然后再赋值给string..
然而这种操作不知为何神tm慢。。。。。（求指教）
以至于：
要知道。。。这题时限2s啊。。。为毛能差1s多。。。也就是说时间的瓶颈完全是在读入了orz&amp;hellip;
/* *********************************************** Author :111qqz Created Time :2016年07月14日 星期四 00时13分04秒 File Name :code/poj/1789.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=2E3+7; int n,m; int f[N]; int v[N]; char st[N][10]; //string st[N]; int matrix[N][N]; void init() { for ( int i = 0 ; i &amp;lt; n; i++) for ( int j = 0 ; j &amp;lt;n ; j++) matrix[i][j] = inf; } int getw(char * a,char * b) { int res = 0 ; for ( int i = 0 ; i &amp;lt; 7 ; i++) if (a[i]!</description></item></channel></rss>