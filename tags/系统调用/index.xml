<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系统调用 on 111qqz's blog</title><link>https://111qqz.com/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/</link><description>Recent content in 系统调用 on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Sat, 20 Oct 2018 11:06:56 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>golang 学习笔记</title><link>https://111qqz.com/2018/10/golang-notes/</link><pubDate>Sat, 20 Oct 2018 11:06:56 +0000</pubDate><guid>https://111qqz.com/2018/10/golang-notes/</guid><description>
先放资料,可能比较侧重于go在系统调用方面的内容.
这里不会记录详细的go的语法,只会记录学习的过程,踩到的坑,以及其他我认为值得记录的内容.
go的switch语句终于是人类思维的语句了...匹配中了不需要加break..
defer关键字可以延迟语句到上层函数退出时再执行,而且是会把延迟的语句压入栈,然后按照FILO的顺序执行...好像有点有意思?
参数列表..如果有多个变量的类型相同,只写一个类型关键字就行...
:=并不是pascal中的赋值符号(浪费感情...,而是简洁定义变量的语法,不能使用在函数以外.
感觉go中同时有一点C++和很多python的影子...
30分钟上手GO语言--基础语法
A Go Programmer’s Guide to Syscalls
视频笔记：Go 和 syscall - Liz Rice</description></item></channel></rss>