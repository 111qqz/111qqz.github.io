<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>矩阵 on 111qqz的小窝</title><link>http://example.org/tags/%E7%9F%A9%E9%98%B5/</link><description>Recent content in 矩阵 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 02 Oct 2017 02:24:09 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E7%9F%A9%E9%98%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>codeforces 385 E. Bear in the Field (先记录想法）</title><link>http://example.org/2017/10/codeforces-div2-385e/</link><pubDate>Mon, 02 Oct 2017 02:24:09 +0000</pubDate><guid>http://example.org/2017/10/codeforces-div2-385e/</guid><description>题目链接
题意： 有一只熊，初始在(sx,sy)处，如果当前的位置在(x,y)，那么下一秒会在((x+dx-1)%n+1,(y+dy-1)%n+1)处， dx[i] = k[i-1] + dx[i-1],dy[i]=k[i-1] + dy[i-1]，k表示的是某个点的花丛数目。
初始点(x,y)的花丛数为x+y,每经过一个时间，所有点的花丛数增加1.
所以，k[i] = x[i] + y[i] + i-1，现在问经过时间t后，熊的位置在哪里。也就是x[t],y[t]的值。
思路： 我们不妨先只考虑x方向的，因为y方向完全相同。
观察x[t]的式子， x[t] = (x[t-1] + dx[t-1] -1) % n +1。。这个%n之后+1简直蛋疼得一逼。。。
我们不妨构造_**g[t] = x[t]-1**_，这样原式子就变成了 _**g[t] = (g[t-1] + dx[t-1]) %n** _&amp;hellip;看起来爽了很多。。。
观察式子_**g[t] = (g[t-1] + dx[t-1]) % n**_，我们发现这是一个前缀和的形式。
根据在hdu4686解题报告 中提到的经验，对于求和的式子，我们只需要考虑每一项的构造法。
因此问题转化成构造矩阵dx[t]
dx[t] = k[t-1] + dx[t-1]
其中_**k[t] = x[t] + y[t] + t-1,**_我们写成gx[t]和gy[t]的形式
有**_k[t] = gx[t] + gy[t] + t + 1_**</description></item><item><title>UVA - 10518 How Many Calls? (构造矩阵，快速幂)</title><link>http://example.org/2017/10/uva-10518/</link><pubDate>Sun, 01 Oct 2017 11:10:16 +0000</pubDate><guid>http://example.org/2017/10/uva-10518/</guid><description>题目链接
题意： 求f[n] = f[n-1] + f[n-2] + 1，在b(10000)进制下的最后一位数字的十进制表示。
思路： 构造矩阵即可，M矩阵是一个3_3的矩阵，M1矩阵是一个3_1的矩阵。。很easy，就不说了。
写题解的目的是，对于这种要求b进制下，最后一位或者最后两位的数字的十进制表示的问题，其实就是在说，取模的数是base或者base^2
1A美滋滋
/* *********************************************** Author :111qqz Created Time :2017年10月01日 星期日 18时39分17秒 File Name :10518.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N = 5; LL n,base; struct Mat { LL mat[N][N]; void clear() { ms(mat,0); } }M,M1; Mat operator * ( Mat a,Mat b) { Mat c; c.</description></item><item><title>hdu 4686 Arc of Dream (构造矩阵，快速幂)</title><link>http://example.org/2017/10/hdu-4686/</link><pubDate>Sun, 01 Oct 2017 06:33:48 +0000</pubDate><guid>http://example.org/2017/10/hdu-4686/</guid><description>hdu4686题目链接
题意： An Arc of Dream is a curve defined by following function:
where a 0 = A0 a i = a i-1_AX+AY b 0 = B0 b i = b i-1_BX+BY What is the value of AoD(N) modulo 1,000,000,007?
思路： 看n的1E18的范围也知道是矩阵快速幂。。
难点还是构造矩阵。
构造矩阵主要凭借经验，但是还是有一些规律可循：
1. 对于求和的式子，如 s[n] = sum{F[1]..F[n]}类似的式子，我们只需要考虑如何构造F[n]即可。 2. 尽量将要构造的表达式展开成，第n项，与前面项(第n-1项等)有关的形式。 3. 观察2中展开的表达式的系数，每一个系数都亚奥出现在转移矩阵M中。 4. 观察2中展开的表达式的项，基本每一项都要整体或者以其他形式出现在初始矩阵M1中 5. 我们并不很关心初始项。 6. 难点其实在于构造M1矩阵，也就是说哪些项是重要的。一般而言，**可能有的项是，s[n],f[n],常数项，以及为了构造出f[n]的辅助项。** 对于这道题：
[](https://111qqz.com/wordpress/wp-content/uploads/2017/10/DeepinScreenshot_select-area_20171001142722.png)[![](https://111qqz.com/wordpress/wp-content/uploads/2017/10/DeepinScreenshot_select-area_20171001142742.png) ](https://111qqz.com/wordpress/wp-content/uploads/2017/10/DeepinScreenshot_select-area_20171001142742.png)[![](https://111qqz.com/wordpress/wp-content/uploads/2017/10/DeepinScreenshot_select-area_20171001142722.png) ](https://111qqz.com/wordpress/wp-content/uploads/2017/10/DeepinScreenshot_select-area_20171001142722.png)
然后矩阵快速幂即可。
1A
/* *********************************************** Author :111qqz Created Time :2017年10月01日 星期日 13时34分52秒 File Name :4686.</description></item><item><title>uva 10870 - Recurrences (矩阵加速线性递推式)</title><link>http://example.org/2017/10/uva-10870/</link><pubDate>Sat, 30 Sep 2017 20:35:55 +0000</pubDate><guid>http://example.org/2017/10/uva-10870/</guid><description>uva10870题目链接
题意： f(n) = a1f(n − 1) + a2f(n − 2) + a3f(n − 3) + . . . + adf(n − d), for n &amp;gt; d
给出f[1]..f[d],a[1]..a[d],问 f[n]%m是多少。
思路： 构造矩阵，加速递推式。
趁着这道题说一下一般的构造法。
转移矩阵M(d*d)的构造方法是，最后一行倒序写a[1]..a[d], 除去第一列和最后一行外，用1填充对角线，其余的为0.
初始矩阵M1(d*1)的构造方法是从上到下，f[1]..f[d]即可。
需要注意的是
*最后答案是 (M^(n-d))M1.mat[d-1][0] (由于经常出现的是d=2的递推式，因此注意不要把此式子的d，写成不够一般化的错误的2
/* *********************************************** Author :111qqz Created Time :2017年10月01日 星期日 03时57分36秒 File Name :10870.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=20; int n,d; LL mod; LL a[N],f[N]; struct Mat { LL mat[N][N]; void clear() { ms(mat,0); } void print() { for ( int i = 0 ; i &amp;lt; d ; i++) for ( int j = 0 ; j &amp;lt; d ; j++) printf(&amp;quot;%lld%c&amp;quot;,mat[i][j],j==d-1?</description></item><item><title>uva 10655 - Contemplation! Algebra （构造矩阵，快速幂）</title><link>http://example.org/2017/10/uva-10655/</link><pubDate>Sat, 30 Sep 2017 19:40:15 +0000</pubDate><guid>http://example.org/2017/10/uva-10655/</guid><description>uva10655题目链接
题意： 给出a+b和ab的值，问a^n+b^n
思路： 构造矩阵,手写一下很显然&amp;hellip;
转移矩阵M=[0 , 1]
[-q,p ]
初始矩阵M1=[p ]
[p^2-2*q]
快速幂即可。
有个坑点在于..读入的结束是p=0&amp;amp;q=0,并且只有这两个输入。
如果用p=0&amp;amp;&amp;amp;q=0作为终止条件，那么就会将三个输入，但p==0&amp;amp;&amp;amp;q==0的情况错误得终止&amp;hellip;
正确的做法是 while (~scanf(&amp;quot;%lld%lld%lld&amp;rdquo;,&amp;amp;p,&amp;amp;q,&amp;amp;n)==3)
/* *********************************************** Author :111qqz Created Time :2017年10月01日 星期日 03时01分38秒 File Name :10655.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL p,q,n; struct Mat { LL mat[105][105]; void clear() { ms(mat,0); } }M,M1; Mat operator * (Mat a,Mat b) { Mat c; c.</description></item><item><title>【dp专题001】bzoj 1009: [HNOI2008]GT考试 (字符串上dp+kmp+矩阵加速线性递推式)</title><link>http://example.org/2016/11/bzoj-1009/</link><pubDate>Sun, 13 Nov 2016 07:21:02 +0000</pubDate><guid>http://example.org/2016/11/bzoj-1009/</guid><description>1009: [HNOI2008]GT考试 Time Limit: 1 Sec Memory Limit: 162 MB Submit: 3127 Solved: 1926 [Submit][Status][Discuss]
Description 　阿申准备报名参加GT考试，准考证号为N位数X1X2&amp;hellip;.Xn(0&amp;lt;=Xi&amp;lt;=9),他不希望准考证号上出现不吉利的数字。 他的不吉利数学A1A2&amp;hellip;Am(0&amp;lt;=Ai&amp;lt;=9)有M位，不出现是指X1X2&amp;hellip;Xn中没有恰好一段等于A1A2&amp;hellip;Am. A1和X1可以为 0
Input 　第一行输入N,M,K.接下来一行输入M位的数。 N&amp;lt;=10^9,M&amp;lt;=20,K&amp;lt;=1000
Output 　阿申想知道不出现不吉利数字的号码有多少种，输出模K取余的结果.
Sample Input 4 3 100 111
Sample Output 81
思路： 这次总算想对了状态表示：dp[i][j] 表示当前处理到第i位，最后j位与不吉利串相同的方案数。 然后此时考虑转移，也就是观察第i+1位。 根据第i+1位字符的不同，转移到的 位置也不相同。 从dp[i][j] 可以转移到dp[i+1][k]，这种转移表现为dp[i+1][k] += dp[i][j] (k取决于第i+1位字符) *我们可以用f[i+1][k]+=f[i][j]trans[j][k]，trans[j][k]表示串s后j位与不吉利串前j位相同， 添加一个字符后后k位与不吉利串前k位相同的方案数。
就是说中间的那一部式子可以化简成矩阵的形式。。因此整个递推式就成了矩阵乘法的形式。 tran数组可以用kmp预处理出来。 重点是注意体会在字符串上dp的思想。
/* *********************************************** Author :111qqz Created Time :2016年11月13日 星期日 13时54分33秒 File Name :code/bzoj/1009.</description></item><item><title>acdream oj 1124 喵喵的遗憾 (斐波那契数列循环节)</title><link>http://example.org/2016/11/acdream-oj-1124-/</link><pubDate>Thu, 03 Nov 2016 00:39:54 +0000</pubDate><guid>http://example.org/2016/11/acdream-oj-1124-/</guid><description>题目链接
题意：
F0 = 1 , F1 = 1 , F2 = 2 , Fn = Fn-1+Fn-2
求：
FFFn Mod P
( 也就是 F[ F[ F[n] ] ] % P )
思路：原来这是适牛出的题2333.
需要注意的是p可能为1，因此n==0或者1的时候，特判要输出1%p而不是1.
其他的没了。就是求斐波那契数列循环节的经典做法。
/* *********************************************** Author :111qqz Created Time :Thu 03 Nov 2016 08:09:26 AM CST File Name :1124.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>hdu 4291 A Short problem (矩阵快速幂+广义斐波那契循环节||暴力找循环节)</title><link>http://example.org/2016/10/hdu-4291/</link><pubDate>Mon, 31 Oct 2016 08:59:53 +0000</pubDate><guid>http://example.org/2016/10/hdu-4291/</guid><description>题目链接
题意：
Given n (1 &amp;lt;= n &amp;lt;= 1018), You should solve for
g(g(g(n))) mod 109 + 7 where
g(n) = 3g(n - 1) + g(n - 2)
g(1) = 1
g(0) = 0思路：找循环节。首先由于模数固定，可以暴力一下找到循环节。
得到1E9+7的循环节是222222224,222222224的循环节是183120.
然后三次矩阵快速幂就行了。
需要注意每次都要判断那一层的n是否为0和1。
暴力解法：
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 02:47:01 PM CST File Name :code/hdu/4291.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL loop0 = 1E9+7; const LL loop1=222222224,loop2=183120; //暴力得到每一层的循环节。 /* LL find_loop(LL mod) { LL a,b,c; a = 0 ; b = 1 ; for ( int i = 2 ; ; i++) { c = (a+3*b%mod)% mod; a = b; b = c; // cout&amp;lt;&amp;lt;&amp;quot;a:&amp;quot;&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;quot; b:&amp;quot;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;endl; if (a==0&amp;amp;&amp;amp;b==1) { return i-1; // i的时候得到第i项，判断循环的时候是判断g[i-1]==g[0]&amp;amp;&amp;amp;g[i]==g[1]，所以循环节长度是i-1; } } }*/ LL n; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } void out() { cout&amp;lt;&amp;lt;mat[0][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[0][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;mat[1][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[1][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;endl; } }M,M1; Mat mul(Mat a,Mat b,LL MOD) { Mat c; c.</description></item><item><title>hdu 1005 Number Sequence (矩阵快速幂加速线性递推式)</title><link>http://example.org/2016/10/hdu-1005/</link><pubDate>Sun, 30 Oct 2016 21:18:36 +0000</pubDate><guid>http://example.org/2016/10/hdu-1005/</guid><description>题目链接
题意：A number sequence is defined as follows:
f(1) = 1, f(2) = 1, f(n) = (A * f(n - 1) + B * f(n - 2)) mod 7.
Given A, B, and n, you are to calculate the value of f(n).
思路：矩阵加速线性递推式。
这题第一次看是2012年11月2333，当时用pascal写的
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 05:03:40 AM CST File Name :code/hdu/1005.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat operator * ( Mat a,Mat b) { Mat c; c.</description></item><item><title>hdu 3221 Brute-force Algorithm (矩阵快速幂+指数循环节)</title><link>http://example.org/2016/10/hdu-3221/</link><pubDate>Sun, 30 Oct 2016 16:45:32 +0000</pubDate><guid>http://example.org/2016/10/hdu-3221/</guid><description>题目链接
题意：给出了一段伪代码。分析得知其实就是f[1]= a,f[2] = b,f[n]=f[n-1] * f[n-2]
思路：一眼题，和hdu4549很类似hdu4549解题报告
不同的是这道题中p不一定是质数（其实不是也无所谓啊&amp;hellip;hdu4549只不过是因为1E9+7是指数，又用费马小定理化简了一下,这道理%phi(p)即可）
还有这道题让我知道了
括号里的话是错误的。只有当x&amp;lt;phi(c)的时候，这个公式才成立。
这道题就是反例，不加判断会wa。
/* *********************************************** Author :111qqz Created Time :Sun 30 Oct 2016 11:46:33 PM CST File Name :code/hdu/3221.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL a,b,p,n; LL mod; LL euler( LL x) { LL ret = 1; for ( LL i = 2 ; i*i &amp;lt;= x; i++) { if (x%i==0) { x/=i; ret*=(i-1); while (x%i==0) { x/=i; ret*=i; } } } if (x&amp;gt;1) ret*=(x-1); return ret; } struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat operator * (Mat a,Mat b) { Mat res; res.</description></item><item><title>BZOJ 4547: Hdu5171 小奇的集合 (矩阵快速幂)</title><link>http://example.org/2016/10/bzoj-4547-hdu5171-/</link><pubDate>Wed, 26 Oct 2016 01:09:38 +0000</pubDate><guid>http://example.org/2016/10/bzoj-4547-hdu5171-/</guid><description>4547: Hdu5171 小奇的集合 Time Limit: 2 Sec Memory Limit: 256 MB Submit: 263 Solved: 113 [Submit][Status][Discuss]
Description  有一个大小为n的可重集S，小奇每次操作可以加入一个数a+b(a,b均属于S)，求k次操作后它可获得的S的和的最大
值。（数据保证这个值为非负数）
Input 第一行有两个整数n,k表示初始元素数量和操作数，第二行包含n个整数表示初始时可重集的元素。
对于100%的数据，有 n&amp;lt;=10^5，k&amp;lt;=10^9，|ai|&amp;lt;=10^5
Output 输出一个整数，表示和的最大值。答案对10000007取模。
Sample Input 2 2 3 6
Sample Output 33
HINT Source By Hzwer
思路：同hdu 5171的区别在于，a可能为负数。
同样是设a0为次大值，a1为最大值。
根据a0,a1的正负分类讨论。
如果a1&amp;lt;0（此时a0一定也小于0）那么每次操作都是a0+a1,因为越加越小。
如果a0&amp;lt;0，需要计算需要几次运算，使得a0&amp;gt;=0。设需要num次。
原因是，类斐波那契数列的性质可以对于正数，也可以对于负数，但是如果有正数有负数，性质是不满足的。
因此如果num&amp;gt;k，说明一直都是负数，直接运算即可，如果num&amp;lt;=k，就需要先把负数部分用等差数列的方法处理掉。
然后再用矩阵快速幂的方法计算剩下的k-num次。
/* *********************************************** Author :111qqz Created Time :Tue 25 Oct 2016 07:00:23 PM CST File Name :code/bzoj/4547.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL mod = 1E7+7; const int N=1E5+7; int n,k; LL a[N]; LL a0,a1; LL sum; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat operator*(Mat a,Mat b) { Mat res; res.</description></item><item><title>hdu 5171 GTY's birthday gift (矩阵快速幂)</title><link>http://example.org/2016/10/hdu-5171-gtys-birthday-gift-/</link><pubDate>Tue, 25 Oct 2016 10:56:10 +0000</pubDate><guid>http://example.org/2016/10/hdu-5171-gtys-birthday-gift-/</guid><description>题目链接
题意：给出n,k，以及n个正数，把n个数放在一个集合里，进行k次操作，每次操作取最大的数和次大的数放进集合。问k次操作结束后，集合中所有数的和。
思路：假设初始时刻，次大和最大分别为a0,a1，那么得到的就是一个类斐波那契数列。初始为a0,a1,fn = fn-1 + fn
最后求和。
利用这个性质。。。
我们直接构造完矩阵。。。求出F(n+2)即可。。
需要注意。。。矩阵中每一项是小于1E7+7的。。。矩乘的时候会爆int&amp;hellip;
所以mat要用LL存。。我好傻啊。。。
/* *********************************************** Author :111qqz Created Time :Thu 20 Oct 2016 10:40:39 AM CST File Name :code/hdu/5171.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N =1E5+7; const LL mod = 1E7+7; int n; LL k; LL a[N]; LL sum; LL a0,a1; struct Mat { LL mat[3][3]; void clear() { ms(mat,0); } Mat operator*(const Mat &amp;amp;b)const { Mat ans; ans.</description></item><item><title>hdu 4965 Fast Matrix Calculation (矩阵快速幂，2014多校#9)</title><link>http://example.org/2016/10/hdu-4965-fast-matrix-calculation-20149/</link><pubDate>Wed, 19 Oct 2016 20:54:11 +0000</pubDate><guid>http://example.org/2016/10/hdu-4965-fast-matrix-calculation-20149/</guid><description>题目链接
题意：Step 1: Calculate a new NN matrix C = AB. Step 2: Calculate M = C^(N*N). Step 3: For each element x in M, calculate x % 6. All the remainders form a new matrix M’. Step 4: Calculate the sum of all the elements in M’.
思路： 水题。。就一个trick&amp;hellip;
朴素的矩阵乘法的复杂度是n^3的。。。按照题目的顺序求的话。。。。求M矩阵时会超时。。。（而且1000*1000的数组也不能放到结构体里&amp;hellip;?
我们可以根据矩阵乘法的结合律。
M = (AB)^(NN) = A * (BA)^(NN-1) * B
然后就可以搞了。
/* *********************************************** Author :111qqz Created Time :Wed 19 Oct 2016 08:39:49 PM CST File Name :code/hdu/4965.</description></item><item><title>hdu 2157 How many ways?? (矩阵快速幂经典题目)</title><link>http://example.org/2016/10/hdu-2157/</link><pubDate>Wed, 19 Oct 2016 12:36:20 +0000</pubDate><guid>http://example.org/2016/10/hdu-2157/</guid><description>题意：给定一个有向图，问从A点恰好走k步（允许重复经过边）到达B点的方案数mod p的值
思路： ** 把给定的图转为邻接矩阵，即A(i,j)=1当且仅当存在一条边i-&amp;gt;j。令C=A*A，那么C(i,j)=ΣA(i,k)A(k,j)，实际上就等于从点i到点j恰好经过2条边的路径数（枚举k为中转点）。类似地，CA的第i行第j列就表示从i到j经过3条边的路径数。同理，如果要求经过k步的路径数，我们只需要快速幂求出A^k即可。**
M67_十个利用矩阵乘法解决的经典题目
这个转化好美啊。。。
/* *********************************************** Author :111qqz Created Time :Wed 19 Oct 2016 08:14:56 PM CST File Name :code/hdu/2157.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=25; const int mod = 1000; int n,m; struct Mat { int mat[N][N]; void clear() { ms(mat,0); } }M; Mat operator * (Mat a,Mat b) { Mat ans; ans.</description></item><item><title>poj 3233 Matrix Power Series （矩阵快速幂+分治）</title><link>http://example.org/2016/10/poj-3233/</link><pubDate>Wed, 19 Oct 2016 08:17:04 +0000</pubDate><guid>http://example.org/2016/10/poj-3233/</guid><description>题目链接
题意：
Given a n × n matrix A and a positive integer k, find the sum S = A + _A_2 + _A_3 + … + Ak.
思路： 对k进行二分。
比如，当k=6时，有： A + A^2 + A^3 + A^4 + A^5 + A^6 =_(A + A^2 + A^3)_ + A^3*_(A + A^2 + A^3)_ 应用这个式子后，规模k减小了一半。我们二分求出A^3后再递归地计算A + A^2 + A^3，即可得到原问题的答案。
以及错误的递归方式：
无形中增加了多少次。。。。。。怎么像小学生呢。。。
正确的写法。。。
/* *********************************************** Author :111qqz Created Time :Tue 18 Oct 2016 05:10:53 PM CST File Name :code/poj/3233.</description></item><item><title>poj 3070 Fibonacci (矩阵加速线性递推式)</title><link>http://example.org/2016/10/poj-3070-fibonacci/</link><pubDate>Mon, 17 Oct 2016 18:36:15 +0000</pubDate><guid>http://example.org/2016/10/poj-3070-fibonacci/</guid><description>题目链接
题意：求f[n] % 10000,f为斐波那契数。
思路：按照题目给出的公式，或者按照加速线性递推式的方法都可以。。。
因为把模数的1E4手滑写成1E4+7结果调了半天也是没谁了呵呵呵呵。
/* *********************************************** Author :111qqz Created Time :Tue 18 Oct 2016 01:18:40 AM CST File Name :code/poj/3070.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int MOD = 1E4; int n; struct Mat { int mat[5][5]; void clear() { ms(mat,0); } }M,M1; Mat operator * (Mat a,Mat b) { Mat c; c.</description></item><item><title>矩阵加速线性递推式（转载）</title><link>http://example.org/2016/10/</link><pubDate>Mon, 17 Oct 2016 17:38:36 +0000</pubDate><guid>http://example.org/2016/10/</guid><description>找到了篇四年前空间中的旧文，也是有点感动2333.
快速求解多项递推式 问题描述:
已知 F(n) = AF(n-1) + BF(n-2) + CF(n-3)+&amp;hellip;..
求解 F(n)%P
分析:
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
如果n的值不大,一般来说在1000000之内,则可以考虑直接递推求解,只要预先花O(n)时间复杂度,可打出一张表,运行时直接查表就可以了.
另一方面,如果n值可能很大,如10^9,用这种方法无论是在内存还是时间上开销都太大,根本无法满足.本文将介绍一种与矩阵相关的高效通用算法.
举个例子:
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
如果我们已知一个序列的前两项为a0,a1,递推关系为:F(n) = AF(n-1)+BF(n-2)
令矩阵 M = | 0 1 | M(1) = | a0 |
| B A | | a1 |
N = M * M(1) = | a1 |
| Aa1+Ba0 |
而 Aa1+Ba0 刚好就是 a2 !
设 M(n) = | a(n-1) |
| an |
N = M * M(n) = | an |</description></item><item><title>矩阵学习笔记</title><link>http://example.org/2016/10/</link><pubDate>Mon, 17 Oct 2016 17:03:16 +0000</pubDate><guid>http://example.org/2016/10/</guid><description>参考资料：
十个利用矩阵乘法解决的经典题目</description></item><item><title>hdu 1575 Tr A （矩阵快速幂模板题）</title><link>http://example.org/2016/02/hdu1575/</link><pubDate>Sun, 21 Feb 2016 03:21:51 +0000</pubDate><guid>http://example.org/2016/02/hdu1575/</guid><description>http://acm.hdu.edu.cn/showproblem.php?pid=1575
题意：A为一方阵，求(A^k)73得到的矩阵的主对角线的和。
思路：矩阵快速幂。模板题。
/* *********************************************** Author :111qqz Created Time :2016年02月21日 星期日 10时28分33秒 File Name :code/hdu/1575.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=12; const int MOD = 9973; struct Mat { int mat[N][N]; void clear() { ms(mat,0); } }A; int n,k; Mat operator * (Mat a,Mat b) { Mat c; c.</description></item><item><title>codeforces #341 div 2 E. Wet Shark and Blocks (数位dp+矩阵加速)</title><link>http://example.org/2016/02/cf621e/</link><pubDate>Mon, 08 Feb 2016 09:04:41 +0000</pubDate><guid>http://example.org/2016/02/cf621e/</guid><description>http://codeforces.com/problemset/problem/621/E 题意：有b组数，每组数均有n个且相同。你必须在每组选一个数，组成一个新数sum，使得sum % x == k，问方案数 % (1e9+7)。
思路：数位dp.首先考虑b不是很大的一般情况。dp[i][j]表示处理到前i个块的时候结果为j的方案数。那么转移方程就是：**dp[i][(j_10+t)%x] = dp[i-1][j]_cnt[t] ** cnt[i]表示数字i出现的个数。
但是由于b很大（1E9）,所以需要用矩阵加速。
/* *********************************************** Author :111qqz Created Time :2016年02月08日 星期一 16时24分34秒 File Name :code/cf/#341/E.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL MOD=1E9+7; int n,b,k,X; struct Matrix { LL a[110][110]; }; void add(LL &amp;amp;x,LL y) { x += y; x %= MOD; } Matrix multi(Matrix x,Matrix y ) //矩阵乘法。 { Matrix z; ms(z.</description></item></channel></rss>