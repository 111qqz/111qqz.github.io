<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 111qqz的小窝</title>
    <link>https://111qqz.github.io/tags/python/</link>
    <description>Recent content in python on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 19 Oct 2018 08:18:53 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>爬虫学习笔记</title>
      <link>https://111qqz.github.io/2018/10/web-crawler-notes/</link>
      <pubDate>Fri, 19 Oct 2018 08:18:53 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/10/web-crawler-notes/</guid>
      <description>再次迫于生计。。。 参考了面向新人的 Python 爬虫学习资料 大致的学习路线为: 一： 简单的定向脚本爬虫（ request --- bs4 --- re ） 二： 大型框架式爬虫（ Scrapy 框架为主） 三：浏</description>
    </item>
    
    <item>
      <title>使用python计算误差代码</title>
      <link>https://111qqz.github.io/2018/08/calculate-error-with-python/</link>
      <pubDate>Mon, 06 Aug 2018 11:54:35 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/08/calculate-error-with-python/</guid>
      <description>import os import math ave_err=0.0 max_err=0.0 max_err_rate=0.0 length=0 with open(&amp;ldquo;cpu_result.txt&amp;rdquo;,&amp;ldquo;r&amp;rdquo;) as fp1, open(&amp;ldquo;cuda_ppl_result.txt&amp;rdquo;,&amp;ldquo;r&amp;rdquo;) as fp2: for l1 in fp1: l2 = fp2.readline() l1=l1[:-2] l2=l2[:-2] lst = l1.split(&amp;rsquo; &amp;lsquo;) lst2 = l2.split(&amp;rsquo; &amp;lsquo;) #print lst lst = [float(x) for x in lst ] length = length + len(lst) lst2 = [float(x) for x in lst2] #print (lst) #print (lst2) for index,x in enumerate(lst): y = lst2[index] ave_err = ave_err + abs(x-y)</description>
    </item>
    
    <item>
      <title>pytorch 函数笔记</title>
      <link>https://111qqz.github.io/2018/02/pytorch-function-notes/</link>
      <pubDate>Fri, 23 Feb 2018 02:55:25 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/pytorch-function-notes/</guid>
      <description>记录一些常用的&amp;hellip;总去查文档也是有点麻烦 * tensor.view 的作用是reshape 比如 a = torch.range(1, 16) 得到一个tensor that has 16 elements from 1 to 16. 在a=a.vi</description>
    </item>
    
    <item>
      <title>正则匹配中文及常用正则表达式 (转载)</title>
      <link>https://111qqz.github.io/2017/12/common-regular-expression/</link>
      <pubDate>Mon, 04 Dec 2017 11:34:06 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/12/common-regular-expression/</guid>
      <description>先放一个同事安利给我的网站:regex101 查询匹配的中文字符unicode编码 正则表达式用于字符串处理、表单验证、日志数据分析等场合，实用</description>
    </item>
    
    <item>
      <title>python只获取当前目录下的文件夹及文件名</title>
      <link>https://111qqz.github.io/2017/08/python-get-dir-name-in-current-path/</link>
      <pubDate>Wed, 16 Aug 2017 08:21:41 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/08/python-get-dir-name-in-current-path/</guid>
      <description>list = os.listdir(rootdir)#列出目录下的所有文件和目录 for line in list: filepath = os.path.join(rootdir,line) if os.path.isdir(filepath):#如果</description>
    </item>
    
    <item>
      <title>python numpy 用法 简明手册</title>
      <link>https://111qqz.github.io/2017/07/python-numpy-notes/</link>
      <pubDate>Mon, 24 Jul 2017 03:08:35 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/07/python-numpy-notes/</guid>
      <description>原文链接 感谢stanford,感谢原作者的翻译，我调整了一下代码格式，可以当做手册来用了，毕竟之前没怎么写过py 23333 **译者注**：本文[智能</description>
    </item>
    
    <item>
      <title>libgfortran.so.4 missing under archlinux</title>
      <link>https://111qqz.github.io/2017/06/libgfortran-so-4-missing-under-archlinux/</link>
      <pubDate>Fri, 09 Jun 2017 20:12:41 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/06/libgfortran-so-4-missing-under-archlinux/</guid>
      <description>。。。哭了哦。。终于解决了这个bug 参考资料： libgfortran broken? libgfortran=3.0 should not be install with numpy &amp;lt;= 1.9 [SOLVED] libgfortran.so.3:cannot open shared object file: No such file [Replacing gcc-libs-libs with gcc-multilib arch conflict with gcc-libs and gcc-libs-multilib on latest update 一开始以为是anaconda</description>
    </item>
    
    <item>
      <title>conda升级anaconda　ValueError的解决办法</title>
      <link>https://111qqz.github.io/2017/06/how-to-fix-conda-upgrade-valueerror/</link>
      <pubDate>Thu, 08 Jun 2017 13:03:51 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/06/how-to-fix-conda-upgrade-valueerror/</guid>
      <description>conda update anaconda 后提示 ValueError: unsupported format character &#39;)&#39; (0x29) at index 49 查到了这个：anaconda update issue I have narrowed this down to the following packages: package build psutil-1.2.1 py27_0 hard-link pycparser-2.10 py27_0 hard-link pykit-0.1.0 np18py27_2 hard-link pyparsing-2.0.1 py27_0 hard-link by calling &#34;conda install anaconda&#34; and then successfully installing everything else one at a time. These</description>
    </item>
    
    <item>
      <title>数字图像处理大作业(初步）</title>
      <link>https://111qqz.github.io/2017/06/digital-image-processing-course-final-project/</link>
      <pubDate>Wed, 07 Jun 2017 06:53:36 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/06/digital-image-processing-course-final-project/</guid>
      <description>&amp;hellip;先随便记录一下好了。。。 * 神经网络识别数字或者字母？ * 识别车牌号？ * not hot dog? 安装python pandas pandas 发现之前装caffe的时候&amp;h</description>
    </item>
    
    <item>
      <title>vim下python 的配置</title>
      <link>https://111qqz.github.io/2017/06/vimrc-for-python/</link>
      <pubDate>Wed, 07 Jun 2017 06:21:12 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2017/06/vimrc-for-python/</guid>
      <description>由于最近要做数字图像处理的大作业，以及之后一段时间，估计写python多一些，所以打算花些时间配置下vim. 1. 一键执行 其实之前一直有的。。不</description>
    </item>
    
  </channel>
</rss>