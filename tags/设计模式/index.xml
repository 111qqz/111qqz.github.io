<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 111qqz的小窝</title>
    <link>https://111qqz.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 01 Sep 2018 09:27:40 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[设计模式] 观察者( Observer )模式学习笔记</title>
      <link>https://111qqz.github.io/2018/09/observer-pattern-notes/</link>
      <pubDate>Sat, 01 Sep 2018 09:27:40 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/09/observer-pattern-notes/</guid>
      <description>最近在学习node.js，里面讲到node.js的事件机制使用了观察者模式，因此来学习一下。 观察者模式的目的是定义对象间的一种一对多的依赖关</description>
    </item>
    
    <item>
      <title>[设计模式] 组合模式（composite） 学习笔记</title>
      <link>https://111qqz.github.io/2018/08/composite-pattern-notes/</link>
      <pubDate>Tue, 28 Aug 2018 06:30:59 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/08/composite-pattern-notes/</guid>
      <description>目的是忽略单一对象和组合对象的不同。 有点像以前写过的用链表定义一个树结构，每个节点是一个val + 多个*tree 。如果某个节点是叶子节点了，那</description>
    </item>
    
  </channel>
</rss>