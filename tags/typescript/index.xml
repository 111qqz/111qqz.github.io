<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>typescript on 111qqz's blog</title><link>https://111qqz.com/tags/typescript/</link><description>Recent content in typescript on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Wed, 05 Sep 2018 08:02:42 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>typescript学习笔记</title><link>https://111qqz.com/2018/09/typescript-notes/</link><pubDate>Wed, 05 Sep 2018 08:02:42 +0000</pubDate><guid>https://111qqz.com/2018/09/typescript-notes/</guid><description>
先放参考资料:
TypeScript 入门教程
React &amp;amp; Webpack
react-typescript-cheatsheet (强推一波，讲了很多react+ts的实践）
typescript是javascript的语法扩展。。。好处是提供了类型。。可以在编译（结果为js文件)的时候提供静态的类型检查。。。
typescript的问号语法:标记某个参数为可选。
例子:
export class Thread { id: string; lastMessage: Message; name: string; avatarSrc: string; constructor(id?: string, name?: string, avatarSrc?: string) { this.id = id || uuid(); this.name = name; this.avatarSrc = avatarSrc; } } 关于typescript的类型推断。。如果在定义时直接赋值则会进行推断，否则会推断类型为any.
let myFavoriteNumber = 'seven'; myFavoriteNumber = 7; // index.ts(2,1): error TS2322: Type 'number' is not assignable to type 'string'. //上面的写法会编译错误，原因是定义时已经推断类型为string //但是下面的写法没有问题 let myFavoriteNumber; myFavoriteNumber = 'seven'; myFavoriteNumber = 7; let myFavoriteNumber: string | number; myFavoriteNumber = 'seven'; myFavoriteNumber = 7; 这里的 let myFavoriteNumber: string | number 的含义是， 允许 myFavoriteNumber 的类型是 string 或者 number，但是不能是其他类型。 当 TypeScript 不确定一个联合类型的变量到底是哪个类型的时候，我们只能访问此联合类型的所有类型里共有的属性或方法</description></item></channel></rss>