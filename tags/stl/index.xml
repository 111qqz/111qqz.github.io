<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stl on 111qqz的小窝</title>
    <link>https://111qqz.com/tags/stl/</link>
    <description>Recent content in stl on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 May 2018 09:45:50 +0000</lastBuildDate>
    
	<atom:link href="https://111qqz.com/tags/stl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; STL Algotithms 学习笔记</title>
      <link>https://111qqz.com/2018/05/c-stl-algotithms-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Sun, 06 May 2018 09:45:50 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/05/c-stl-algotithms-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>迫于拙劣的cpp水平，这次来记录一些关于STL算法部分的内容。 参考内容是CS106L的course reader Iterator Categories Iterators分为以下五种: * Output</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL Algotithms 学习笔记</title>
      <link>https://111qqz.com/2018/05/c-stl-algotithms-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Sun, 06 May 2018 09:45:50 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/05/c-stl-algotithms-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>迫于拙劣的cpp水平，这次来记录一些关于STL算法部分的内容。 参考内容是CS106L的course reader Iterator Categories Iterators分为以下五种: * Output</description>
    </item>
    
    <item>
      <title>cuda c&#43;&#43;  基础算法库 thrust 学习笔记</title>
      <link>https://111qqz.com/2018/02/cuda-c-%e5%9f%ba%e7%a1%80%e7%ae%97%e6%b3%95%e5%ba%93-thrust-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Sat, 10 Feb 2018 08:43:54 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/02/cuda-c-%e5%9f%ba%e7%a1%80%e7%ae%97%e6%b3%95%e5%ba%93-thrust-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>可以了解成并行版的STL(? 过了一遍nvidia的官方网文档 发现如果熟悉STL的话,thrust没什么太多好说的,看起来很简单&amp;hellip</description>
    </item>
    
    <item>
      <title>cuda c&#43;&#43;  基础算法库 thrust 学习笔记</title>
      <link>https://111qqz.com/2018/02/cuda-c-%e5%9f%ba%e7%a1%80%e7%ae%97%e6%b3%95%e5%ba%93-thrust-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</link>
      <pubDate>Sat, 10 Feb 2018 08:43:54 +0000</pubDate>
      
      <guid>https://111qqz.com/2018/02/cuda-c-%e5%9f%ba%e7%a1%80%e7%ae%97%e6%b3%95%e5%ba%93-thrust-%e5%ad%a6%e4%b9%a0%e7%ac%94%e8%ae%b0/</guid>
      <description>可以了解成并行版的STL(? 过了一遍nvidia的官方网文档 发现如果熟悉STL的话,thrust没什么太多好说的,看起来很简单&amp;hellip</description>
    </item>
    
    <item>
      <title>BZOJ 1653: [Usaco2006 Feb]Backward Digit Sums(暴力)</title>
      <link>https://111qqz.com/2016/04/bzoj1653/</link>
      <pubDate>Thu, 14 Apr 2016 07:12:27 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/04/bzoj1653/</guid>
      <description>1653: [Usaco2006 Feb]Backward Digit Sums Time Limit: 5 Sec Memory Limit: 64 MB Submit: 349 Solved: 258 [Submit][Status][Discuss] Description FJ and his cows enjoy playing a mental game. They write down the numbers from 1 to N (1 &amp;lt;= N &amp;lt;= 10) in a certain order and then sum adjacent numbers to produce a new list with one fewer number. They repeat this until only a single number is left.</description>
    </item>
    
    <item>
      <title>BZOJ 1653: [Usaco2006 Feb]Backward Digit Sums(暴力)</title>
      <link>https://111qqz.com/2016/04/bzoj1653/</link>
      <pubDate>Thu, 14 Apr 2016 07:12:27 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/04/bzoj1653/</guid>
      <description>1653: [Usaco2006 Feb]Backward Digit Sums Time Limit: 5 Sec Memory Limit: 64 MB Submit: 349 Solved: 258 [Submit][Status][Discuss] Description FJ and his cows enjoy playing a mental game. They write down the numbers from 1 to N (1 &amp;lt;= N &amp;lt;= 10) in a certain order and then sum adjacent numbers to produce a new list with one fewer number. They repeat this until only a single number is left.</description>
    </item>
    
    <item>
      <title>uva 156 - Ananagrams</title>
      <link>https://111qqz.com/2016/01/uva156/</link>
      <pubDate>Mon, 25 Jan 2016 09:19:56 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/01/uva156/</guid>
      <description>https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=92 题意：给出一段文字，包含若干个单词，以&amp;rsquo;#&amp;lsquo;结束。按照字典序输出所有的ananagrams。所谓ananagram</description>
    </item>
    
    <item>
      <title>uva 156 - Ananagrams</title>
      <link>https://111qqz.com/2016/01/uva156/</link>
      <pubDate>Mon, 25 Jan 2016 09:19:56 +0000</pubDate>
      
      <guid>https://111qqz.com/2016/01/uva156/</guid>
      <description>https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=92 题意：给出一段文字，包含若干个单词，以&amp;rsquo;#&amp;lsquo;结束。按照字典序输出所有的ananagrams。所谓ananagram</description>
    </item>
    
    <item>
      <title>codeforces 29 C. Mail Stamps</title>
      <link>https://111qqz.com/2015/12/cf29c/</link>
      <pubDate>Wed, 30 Dec 2015 12:27:15 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf29c/</guid>
      <description>http://codeforces.com/contest/29/problem/C 题意：给出n个边的关系，保证可以构成一条链。正向或者反向输出这个链。 思路：由于下标很大(1E9)，而关系个数只有1E5..需要离散化。。而</description>
    </item>
    
    <item>
      <title>codeforces 29 C. Mail Stamps</title>
      <link>https://111qqz.com/2015/12/cf29c/</link>
      <pubDate>Wed, 30 Dec 2015 12:27:15 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf29c/</guid>
      <description>http://codeforces.com/contest/29/problem/C 题意：给出n个边的关系，保证可以构成一条链。正向或者反向输出这个链。 思路：由于下标很大(1E9)，而关系个数只有1E5..需要离散化。。而</description>
    </item>
    
    <item>
      <title>codeforces 12 C. Fruits</title>
      <link>https://111qqz.com/2015/12/cf12c/</link>
      <pubDate>Tue, 29 Dec 2015 08:05:19 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf12c/</guid>
      <description>http://codeforces.com/contest/12/problem/C 题意：有n个价格价格，m个要买的东西（可能有相同的种类，设为k种），把n个标签中拿出k个给个贴上。。。问最大价钱和最少价钱分别是多少。 思路</description>
    </item>
    
    <item>
      <title>codeforces 12 C. Fruits</title>
      <link>https://111qqz.com/2015/12/cf12c/</link>
      <pubDate>Tue, 29 Dec 2015 08:05:19 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf12c/</guid>
      <description>http://codeforces.com/contest/12/problem/C 题意：有n个价格价格，m个要买的东西（可能有相同的种类，设为k种），把n个标签中拿出k个给个贴上。。。问最大价钱和最少价钱分别是多少。 思路</description>
    </item>
    
    <item>
      <title>codeforces #332 div 2 D. Spongebob and Squares</title>
      <link>https://111qqz.com/2015/12/cf559d/</link>
      <pubDate>Wed, 23 Dec 2015 08:57:18 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf559d/</guid>
      <description>http://codeforces.com/contest/599/problem/D 题意：给出总的方格数x，问有多少种不同尺寸的矩形满足题意，输出方案数和长宽（3,5和5,3算两种） 思路：比赛的时候gg了。。其实稍微在纸上</description>
    </item>
    
    <item>
      <title>codeforces #332 div 2 D. Spongebob and Squares</title>
      <link>https://111qqz.com/2015/12/cf559d/</link>
      <pubDate>Wed, 23 Dec 2015 08:57:18 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf559d/</guid>
      <description>http://codeforces.com/contest/599/problem/D 题意：给出总的方格数x，问有多少种不同尺寸的矩形满足题意，输出方案数和长宽（3,5和5,3算两种） 思路：比赛的时候gg了。。其实稍微在纸上</description>
    </item>
    
    <item>
      <title>codeforces #333 div 2B. Approximating a Constant Range</title>
      <link>https://111qqz.com/2015/12/cf602b/</link>
      <pubDate>Tue, 22 Dec 2015 08:04:29 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf602b/</guid>
      <description>http://codeforces.com/contest/602/problem/B 题意：给定n个数，问最大连续区间长度，满足这段区间内最大值和最小值的差的绝对值小于等于1. 思路：尺取+set。尺取法，由于要时刻得到一段区</description>
    </item>
    
    <item>
      <title>codeforces #333 div 2B. Approximating a Constant Range</title>
      <link>https://111qqz.com/2015/12/cf602b/</link>
      <pubDate>Tue, 22 Dec 2015 08:04:29 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/cf602b/</guid>
      <description>http://codeforces.com/contest/602/problem/B 题意：给定n个数，问最大连续区间长度，满足这段区间内最大值和最小值的差的绝对值小于等于1. 思路：尺取+set。尺取法，由于要时刻得到一段区</description>
    </item>
    
    <item>
      <title>poj 3687 Labeling Balls</title>
      <link>https://111qqz.com/2015/12/poj3687/</link>
      <pubDate>Sat, 19 Dec 2015 09:18:52 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/poj3687/</guid>
      <description>http://poj.org/problem?id=3687 题意：给定几个标签球的重量大小关系，求每个球是第几重的(即每个球在所有球的重量中由小到大排名是多少)。 （输出是每个球第几重，而不是几号球比</description>
    </item>
    
    <item>
      <title>poj 3687 Labeling Balls</title>
      <link>https://111qqz.com/2015/12/poj3687/</link>
      <pubDate>Sat, 19 Dec 2015 09:18:52 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/poj3687/</guid>
      <description>http://poj.org/problem?id=3687 题意：给定几个标签球的重量大小关系，求每个球是第几重的(即每个球在所有球的重量中由小到大排名是多少)。 （输出是每个球第几重，而不是几号球比</description>
    </item>
    
    <item>
      <title>hdoj4391 Paint The Wall</title>
      <link>https://111qqz.com/2015/12/hdoj4391/</link>
      <pubDate>Tue, 15 Dec 2015 08:52:37 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/hdoj4391/</guid>
      <description>http://acm.hdu.edu.cn/showproblem.php?pid=4391 题意：有 n 个点，每个点有一种颜色（可能相同），两种操作：1、将区间 [a,b] 染成颜色 c ; 2、询问区间 [a,b] 中颜色为 c 的点有多少个。 思路：因为颜色种类很</description>
    </item>
    
    <item>
      <title>hdoj4391 Paint The Wall</title>
      <link>https://111qqz.com/2015/12/hdoj4391/</link>
      <pubDate>Tue, 15 Dec 2015 08:52:37 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/12/hdoj4391/</guid>
      <description>http://acm.hdu.edu.cn/showproblem.php?pid=4391 题意：有 n 个点，每个点有一种颜色（可能相同），两种操作：1、将区间 [a,b] 染成颜色 c ; 2、询问区间 [a,b] 中颜色为 c 的点有多少个。 思路：因为颜色种类很</description>
    </item>
    
    <item>
      <title>codeforces 567 E President and Roads (优先队列＋迪杰斯特拉＋tarjan)</title>
      <link>https://111qqz.com/2015/08/codeforces567epresidentandroads%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97%ef%bc%8b%e8%bf%aa%e6%9d%b0%e6%96%af%e7%89%b9%e6%8b%89%ef%bc%8btarjan/</link>
      <pubDate>Sun, 16 Aug 2015 19:26:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/08/codeforces567epresidentandroads%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97%ef%bc%8b%e8%bf%aa%e6%9d%b0%e6%96%af%e7%89%b9%e6%8b%89%ef%bc%8btarjan/</guid>
      <description>题意是说，给定一个有向图，对于每一条边，问是否是s到t的最短路上一定会经过的边． 如果是就输出yes 如果不是，问能否通过减少这条边的权值（减少</description>
    </item>
    
    <item>
      <title>codeforces 567 E President and Roads (优先队列＋迪杰斯特拉＋tarjan)</title>
      <link>https://111qqz.com/2015/08/codeforces567epresidentandroads%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97%ef%bc%8b%e8%bf%aa%e6%9d%b0%e6%96%af%e7%89%b9%e6%8b%89%ef%bc%8btarjan/</link>
      <pubDate>Sun, 16 Aug 2015 19:26:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/08/codeforces567epresidentandroads%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97%ef%bc%8b%e8%bf%aa%e6%9d%b0%e6%96%af%e7%89%b9%e6%8b%89%ef%bc%8btarjan/</guid>
      <description>题意是说，给定一个有向图，对于每一条边，问是否是s到t的最短路上一定会经过的边． 如果是就输出yes 如果不是，问能否通过减少这条边的权值（减少</description>
    </item>
    
    <item>
      <title>POJ 1028 Web Navigation</title>
      <link>https://111qqz.com/2015/07/poj1028/</link>
      <pubDate>Wed, 08 Jul 2015 02:08:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1028/</guid>
      <description>http://poj.org/problem?id=1028 /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分01秒 File Name :1028.cpp ************************************************ */ #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;queue&amp;gt; using namespace std; typedef long long LL; const int inf = 8E8; stack&amp;lt;string&amp;gt; backstack; stack&amp;lt;string&amp;gt; forwardstack;</description>
    </item>
    
    <item>
      <title>POJ 1028 Web Navigation</title>
      <link>https://111qqz.com/2015/07/poj1028/</link>
      <pubDate>Wed, 08 Jul 2015 02:08:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1028/</guid>
      <description>http://poj.org/problem?id=1028 /* *********************************************** Author :111qqz Created Time :2016年02月19日 星期五 15时45分01秒 File Name :1028.cpp ************************************************ */ #include &amp;lt;algorithm&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;queue&amp;gt; using namespace std; typedef long long LL; const int inf = 8E8; stack&amp;lt;string&amp;gt; backstack; stack&amp;lt;string&amp;gt; forwardstack;</description>
    </item>
    
    <item>
      <title>poj 2643 election</title>
      <link>https://111qqz.com/2015/07/poj2643/</link>
      <pubDate>Wed, 08 Jul 2015 01:27:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj2643/</guid>
      <description>题目链接：http://poj.org/problem?id=2643 在考stl的map&amp;hellip; 我是定义了一个string 指向str</description>
    </item>
    
    <item>
      <title>poj 2643 election</title>
      <link>https://111qqz.com/2015/07/poj2643/</link>
      <pubDate>Wed, 08 Jul 2015 01:27:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj2643/</guid>
      <description>题目链接：http://poj.org/problem?id=2643 在考stl的map&amp;hellip; 我是定义了一个string 指向str</description>
    </item>
    
    <item>
      <title>poj 3481 double queues</title>
      <link>https://111qqz.com/2015/07/poj3481/</link>
      <pubDate>Fri, 03 Jul 2015 04:10:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj3481/</guid>
      <description>http://acm.hdu.edu.cn/showproblem.php?pid=1908 看到有两个优先级，然后题目中又有queue。。。就想到了优先队列。。。 但是优先队列的cmp函数没搞懂，因为比较的是结构体，好像要重载&amp;lt</description>
    </item>
    
    <item>
      <title>poj 3481 double queues</title>
      <link>https://111qqz.com/2015/07/poj3481/</link>
      <pubDate>Fri, 03 Jul 2015 04:10:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj3481/</guid>
      <description>http://acm.hdu.edu.cn/showproblem.php?pid=1908 看到有两个优先级，然后题目中又有queue。。。就想到了优先队列。。。 但是优先队列的cmp函数没搞懂，因为比较的是结构体，好像要重载&amp;lt</description>
    </item>
    
    <item>
      <title>STL容器之优先队列</title>
      <link>https://111qqz.com/2015/07/stl%e5%ae%b9%e5%99%a8%e4%b9%8b%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 19:34:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/stl%e5%ae%b9%e5%99%a8%e4%b9%8b%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97/</guid>
      <description></description>
    </item>
    
    <item>
      <title>STL容器之优先队列</title>
      <link>https://111qqz.com/2015/07/stl%e5%ae%b9%e5%99%a8%e4%b9%8b%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 19:34:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/stl%e5%ae%b9%e5%99%a8%e4%b9%8b%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97/</guid>
      <description></description>
    </item>
    
    <item>
      <title>poj 1833 排列</title>
      <link>https://111qqz.com/2015/07/poj1833%e6%8e%92%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 19:21:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1833%e6%8e%92%e5%88%97/</guid>
      <description>http://poj.org/problem?id=1833 还是next_permutation. 这次是Int类型的 需要注意的是next_permutation是先判断时候有后继，返回一个bool值</description>
    </item>
    
    <item>
      <title>poj 1833 排列</title>
      <link>https://111qqz.com/2015/07/poj1833%e6%8e%92%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 19:21:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1833%e6%8e%92%e5%88%97/</guid>
      <description>http://poj.org/problem?id=1833 还是next_permutation. 这次是Int类型的 需要注意的是next_permutation是先判断时候有后继，返回一个bool值</description>
    </item>
    
    <item>
      <title>next_permutation函数 (生成全排列)</title>
      <link>https://111qqz.com/2015/07/next_permutation%e5%87%bd%e6%95%b0%e7%94%9f%e6%88%90%e5%85%a8%e6%8e%92%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 18:42:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/next_permutation%e5%87%bd%e6%95%b0%e7%94%9f%e6%88%90%e5%85%a8%e6%8e%92%e5%88%97/</guid>
      <description>**这是一个求一个排序的下一个排列的函数，可以遍历全排列,要包含头文件 下面是以前的笔记 与之完全相反的函数还有prev_permutation</description>
    </item>
    
    <item>
      <title>next_permutation函数 (生成全排列)</title>
      <link>https://111qqz.com/2015/07/next_permutation%e5%87%bd%e6%95%b0%e7%94%9f%e6%88%90%e5%85%a8%e6%8e%92%e5%88%97/</link>
      <pubDate>Thu, 02 Jul 2015 18:42:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/next_permutation%e5%87%bd%e6%95%b0%e7%94%9f%e6%88%90%e5%85%a8%e6%8e%92%e5%88%97/</guid>
      <description>**这是一个求一个排序的下一个排列的函数，可以遍历全排列,要包含头文件 下面是以前的笔记 与之完全相反的函数还有prev_permutation</description>
    </item>
    
    <item>
      <title>poj 1256 Anagram</title>
      <link>https://111qqz.com/2015/07/poj1256/</link>
      <pubDate>Thu, 02 Jul 2015 18:41:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1256/</guid>
      <description>http://poj.org/problem?id=1256 题意是说求出一个字符串的全排列，按字典序 需要注意的是字典序和传统意义上的字典序不同 重新定义了,A 需要自己重写cmp函数。 next_perm</description>
    </item>
    
    <item>
      <title>poj 1256 Anagram</title>
      <link>https://111qqz.com/2015/07/poj1256/</link>
      <pubDate>Thu, 02 Jul 2015 18:41:00 +0000</pubDate>
      
      <guid>https://111qqz.com/2015/07/poj1256/</guid>
      <description>http://poj.org/problem?id=1256 题意是说求出一个字符串的全排列，按字典序 需要注意的是字典序和传统意义上的字典序不同 重新定义了,A 需要自己重写cmp函数。 next_perm</description>
    </item>
    
  </channel>
</rss>