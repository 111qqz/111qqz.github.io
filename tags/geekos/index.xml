<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>geekOS on 111qqz的小窝</title><link>https://111qqz.com/tags/geekos/</link><description>Recent content in geekOS on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Sat, 18 Jun 2016 19:43:34 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/geekos/index.xml" rel="self" type="application/rss+xml"/><item><title>geekos project 1 （ELF文件相关）</title><link>https://111qqz.com/2016/06/geekos-project-1-elf/</link><pubDate>Sat, 18 Jun 2016 19:43:34 +0000</pubDate><guid>https://111qqz.com/2016/06/geekos-project-1-elf/</guid><description>
一、目的 熟悉ELF文件格式，了解GeekOS系统如何将ELF格式的可执行程序装入到内存，建立内核进程并运行的实现技术。 二、流程 1、修改/geekos/elf.c文件：在函数Parse_ELF_Executable( )中添加代码，分析ELF格式的可执行文件（包括分析得出ELF文件头、程序头，获取可执行文件长度，代码段、数据段等信息），并填充Exe_Format数据结构中的域值。 2、在Linux环境下编译系统得到GeekOS镜像文件。 3、编写一个相应的bochs配置文件。 4、在bochs中运行GeekOS系统显示结果。
编译以及启动bochs同project0... project0遇到的那些错误还是都会遇到一遍233.
然后在project1/src/geekos/ 目录下的elf.c中添加函数：int Parse_ELF_Executable(char *exeFileData, ulong_t exeFileLength, struct Exe_Format *exeFormat)
原理部分不过多阐释，具体可见我参考的博客。
最后实现为：
int Parse_ELF_Executable(char *exeFileData, ulong_t exeFileLength, struct Exe_Format *exeFormat) { elfHeader* header = exeFileData; programHeader* pHeader = (exeFileData+header-&amp;gt;phoff); exeFormat-&amp;gt;numSegments = header-&amp;gt;phnum; exeFormat-&amp;gt;entryAddr = header-&amp;gt;entry; int i = 0; for (; i&amp;lt; header-&amp;gt;phnum; i++) { exeFormat-&amp;gt;segmentList[i].offsetInFile = pHeader-&amp;gt;offset; exeFormat-&amp;gt;segmentList[i].lengthInFile = pHeader-&amp;gt;fileSize; exeFormat-&amp;gt;segmentList[i].startAddress = pHeader-&amp;gt;vaddr; exeFormat-&amp;gt;segmentList[i].sizeInMemory = pHeader-&amp;gt;memSize; exeFormat-&amp;gt;segmentList[i].protFlags = pHeader-&amp;gt;flags; pHeader++; } return 0; //!</description></item><item><title>geek OS project 0 （下）</title><link>https://111qqz.com/2016/06/geek-os-project-0-/</link><pubDate>Sat, 18 Jun 2016 09:48:06 +0000</pubDate><guid>https://111qqz.com/2016/06/geek-os-project-0-/</guid><description>
现在我们环境已经搭好了，参考 geekos实验环境的搭建
在main.c中新加个函数，命名为projecto,函数的代码如下：
/* * GeekOS C code entry point * Copyright (c) 2001,2003,2004 David H. Hovemeyer &amp;lt;daveho@cs.umd.edu&amp;gt; * Copyright (c) 2003, Jeffrey K. Hollingsworth &amp;lt;hollings@cs.umd.edu&amp;gt; * Copyright (c) 2004, Iulian Neamtiu &amp;lt;neamtiu@cs.umd.edu&amp;gt; * $Revision: 1.51 $ * * This is free software. You are permitted to use, * redistribute, and modify it as specified in the file &amp;quot;COPYING&amp;quot;. */ #include &amp;lt;geekos/bootinfo.h&amp;gt; #include &amp;lt;geekos/string.h&amp;gt; #include &amp;lt;geekos/screen.h&amp;gt; #include &amp;lt;geekos/mem.h&amp;gt; #include &amp;lt;geekos/crc32.h&amp;gt; #include &amp;lt;geekos/tss.</description></item><item><title>geekok project0（上）（实验环境的搭建）</title><link>https://111qqz.com/2016/06/geekok-project0/</link><pubDate>Sat, 18 Jun 2016 08:35:49 +0000</pubDate><guid>https://111qqz.com/2016/06/geekok-project0/</guid><description>
apt-get install build-essential apt-get install bochs bochs-x nasm
此处下载的bochs应该是比较新的...如果之后遇到
failed assertion in init_idt :g_handlersizenoterr == g_handlersizeerr 这个错误，建议安装比较老的nasm版本，比如2.08.02链接
下载geekos-0.3软件包，地址为： geekOS下载地址
然后解压到~/work目录。
然后进入到 /work/geekos-0.3.0/src/project0/build 目录下
之后的操作都是在这个目录下进行的。
rkz2013@111qqz-ThinkPad-X200 ~/work/geekos-0.3.0/src/project0/build $ make depend Makefile:249: depend.mak: 没有那个文件或目录 touch depend.mak gcc -M -O -Wall -Werror -g -DGEEKOS -I../include \ ../src/geekos/idt.c ../src/geekos/int.c ../src/geekos/trap.c ../src/geekos/irq.c ../src/geekos/io.c ../src/geekos/keyboard.c ../src/geekos/screen.c ../src/geekos/timer.c ../src/geekos/mem.c ../src/geekos/crc32.c ../src/geekos/gdt.c ../src/geekos/tss.c ../src/geekos/segment.c ../src/geekos/bget.c ../src/geekos/malloc.c ../src/geekos/synch.c ../src/geekos/kthread.c ../src/geekos/main.c \ | perl -n -e 's,^(\S),geekos/$1,;print' \ &amp;gt; depend.mak gcc -M -O -Wall -Werror -I.</description></item><item><title>OS课设之geek os 非最终版</title><link>https://111qqz.com/2016/06/osgeek-os-/</link><pubDate>Fri, 17 Jun 2016 04:09:37 +0000</pubDate><guid>https://111qqz.com/2016/06/osgeek-os-/</guid><description>
参考了这篇博客
流程部分不再具体描述，可以参考上面的博客。
只详细给出我遇到的问题。
我的pc环境是：Linux 111qqz-ThinkPad-X200 3.16.0-38-generic #52~14.04.1-Ubuntu SMP Fri May 8 09:43:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
linux mint 17.2 cinnamon
apt-get install build-essential apt-get install bochs bochs-x nasm http://sourceforge.net/projects/geekos/files/ 下载geekos软件包并且解压
$ cd ~/geekos-0.3.0/src/project0/build$ $ make depend $ make 报错。。
解法办法：修改/home/rkz2013/geekos-0.3.0/src/project0/build
目录下的Makefile文件。
CC_GENERAL_OPTS := $(GENERAL_OPTS) -Werror 改为 CC_GENERAL_OPTS := $(GENERAL_OPTS) make后再次出现错误：
fmtout.c:(.text+0xa16)：对‘__stack_chk_fail’未定义的引用 解决办法：
在project0/build 目录下的makefile文件的148行 添加编译选项 -fno-stack-protector 然后又报错
i386 architecture of input file `geekos/lowlevel.o' is incompatible with i386:x86-64 output 解决办法：</description></item></channel></rss>