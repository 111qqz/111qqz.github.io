<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vector on 111qqz的小窝</title><link>https://111qqz.com/tags/vector/</link><description>Recent content in vector on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Tue, 28 Feb 2017 07:21:49 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/vector/index.xml" rel="self" type="application/rss+xml"/><item><title>cpp vector学习笔记</title><link>https://111qqz.com/2017/02/cpp-vector/</link><pubDate>Tue, 28 Feb 2017 07:21:49 +0000</pubDate><guid>https://111qqz.com/2017/02/cpp-vector/</guid><description>
起因是百度实习二面的时候被问了一道类似这样的题：
给我下面的代码，问有没有什么问题。
1 /* *********************************************** 2Author :111qqz 3Created Time :2017年02月28日 星期二 14时49分37秒 4File Name :vector.cpp 5************************************************ */ 6 #include &amp;lt;cstdio&amp;gt;7 #include &amp;lt;vector&amp;gt;8 #include &amp;lt;ctime&amp;gt;9 using namespace std; 10 int func( int x ) //此处函数的条件是不单调...这样才可以触发问题. 11 { 12 return (x-50)*(x-50)+1; 13 } 14 int main() 15 { 16 17 vector&amp;lt;int&amp;gt;vec; 18 int *pint = NULL; 19 for ( int i = 0 ; i &amp;lt; 100 ; i++) 20 { 21 int x = func(i); 22 vec.</description></item><item><title>codeforces 29 C. Mail Stamps</title><link>https://111qqz.com/2015/12/cf29c/</link><pubDate>Wed, 30 Dec 2015 12:27:15 +0000</pubDate><guid>https://111qqz.com/2015/12/cf29c/</guid><description>
http://codeforces.com/contest/29/problem/C 题意：给出n个边的关系，保证可以构成一条链。正向或者反向输出这个链。 思路：由于下标很大(1E9)，而关系个数只有1E5..需要离散化。。而且离散化的同时不能丢失边的关系。。。实际上。。直接用vector+map就好了。。。 map &amp;gt;e;即可。然后找到一个度为1的点。。做个dfs...
/* *********************************************** Author :111qqz Created Time :2015年12月30日 星期三 19时55分15秒 File Name :code/cf/problem/29C.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; map&amp;lt;int,vector&amp;lt;int&amp;gt; &amp;gt;e; map&amp;lt;int,bool&amp;gt;vis; map&amp;lt;int,int&amp;gt;in; map&amp;lt;int,int&amp;gt;::iterator it; int beg; int n ; void dfs( int x) { vis[x] = true; printf(&amp;quot;%d &amp;quot;,x); for ( int i = 0 ; i &amp;lt; e[x].</description></item></channel></rss>