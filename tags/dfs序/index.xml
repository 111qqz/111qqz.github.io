<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dfs序 on 111qqz's blog</title><link>https://111qqz.com/tags/dfs%E5%BA%8F/</link><description>Recent content in dfs序 on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Fri, 14 Aug 2015 19:50:00 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/dfs%E5%BA%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>codeforces 570 D. Tree Requests (dfs序)</title><link>https://111qqz.com/2015/08/codeforces570d-treerequestsdfs/</link><pubDate>Fri, 14 Aug 2015 19:50:00 +0000</pubDate><guid>https://111qqz.com/2015/08/codeforces570d-treerequestsdfs/</guid><description>
因为字母的排列顺序是任意的,所以判断能否形成回文串的条件就成了出现次数为奇数的字母的个数是否大于1个,如果是,那么一定不能形成回文串,否则一定可以.
为了找到以节点v为根的 subtree 中深度为h的后代,需要求出dfs序列,并且记录每个节点初次访问的时间戳和离开它的时间戳,然后二分.
貌似也可以用树状数组做?
/************************************************************************* &amp;gt; File Name: code/cf/#316/D.cpp &amp;gt; Author: 111qqz &amp;gt; Email: rkz2013@126.com &amp;gt; Created Time: 2015年08月15日 星期六 02时55分55秒 ************************************************************************/ #include &amp;lt;bits/stdc++.h&amp;gt; using namespace std; const int N=5E5+7; int n,m; vector&amp;lt;int&amp;gt; adj[N]; char S[N]; vector&amp;lt;int&amp;gt; occ[N][26]; int in[N], out[N], now; void dfs(int u, int depth) { occ[depth][S[u]-'a'].push_back(++now); in[u]=now; vector&amp;lt;int&amp;gt;::iterator it; for (it=adj[u].begin();it!=adj[u].end();it++) { dfs(*it,depth+1); } out[u]=now; } int main() { scanf(&amp;quot;%d %d&amp;quot;,&amp;amp;n,&amp;amp;m); for(int i=2; i&amp;lt;=n; i++) { int a; scanf(&amp;quot;%d&amp;quot;,&amp;amp;a); adj[a].</description></item></channel></rss>