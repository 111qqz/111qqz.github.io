<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vim on 111qqz的小窝</title><link>https://111qqz.com/tags/vim/</link><description>Recent content in vim on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Mon, 30 Apr 2018 05:54:33 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>vim 插件 NERDTree 学习笔记</title><link>https://111qqz.com/2018/04/vim-NERDTree-plugin/</link><pubDate>Mon, 30 Apr 2018 05:54:33 +0000</pubDate><guid>https://111qqz.com/2018/04/vim-NERDTree-plugin/</guid><description>
迫于要在服务器上写cpp代码，又由于各种原因，没办法把同步到本地。因此要在服务器上配置一个cpp的环境orz.
我是用vim-plug来管理插件的，只需要添加
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } 就好了。 下面记录一些会用到的快捷键:
ctrl+w类似tmux里面的功能键。
crtl+w+w: 光标自动在左右侧窗口切换
cril+w+r:调换左右侧窗口的布局位置
t 在新 Tab 中打开选中文件/书签，并跳到新 Tab T 在新 Tab 中打开选中文件/书签，但不跳到新 Tab gT 前一个 tab gt 后一个 tab</description></item><item><title>8102年了，来更新一波vim配置</title><link>https://111qqz.com/2018/04/vim-config-in-2018/</link><pubDate>Wed, 25 Apr 2018 16:46:51 +0000</pubDate><guid>https://111qqz.com/2018/04/vim-config-in-2018/</guid><description>
现在用的vim配置还是2015年7月的时候写的。
三年过去了，vim到了8.0,很多功能也有了更多选择。因此打算来更新一波vim配置。目前还在更新过程中。。。等差不多折腾完再来记录一些信息。
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; for vim &amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; set ru set nu set clipboard+=unnamed &amp;quot; 映射全选+复制 ctrl+a map &amp;lt;C-A&amp;gt; ggvG&amp;quot;+Y &amp;quot;去空行 nnoremap &amp;lt;F2&amp;gt; :g/^\s*$/d&amp;lt;CR&amp;gt; &amp;quot; 自动缩进 set autoindent set tabstop=4 set softtabstop=4 set shiftwidth=4 filetype on &amp;quot; 载入文件类型插件 filetype plugin on &amp;quot; 为特定文件类型载入相关缩进文件 filetype indent on &amp;quot; 高亮显示匹配的括号 set showmatch &amp;quot; 高亮当前行 set cursorline hi CursorLine cterm=bold ctermbg=blue ctermfg=yellow &amp;quot;C，C++ 按F5编译运行 map &amp;lt;F5&amp;gt; :call CompileRunGcc()&amp;lt;CR&amp;gt; func! CompileRunGcc() exec &amp;quot;w&amp;quot; if &amp;amp;filetype == 'c' exec &amp;quot;!</description></item><item><title>manjaro(archlinux) 安装 YouCompleteMe</title><link>https://111qqz.com/2017/07/install-YouCompleteMe-on-manjaro/</link><pubDate>Fri, 28 Jul 2017 09:13:34 +0000</pubDate><guid>https://111qqz.com/2017/07/install-YouCompleteMe-on-manjaro/</guid><description>
来来回回折腾了好多次，aur直接安装或者手动编译，安装后都无法补全
ycm的log文件是在/tmp目录下的。
发现问题是缺少libtinfo.so.5
2017-07-28 17:02:12,667 - ERROR - Error occurred while loading global extra conf /home/coder/.ycm_extra_conf.py Traceback (most recent call last): File &amp;quot;/home/coder/.vim/bundle/YouCompleteMe/third_party/ycmd/ycmd/../ycmd/extra_conf_store.py&amp;quot;, line 94, in _CallGlobalExtraConfMethod module = Load( global_ycm_extra_conf, force = True ) File &amp;quot;/home/coder/.vim/bundle/YouCompleteMe/third_party/ycmd/ycmd/../ycmd/extra_conf_store.py&amp;quot;, line 173, in Load module = LoadPythonSource( _RandomName(), module_file ) File &amp;quot;/home/coder/.vim/bundle/YouCompleteMe/third_party/ycmd/ycmd/../ycmd/utils.py&amp;quot;, line 400, in LoadPythonSource return imp.load_source( name, pathname ) File &amp;quot;/home/coder/.ycm_extra_conf.py&amp;quot;, line 32, in &amp;lt;module&amp;gt; import ycm_core ImportError: libtinfo.so.5: cannot open shared object file: No such file or directory 2017-07-28 17:02:12,667 - ERROR - libtinfo.</description></item><item><title>vim下python 的配置</title><link>https://111qqz.com/2017/06/vimrc-for-python/</link><pubDate>Wed, 07 Jun 2017 06:21:12 +0000</pubDate><guid>https://111qqz.com/2017/06/vimrc-for-python/</guid><description>
由于最近要做数字图像处理的大作业，以及之后一段时间，估计写python多一些，所以打算花些时间配置下vim. 1. 一键执行 其实之前一直有的。。不过没有效果，就没有管。发现问题是，python对应的filetype为&amp;quot;python&amp;quot;，而不是&amp;quot;py&amp;quot; func! CompileRunGcc() exec &amp;quot;w&amp;quot; if &amp;amp;filetype == 'c' exec &amp;quot;!g++ % -o %&amp;lt;&amp;quot; exec &amp;quot;! ./%&amp;lt;&amp;quot; elseif &amp;amp;filetype == 'cpp' exec &amp;quot;!g++ % -std=gnu++11 -Wall -o %&amp;lt;&amp;quot; exec &amp;quot;! ./%&amp;lt;&amp;quot; elseif &amp;amp;filetype == 'java' exec &amp;quot;!javac %&amp;quot; exec &amp;quot;!java %&amp;lt;&amp;quot; elseif &amp;amp;filetype == 'sh' :!./% elseif &amp;amp;filetype == 'python' &amp;quot; exec &amp;quot;!python %&amp;quot; &amp;quot; exec &amp;quot;!python %&amp;lt;&amp;quot; exec &amp;quot;!python2.7 %&amp;quot; endif endfunc 2.代码补全 不想折腾了。。既然ycm也支持python,就先用用看好了。。不行再换别的。 放一段ycm　for python的配置文件 &amp;quot;默认配置文件路径&amp;quot; let g:ycm_global_ycm_extra_conf = '~/.</description></item><item><title>vundle error detected while processing function</title><link>https://111qqz.com/2017/06/vundle-error-detected-while-processing-function/</link><pubDate>Wed, 07 Jun 2017 05:50:27 +0000</pubDate><guid>https://111qqz.com/2017/06/vundle-error-detected-while-processing-function/</guid><description>
Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } 网站链接: /2017/06/vundle-error-detected-while-processing-function/https://111qqz.com/wordpress/wp-content/uploads/2017/06/Screenshot_20170607_133416.png
链接到文件: /content/post/ACM-ICPC/https://111qqz.com/wordpress/wp-content/uploads/2017/06/Screenshot_20170607_133416.png
使用 Page Bundles: true
好久没装新插件了，最新要配下python,发现安装时候满屏的错误。。。 最后发现是shell的锅，因为我用的是fish,在.vimrc文件中添加 set shell=/bin/bash 即可。 以及说下可能的其他原因，虽然我没遇到 * 对于arch系，可能从aur中安装的版本out ot data * 可能没有把.vimrc中vundle的配置从set rtp+=~/.vim/bundle/vundle更新成set rtp+=~/.vim/bundle/vundle.vim * 可能项目名称用了&amp;quot; 而不是' 以及顺手查了下bundle和Plugin的区别。。。 简单来说。。Plugin是新写法，bundle是正在被淘汰的写法，不过由于兼容性的原因，仍然在使用。。。 以后使用plugin的写法就好。 参考资料</description></item><item><title>vim在acm-icpc中的配置（转自kuangbin巨巨）</title><link>https://111qqz.com/2015/12/vimacm-icpckuangbin/</link><pubDate>Tue, 01 Dec 2015 07:09:38 +0000</pubDate><guid>https://111qqz.com/2015/12/vimacm-icpckuangbin/</guid><description>
vim在ACM/ICPC中的使用 Posted on 2014年11月22日 by kuangbin Vim大法好！
应大家的要求，写一篇博客来介绍下vim在ACM中的简单使用。
写本文的目的，只是为了给广大acmer一个入门vim的指导。不喜勿喷！ 不想看到的请远离！
vim大法好，远离sublime、cb保平安！
从13年开始，平时写程序和比赛都是用的vim，也一直在推荐大家使用vim，至于为何要用vim，原因很多。
为何要使用vim？1) 可以装逼，vim显得高端大气上档次，现场赛你打开的是丑陋的CB，别人打开的是VIM，高下立判。 2) 用vim可以明显提高写代码的感觉，加快代码速度。3) vim大法好。
当然，前面纯粹个人胡扯，要用啥都是个人偏好而已。
下面简单介绍VIM的使用。
比赛篇 首先介绍vim在比赛使用的使用。
先大致介绍现场赛vim的配置方法。
现场赛比赛系统是ubuntu， 都是安装好了vim的。
ubuntu系统下打开终端（终端一般在左侧有了，没有就按Ctrl+Alt+T启动，然后可以锁定在左侧），打开终端输入vim就进入vim了。
配置方法是输入 vim ~/.vimrc (这样是用vim编辑配置文件，或者用 gedit ~/.vimrc 就是用gedit编辑了)
配置的话，按照自己习惯加几句配置文件就可以使用了。
我一般配置下面几个：
syntax on set nu set tabstop=4 set shiftwidth=4 colo evening set mouse=a set cin 上面这几个配置的具体含义可以去百度下，有的也是可以不要的。
然后配置以后保存。VIM的配置就结束了。
然后在终端里面 输入 vim A.cpp 然后就开始写代码了。
编译运行的话，可以另外打开一个终端（就是左侧右击，然后new一个出来），就可以一边编辑，一遍保存了。
但是注意在代码编译以后，一定要 :w 来保存下，然后进行编译运行。
编译可以输入 g++ A.cpp -o A
如果没有错就可以了。
然后输入 ./A 来运行，然后输入数据啥的，退出的话是 按 Ctrl+C</description></item></channel></rss>