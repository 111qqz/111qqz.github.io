<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蓄水池抽样 on Clarity</title><link>https://111qqz.com/tags/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/</link><description>Recent content in 蓄水池抽样 on Clarity</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Thu, 09 Mar 2017 12:14:11 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E8%93%84%E6%B0%B4%E6%B1%A0%E6%8A%BD%E6%A0%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>蓄水池抽样算法概述(Reservoir Sampling Algorithm)[转载]</title><link>https://111qqz.com/2017/03/reservoir-sampling-algorithm/</link><pubDate>Thu, 09 Mar 2017 12:14:11 +0000</pubDate><guid>https://111qqz.com/2017/03/reservoir-sampling-algorithm/</guid><description>
面京东被这个问题卡了QAQ，来补补这方面的课。
转自：链接
蓄水池抽样算法随机算法的一种，用来从 N 个样本中随机选择 K 个样本，其中 N 非常大（以至于 N 个样本不能同时放入内存）或者 N 是一个未知数。其时间复杂度为 O(N),包含下列步骤 (假设有一维数组 S, 长度未知，需要从中随机选择 k 个元素, 数组下标从 1 开始), 伪代码如下:
array R[k]; // result integer i, j; // fill the reservoir array for each i in 1 to k do R[i] := S[i] done; // replace elements with gradually decreasing probability for each i in k+1 to length(S) do j := random(1, i); // important: inclusive range if j &amp;lt;= k then R[j] := S[i] fi done 算法首先创建一个长度为 k 的数组（蓄水池）用来存放结果，初始化为 S 的前 k 个元素。然后从 k+1 个元素开始迭代直到数组结束，在 S 的第 i 个元素，算法生成一个随机数 j∈[1,i]j∈[1,i]， 如果 j &amp;lt;= k， 那么蓄水池的第 j 个元素被替换为 S 的第 i 个元素。</description></item></channel></rss>