<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>二次剩余 on 111qqz的小窝</title><link>https://111qqz.com/tags/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/</link><description>Recent content in 二次剩余 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Wed, 18 Oct 2017 05:38:43 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E4%BA%8C%E6%AC%A1%E5%89%A9%E4%BD%99/index.xml" rel="self" type="application/rss+xml"/><item><title>广义Fibonacci数列找循环节 （二次剩余）</title><link>https://111qqz.com/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/</link><pubDate>Wed, 18 Oct 2017 05:38:43 +0000</pubDate><guid>https://111qqz.com/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/</guid><description>
**问题：**给定 Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } 网站链接: /2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/http://img.blog.csdn.net/20140512141202250
链接到文件: /content/post/ACM-ICPC/http://img.blog.csdn.net/20140512141202250
使用 Page Bundles: true
，满足 Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } 网站链接: /2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/http://img.blog.csdn.net/20140512141344500
链接到文件: /content/post/ACM-ICPC/http://img.blog.csdn.net/20140512141344500
使用 Page Bundles: true
，求 Image not found a.warning-link { color: inherit !important; font-weight: inherit !</description></item><item><title>hdu 4794 Arnold (二次剩余，斐波那契循环节)</title><link>https://111qqz.com/2017/10/hdu-4794/</link><pubDate>Fri, 13 Oct 2017 12:23:49 +0000</pubDate><guid>https://111qqz.com/2017/10/hdu-4794/</guid><description>
题意： 给定一个 N∗N(N≤4e9) 的矩阵，现在经过这样一个变换：将 (x,y) 变为 ((x+y)%N,(x+2×y)%N)(0≤x&amp;lt;N,0≤y&amp;lt;N) 现在求经过多少次这样的变换之后在回到 N∗N 的原始矩阵。
思路： 在模n的剩余系下可以写成(fib(n)x+fib(n+1)y,fib(n+1)x+fib(n+2)y)的形式fib(n)表示Fibonacci数列的第n项
所以就成了斐波那契数列循环节。。经典题。注意会爆long long,要用ULL
又写了遍板子，去年的东西都忘得差不多了orz
/* *********************************************** Author :111qqz File Name :code/hdu/4794.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef unsigned long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } void pr() { for ( int i = 0 ; i &amp;lt; 2 ; i++) for ( int j = 0 ; j &amp;lt; 2 ; j++) printf(&amp;quot;%lld%c&amp;quot;,mat[i][j],j==1?</description></item><item><title>hdu 3977 Evil teacher (斐波那契数列循环节)</title><link>https://111qqz.com/2016/10/hdu-3977/</link><pubDate>Sun, 30 Oct 2016 21:01:37 +0000</pubDate><guid>https://111qqz.com/2016/10/hdu-3977/</guid><description>
题目链接
题意：f[0] = 1,f[1] = 1,f[i] = f[i-1] + f[i-2] (i&amp;gt;=2)，问最小的m满足f[n]%p==f[n+m]%p
思路：求斐波那契数列循环节。
参考了Acdreamer的博客_Fib数模n的循环节
对于一个正整数n，我们求Fib数模n的循环节的长度的方法如下： （1）把n素因子分解，即 Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } 网站链接: /2016/10/hdu-3977/http://img.blog.csdn.net/20140209101151109
链接到文件: /content/post/ACM-ICPC/http://img.blog.csdn.net/20140209101151109
使用 Page Bundles: true
（2）分别计算Fib数模每个 Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } 网站链接: /2016/10/hdu-3977/http://img.blog.csdn.net/20140209101307140
链接到文件: /content/post/ACM-ICPC/http://img.blog.csdn.net/20140209101307140
使用 Page Bundles: true</description></item><item><title>二次剩余（Cipolla's algorithm）学习笔记</title><link>https://111qqz.com/2016/10/cipollas-algorithm/</link><pubDate>Mon, 10 Oct 2016 12:08:41 +0000</pubDate><guid>https://111qqz.com/2016/10/cipollas-algorithm/</guid><description>
先放资料。
前置技能点： 剩余系
剩余系**:设模为m,则根据余数可将所有的整数分成m类，分别记成[0],[1],[2],…[m-1]****，**
这m个数**{0,1,2,****…****m-1}**称为一个完全剩余系，
每个数称为相应类的代表元。
当m=10（偶数）时候，则{0,1,2,3,4,5,6,7,8,9}是最小非负完全剩余系
{-5,-4,-3,-2,-1,0,1,2,3,4,5} 是绝对值最小完全剩余系
{-4,-3,-2,-1,0,1,2,3,4,5} 绝对值最小
{1,2,3,4,5,6,7,8,9,10}是最小正完全剩余系
简化剩余系:在每个剩余类选取至1个与m互素代表元构成简化剩余系。
当m=10则,{0,1,2,3,4,5,6,7,8,9} 完全剩余系
{1,3,7,9}是简化剩余系(x,10)=1
当m=5则，{0,1,2,3,4}为完全剩余系,
{1,2,3,4}是简化剩余系，因为除去余0(正好是倍数)外，其它都互素。
f(m)=欧拉函数=|{t|0&amp;lt;t&amp;lt;m, (t, m)=1}|
=简化剩余系的元素个数
维基百科_高斯引理
设_p_为奇[质数](https://zh.wikipedia.org/wiki/)，_a_是一个与_p_[互质](https://zh.wikipedia.org/wiki/)的整数。考虑以下数组：![{\displaystyle a,2a,3a,\dots ,{\frac {p-1}{2}}a}](https://wikimedia.org/api/rest_v1/media/math/render/svg/82941c63fd5e49cf0b57612ee5e895d1e1c9096c) 以及它们对_p_的[最小非负剩余](https://zh.wikipedia.org/w/index.php?title=&amp;action=edit&amp;redlink=1)。这些剩余两两不等（**kk:这些剩余两两不等的证明：可以考虑反证，假设两个不同的数x,y对于p同余， 那么x-y和0关于p同余，而x-y同时关于a同余，a与p互质，矛盾。因此这些剩余两两不等**），因此我们共有![\frac{p-1}{2}](https://wikimedia.org/api/rest_v1/media/math/render/svg/a733b8495b0d55ed5bc9d795b7b6821efb1d858b) 个两两不等的介于1和_p（_**kk:这里似乎有问题，如果剩余是在1..p之间，那么前面应该是说最小正剩余而不是最小非负剩余，最小非负剩余应该是在0..p-1之间**_）_之间的整数：![{\displaystyle t_{1},t_{2},t_{3},\dots ,t_{\frac {p-1}{2}}}](https://wikimedia.</description></item></channel></rss>