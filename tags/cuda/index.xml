<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cuda on 111qqz的小窝</title>
    <link>https://111qqz.github.io/tags/cuda/</link>
    <description>Recent content in cuda on 111qqz的小窝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Feb 2018 06:38:38 +0000</lastBuildDate><atom:link href="https://111qqz.github.io/tags/cuda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CUDA C Best Practices Guide 阅读笔记（二） Heterogeneous Computing</title>
      <link>https://111qqz.github.io/2018/02/cuda-c-best-practices-guide-heterogeneous-computing/</link>
      <pubDate>Tue, 13 Feb 2018 06:38:38 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/cuda-c-best-practices-guide-heterogeneous-computing/</guid>
      <description>CUDA 编程涉及到在不同的平台上同时运行代码:包含CPU的host 和包含GPU的device. 所以了解host和device的对性能优化是非常重要</description>
    </item>
    
    <item>
      <title>CUDA C Best Practices Guide 阅读笔记（1） 并行计算方法论(APOD)</title>
      <link>https://111qqz.github.io/2018/02/cuda-c-best-practices-parallel-computing-methodology/</link>
      <pubDate>Mon, 12 Feb 2018 04:58:31 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/cuda-c-best-practices-parallel-computing-methodology/</guid>
      <description>APOD指的是Assess, Parallelize, Optimize, Deploy 如图所示，APOD过程是一个循环的过程，每次只进行一部分，从A到P到O到D,然后再进行下一轮的APOD Assess 对</description>
    </item>
    
    <item>
      <title>cuda c&#43;&#43;  基础算法库 thrust 学习笔记</title>
      <link>https://111qqz.github.io/2018/02/cuda-thrust-notes/</link>
      <pubDate>Sat, 10 Feb 2018 08:43:54 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/cuda-thrust-notes/</guid>
      <description>可以了解成并行版的STL(? 过了一遍nvidia的官方网文档 发现如果熟悉STL的话,thrust没什么太多好说的,看起来很简单&amp;hellip</description>
    </item>
    
    <item>
      <title>cuda error checking 学习笔记</title>
      <link>https://111qqz.github.io/2018/02/cuda-error-checking-notes/</link>
      <pubDate>Fri, 09 Feb 2018 06:55:00 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/cuda-error-checking-notes/</guid>
      <description>由于发现cuda c++ 的 debug方式和c++ 差别很大,因此打算再开一篇,专门记录一些和error checking 以及debug有关的内容. Error checks in CUDA code can help catch CUDA</description>
    </item>
    
    <item>
      <title>cuda 学习笔记</title>
      <link>https://111qqz.github.io/2018/02/cuda-notes/</link>
      <pubDate>Thu, 01 Feb 2018 07:20:04 +0000</pubDate>
      
      <guid>https://111qqz.github.io/2018/02/cuda-notes/</guid>
      <description>uodate:有毒吧。kernel中出问题原来是不会报错的。。。。 请教了组里的hust学长orz..、 学到了cuda-memcheck命令和</description>
    </item>
    
  </channel>
</rss>
