<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>floyd 判圈 on 111qqz的小窝</title><link>http://example.org/tags/floyd-%E5%88%A4%E5%9C%88/</link><description>Recent content in floyd 判圈 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 05 Apr 2017 07:31:49 +0000</lastBuildDate><atom:link href="http://example.org/tags/floyd-%E5%88%A4%E5%9C%88/index.xml" rel="self" type="application/rss+xml"/><item><title>leetcode 287. Find the Duplicate Number (floyd判圈算法找重复元素)</title><link>http://example.org/2017/04/leetcode-287-find-the-duplicate-number-floyd/</link><pubDate>Wed, 05 Apr 2017 07:31:49 +0000</pubDate><guid>http://example.org/2017/04/leetcode-287-find-the-duplicate-number-floyd/</guid><description>Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.
Note:
1. You **must not** modify the array (assume the array is read only). 2. You must use only constant, _O_(1) extra space. 3. Your runtime complexity should be less than `O(n2)`.</description></item><item><title>sgu 455. Sequence analysis （floyd 判圈算法，O(1)空间复杂度求循环节）</title><link>http://example.org/2015/07/sgu455/</link><pubDate>Thu, 30 Jul 2015 13:19:00 +0000</pubDate><guid>http://example.org/2015/07/sgu455/</guid><description>455. Sequence analysis 比赛的时候逗了，往看空间限制了&amp;hellip;.
直接开了个set判重。。。显然MLE 了。。。
然后这道题的正解是 floyd判圈算法（也叫龟兔算法？）
http://www.cnblogs.com/oyking/p/4286916.html 这份题解讲得很详细
/************************************************************************* &amp;gt; File Name: code/2015summer/#5/CC.cpp &amp;gt; Author: 111qqz &amp;gt; Email: rkz2013@126.com &amp;gt; Created Time: 2015年07月30日 星期四 21时02分17秒 ************************************************************************/ #include&amp;lt;iostream&amp;gt; #include&amp;lt;iomanip&amp;gt; #include&amp;lt;cstdio&amp;gt; #include&amp;lt;algorithm&amp;gt; #include&amp;lt;cmath&amp;gt; #include&amp;lt;cstring&amp;gt; #include&amp;lt;string&amp;gt; #include&amp;lt;map&amp;gt; #include&amp;lt;set&amp;gt; #include&amp;lt;queue&amp;gt; #include&amp;lt;vector&amp;gt; #include&amp;lt;stack&amp;gt; #define y0 abc111qqz #define y1 hust111qqz #define yn hez111qqz #define j1 cute111qqz #define tm crazy111qqz #define lr dying111qqz using namespace std; #define REP(i, n) for (int i=0;i&amp;lt;int(n);++i) typedef long long LL; typedef unsigned long long ULL; const int inf = 0x7fffffff; const int LIM = 2E6; LL a,b,c; LL next (LL x) { return (a*x+x%b)%c; } int main() { cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b&amp;gt;&amp;gt;c; LL x = next(1); LL y = next(next(1)); int v = 1; while (v&amp;lt;=LIM &amp;amp;&amp;amp;x!</description></item></channel></rss>