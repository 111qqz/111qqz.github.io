<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>单调栈 on 111qqz's blog</title><link>https://111qqz.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/</link><description>Recent content in 单调栈 on 111qqz's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2012-2022 all rights reserved.</copyright><lastBuildDate>Wed, 03 Aug 2016 12:02:59 +0000</lastBuildDate><atom:link href="https://111qqz.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/index.xml" rel="self" type="application/rss+xml"/><item><title>poj 3494 Largest Submatrix of All 1’s (单调栈)</title><link>https://111qqz.com/2016/08/poj-3494/</link><pubDate>Wed, 03 Aug 2016 12:02:59 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-3494/</guid><description>
poj 3494
题意：给出一个n*m个0-1图，求最大的全部由1组成的矩阵。
思路：同poj 1964,一共做n+2×m次单调栈。。。数组开小re一发。。某处stk忘记清空re 1发。。。智力-2.。。3A
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 19时33分14秒 File Name :code/poj/3494.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=2E3+50; int maze[N][N]; int a[N][N],l[N][N],r[N][N]; stack&amp;lt;int&amp;gt;stk; int n,m; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>poj 2796 Feel Good (前缀和，单调栈)</title><link>https://111qqz.com/2016/08/poj-2796/</link><pubDate>Wed, 03 Aug 2016 11:30:56 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-2796/</guid><description>
poj 2796
题意：给出一个人n（1E5）天的情绪值（0..1E6），一段时间的value的定义是这段时间的情绪之和*这段时间情绪的最小值。
现在求value的最大值，并且输出得到这个最大值的区间。
思路：单调栈。 考虑把每一天作为最小值的时候能向左向由延伸的最远的点的下标，两个方向各做一次单调栈来预处理。和的haunted前缀和搞下。。
然后最后想着了LL,但是读入的时候前缀和的那里忘了LL wa了一发。。。2A
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 19时14分42秒 File Name :code/poj/2796.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; int n; int a[N]; LL sum[N]; int l[N],r[N]; stack&amp;lt;int&amp;gt;stk; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>poj 2082 Terrible Sets (前缀和，单调栈)</title><link>https://111qqz.com/2016/08/po2082/</link><pubDate>Wed, 03 Aug 2016 11:07:24 +0000</pubDate><guid>https://111qqz.com/2016/08/po2082/</guid><description>
poj 2082 题目链接
题意：这道题简直就是。。。教给大家怎么把一句话把简单的题让人出得看不懂。。。真的一点意思都没有。给出n个矩形的宽度和高度，这些矩形并排顺次排列在x轴上，问最大面积。
思路：单调栈。 之前的最大矩形面积的宽度都是1.。这次不是1.。做个宽度的前缀和就好。。。1A
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 18时54分40秒 File Name :code/poj/2082.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=5E4+7; pi a[N]; int l[N],r[N]; int sum[N]; int n; stack&amp;lt;int&amp;gt;stk; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>poj 1964 City Game(单调栈，输入挂)</title><link>https://111qqz.com/2016/08/poj-1964/</link><pubDate>Wed, 03 Aug 2016 10:42:29 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-1964/</guid><description>
poj 1964
题意：n*m的maze,由'R'和‘F’组成，现在要求找到面积最大的矩形，使得矩形中所有格子都是'F'。
思路：单调栈...一开始神tm tle....复杂度没问题啊。。。
结果看到有人说这题由于数据量比较大。。。scanf会超时。。。所以要用输入挂。。。。。getchar什么的。。。
poj竟然也卡读入。。。人性呢。。。。
改了输出以后再交wa了。
发现想错了，我是写了从(i,j)到两个方向能到的最大距离。。但是这样写有些点上的情况是没有考虑到的。。比如如果(i+1,j+1)上的点是'R'，实际上是不可以构成l*r的矩形的(l&amp;gt;=2&amp;amp;r&amp;gt;=2)。。。但是我这样做无法体现。
改了下，变成：
仍然对于每行做一次单调栈，预处理出点(i,j)能往右的最远距离a[i][j]。
然后观察一下。。。如果我把每一列分别看成x轴，那a[i][j]不就是矩形的高度了吗。。。
那我要求的不又变成了最大矩形面积了吗。。。
于是接下来对于每一列，做上下两个方向的单调栈得到（i,j）上下能延伸到的最远距离。
(i,j)点所在的矩形面积就是** (r[i][j]-l[i][j]+1)a[i][j];*
再交，A了
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 05时55分30秒 File Name :code/poj/1964.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E3+7; int n,m; char maze[N][N]; int row[N][N],col[N][N]; int a[N][N]; int l[N][N],r[N][N]; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>poj 3250 Bad Hair Day(单调栈)</title><link>https://111qqz.com/2016/08/poj-3250/</link><pubDate>Tue, 02 Aug 2016 21:40:50 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-3250/</guid><description>
poj 3250
题意：
n头牛排成一列，第n只牛在最前面，第1只牛在最后面。第i只牛能看到的牛的个数是，它前面的且没有被其他牛遮挡的牛的个数，遮挡的条件是高度大于或者相同。现在问所有牛能看到的牛的个数的和。
思路：单调栈。具体见代码。1A.
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 05时12分47秒 File Name :code/poj/3250.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;stack&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=8E4+7; int a[N]; int c[N]; stack&amp;lt;int&amp;gt;stk; int n; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>poj 2559 Largest Rectangle in a Histogram (单调栈)</title><link>https://111qqz.com/2016/08/poj-2559/</link><pubDate>Tue, 02 Aug 2016 21:09:28 +0000</pubDate><guid>https://111qqz.com/2016/08/poj-2559/</guid><description>
poj 2559
题意：给定从左到右多个矩形，已知这此矩形的宽度都为1，长度不完全相等。这些矩形相连排成一排，求在这些矩形包括的范围内能得到的面积最大的矩形，求该面积。所求矩形可以横跨多个矩形，但不能超出原有矩形所确定的范围。
思路：单调栈。。。好久没写了，感觉之前一直也没有完全掌握单调栈的技巧。这回一定要掌握。
对于这道题，我们对于每个位置i，用两个单调栈维护出最左边和最右边最远能到达的位置。然后扫一遍更新最大值。
单调栈部分我用了stl 的stack
细节见注释
/* *********************************************** Author :111qqz Created Time :2016年08月03日 星期三 04时27分31秒 File Name :code/poj/2559.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #include &amp;lt;stack&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; int l[N],r[N]; stack&amp;lt;int&amp;gt;stk; int a[N]; int n; int main() { #ifndef ONLINE_JUDGE freopen(&amp;quot;code/in.</description></item><item><title>BZOJ 1660: [Usaco2006 Nov]Bad Hair Day 乱发节 (单调栈)</title><link>https://111qqz.com/2016/04/bzoj-1660-usaco2006-novbad-hair-day--/</link><pubDate>Fri, 15 Apr 2016 08:49:50 +0000</pubDate><guid>https://111qqz.com/2016/04/bzoj-1660-usaco2006-novbad-hair-day--/</guid><description/></item><item><title>BZOJ 1657: [Usaco2006 Mar]Mooo 奶牛的歌声 (单调栈)</title><link>https://111qqz.com/2016/04/bzoj-1657-usaco2006-marmooo--/</link><pubDate>Fri, 15 Apr 2016 08:07:59 +0000</pubDate><guid>https://111qqz.com/2016/04/bzoj-1657-usaco2006-marmooo--/</guid><description>
1657: [Usaco2006 Mar]Mooo 奶牛的歌声 Time Limit: 5 Sec Memory Limit: 64 MB Submit: 634 Solved: 447 [Submit][Status][Discuss]
Description Farmer John's N (1 &amp;lt;= N &amp;lt;= 50,000) cows are standing in a very straight row and mooing. Each cow has a unique height h in the range 1..2,000,000,000 nanometers (FJ really is a stickler for precision). Each cow moos at some volume v in the range 1..10,000. This &amp;quot;moo&amp;quot; travels across the row of cows in both directions (except for the end cows, obviously).</description></item><item><title>BZOJ 1628: [Usaco2007 Demo]City skyline (单调栈)</title><link>https://111qqz.com/2016/04/bzoj1628/</link><pubDate>Mon, 04 Apr 2016 08:47:38 +0000</pubDate><guid>https://111qqz.com/2016/04/bzoj1628/</guid><description>
1628: [Usaco2007 Demo]City skyline Time Limit: 5 Sec Memory Limit: 64 MB Submit: 396 Solved: 317 [Submit][Status][Discuss]
Description Image not found a.warning-link { color: inherit !important; font-weight: inherit !important; text-decoration: underline !important; border-bottom: none !important; } Web path: /2016/04/bzoj1628/http://www.lydsy.com/JudgeOnline/upload/201506/1.PNG
Disk path: /content/post/ACM-ICPC/http://www.lydsy.com/JudgeOnline/upload/201506/1.PNG
Using Page Bundles: true
Input 第一行给出N，W
第二行到第N+1行:每行给出二个整数x,y，输入的x严格递增，并且第一个x总是1
Output 输出一个整数，表示城市中最少包含的建筑物数量
Sample Input 10 26 1 1 2 2 5 1 6 3 8 1 11 0 15 2 17 3 20 2 22 1</description></item><item><title>codeforces 442C. Artem and Array</title><link>https://111qqz.com/2015/07/cf442c/</link><pubDate>Tue, 28 Jul 2015 20:45:00 +0000</pubDate><guid>https://111qqz.com/2015/07/cf442c/</guid><description>
C. Artem and Array
time limit per test
2 seconds
memory limit per test
256 megabytes
input
standard input
output
standard output
Artem has an array of n positive integers. Artem decided to play with it. The game consists of n moves. Each move goes like this. Artem chooses some element of the array and removes it. For that, he gets min(a, b) points, where a and b are numbers that were adjacent with the removed number.</description></item></channel></rss>