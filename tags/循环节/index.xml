<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>循环节 on 111qqz的小窝</title><link>http://example.org/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/</link><description>Recent content in 循环节 on 111qqz的小窝</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 01 Nov 2017 06:47:11 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E5%BE%AA%E7%8E%AF%E8%8A%82/index.xml" rel="self" type="application/rss+xml"/><item><title>hdu 6038 | 2017 Multi-University Training Contest - Team 1 E Function (置换群找循环节)</title><link>http://example.org/2017/11/hdu-6038/</link><pubDate>Wed, 01 Nov 2017 06:47:11 +0000</pubDate><guid>http://example.org/2017/11/hdu-6038/</guid><description>http://acm.hdu.edu.cn/showproblem.php?pid=6038
题意： 给出两个序列 a 和 b ，求满足 f[i]= b_{f[a[i]]} 的函数个数。
思路： 分别找两个序列的循环节，这一点是比较容易想到的。
由于点都在0..n-1 或者0..m-1，因此没必要建图跑dfs找循环节，直接while就可以了。
然后发现一个循环节如果符合条件，那么对答案的贡献是循环节长度。
但是没有想清楚，什么才是符合条件的循环节。
结论是，b的循环节长度当且近当是A的循环节的长度的因子时，b的这个循环节会对答案贡献其长度的大小。
对于A的每个循环节，都是互不影响的。
而且我们只关心循环节的长度。
因此O（n）和O(m)的时间，处理出所有循环节的长度。
然后分别枚举累计答案即可。
但是我怎么感觉。。。这复杂度不太对啊。。。。
对于O(1E5)的序列。。我好像可以构造出1E5个长度为1的循环节？
那么1E5 * 1E5,1E10的复杂度了。。。
然而看了下官方题解。。。发现给出的复杂度分析是O(n+m)
？？？？？？？？？？？？？？？？？？？？？
所以这是说。。。数据保证O(n*m) &amp;lt; O (n+m)了么。。。
这是面向数据解题。。还是说我哪里想错了啊。。。orz
/* *********************************************** Author :111qqz Created Time :2017年11月01日 星期三 14时17分58秒 File Name :6038.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E5+7; const LL mod = 1E9+7; int a[N],b[N]; bool vis[N]; int n,m; vector &amp;lt;int&amp;gt;loopa,loopb; vector &amp;lt;int&amp;gt; findloop( int *a,int n) { vector&amp;lt;int&amp;gt;res; ms(vis,false); for ( int i = 0 ; i &amp;lt; n ; i++) { int cur = i ; if (vis[cur]) continue; int len = 0; while (!</description></item><item><title>hdu 6043 | 2017 Multi-University Training Contest - Team 1 K KazaQ's Socks （循环节）</title><link>http://example.org/2017/11/hdu-6043/</link><pubDate>Tue, 31 Oct 2017 16:31:10 +0000</pubDate><guid>http://example.org/2017/11/hdu-6043/</guid><description>http://acm.hdu.edu.cn/showproblem.php?pid=6043
题意： n双袜子标号1到n，初始在抽屉里，每天早晨穿一双标号最小的袜子，晚上把脏袜子放到盆里，如果放完之后喷子里已经有了n-1双脏袜子，那么就要洗，然后在第二天晚上放回抽屉里。问第k天穿的是标号为几的袜子。
思路： 手写了几个发现对于n双袜子,标号出现的情况是:
1,2,3&amp;hellip;n,1,2,3&amp;hellip;n-2,n-1,1,2,3&amp;hellip;n-2,n
所以特判k&amp;lt;=n的情况然后算循环的次数即可。
/* *********************************************** Author :111qqz Created Time :2017年11月01日 星期三 00时14分38秒 File Name :6043.cpp ************************************************ */ #include &amp;lt;bits/stdc++.h&amp;gt; #define PB push_back #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL n,k; int main() { #ifndef ONLINE_JUDGE //freopen(&amp;quot;.</description></item><item><title>广义Fibonacci数列找循环节 （二次剩余）</title><link>http://example.org/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/</link><pubDate>Wed, 18 Oct 2017 05:38:43 +0000</pubDate><guid>http://example.org/2017/10/look-for-loop-section-in-generalized-fibonacci-sequence/</guid><description>**问题：**给定，满足，求的循
环节长度。
原理见广义Fibonacci数列找循环节
这里只说做法
我们先写出递推式的特征式子 x^2 =ax + b,整理得到 x^2-ax-b=0求出 delta = a^2+4b
对于质因数小于等于delta的部分，我们选择暴力求循环节。
暴力求循环节的代码如下：
int get_loop( LL p) //暴力得到不大于13的素数的循环节。 { LL a,b,c; a = 0 ; b = 1 ; for ( int i = 2; ; i++) { c = (a+3*b%p)%p; //此处为递推式 a = b; b = c; if (a==0&amp;amp;&amp;amp;b==1) return i-1; } } 通常做法是先暴力求出来之后，写进一个表里。
通常不会有很多项。
对于质因数大于delta的部分，我们判断每个质因数是否是delta的二次剩余，如果是，枚举(prime-1)的因子,否则枚举2*(prime+1)的因子。
贴一个板子，需要注意如果是多个函数嵌套的形式，我们只需要从外向里，依次求循环节即可。
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 08:22:17 PM CST File Name :code/hdu/4291_2.</description></item><item><title>acdream oj 1124 喵喵的遗憾 (斐波那契数列循环节)</title><link>http://example.org/2016/11/acdream-oj-1124-/</link><pubDate>Thu, 03 Nov 2016 00:39:54 +0000</pubDate><guid>http://example.org/2016/11/acdream-oj-1124-/</guid><description>题目链接
题意：
F0 = 1 , F1 = 1 , F2 = 2 , Fn = Fn-1+Fn-2
求：
FFFn Mod P
( 也就是 F[ F[ F[n] ] ] % P )
思路：原来这是适牛出的题2333.
需要注意的是p可能为1，因此n==0或者1的时候，特判要输出1%p而不是1.
其他的没了。就是求斐波那契数列循环节的经典做法。
/* *********************************************** Author :111qqz Created Time :Thu 03 Nov 2016 08:09:26 AM CST File Name :1124.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>hdu 3978 Evil teacher's Final Problem (斐波那契数列的循环节)</title><link>http://example.org/2016/11/hdu-3978/</link><pubDate>Wed, 02 Nov 2016 10:08:16 +0000</pubDate><guid>http://example.org/2016/11/hdu-3978/</guid><description>题意：now he let you calculate G(n,k) .Here G(n,0) = f(n) , G(n,i) = f( G(n,i-1) ) (k &amp;gt;= i &amp;gt;= 1).其中f是斐波那契数列。
思路：其实就是hdu 4291的加强版：hdu 4291 解题报告
开一个1E4的数组存一下每一层的循环节就好了。
http://vjudge.net/contest/139429#overview 告一段落，完结撒花！
/* *********************************************** Author :111qqz Created Time :Tue 01 Nov 2016 08:31:22 PM CST File Name :code/hdu/3978.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item><item><title>hdu 2522 A simple problem (模拟，求小数循环节)</title><link>http://example.org/2016/11/hdu-2522/</link><pubDate>Tue, 01 Nov 2016 12:21:12 +0000</pubDate><guid>http://example.org/2016/11/hdu-2522/</guid><description>题目链接
题意：求一个小数的循环节&amp;hellip;
思路：其实直接模拟就好&amp;hellip;
模拟竖式计算&amp;hellip;
这里用到一个小技巧。
由于多组数据，每次都memset一个bool会很慢，导致超时。
我们可以用一个人int数组来代替每次重置的bool数组,
/* *********************************************** Author :111qqz Created Time :Tue 01 Nov 2016 08:00:49 PM CST File Name :code/hdu/2522.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const int N=1E6+7; int vis[N]; int n; int cnt = 0; void solve( int n) { if (n&amp;lt;0) { printf(&amp;quot;-&amp;quot;); n = -n; } if (n==1) { printf(&amp;quot;1&amp;quot;); return; } int x; printf(&amp;quot;0.</description></item><item><title>hdu 4291 A Short problem (矩阵快速幂+广义斐波那契循环节||暴力找循环节)</title><link>http://example.org/2016/10/hdu-4291/</link><pubDate>Mon, 31 Oct 2016 08:59:53 +0000</pubDate><guid>http://example.org/2016/10/hdu-4291/</guid><description>题目链接
题意：
Given n (1 &amp;lt;= n &amp;lt;= 1018), You should solve for
g(g(g(n))) mod 109 + 7 where
g(n) = 3g(n - 1) + g(n - 2)
g(1) = 1
g(0) = 0思路：找循环节。首先由于模数固定，可以暴力一下找到循环节。
得到1E9+7的循环节是222222224,222222224的循环节是183120.
然后三次矩阵快速幂就行了。
需要注意每次都要判断那一层的n是否为0和1。
暴力解法：
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 02:47:01 PM CST File Name :code/hdu/4291.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; const LL loop0 = 1E9+7; const LL loop1=222222224,loop2=183120; //暴力得到每一层的循环节。 /* LL find_loop(LL mod) { LL a,b,c; a = 0 ; b = 1 ; for ( int i = 2 ; ; i++) { c = (a+3*b%mod)% mod; a = b; b = c; // cout&amp;lt;&amp;lt;&amp;quot;a:&amp;quot;&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;quot; b:&amp;quot;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;endl; if (a==0&amp;amp;&amp;amp;b==1) { return i-1; // i的时候得到第i项，判断循环的时候是判断g[i-1]==g[0]&amp;amp;&amp;amp;g[i]==g[1]，所以循环节长度是i-1; } } }*/ LL n; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } void out() { cout&amp;lt;&amp;lt;mat[0][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[0][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;mat[1][0]&amp;lt;&amp;lt;&amp;quot; &amp;quot;&amp;lt;&amp;lt;mat[1][1]&amp;lt;&amp;lt;endl; cout&amp;lt;&amp;lt;endl; } }M,M1; Mat mul(Mat a,Mat b,LL MOD) { Mat c; c.</description></item><item><title>hdu 3977 Evil teacher (斐波那契数列循环节)</title><link>http://example.org/2016/10/hdu-3977/</link><pubDate>Sun, 30 Oct 2016 21:01:37 +0000</pubDate><guid>http://example.org/2016/10/hdu-3977/</guid><description>题目链接
题意：f[0] = 1,f[1] = 1,f[i] = f[i-1] + f[i-2] (i&amp;gt;=2)，问最小的m满足f[n]%p==f[n+m]%p
思路：求斐波那契数列循环节。
参考了Acdreamer的博客_Fib数模n的循环节
（1）把n素因子分解，即（2）分别计算Fib数模每个的循环节长度，假设长度分别是（3）那么Fib模n的循环节长度 从上面三个步骤看来，貌似最困难的是第二步，那么我们如何求Fib模的循环节长度呢？
 这里有一个优美的定理：Fib数模的最小循环节长度等于，其中表示Fib数模素数的最小循环节长度。可以看出我们现在最重要的就是求 对于求我们利用如下定理：
 如果5是模的二次剩余，那么循环节的的长度是的因子，否则，循环节的长度是的因子。
顺便说一句，对于小于等于5的素数，我们直接特殊判断，loop(2)=3,loop(3)=8,loop(5)=20。
那么我们可以先求出所有的因子，然后用矩阵快速幂来一个一个判断，这样时间复杂度不会很大。
这道题是模板题。博客中的模板代码很好理解&amp;hellip;
换成了自己比较熟悉的矩阵构造方式，以及代码风格。
需要注意的是下标是从0开始的，当验证k是否为循环节的时候，应该验证f[k]和f[k+1]
/* *********************************************** Author :111qqz Created Time :Mon 31 Oct 2016 03:54:15 AM CST File Name :code/hdu/3977.cpp ************************************************ */ #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;queue&amp;gt; #include &amp;lt;set&amp;gt; #include &amp;lt;map&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;cmath&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;ctime&amp;gt; #define fst first #define sec second #define lson l,m,rt&amp;lt;&amp;lt;1 #define rson m+1,r,rt&amp;lt;&amp;lt;1|1 #define ms(a,x) memset(a,x,sizeof(a)) typedef long long LL; #define pi pair &amp;lt; int ,int &amp;gt; #define MP make_pair using namespace std; const double eps = 1E-8; const int dx4[4]={1,0,0,-1}; const int dy4[4]={0,-1,1,0}; const int inf = 0x3f3f3f3f; LL P; struct Mat { LL mat[2][2]; void clear() { ms(mat,0); } }M,M1; Mat mul (Mat a,Mat b,LL mod) { Mat c; c.</description></item></channel></rss>